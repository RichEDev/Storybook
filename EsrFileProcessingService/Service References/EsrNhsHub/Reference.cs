//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EsrFileProcessingService.EsrNhsHub {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EsrNhsHub.IEsrNhsHubCommands")]
    public interface IEsrNhsHubCommands {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/FlagFileForNewTransfer", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/FlagFileForNewTransferResponse")]
        bool FlagFileForNewTransfer(int fileId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/FlagFileForNewTransfer", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/FlagFileForNewTransferResponse")]
        System.Threading.Tasks.Task<bool> FlagFileForNewTransferAsync(int fileId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/SuccessfullyProcessedFile", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/SuccessfullyProcessedFileResponse")]
        bool SuccessfullyProcessedFile(int fileId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/SuccessfullyProcessedFile", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/SuccessfullyProcessedFileResponse")]
        System.Threading.Tasks.Task<bool> SuccessfullyProcessedFileAsync(int fileId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/FailedToProcessFile", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/FailedToProcessFileResponse")]
        bool FailedToProcessFile(int fileId, string fileName, ApiLibrary.ApiObjects.Enum.EsrHubStatus.EsrHubTransferStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEsrNhsHubCommands/FailedToProcessFile", ReplyAction="http://tempuri.org/IEsrNhsHubCommands/FailedToProcessFileResponse")]
        System.Threading.Tasks.Task<bool> FailedToProcessFileAsync(int fileId, string fileName, ApiLibrary.ApiObjects.Enum.EsrHubStatus.EsrHubTransferStatus status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEsrNhsHubCommandsChannel : EsrFileProcessingService.EsrNhsHub.IEsrNhsHubCommands, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EsrNhsHubCommandsClient : System.ServiceModel.ClientBase<EsrFileProcessingService.EsrNhsHub.IEsrNhsHubCommands>, EsrFileProcessingService.EsrNhsHub.IEsrNhsHubCommands {
        
        public EsrNhsHubCommandsClient() {
        }
        
        public EsrNhsHubCommandsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EsrNhsHubCommandsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsrNhsHubCommandsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsrNhsHubCommandsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool FlagFileForNewTransfer(int fileId, string fileName) {
            return base.Channel.FlagFileForNewTransfer(fileId, fileName);
        }
        
        public System.Threading.Tasks.Task<bool> FlagFileForNewTransferAsync(int fileId, string fileName) {
            return base.Channel.FlagFileForNewTransferAsync(fileId, fileName);
        }
        
        public bool SuccessfullyProcessedFile(int fileId, string fileName) {
            return base.Channel.SuccessfullyProcessedFile(fileId, fileName);
        }
        
        public System.Threading.Tasks.Task<bool> SuccessfullyProcessedFileAsync(int fileId, string fileName) {
            return base.Channel.SuccessfullyProcessedFileAsync(fileId, fileName);
        }
        
        public bool FailedToProcessFile(int fileId, string fileName, ApiLibrary.ApiObjects.Enum.EsrHubStatus.EsrHubTransferStatus status) {
            return base.Channel.FailedToProcessFile(fileId, fileName, status);
        }
        
        public System.Threading.Tasks.Task<bool> FailedToProcessFileAsync(int fileId, string fileName, ApiLibrary.ApiObjects.Enum.EsrHubStatus.EsrHubTransferStatus status) {
            return base.Channel.FailedToProcessFileAsync(fileId, fileName, status);
        }
    }
}
