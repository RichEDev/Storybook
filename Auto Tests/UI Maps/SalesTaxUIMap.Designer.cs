// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.SalesTaxUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class SalesTaxUIMap
    {
        
        /// <summary>
        /// NavigateToSalesTaxFromHomePage
        /// </summary>
        public void NavigateToSalesTaxFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uISalesTaxPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UISalesTaxPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(67, 14));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(70, 9));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(71, 13));

            // Click 'Sales Tax' pane
            Mouse.Click(uISalesTaxPane, new Point(47, 18));
        }
        
        /// <summary>
        /// AddSalesTaxWithCancel - Use 'AddSalesTaxWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddSalesTaxWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uISalesTaxDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxDescriptionEdit;
            HtmlEdit uISalesTaxEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(59, 10));

            // Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
            uISalesTaxDescriptionEdit.Text = this.AddSalesTaxWithCancelParams.UISalesTaxDescriptionEditText;

            // Type '1.5' in 'Sales Tax %' text box
            uISalesTaxEdit.Text = this.AddSalesTaxWithCancelParams.UISalesTaxEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(29, 19));
        }
        
        /// <summary>
        /// AddSalesTax - Use 'AddSalesTaxParams' to pass parameters into this method.
        /// </summary>
        public void AddSalesTax()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uISalesTaxDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxDescriptionEdit;
            HtmlEdit uISalesTaxEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(42, 10));

            // Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
            uISalesTaxDescriptionEdit.Text = this.AddSalesTaxParams.UISalesTaxDescriptionEditText;

            // Type '12.5' in 'Sales Tax %' text box
            uISalesTaxEdit.Text = this.AddSalesTaxParams.UISalesTaxEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(23, 11));
        }
        
        /// <summary>
        /// ValidateSalesTaxDoesNotExist - Use 'ValidateSalesTaxDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSalesTaxDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUISalesTaxCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Table.UICodedUISalesTaxCell;
            #endregion

            // Verify that 'CodedUI Sales Tax' cell's property 'InnerText' is not equal to 'CodedUI Sales Tax'
            Assert.AreNotEqual(this.ValidateSalesTaxDoesNotExistExpectedValues.UICodedUISalesTaxCellInnerText, uICodedUISalesTaxCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddSalesTax - Use 'ValidateAddSalesTaxExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddSalesTax()
        {
            #region Variable Declarations
            HtmlCell uICodedUISalesTaxCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Table.UICodedUISalesTaxCell;
            HtmlCell uIItem1250Cell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Table.UIItem1250Cell;
            #endregion

            // Verify that 'CodedUI Sales Tax' cell's property 'InnerText' equals 'CodedUI Sales Tax'
            Assert.AreEqual(this.ValidateAddSalesTaxExpectedValues.UICodedUISalesTaxCellInnerText, uICodedUISalesTaxCell.InnerText);

            // Verify that '12.50' cell's property 'InnerText' equals '12.50'
            Assert.AreEqual(this.ValidateAddSalesTaxExpectedValues.UIItem1250CellInnerText, uIItem1250Cell.InnerText);
        }
        
        /// <summary>
        /// EditSalesTax - Use 'EditSalesTaxParams' to pass parameters into this method.
        /// </summary>
        public void EditSalesTax()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Row.UIEditImage;
            HtmlEdit uISalesTaxDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxDescriptionEdit;
            HtmlEdit uISalesTaxEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(6, 6));

            // Type 'CodedUI Sales Tax EDITED' in 'Sales Tax Description' text box
            uISalesTaxDescriptionEdit.Text = this.EditSalesTaxParams.UISalesTaxDescriptionEditText;

            // Type '15.50' in 'Sales Tax %' text box
            uISalesTaxEdit.Text = this.EditSalesTaxParams.UISalesTaxEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(31, 15));
        }
        
        /// <summary>
        /// ValidateEditSalesTax - Use 'ValidateEditSalesTaxExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditSalesTax()
        {
            #region Variable Declarations
            HtmlCell uICodedUISalesTaxEDITECell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Table.UICodedUISalesTaxEDITECell;
            HtmlCell uIItem1550Cell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Table.UIItem1550Cell;
            #endregion

            // Verify that 'CodedUI Sales Tax EDITED' cell's property 'InnerText' equals 'CodedUI Sales Tax EDITED'
            Assert.AreEqual(this.ValidateEditSalesTaxExpectedValues.UICodedUISalesTaxEDITECellInnerText, uICodedUISalesTaxEDITECell.InnerText);

            // Verify that '15.50' cell's property 'InnerText' equals '15.50'
            Assert.AreEqual(this.ValidateEditSalesTaxExpectedValues.UIItem1550CellInnerText, uIItem1550Cell.InnerText);
        }
        
        /// <summary>
        /// EditSalesTaxResetValues - Use 'EditSalesTaxResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditSalesTaxResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Row1.UIEditImage;
            HtmlEdit uISalesTaxDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxDescriptionEdit;
            HtmlEdit uISalesTaxEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(10, 12));

            // Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
            uISalesTaxDescriptionEdit.Text = this.EditSalesTaxResetValuesParams.UISalesTaxDescriptionEditText;

            // Type '12.50' in 'Sales Tax %' text box
            uISalesTaxEdit.Text = this.EditSalesTaxResetValuesParams.UISalesTaxEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(38, 14));
        }
        
        /// <summary>
        /// EditSalesTaxWithCancel - Use 'EditSalesTaxWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditSalesTaxWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Row.UIEditImage;
            HtmlEdit uISalesTaxDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxDescriptionEdit;
            HtmlEdit uISalesTaxEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(12, 7));

            // Type 'CodedUI Sales Tax EDITED' in 'Sales Tax Description' text box
            uISalesTaxDescriptionEdit.Text = this.EditSalesTaxWithCancelParams.UISalesTaxDescriptionEditText;

            // Type '15.50' in 'Sales Tax %' text box
            uISalesTaxEdit.Text = this.EditSalesTaxWithCancelParams.UISalesTaxEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(28, 19));
        }
        
        /// <summary>
        /// ArchiveSalesTaxWithCancel
        /// </summary>
        public void ArchiveSalesTaxWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(13, 11));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveSalesTax
        /// </summary>
        public void ArchiveSalesTax()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(13, 11));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveSalesTaxWithCancel
        /// </summary>
        public void UnArchiveSalesTaxWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(5, 8));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveSalesTax
        /// </summary>
        public void UnArchiveSalesTax()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(10, 10));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateSalesTaxIsNotArchived - Use 'ValidateSalesTaxIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSalesTaxIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateSalesTaxIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateSalesTaxIsArchived - Use 'ValidateSalesTaxIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSalesTaxIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateSalesTaxIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// DeleteSalesTaxWithCancel
        /// </summary>
        public void DeleteSalesTaxWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(11, 13));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteSalesTax
        /// </summary>
        public void DeleteSalesTax()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_e9734332_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(13, 14));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateAddDuplicateSalesTax - Use 'ValidateAddDuplicateSalesTaxExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateSalesTax()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateSalesTaxExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateSalesTaxExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// ValidateSalesTaxPageLayout - Use 'ValidateSalesTaxPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSalesTaxPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uISalesTaxPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISalesTaxPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uIJamesLloyd20SeptembePane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd20SeptembePane;
            HtmlDiv uICurrentDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMaindivPane.UICurrentDefinitionsPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'DisplayText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Sales Tax '
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneDisplayText, uIAboutSwitchSubAccounPane.DisplayText);

            // Verify that 'Sales Tax' pane's property 'DisplayText' equals 'Sales Tax'
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UISalesTaxPaneDisplayText, uISalesTaxPane.DisplayText);

            // Verify that 'Base Definitions' pane's property 'DisplayText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UIBaseDefinitionsPaneDisplayText, uIBaseDefinitionsPane.DisplayText);

            // Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd20SeptembePane.DisplayText, this.ValidateSalesTaxPageLayoutExpectedValues.UIJamesLloyd20SeptembePaneDisplayText);

            // Verify that 'Current Definitions' pane's property 'DisplayText' equals 'Current Definitions'
            Assert.AreEqual(this.ValidateSalesTaxPageLayoutExpectedValues.UICurrentDefinitionsPaneDisplayText, uICurrentDefinitionsPane.DisplayText);
        }
        
        #region Properties
        public virtual AddSalesTaxWithCancelParams AddSalesTaxWithCancelParams
        {
            get
            {
                if ((this.mAddSalesTaxWithCancelParams == null))
                {
                    this.mAddSalesTaxWithCancelParams = new AddSalesTaxWithCancelParams();
                }
                return this.mAddSalesTaxWithCancelParams;
            }
        }
        
        public virtual AddSalesTaxParams AddSalesTaxParams
        {
            get
            {
                if ((this.mAddSalesTaxParams == null))
                {
                    this.mAddSalesTaxParams = new AddSalesTaxParams();
                }
                return this.mAddSalesTaxParams;
            }
        }
        
        public virtual ValidateSalesTaxDoesNotExistExpectedValues ValidateSalesTaxDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateSalesTaxDoesNotExistExpectedValues == null))
                {
                    this.mValidateSalesTaxDoesNotExistExpectedValues = new ValidateSalesTaxDoesNotExistExpectedValues();
                }
                return this.mValidateSalesTaxDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateAddSalesTaxExpectedValues ValidateAddSalesTaxExpectedValues
        {
            get
            {
                if ((this.mValidateAddSalesTaxExpectedValues == null))
                {
                    this.mValidateAddSalesTaxExpectedValues = new ValidateAddSalesTaxExpectedValues();
                }
                return this.mValidateAddSalesTaxExpectedValues;
            }
        }
        
        public virtual EditSalesTaxParams EditSalesTaxParams
        {
            get
            {
                if ((this.mEditSalesTaxParams == null))
                {
                    this.mEditSalesTaxParams = new EditSalesTaxParams();
                }
                return this.mEditSalesTaxParams;
            }
        }
        
        public virtual ValidateEditSalesTaxExpectedValues ValidateEditSalesTaxExpectedValues
        {
            get
            {
                if ((this.mValidateEditSalesTaxExpectedValues == null))
                {
                    this.mValidateEditSalesTaxExpectedValues = new ValidateEditSalesTaxExpectedValues();
                }
                return this.mValidateEditSalesTaxExpectedValues;
            }
        }
        
        public virtual EditSalesTaxResetValuesParams EditSalesTaxResetValuesParams
        {
            get
            {
                if ((this.mEditSalesTaxResetValuesParams == null))
                {
                    this.mEditSalesTaxResetValuesParams = new EditSalesTaxResetValuesParams();
                }
                return this.mEditSalesTaxResetValuesParams;
            }
        }
        
        public virtual EditSalesTaxWithCancelParams EditSalesTaxWithCancelParams
        {
            get
            {
                if ((this.mEditSalesTaxWithCancelParams == null))
                {
                    this.mEditSalesTaxWithCancelParams = new EditSalesTaxWithCancelParams();
                }
                return this.mEditSalesTaxWithCancelParams;
            }
        }
        
        public virtual ValidateSalesTaxIsNotArchivedExpectedValues ValidateSalesTaxIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateSalesTaxIsNotArchivedExpectedValues == null))
                {
                    this.mValidateSalesTaxIsNotArchivedExpectedValues = new ValidateSalesTaxIsNotArchivedExpectedValues();
                }
                return this.mValidateSalesTaxIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateSalesTaxIsArchivedExpectedValues ValidateSalesTaxIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateSalesTaxIsArchivedExpectedValues == null))
                {
                    this.mValidateSalesTaxIsArchivedExpectedValues = new ValidateSalesTaxIsArchivedExpectedValues();
                }
                return this.mValidateSalesTaxIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateSalesTaxExpectedValues ValidateAddDuplicateSalesTaxExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateSalesTaxExpectedValues == null))
                {
                    this.mValidateAddDuplicateSalesTaxExpectedValues = new ValidateAddDuplicateSalesTaxExpectedValues();
                }
                return this.mValidateAddDuplicateSalesTaxExpectedValues;
            }
        }
        
        public virtual ValidateSalesTaxPageLayoutExpectedValues ValidateSalesTaxPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateSalesTaxPageLayoutExpectedValues == null))
                {
                    this.mValidateSalesTaxPageLayoutExpectedValues = new ValidateSalesTaxPageLayoutExpectedValues();
                }
                return this.mValidateSalesTaxPageLayoutExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddSalesTaxWithCancelParams mAddSalesTaxWithCancelParams;
        
        private AddSalesTaxParams mAddSalesTaxParams;
        
        private ValidateSalesTaxDoesNotExistExpectedValues mValidateSalesTaxDoesNotExistExpectedValues;
        
        private ValidateAddSalesTaxExpectedValues mValidateAddSalesTaxExpectedValues;
        
        private EditSalesTaxParams mEditSalesTaxParams;
        
        private ValidateEditSalesTaxExpectedValues mValidateEditSalesTaxExpectedValues;
        
        private EditSalesTaxResetValuesParams mEditSalesTaxResetValuesParams;
        
        private EditSalesTaxWithCancelParams mEditSalesTaxWithCancelParams;
        
        private ValidateSalesTaxIsNotArchivedExpectedValues mValidateSalesTaxIsNotArchivedExpectedValues;
        
        private ValidateSalesTaxIsArchivedExpectedValues mValidateSalesTaxIsArchivedExpectedValues;
        
        private ValidateAddDuplicateSalesTaxExpectedValues mValidateAddDuplicateSalesTaxExpectedValues;
        
        private ValidateSalesTaxPageLayoutExpectedValues mValidateSalesTaxPageLayoutExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddSalesTaxWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddSalesTaxWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
        /// </summary>
        public string UISalesTaxDescriptionEditText = "CodedUI Sales Tax";
        
        /// <summary>
        /// Type '1.5' in 'Sales Tax %' text box
        /// </summary>
        public string UISalesTaxEditText = "1.5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddSalesTax'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddSalesTaxParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
        /// </summary>
        public string UISalesTaxDescriptionEditText = "CodedUI Sales Tax";
        
        /// <summary>
        /// Type '12.5' in 'Sales Tax %' text box
        /// </summary>
        public string UISalesTaxEditText = "12.5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSalesTaxDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSalesTaxDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Sales Tax' cell's property 'InnerText' is not equal to 'CodedUI Sales Tax'
        /// </summary>
        public string UICodedUISalesTaxCellInnerText = "CodedUI Sales Tax";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddSalesTax'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddSalesTaxExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Sales Tax' cell's property 'InnerText' equals 'CodedUI Sales Tax'
        /// </summary>
        public string UICodedUISalesTaxCellInnerText = "CodedUI Sales Tax";
        
        /// <summary>
        /// Verify that '12.50' cell's property 'InnerText' equals '12.50'
        /// </summary>
        public string UIItem1250CellInnerText = "12.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditSalesTax'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditSalesTaxParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Sales Tax EDITED' in 'Sales Tax Description' text box
        /// </summary>
        public string UISalesTaxDescriptionEditText = "CodedUI Sales Tax EDITED";
        
        /// <summary>
        /// Type '15.50' in 'Sales Tax %' text box
        /// </summary>
        public string UISalesTaxEditText = "15.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditSalesTax'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditSalesTaxExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Sales Tax EDITED' cell's property 'InnerText' equals 'CodedUI Sales Tax EDITED'
        /// </summary>
        public string UICodedUISalesTaxEDITECellInnerText = "CodedUI Sales Tax EDITED";
        
        /// <summary>
        /// Verify that '15.50' cell's property 'InnerText' equals '15.50'
        /// </summary>
        public string UIItem1550CellInnerText = "15.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditSalesTaxResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditSalesTaxResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Sales Tax' in 'Sales Tax Description' text box
        /// </summary>
        public string UISalesTaxDescriptionEditText = "CodedUI Sales Tax";
        
        /// <summary>
        /// Type '12.50' in 'Sales Tax %' text box
        /// </summary>
        public string UISalesTaxEditText = "12.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditSalesTaxWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditSalesTaxWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Sales Tax EDITED' in 'Sales Tax Description' text box
        /// </summary>
        public string UISalesTaxDescriptionEditText = "CodedUI Sales Tax EDITED";
        
        /// <summary>
        /// Type '15.50' in 'Sales Tax %' text box
        /// </summary>
        public string UISalesTaxEditText = "15.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSalesTaxIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSalesTaxIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSalesTaxIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSalesTaxIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateSalesTax'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateSalesTaxExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSalesTaxPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSalesTaxPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition Help ";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'DisplayText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Sales Tax '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneDisplayText = "Tasks | Switch Sub Account | About | Exit Home : Administration : Base Information : Contract Configuration Options : Sales Tax ";
        /// <summary>
        /// Verify that 'Sales Tax' pane's property 'DisplayText' equals 'Sales Tax'
        /// </summary>
        public string UISalesTaxPaneDisplayText = "Sales Tax";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'DisplayText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneDisplayText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd20SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'Current Definitions' pane's property 'DisplayText' equals 'Current Definitions'
        /// </summary>
        public string UICurrentDefinitionsPaneDisplayText = "Current Definitions";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISalesTaxPane
        {
            get
            {
                if ((this.mUISalesTaxPane == null))
                {
                    this.mUISalesTaxPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISalesTaxPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel4";
                    this.mUISalesTaxPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sales Tax";
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel4 class=menuitemtitle";
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
                    this.mUISalesTaxPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUISalesTaxPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISalesTaxPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=114";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UISalesTaxDescriptionEdit
        {
            get
            {
                if ((this.mUISalesTaxDescriptionEdit == null))
                {
                    this.mUISalesTaxDescriptionEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISalesTaxDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_salestax_description";
                    this.mUISalesTaxDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_salestax_description";
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Sales Tax Description";
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_salestax_d";
                    this.mUISalesTaxDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUISalesTaxDescriptionEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISalesTaxDescriptionEdit;
            }
        }
        
        public HtmlEdit UISalesTaxEdit
        {
            get
            {
                if ((this.mUISalesTaxEdit == null))
                {
                    this.mUISalesTaxEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISalesTaxEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_salestax_salesTax";
                    this.mUISalesTaxEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_salestax_salesTax";
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Sales Tax %";
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_salestax_s";
                    this.mUISalesTaxEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUISalesTaxEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISalesTaxEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "13";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_e9734332_Table UITbl_bdGrid_e9734332_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_e9734332_Table == null))
                {
                    this.mUITbl_bdGrid_e9734332_Table = new UITbl_bdGrid_e9734332_Table(this);
                }
                return this.mUITbl_bdGrid_e9734332_Table;
            }
        }
        
        public UITbl_bdGrid_e9734332_Row UITbl_bdGrid_e9734332_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_e9734332_Row == null))
                {
                    this.mUITbl_bdGrid_e9734332_Row = new UITbl_bdGrid_e9734332_Row(this);
                }
                return this.mUITbl_bdGrid_e9734332_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "16";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_e9734332_Row1 UITbl_bdGrid_e9734332_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_e9734332_Row1 == null))
                {
                    this.mUITbl_bdGrid_e9734332_Row1 = new UITbl_bdGrid_e9734332_Row1(this);
                }
                return this.mUITbl_bdGrid_e9734332_Row1;
            }
        }
        
        public UITbl_bdGrid_e9734332_Cell UITbl_bdGrid_e9734332_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_e9734332_Cell == null))
                {
                    this.mUITbl_bdGrid_e9734332_Cell = new UITbl_bdGrid_e9734332_Cell(this);
                }
                return this.mUITbl_bdGrid_e9734332_Cell;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UISalesTaxPane
        {
            get
            {
                if ((this.mUISalesTaxPane == null))
                {
                    this.mUISalesTaxPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISalesTaxPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUISalesTaxPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sales Tax";
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUISalesTaxPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUISalesTaxPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISalesTaxPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUISalesTaxDescriptionEdit;
        
        private HtmlEdit mUISalesTaxEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_e9734332_Table mUITbl_bdGrid_e9734332_Table;
        
        private UITbl_bdGrid_e9734332_Row mUITbl_bdGrid_e9734332_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_e9734332_Row1 mUITbl_bdGrid_e9734332_Row1;
        
        private UITbl_bdGrid_e9734332_Cell mUITbl_bdGrid_e9734332_Cell;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UILogodivPane mUILogodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUISalesTaxPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMaindivPane mUIMaindivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_e9734332_Table : HtmlTable
    {
        
        public UITbl_bdGrid_e9734332_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_e9734332_1e62_43c5_a8f2_14b518c87542";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Sales Tax % Sales Tax Description\r\n0.00Z";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_e9734332_1e62_43c5_a8f2_14";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUISalesTaxCell
        {
            get
            {
                if ((this.mUICodedUISalesTaxCell == null))
                {
                    this.mUICodedUISalesTaxCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUISalesTaxCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUISalesTaxCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUISalesTaxCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Sales Tax";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUISalesTaxCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "10";
                    this.mUICodedUISalesTaxCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUISalesTaxCell;
            }
        }
        
        public HtmlCell UIItem1250Cell
        {
            get
            {
                if ((this.mUIItem1250Cell == null))
                {
                    this.mUIItem1250Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem1250Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem1250Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem1250Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "12.50";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2 align=right";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUIItem1250Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "9";
                    this.mUIItem1250Cell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItem1250Cell;
            }
        }
        
        public HtmlCell UICodedUISalesTaxEDITECell
        {
            get
            {
                if ((this.mUICodedUISalesTaxEDITECell == null))
                {
                    this.mUICodedUISalesTaxEDITECell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUISalesTaxEDITECell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUISalesTaxEDITECell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUISalesTaxEDITECell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Sales Tax EDITED";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUISalesTaxEDITECell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "10";
                    this.mUICodedUISalesTaxEDITECell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUISalesTaxEDITECell;
            }
        }
        
        public HtmlCell UIItem1550Cell
        {
            get
            {
                if ((this.mUIItem1550Cell == null))
                {
                    this.mUIItem1550Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem1550Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem1550Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem1550Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "15.50";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2 align=right";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUIItem1550Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "9";
                    this.mUIItem1550Cell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItem1550Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUISalesTaxCell;
        
        private HtmlCell mUIItem1250Cell;
        
        private HtmlCell mUICodedUISalesTaxEDITECell;
        
        private HtmlCell mUIItem1550Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_e9734332_Row : HtmlRow
    {
        
        public UITbl_bdGrid_e9734332_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_e9734332_1e62_43c5_a8f2_14b518c87542_CodedUI Sales Tax";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "12.50CodedUI Sales Tax";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_e9734332_1e62_43c5_a8f2_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_e9734332_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_e9734332_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_e9734332_1e62_43c5_a8f2_14b518c87542_CodedUI Sales Tax EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "15.50CodedUI Sales Tax EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_e9734332_1e62_43c5_a8f2_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_e9734332_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_e9734332_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_e9734332_1e62_43c5_a8f2_14b518c87542_CodedUI Sales Tax_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_e9734332_1e62_43c5_a8f2_1";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd20SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd20SeptembePane == null))
                {
                    this.mUIJamesLloyd20SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 ";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd20SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd20SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd20SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nSales Tax % Sales T";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
}
