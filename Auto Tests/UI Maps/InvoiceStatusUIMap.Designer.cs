// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.InvoiceStatusUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class InvoiceStatusUIMap
    {
        
        /// <summary>
        /// NavigateToInvoiceStatusFromHomePage
        /// </summary>
        public void NavigateToInvoiceStatusFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIInvoiceInformationPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIInvoiceInformationPane;
            HtmlSpan uIInvoiceStatusPane = this.UIWelcometoframework20Window.UIInvoiceConfigurationDocument.UIInvoiceStatusPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(38, 14));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(56, 16));

            // Click 'Invoice Information' pane
            Mouse.Click(uIInvoiceInformationPane, new Point(115, 9));

            // Click 'Invoice Status' pane
            Mouse.Click(uIInvoiceStatusPane, new Point(89, 12));
        }
        
        /// <summary>
        /// ValidateInvoiceStatusPageLayout - Use 'ValidateInvoiceStatusPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInvoiceStatusPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIJamesLloyd20SeptembePane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd20SeptembePane;
            HtmlDiv uIItemPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIInvoiceStatusTypesPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusTypesPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uICurrentDefinitionsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIMaindivPane.UICurrentDefinitionsPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd20SeptembePane.DisplayText, this.ValidateInvoiceStatusPageLayoutExpectedValues.UIJamesLloyd20SeptembePaneDisplayText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Invoice Information : Invoice Status '
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Invoice Status Types' pane's property 'InnerText' equals 'Invoice Status Types'
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UIInvoiceStatusTypesPaneInnerText, uIInvoiceStatusTypesPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
            Assert.AreEqual(this.ValidateInvoiceStatusPageLayoutExpectedValues.UICurrentDefinitionsPaneInnerText, uICurrentDefinitionsPane.InnerText);
        }
        
        /// <summary>
        /// AddInvoiceStatusWithCancel - Use 'AddInvoiceStatusWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddInvoiceStatusWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIInvoiceStatusDescripEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusDescripEdit;
            HtmlCheckBox uIInvStatusisArchivedCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvStatusisArchivedCheckBox;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(47, 14));

            // Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
            uIInvoiceStatusDescripEdit.Text = this.AddInvoiceStatusWithCancelParams.UIInvoiceStatusDescripEditText;

            // Select 'Inv. Status is Archived' check box
            uIInvStatusisArchivedCheckBox.Checked = this.AddInvoiceStatusWithCancelParams.UIInvStatusisArchivedCheckBoxChecked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(34, 9));
        }
        
        /// <summary>
        /// AddInvoiceStatus - Use 'AddInvoiceStatusParams' to pass parameters into this method.
        /// </summary>
        public void AddInvoiceStatus()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIInvoiceStatusDescripEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusDescripEdit;
            HtmlCheckBox uIInvStatusisArchivedCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvStatusisArchivedCheckBox;
            HtmlImage uISaveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(51, 9));

            // Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
            uIInvoiceStatusDescripEdit.Text = this.AddInvoiceStatusParams.UIInvoiceStatusDescripEditText;

            // Select 'Inv. Status is Archived' check box
            uIInvStatusisArchivedCheckBox.Checked = this.AddInvoiceStatusParams.UIInvStatusisArchivedCheckBoxChecked;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(19, 13));
        }
        
        /// <summary>
        /// ValidateAddInvoice - Use 'ValidateAddInvoiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddInvoice()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInvoiceStatusCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Table.UICodedUIInvoiceStatusCell;
            HtmlCheckBox uIItemCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row.UIItemCheckBox;
            #endregion

            // Verify that 'CodedUI Invoice Status' cell's property 'InnerText' equals 'CodedUI Invoice Status'
            Assert.AreEqual(this.ValidateAddInvoiceExpectedValues.UICodedUIInvoiceStatusCellInnerText, uICodedUIInvoiceStatusCell.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
            Assert.AreEqual(this.ValidateAddInvoiceExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidateInvoiceStatusDoesNotExist - Use 'ValidateInvoiceStatusDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInvoiceStatusDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInvoiceStatusCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Table.UICodedUIInvoiceStatusCell;
            #endregion

            // Verify that 'CodedUI Invoice Status' cell's property 'InnerText' is not equal to 'CodedUI Invoice Status'
            Assert.AreNotEqual(this.ValidateInvoiceStatusDoesNotExistExpectedValues.UICodedUIInvoiceStatusCellInnerText, uICodedUIInvoiceStatusCell.InnerText);
        }
        
        /// <summary>
        /// EditInvoiceStatus - Use 'EditInvoiceStatusParams' to pass parameters into this method.
        /// </summary>
        public void EditInvoiceStatus()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row.UIEditImage;
            HtmlEdit uIInvoiceStatusDescripEdit1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusDescripEdit1;
            HtmlCheckBox uIInvStatusisArchivedCheckBox1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvStatusisArchivedCheckBox1;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 11));

            // Type 'CodedUI Invoice Status EDITED' in 'Invoice Status Description' text box
            uIInvoiceStatusDescripEdit1.Text = this.EditInvoiceStatusParams.UIInvoiceStatusDescripEdit1Text;

            // Clear 'Inv. Status is Archived' check box
            uIInvStatusisArchivedCheckBox1.Checked = this.EditInvoiceStatusParams.UIInvStatusisArchivedCheckBox1Checked;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(23, 17));
        }
        
        /// <summary>
        /// EditInvoiceStatusResetValues - Use 'EditInvoiceStatusResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditInvoiceStatusResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row1.UIEditImage;
            HtmlCheckBox uIInvStatusisArchivedCheckBox1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvStatusisArchivedCheckBox1;
            HtmlEdit uIInvoiceStatusDescripEdit1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusDescripEdit1;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 11));

            // Select 'Inv. Status is Archived' check box
            uIInvStatusisArchivedCheckBox1.Checked = this.EditInvoiceStatusResetValuesParams.UIInvStatusisArchivedCheckBox1Checked;

            // Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
            uIInvoiceStatusDescripEdit1.Text = this.EditInvoiceStatusResetValuesParams.UIInvoiceStatusDescripEdit1Text;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(29, 13));
        }
        
        /// <summary>
        /// EditInvoiceStatusWithCancel - Use 'EditInvoiceStatusWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditInvoiceStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row.UIEditImage;
            HtmlEdit uIInvoiceStatusDescripEdit1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvoiceStatusDescripEdit1;
            HtmlCheckBox uIInvStatusisArchivedCheckBox1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInvStatusisArchivedCheckBox1;
            HtmlInputButton uICtl00contentmaincmdDButton1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(3, 11));

            // Type 'CodedUI Invoice Status EDITED' in 'Invoice Status Description' text box
            uIInvoiceStatusDescripEdit1.Text = this.EditInvoiceStatusWithCancelParams.UIInvoiceStatusDescripEdit1Text;

            // Clear 'Inv. Status is Archived' check box
            uIInvStatusisArchivedCheckBox1.Checked = this.EditInvoiceStatusWithCancelParams.UIInvStatusisArchivedCheckBox1Checked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton1, new Point(24, 16));
        }
        
        /// <summary>
        /// ArchiveInvoiceStatusWithCancel
        /// </summary>
        public void ArchiveInvoiceStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(8, 8));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveInvoiceStatus
        /// </summary>
        public void ArchiveInvoiceStatus()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(3, 9));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateInvoiceStatusIsArchived - Use 'ValidateInvoiceStatusIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInvoiceStatusIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateInvoiceStatusIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveInvoiceStatusWithCancel
        /// </summary>
        public void UnArchiveInvoiceStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(7, 10));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveInvoiceStatus
        /// </summary>
        public void UnArchiveInvoiceStatus()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(9, 8));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateInvoiceStatusIsNotArchived - Use 'ValidateInvoiceStatusIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInvoiceStatusIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateInvoiceStatusIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// DeleteInvoiceStatusWithCancel
        /// </summary>
        public void DeleteInvoiceStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(12, 7));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateAddDuplicateInvoiceStatus - Use 'ValidateAddDuplicateInvoiceStatusExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateInvoiceStatus()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateInvoiceStatusExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateInvoiceStatusExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// DeleteInvoiceStatus
        /// </summary>
        public void DeleteInvoiceStatus()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(5, 12));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateEditInvoiceStatus - Use 'ValidateEditInvoiceStatusExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditInvoiceStatus()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInvoiceStatusCell1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Table.UICodedUIInvoiceStatusCell1;
            HtmlCheckBox uIItemCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_27f00143_Row1.UIItemCheckBox;
            #endregion

            // Verify that 'CodedUI Invoice Status EDITED' cell's property 'InnerText' equals 'CodedUI Invoice Status EDITED'
            Assert.AreEqual(this.ValidateEditInvoiceStatusExpectedValues.UICodedUIInvoiceStatusCell1InnerText, uICodedUIInvoiceStatusCell1.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateEditInvoiceStatusExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        #region Properties
        public virtual ValidateInvoiceStatusPageLayoutExpectedValues ValidateInvoiceStatusPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateInvoiceStatusPageLayoutExpectedValues == null))
                {
                    this.mValidateInvoiceStatusPageLayoutExpectedValues = new ValidateInvoiceStatusPageLayoutExpectedValues();
                }
                return this.mValidateInvoiceStatusPageLayoutExpectedValues;
            }
        }
        
        public virtual AddInvoiceStatusWithCancelParams AddInvoiceStatusWithCancelParams
        {
            get
            {
                if ((this.mAddInvoiceStatusWithCancelParams == null))
                {
                    this.mAddInvoiceStatusWithCancelParams = new AddInvoiceStatusWithCancelParams();
                }
                return this.mAddInvoiceStatusWithCancelParams;
            }
        }
        
        public virtual AddInvoiceStatusParams AddInvoiceStatusParams
        {
            get
            {
                if ((this.mAddInvoiceStatusParams == null))
                {
                    this.mAddInvoiceStatusParams = new AddInvoiceStatusParams();
                }
                return this.mAddInvoiceStatusParams;
            }
        }
        
        public virtual ValidateAddInvoiceExpectedValues ValidateAddInvoiceExpectedValues
        {
            get
            {
                if ((this.mValidateAddInvoiceExpectedValues == null))
                {
                    this.mValidateAddInvoiceExpectedValues = new ValidateAddInvoiceExpectedValues();
                }
                return this.mValidateAddInvoiceExpectedValues;
            }
        }
        
        public virtual ValidateInvoiceStatusDoesNotExistExpectedValues ValidateInvoiceStatusDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateInvoiceStatusDoesNotExistExpectedValues == null))
                {
                    this.mValidateInvoiceStatusDoesNotExistExpectedValues = new ValidateInvoiceStatusDoesNotExistExpectedValues();
                }
                return this.mValidateInvoiceStatusDoesNotExistExpectedValues;
            }
        }
        
        public virtual EditInvoiceStatusParams EditInvoiceStatusParams
        {
            get
            {
                if ((this.mEditInvoiceStatusParams == null))
                {
                    this.mEditInvoiceStatusParams = new EditInvoiceStatusParams();
                }
                return this.mEditInvoiceStatusParams;
            }
        }
        
        public virtual EditInvoiceStatusResetValuesParams EditInvoiceStatusResetValuesParams
        {
            get
            {
                if ((this.mEditInvoiceStatusResetValuesParams == null))
                {
                    this.mEditInvoiceStatusResetValuesParams = new EditInvoiceStatusResetValuesParams();
                }
                return this.mEditInvoiceStatusResetValuesParams;
            }
        }
        
        public virtual EditInvoiceStatusWithCancelParams EditInvoiceStatusWithCancelParams
        {
            get
            {
                if ((this.mEditInvoiceStatusWithCancelParams == null))
                {
                    this.mEditInvoiceStatusWithCancelParams = new EditInvoiceStatusWithCancelParams();
                }
                return this.mEditInvoiceStatusWithCancelParams;
            }
        }
        
        public virtual ValidateInvoiceStatusIsArchivedExpectedValues ValidateInvoiceStatusIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateInvoiceStatusIsArchivedExpectedValues == null))
                {
                    this.mValidateInvoiceStatusIsArchivedExpectedValues = new ValidateInvoiceStatusIsArchivedExpectedValues();
                }
                return this.mValidateInvoiceStatusIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateInvoiceStatusIsNotArchivedExpectedValues ValidateInvoiceStatusIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateInvoiceStatusIsNotArchivedExpectedValues == null))
                {
                    this.mValidateInvoiceStatusIsNotArchivedExpectedValues = new ValidateInvoiceStatusIsNotArchivedExpectedValues();
                }
                return this.mValidateInvoiceStatusIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateInvoiceStatusExpectedValues ValidateAddDuplicateInvoiceStatusExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateInvoiceStatusExpectedValues == null))
                {
                    this.mValidateAddDuplicateInvoiceStatusExpectedValues = new ValidateAddDuplicateInvoiceStatusExpectedValues();
                }
                return this.mValidateAddDuplicateInvoiceStatusExpectedValues;
            }
        }
        
        public virtual ValidateEditInvoiceStatusExpectedValues ValidateEditInvoiceStatusExpectedValues
        {
            get
            {
                if ((this.mValidateEditInvoiceStatusExpectedValues == null))
                {
                    this.mValidateEditInvoiceStatusExpectedValues = new ValidateEditInvoiceStatusExpectedValues();
                }
                return this.mValidateEditInvoiceStatusExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        #endregion
        
        #region Fields
        private ValidateInvoiceStatusPageLayoutExpectedValues mValidateInvoiceStatusPageLayoutExpectedValues;
        
        private AddInvoiceStatusWithCancelParams mAddInvoiceStatusWithCancelParams;
        
        private AddInvoiceStatusParams mAddInvoiceStatusParams;
        
        private ValidateAddInvoiceExpectedValues mValidateAddInvoiceExpectedValues;
        
        private ValidateInvoiceStatusDoesNotExistExpectedValues mValidateInvoiceStatusDoesNotExistExpectedValues;
        
        private EditInvoiceStatusParams mEditInvoiceStatusParams;
        
        private EditInvoiceStatusResetValuesParams mEditInvoiceStatusResetValuesParams;
        
        private EditInvoiceStatusWithCancelParams mEditInvoiceStatusWithCancelParams;
        
        private ValidateInvoiceStatusIsArchivedExpectedValues mValidateInvoiceStatusIsArchivedExpectedValues;
        
        private ValidateInvoiceStatusIsNotArchivedExpectedValues mValidateInvoiceStatusIsNotArchivedExpectedValues;
        
        private ValidateAddDuplicateInvoiceStatusExpectedValues mValidateAddDuplicateInvoiceStatusExpectedValues;
        
        private ValidateEditInvoiceStatusExpectedValues mValidateEditInvoiceStatusExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInvoiceStatusPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInvoiceStatusPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd20SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Invoice Information : Invoice Status '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Invoice Information : Invoice Status ";
        
        /// <summary>
        /// Verify that 'Invoice Status Types' pane's property 'InnerText' equals 'Invoice Status Types'
        /// </summary>
        public string UIInvoiceStatusTypesPaneInnerText = "Invoice Status Types";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
        /// </summary>
        public string UICurrentDefinitionsPaneInnerText = "Current Definitions";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddInvoiceStatusWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddInvoiceStatusWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
        /// </summary>
        public string UIInvoiceStatusDescripEditText = "CodedUI Invoice Status";
        
        /// <summary>
        /// Select 'Inv. Status is Archived' check box
        /// </summary>
        public bool UIInvStatusisArchivedCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddInvoiceStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddInvoiceStatusParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
        /// </summary>
        public string UIInvoiceStatusDescripEditText = "CodedUI Invoice Status";
        
        /// <summary>
        /// Select 'Inv. Status is Archived' check box
        /// </summary>
        public bool UIInvStatusisArchivedCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddInvoice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddInvoiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Invoice Status' cell's property 'InnerText' equals 'CodedUI Invoice Status'
        /// </summary>
        public string UICodedUIInvoiceStatusCellInnerText = "CodedUI Invoice Status";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
        /// </summary>
        public bool UIItemCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInvoiceStatusDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInvoiceStatusDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Invoice Status' cell's property 'InnerText' is not equal to 'CodedUI Invoice Status'
        /// </summary>
        public string UICodedUIInvoiceStatusCellInnerText = "CodedUI Invoice Status";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInvoiceStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInvoiceStatusParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Invoice Status EDITED' in 'Invoice Status Description' text box
        /// </summary>
        public string UIInvoiceStatusDescripEdit1Text = "CodedUI Invoice Status EDITED";
        
        /// <summary>
        /// Clear 'Inv. Status is Archived' check box
        /// </summary>
        public bool UIInvStatusisArchivedCheckBox1Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInvoiceStatusResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInvoiceStatusResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Inv. Status is Archived' check box
        /// </summary>
        public bool UIInvStatusisArchivedCheckBox1Checked = true;
        
        /// <summary>
        /// Type 'CodedUI Invoice Status' in 'Invoice Status Description' text box
        /// </summary>
        public string UIInvoiceStatusDescripEdit1Text = "CodedUI Invoice Status";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInvoiceStatusWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInvoiceStatusWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Invoice Status EDITED' in 'Invoice Status Description' text box
        /// </summary>
        public string UIInvoiceStatusDescripEdit1Text = "CodedUI Invoice Status EDITED";
        
        /// <summary>
        /// Clear 'Inv. Status is Archived' check box
        /// </summary>
        public bool UIInvStatusisArchivedCheckBox1Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInvoiceStatusIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInvoiceStatusIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInvoiceStatusIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInvoiceStatusIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateInvoiceStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateInvoiceStatusExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditInvoiceStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditInvoiceStatusExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Invoice Status EDITED' cell's property 'InnerText' equals 'CodedUI Invoice Status EDITED'
        /// </summary>
        public string UICodedUIInvoiceStatusCell1InnerText = "CodedUI Invoice Status EDITED";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UIItemCheckBoxChecked = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Invoice Configuration Options");
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIInvoiceConfigurationDocument UIInvoiceConfigurationDocument
        {
            get
            {
                if ((this.mUIInvoiceConfigurationDocument == null))
                {
                    this.mUIInvoiceConfigurationDocument = new UIInvoiceConfigurationDocument(this);
                }
                return this.mUIInvoiceConfigurationDocument;
            }
        }
        
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIInvoiceConfigurationDocument mUIInvoiceConfigurationDocument;
        
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIInvoiceInformationPane
        {
            get
            {
                if ((this.mUIInvoiceInformationPane == null))
                {
                    this.mUIInvoiceInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIInvoiceInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel1";
                    this.mUIInvoiceInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInvoiceInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Invoice Information";
                    this.mUIInvoiceInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInvoiceInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIInvoiceInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel1 class=menuitemtitle";
                    this.mUIInvoiceInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIInvoiceInformationPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIInvoiceInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIInvoiceInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInvoiceConfigurationDocument : HtmlDocument
    {
        
        public UIInvoiceConfigurationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Invoice Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=invoiceinfo";
            this.WindowTitles.Add("Invoice Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIInvoiceStatusPane
        {
            get
            {
                if ((this.mUIInvoiceStatusPane == null))
                {
                    this.mUIInvoiceStatusPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIInvoiceStatusPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel1";
                    this.mUIInvoiceStatusPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInvoiceStatusPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Invoice Status";
                    this.mUIInvoiceStatusPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInvoiceStatusPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIInvoiceStatusPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel1 class=menuitemtitle";
                    this.mUIInvoiceStatusPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIInvoiceStatusPane.WindowTitles.Add("Invoice Configuration Options");
                    #endregion
                }
                return this.mUIInvoiceStatusPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIInvoiceStatusPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=131";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UIInvoiceStatusTypesPane
        {
            get
            {
                if ((this.mUIInvoiceStatusTypesPane == null))
                {
                    this.mUIInvoiceStatusTypesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIInvoiceStatusTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIInvoiceStatusTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInvoiceStatusTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Invoice Status Types";
                    this.mUIInvoiceStatusTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInvoiceStatusTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIInvoiceStatusTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIInvoiceStatusTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIInvoiceStatusTypesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInvoiceStatusTypesPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIInvoiceStatusDescripEdit
        {
            get
            {
                if ((this.mUIInvoiceStatusDescripEdit == null))
                {
                    this.mUIInvoiceStatusDescripEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInvoiceStatusDescripEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtinvoiceStatusType_description";
                    this.mUIInvoiceStatusDescripEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtinvoiceStatusType_description";
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Invoice Status Description";
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtinvoiceStatusTyp";
                    this.mUIInvoiceStatusDescripEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "23";
                    this.mUIInvoiceStatusDescripEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInvoiceStatusDescripEdit;
            }
        }
        
        public HtmlCheckBox UIInvStatusisArchivedCheckBox
        {
            get
            {
                if ((this.mUIInvStatusisArchivedCheckBox == null))
                {
                    this.mUIInvStatusisArchivedCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIInvStatusisArchivedCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkinvoiceStatusType_isArchive";
                    this.mUIInvStatusisArchivedCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkinvoiceStatusType_isArchive";
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Inv. Status is Archived";
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkinvoiceStatusTyp";
                    this.mUIInvStatusisArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "24";
                    this.mUIInvStatusisArchivedCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInvStatusisArchivedCheckBox;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "25";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "61";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_27f00143_Table UITbl_bdGrid_27f00143_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_27f00143_Table == null))
                {
                    this.mUITbl_bdGrid_27f00143_Table = new UITbl_bdGrid_27f00143_Table(this);
                }
                return this.mUITbl_bdGrid_27f00143_Table;
            }
        }
        
        public UITbl_bdGrid_27f00143_Row UITbl_bdGrid_27f00143_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_27f00143_Row == null))
                {
                    this.mUITbl_bdGrid_27f00143_Row = new UITbl_bdGrid_27f00143_Row(this);
                }
                return this.mUITbl_bdGrid_27f00143_Row;
            }
        }
        
        public HtmlEdit UIInvoiceStatusDescripEdit1
        {
            get
            {
                if ((this.mUIInvoiceStatusDescripEdit1 == null))
                {
                    this.mUIInvoiceStatusDescripEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInvoiceStatusDescripEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtinvoiceStatusType_description";
                    this.mUIInvoiceStatusDescripEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtinvoiceStatusType_description";
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Invoice Status Description";
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtinvoiceStatusTyp";
                    this.mUIInvoiceStatusDescripEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "24";
                    this.mUIInvoiceStatusDescripEdit1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInvoiceStatusDescripEdit1;
            }
        }
        
        public HtmlCheckBox UIInvStatusisArchivedCheckBox1
        {
            get
            {
                if ((this.mUIInvStatusisArchivedCheckBox1 == null))
                {
                    this.mUIInvStatusisArchivedCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIInvStatusisArchivedCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkinvoiceStatusType_isArchive";
                    this.mUIInvStatusisArchivedCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkinvoiceStatusType_isArchive";
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Inv. Status is Archived";
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkinvoiceStatusTyp";
                    this.mUIInvStatusisArchivedCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "25";
                    this.mUIInvStatusisArchivedCheckBox1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInvStatusisArchivedCheckBox1;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "64";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_27f00143_Row1 UITbl_bdGrid_27f00143_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_27f00143_Row1 == null))
                {
                    this.mUITbl_bdGrid_27f00143_Row1 = new UITbl_bdGrid_27f00143_Row1(this);
                }
                return this.mUITbl_bdGrid_27f00143_Row1;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton1
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton1 == null))
                {
                    this.mUICtl00contentmaincmdDButton1 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton1.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton1.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "26";
                    this.mUICtl00contentmaincmdDButton1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton1;
            }
        }
        
        public UITbl_bdGrid_27f00143_Cell UITbl_bdGrid_27f00143_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_27f00143_Cell == null))
                {
                    this.mUITbl_bdGrid_27f00143_Cell = new UITbl_bdGrid_27f00143_Cell(this);
                }
                return this.mUITbl_bdGrid_27f00143_Cell;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        #endregion
        
        #region Fields
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUIInvoiceStatusTypesPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIMaindivPane mUIMaindivPane;
        
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIInvoiceStatusDescripEdit;
        
        private HtmlCheckBox mUIInvStatusisArchivedCheckBox;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_27f00143_Table mUITbl_bdGrid_27f00143_Table;
        
        private UITbl_bdGrid_27f00143_Row mUITbl_bdGrid_27f00143_Row;
        
        private HtmlEdit mUIInvoiceStatusDescripEdit1;
        
        private HtmlCheckBox mUIInvStatusisArchivedCheckBox1;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_27f00143_Row1 mUITbl_bdGrid_27f00143_Row1;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton1;
        
        private UITbl_bdGrid_27f00143_Cell mUITbl_bdGrid_27f00143_Cell;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd20SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd20SeptembePane == null))
                {
                    this.mUIJamesLloyd20SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 ";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd20SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd20SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd20SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nInv. Status is Arch";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_27f00143_Table : HtmlTable
    {
        
        public UITbl_bdGrid_27f00143_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_27f00143_8058_4108_a0ec_ac73d6964382";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Inv. Status is Archived Invoice Status D";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_27f00143_8058_4108_a0ec_ac";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "20";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIInvoiceStatusCell
        {
            get
            {
                if ((this.mUICodedUIInvoiceStatusCell == null))
                {
                    this.mUICodedUIInvoiceStatusCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIInvoiceStatusCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIInvoiceStatusCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIInvoiceStatusCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Invoice Status";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "15";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIInvoiceStatusCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "75";
                    this.mUICodedUIInvoiceStatusCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIInvoiceStatusCell;
            }
        }
        
        public HtmlCell UICodedUIInvoiceStatusCell1
        {
            get
            {
                if ((this.mUICodedUIInvoiceStatusCell1 == null))
                {
                    this.mUICodedUIInvoiceStatusCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIInvoiceStatusCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIInvoiceStatusCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIInvoiceStatusCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Invoice Status EDITED";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "15";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIInvoiceStatusCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "75";
                    this.mUICodedUIInvoiceStatusCell1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIInvoiceStatusCell1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIInvoiceStatusCell;
        
        private HtmlCell mUICodedUIInvoiceStatusCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_27f00143_Row : HtmlRow
    {
        
        public UITbl_bdGrid_27f00143_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_27f00143_8058_4108_a0ec_ac73d6964382_CodedUI Invoice Status";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Invoice Status";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_27f00143_8058_4108_a0ec_a";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "15";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled CHECKED type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_27f00143_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_27f00143_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_27f00143_8058_4108_a0ec_ac73d6964382_CodedUI Invoice Status EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Invoice Status EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_27f00143_8058_4108_a0ec_a";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "15";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlCheckBox mUIItemCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_27f00143_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_27f00143_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_27f00143_8058_4108_a0ec_ac73d6964382_CodedUI Invoice Status_archiveSta" +
                "tus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_27f00143_8058_4108_a0ec_a";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "15";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "73";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
}
