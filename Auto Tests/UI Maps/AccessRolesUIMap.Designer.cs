// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.AccessRolesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class AccessRolesUIMap
    {
        
        /// <summary>
        /// SelectNewAccessRole
        /// </summary>
        public void SelectNewAccessRole()
        {
            #region Variable Declarations
            HtmlHyperlink uINewAccessRoleHyperlink = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument.UIPageOptionsNewAccessPane.UINewAccessRoleHyperlink;
            #endregion

            // Click 'New Access Role' link
            Mouse.Click(uINewAccessRoleHyperlink, new Point(47, 5));
        }
        
        /// <summary>
        /// EnterAccessRoleNameAndDescription - Use 'EnterAccessRoleNameAndDescriptionParams' to pass parameters into this method.
        /// </summary>
        public void EnterAccessRoleNameAndDescription()
        {
            #region Variable Declarations
            HtmlEdit uIRoleNameEdit = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UIRoleNameEdit;
            HtmlTextArea uIDescriptionEdit = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UIDescriptionEdit;
            #endregion

            // Type '__Coded UI Access Role' in 'Role Name*' text box
            uIRoleNameEdit.Text = this.EnterAccessRoleNameAndDescriptionParams.UIRoleNameEditText;

            // Type '__Coded UI Access Role Description' in 'Description' text box
            uIDescriptionEdit.Text = this.EnterAccessRoleNameAndDescriptionParams.UIDescriptionEditText;
        }
        
        /// <summary>
        /// SelectReportAccessDataFollowingAccessRoles - Use 'SelectReportAccessDataFollowingAccessRolesParams' to pass parameters into this method.
        /// </summary>
        public void SelectReportAccessDataFollowingAccessRoles()
        {
            #region Variable Declarations
            HtmlRadioButton uICtl00contentmainacceRadioButton = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UICtl00contentmainacceRadioButton;
            #endregion

            // Select 'ctl00$contentmain$accessLevel' radio button
            uICtl00contentmainacceRadioButton.Selected = this.SelectReportAccessDataFollowingAccessRolesParams.UICtl00contentmainacceRadioButtonSelected;
        }
        
        /// <summary>
        /// SelectReportAccessAllData - Use 'SelectReportAccessAllDataParams' to pass parameters into this method.
        /// </summary>
        public void SelectReportAccessAllData()
        {
            #region Variable Declarations
            HtmlRadioButton uIReportsAccessRadioButton = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument3.UIReportsAccessRadioButton;
            #endregion

            // Select 'Reports Access' radio button
            uIReportsAccessRadioButton.Selected = this.SelectReportAccessAllDataParams.UIReportsAccessRadioButtonSelected;
        }
        
        /// <summary>
        /// SelectSave
        /// </summary>
        public void SelectSave()
        {
            #region Variable Declarations
            HtmlImage uISaveImage = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UIMaindivPane.UISaveImage;
            #endregion

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(10, 11));
        }
        
        /// <summary>
        /// SelectDeleteAccessRole
        /// </summary>
        public void SelectDeleteAccessRole()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument.UITbl_accessRolesGrid_Row1.UIDeleteImage;
            BrowserWindow uIAccessRolesWindowsInWindow = this.UIAccessRolesWindowsInWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(7, 1));

            // Click 'Ok' button in the browser dialog window
            uIAccessRolesWindowsInWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// SelectCancel
        /// </summary>
        public void SelectCancel()
        {
            #region Variable Declarations
            HtmlImage uICancelImage = this.UIAccessRoleManagerWinWindow.UIAccessRoleManagerDocument.UIMaindivPane.UICancelImage;
            #endregion

            // Click 'Cancel' image
            Mouse.Click(uICancelImage, new Point(32, 15));
        }
        
        /// <summary>
        /// ValidateAccessRoleCorrectOnSummaryPage - Use 'ValidateAccessRoleCorrectOnSummaryPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAccessRoleCorrectOnSummaryPage()
        {
            #region Variable Declarations
            HtmlCell uI__CodedUIAccessRoleCell = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument.UITbl_accessRolesGridTable1.UI__CodedUIAccessRoleCell;
            #endregion

            // Verify that '__Coded UI Access Role' cell's property 'InnerText' equals '__Coded UI Access Role'
            Assert.AreEqual(this.ValidateAccessRoleCorrectOnSummaryPageExpectedValues.UI__CodedUIAccessRoleCellInnerText, uI__CodedUIAccessRoleCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAccessRoleCorrectNotOnSummaryPage - Use 'ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAccessRoleCorrectNotOnSummaryPage()
        {
            #region Variable Declarations
            HtmlCell uI__CodedUIAccessRoleCell = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument.UITbl_accessRolesGridTable1.UI__CodedUIAccessRoleCell;
            #endregion

            // Verify that '__Coded UI Access Role' cell's property 'InnerText' is not equal to '__Coded UI Access Role'
            Assert.AreNotEqual(this.ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues.UI__CodedUIAccessRoleCellInnerText, uI__CodedUIAccessRoleCell.InnerText);
        }
        
        /// <summary>
        /// SelectEditAccessRole
        /// </summary>
        public void SelectEditAccessRole()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument.UITbl_accessRolesGrid_Row2.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(4, 7));
        }
        
        /// <summary>
        /// ValidateDuplicateAccessRoleNameErrorMsg - Use 'ValidateDuplicateAccessRoleNameErrorMsgExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateAccessRoleNameErrorMsg()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' contains 'This access role name is already in use.'
            StringAssert.Contains(uICtl00_pnlMasterPopupPane.InnerText, this.ValidateDuplicateAccessRoleNameErrorMsgExpectedValues.UICtl00_pnlMasterPopupPaneInnerText);
        }
        
        /// <summary>
        /// SelectCloseDuplicateAccessRoleErrorMsg
        /// </summary>
        public void SelectCloseDuplicateAccessRoleErrorMsg()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(28, 7));
        }
        
        /// <summary>
        /// SelectAccessRolesToReportFrom - Use 'SelectAccessRolesToReportFromParams' to pass parameters into this method.
        /// </summary>
        public void SelectAccessRolesToReportFrom()
        {
            #region Variable Declarations
            HtmlCustom uICtl00_contentmain_lnCustom = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00_contentmain_lnCustom;
            HtmlCheckBox uIClaimantCheckBox = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UIClaimantCheckBox;
            HtmlCheckBox uIManagerCheckBox = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UIManagerCheckBox;
            HtmlDiv uIReportAccessLevelDivPane = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UIReportAccessLevelDivPane;
            #endregion

            // Click 'ctl00_contentmain_lnkAccessRoles' custom control
            Mouse.Click(uICtl00_contentmain_lnCustom, new Point(37, 8));

            // Select 'Claimant' check box
            uIClaimantCheckBox.Checked = this.SelectAccessRolesToReportFromParams.UIClaimantCheckBoxChecked;

            // Select 'Manager' check box
            uIManagerCheckBox.Checked = this.SelectAccessRolesToReportFromParams.UIManagerCheckBoxChecked;

            // Click 'reportAccessLevelDiv' pane
            Mouse.Click(uIReportAccessLevelDivPane, new Point(542, 74));
        }
        
        /// <summary>
        /// SetViewAddEditDeleteForAllElementsFramework - Use 'SetViewAddEditDeleteForAllElementsFrameworkParams' to pass parameters into this method.
        /// </summary>
        public void SetViewAddEditDeleteForAllElementsFramework()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00contentmaintcElCheckBox = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument1.UICtl00contentmaintcElCheckBox;
            HtmlCheckBox uICtl00contentmaintcElCheckBox1 = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument1.UICtl00contentmaintcElCheckBox1;
            HtmlCheckBox uICtl00contentmaintcElCheckBox2 = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument1.UICtl00contentmaintcElCheckBox2;
            #endregion

            // Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_d...' check box
            uICtl00contentmaintcElCheckBox.Checked = this.SetViewAddEditDeleteForAllElementsFrameworkParams.UICtl00contentmaintcElCheckBoxChecked;

            // Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_e...' check box
            uICtl00contentmaintcElCheckBox1.Checked = this.SetViewAddEditDeleteForAllElementsFrameworkParams.UICtl00contentmaintcElCheckBox1Checked;

            // Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_a...' check box
            uICtl00contentmaintcElCheckBox2.Checked = this.SetViewAddEditDeleteForAllElementsFrameworkParams.UICtl00contentmaintcElCheckBox2Checked;
        }
        
        /// <summary>
        /// SelectAccessRolesToEmployeesTheyApprove
        /// </summary>
        public void SelectAccessRolesToEmployeesTheyApprove()
        {
            #region Variable Declarations
            HtmlRadioButton uICtl00contentmainacceRadioButton = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00contentmainacceRadioButton;
            #endregion

            // Click 'ctl00$contentmain$accessLevel' radio button
            Mouse.Click(uICtl00contentmainacceRadioButton, new Point(6, 10));
        }
        
        /// <summary>
        /// SetViewAddEditDeleteForAllElementsExpenses - Use 'SetViewAddEditDeleteForAllElementsExpensesParams' to pass parameters into this method.
        /// </summary>
        public void SetViewAddEditDeleteForAllElementsExpenses()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00contentmaintcElCheckBox3 = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00contentmaintcElCheckBox3;
            HtmlCheckBox uICtl00contentmaintcElCheckBox2 = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00contentmaintcElCheckBox2;
            HtmlCheckBox uICtl00contentmaintcElCheckBox1 = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00contentmaintcElCheckBox1;
            HtmlCheckBox uICtl00contentmaintcElCheckBox = this.UIAccessRoleNewWindowsWindow.UIAccessRoleNewDocument1.UICtl00contentmaintcElCheckBox;
            #endregion

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box
            uICtl00contentmaintcElCheckBox3.Checked = this.SetViewAddEditDeleteForAllElementsExpensesParams.UICtl00contentmaintcElCheckBox3Checked;

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
            uICtl00contentmaintcElCheckBox2.Checked = this.SetViewAddEditDeleteForAllElementsExpensesParams.UICtl00contentmaintcElCheckBox2Checked;

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
            uICtl00contentmaintcElCheckBox1.Checked = this.SetViewAddEditDeleteForAllElementsExpensesParams.UICtl00contentmaintcElCheckBox1Checked;

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
            uICtl00contentmaintcElCheckBox.Checked = this.SetViewAddEditDeleteForAllElementsExpensesParams.UICtl00contentmaintcElCheckBoxChecked;
        }
        
        /// <summary>
        /// SetEmployeesCodeAccess - Use 'SetEmployeesCodeAccessParams' to pass parameters into this method.
        /// </summary>
        public void SetEmployeesCodeAccess()
        {
            #region Variable Declarations
            HtmlCheckBox uICaneditcostcodeCheckBox = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument2.UICaneditcostcodeCheckBox;
            HtmlCheckBox uICaneditprojectcodeCheckBox = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument2.UICaneditprojectcodeCheckBox;
            HtmlCheckBox uICaneditdepartmentCheckBox = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument2.UICaneditdepartmentCheckBox;
            #endregion

            // Select 'Can edit cost code' check box
            uICaneditcostcodeCheckBox.Checked = this.SetEmployeesCodeAccessParams.UICaneditcostcodeCheckBoxChecked;

            // Select 'Can edit project code' check box
            uICaneditprojectcodeCheckBox.Checked = this.SetEmployeesCodeAccessParams.UICaneditprojectcodeCheckBoxChecked;

            // Select 'Can edit department' check box
            uICaneditdepartmentCheckBox.Checked = this.SetEmployeesCodeAccessParams.UICaneditdepartmentCheckBoxChecked;
        }
        
        /// <summary>
        /// SetMinMaxClaimAmounts - Use 'SetMinMaxClaimAmountsParams' to pass parameters into this method.
        /// </summary>
        public void SetMinMaxClaimAmounts()
        {
            #region Variable Declarations
            HtmlEdit uIMaximumclaimamountEdit = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument2.UIMaximumclaimamountEdit;
            HtmlEdit uIMinimumclaimamountEdit = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument2.UIMinimumclaimamountEdit;
            #endregion

            // Type '1000' in 'Maximum claim amount' text box
            uIMaximumclaimamountEdit.Text = this.SetMinMaxClaimAmountsParams.UIMaximumclaimamountEditText;

            // Type '5' in 'Minimum claim amount' text box
            uIMinimumclaimamountEdit.Text = this.SetMinMaxClaimAmountsParams.UIMinimumclaimamountEditText;
        }
        
        /// <summary>
        /// UnSelectAllExpensesElements - Use 'UnSelectAllExpensesElementsParams' to pass parameters into this method.
        /// </summary>
        public void UnSelectAllExpensesElements()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00contentmaintcElCheckBox = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UICtl00contentmaintcElCheckBox;
            HtmlCheckBox uICtl00contentmaintcElCheckBox1 = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UICtl00contentmaintcElCheckBox1;
            HtmlCheckBox uICtl00contentmaintcElCheckBox2 = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UICtl00contentmaintcElCheckBox2;
            HtmlCheckBox uICtl00contentmaintcElCheckBox3 = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UICtl00contentmaintcElCheckBox3;
            #endregion

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
            uICtl00contentmaintcElCheckBox.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBoxChecked;

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
            uICtl00contentmaintcElCheckBox1.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBox1Checked;

            // Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
            uICtl00contentmaintcElCheckBox2.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBox2Checked;

            // Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
            uICtl00contentmaintcElCheckBox.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBoxChecked1;

            // Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
            uICtl00contentmaintcElCheckBox1.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBox1Checked1;

            // Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
            uICtl00contentmaintcElCheckBox2.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBox2Checked1;

            // Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box
            uICtl00contentmaintcElCheckBox3.Checked = this.UnSelectAllExpensesElementsParams.UICtl00contentmaintcElCheckBox3Checked;
        }
        
        /// <summary>
        /// ValidateExpensesElementsNotSelected - Use 'ValidateExpensesElementsNotSelectedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateExpensesElementsNotSelected()
        {
            #region Variable Declarations
            HtmlCheckBox uICtl00contentmaintcElCheckBox3 = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument4.UICtl00contentmaintcElCheckBox3;
            HtmlCheckBox uICtl00contentmaintcElCheckBox = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument4.UICtl00contentmaintcElCheckBox;
            HtmlCheckBox uICtl00contentmaintcElCheckBox1 = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument4.UICtl00contentmaintcElCheckBox1;
            HtmlCheckBox uICtl00contentmaintcElCheckBox2 = this.UIAccessRole__CodedUIAWindow.UIAccessRole__CodedUIADocument4.UICtl00contentmaintcElCheckBox2;
            #endregion

            // Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateExpensesElementsNotSelectedExpectedValues.UICtl00contentmaintcElCheckBox3Checked, uICtl00contentmaintcElCheckBox3.Checked);

            // Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateExpensesElementsNotSelectedExpectedValues.UICtl00contentmaintcElCheckBoxChecked, uICtl00contentmaintcElCheckBox.Checked);

            // Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateExpensesElementsNotSelectedExpectedValues.UICtl00contentmaintcElCheckBox1Checked, uICtl00contentmaintcElCheckBox1.Checked);

            // Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateExpensesElementsNotSelectedExpectedValues.UICtl00contentmaintcElCheckBox2Checked, uICtl00contentmaintcElCheckBox2.Checked);
        }
        
        /// <summary>
        /// ValidateAccessRoleEditedDetails - Use 'ValidateAccessRoleEditedDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAccessRoleEditedDetails()
        {
            #region Variable Declarations
            HtmlEdit uIRoleNameEdit = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UIRoleNameEdit;
            HtmlTextArea uIDescriptionEdit = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UIDescriptionEdit;
            HtmlRadioButton uIReportsAccessRadioButton = this.UIAccessRole__CodedUIAWindow1.UIAccessRole__CodedUIADocument.UIReportsAccessRadioButton;
            #endregion

            // Verify that 'Role Name*' text box's property 'Text' equals '__Coded UI Access Role - Updated'
            Assert.AreEqual(this.ValidateAccessRoleEditedDetailsExpectedValues.UIRoleNameEditText, uIRoleNameEdit.Text);

            // Verify that 'Description' text box's property 'Text' equals '__Coded UI Access Role Description - Edited'
            Assert.AreEqual(this.ValidateAccessRoleEditedDetailsExpectedValues.UIDescriptionEditText, uIDescriptionEdit.Text);

            // Verify that 'Reports Access' radio button's property 'Selected' equals 'True'
            Assert.AreEqual(this.ValidateAccessRoleEditedDetailsExpectedValues.UIReportsAccessRadioButtonSelected, uIReportsAccessRadioButton.Selected);
        }
        
        /// <summary>
        /// DeleteDuplicateAccessRole
        /// </summary>
        public void DeleteDuplicateAccessRole()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIAccessRolesWindowsInWindow.UIAccessRolesDocument1.UITbl_accessRolesGrid_Row.UIDeleteImage;
            BrowserWindow uIAccessRolesWindowsInWindow = this.UIAccessRolesWindowsInWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(10, 8));

            // Click 'Ok' button in the browser dialog window
            uIAccessRolesWindowsInWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        #region Properties
        public virtual EnterAccessRoleNameAndDescriptionParams EnterAccessRoleNameAndDescriptionParams
        {
            get
            {
                if ((this.mEnterAccessRoleNameAndDescriptionParams == null))
                {
                    this.mEnterAccessRoleNameAndDescriptionParams = new EnterAccessRoleNameAndDescriptionParams();
                }
                return this.mEnterAccessRoleNameAndDescriptionParams;
            }
        }
        
        public virtual SelectReportAccessDataFollowingAccessRolesParams SelectReportAccessDataFollowingAccessRolesParams
        {
            get
            {
                if ((this.mSelectReportAccessDataFollowingAccessRolesParams == null))
                {
                    this.mSelectReportAccessDataFollowingAccessRolesParams = new SelectReportAccessDataFollowingAccessRolesParams();
                }
                return this.mSelectReportAccessDataFollowingAccessRolesParams;
            }
        }
        
        public virtual SelectReportAccessAllDataParams SelectReportAccessAllDataParams
        {
            get
            {
                if ((this.mSelectReportAccessAllDataParams == null))
                {
                    this.mSelectReportAccessAllDataParams = new SelectReportAccessAllDataParams();
                }
                return this.mSelectReportAccessAllDataParams;
            }
        }
        
        public virtual ValidateAccessRoleCorrectOnSummaryPageExpectedValues ValidateAccessRoleCorrectOnSummaryPageExpectedValues
        {
            get
            {
                if ((this.mValidateAccessRoleCorrectOnSummaryPageExpectedValues == null))
                {
                    this.mValidateAccessRoleCorrectOnSummaryPageExpectedValues = new ValidateAccessRoleCorrectOnSummaryPageExpectedValues();
                }
                return this.mValidateAccessRoleCorrectOnSummaryPageExpectedValues;
            }
        }
        
        public virtual ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues
        {
            get
            {
                if ((this.mValidateAccessRoleCorrectNotOnSummaryPageExpectedValues == null))
                {
                    this.mValidateAccessRoleCorrectNotOnSummaryPageExpectedValues = new ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues();
                }
                return this.mValidateAccessRoleCorrectNotOnSummaryPageExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateAccessRoleNameErrorMsgExpectedValues ValidateDuplicateAccessRoleNameErrorMsgExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateAccessRoleNameErrorMsgExpectedValues == null))
                {
                    this.mValidateDuplicateAccessRoleNameErrorMsgExpectedValues = new ValidateDuplicateAccessRoleNameErrorMsgExpectedValues();
                }
                return this.mValidateDuplicateAccessRoleNameErrorMsgExpectedValues;
            }
        }
        
        public virtual SelectAccessRolesToReportFromParams SelectAccessRolesToReportFromParams
        {
            get
            {
                if ((this.mSelectAccessRolesToReportFromParams == null))
                {
                    this.mSelectAccessRolesToReportFromParams = new SelectAccessRolesToReportFromParams();
                }
                return this.mSelectAccessRolesToReportFromParams;
            }
        }
        
        public virtual SetViewAddEditDeleteForAllElementsFrameworkParams SetViewAddEditDeleteForAllElementsFrameworkParams
        {
            get
            {
                if ((this.mSetViewAddEditDeleteForAllElementsFrameworkParams == null))
                {
                    this.mSetViewAddEditDeleteForAllElementsFrameworkParams = new SetViewAddEditDeleteForAllElementsFrameworkParams();
                }
                return this.mSetViewAddEditDeleteForAllElementsFrameworkParams;
            }
        }
        
        public virtual SetViewAddEditDeleteForAllElementsExpensesParams SetViewAddEditDeleteForAllElementsExpensesParams
        {
            get
            {
                if ((this.mSetViewAddEditDeleteForAllElementsExpensesParams == null))
                {
                    this.mSetViewAddEditDeleteForAllElementsExpensesParams = new SetViewAddEditDeleteForAllElementsExpensesParams();
                }
                return this.mSetViewAddEditDeleteForAllElementsExpensesParams;
            }
        }
        
        public virtual SetEmployeesCodeAccessParams SetEmployeesCodeAccessParams
        {
            get
            {
                if ((this.mSetEmployeesCodeAccessParams == null))
                {
                    this.mSetEmployeesCodeAccessParams = new SetEmployeesCodeAccessParams();
                }
                return this.mSetEmployeesCodeAccessParams;
            }
        }
        
        public virtual SetMinMaxClaimAmountsParams SetMinMaxClaimAmountsParams
        {
            get
            {
                if ((this.mSetMinMaxClaimAmountsParams == null))
                {
                    this.mSetMinMaxClaimAmountsParams = new SetMinMaxClaimAmountsParams();
                }
                return this.mSetMinMaxClaimAmountsParams;
            }
        }
        
        public virtual UnSelectAllExpensesElementsParams UnSelectAllExpensesElementsParams
        {
            get
            {
                if ((this.mUnSelectAllExpensesElementsParams == null))
                {
                    this.mUnSelectAllExpensesElementsParams = new UnSelectAllExpensesElementsParams();
                }
                return this.mUnSelectAllExpensesElementsParams;
            }
        }
        
        public virtual ValidateExpensesElementsNotSelectedExpectedValues ValidateExpensesElementsNotSelectedExpectedValues
        {
            get
            {
                if ((this.mValidateExpensesElementsNotSelectedExpectedValues == null))
                {
                    this.mValidateExpensesElementsNotSelectedExpectedValues = new ValidateExpensesElementsNotSelectedExpectedValues();
                }
                return this.mValidateExpensesElementsNotSelectedExpectedValues;
            }
        }
        
        public virtual ValidateAccessRoleEditedDetailsExpectedValues ValidateAccessRoleEditedDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAccessRoleEditedDetailsExpectedValues == null))
                {
                    this.mValidateAccessRoleEditedDetailsExpectedValues = new ValidateAccessRoleEditedDetailsExpectedValues();
                }
                return this.mValidateAccessRoleEditedDetailsExpectedValues;
            }
        }
        
        public UIAccessRolesWindowsInWindow UIAccessRolesWindowsInWindow
        {
            get
            {
                if ((this.mUIAccessRolesWindowsInWindow == null))
                {
                    this.mUIAccessRolesWindowsInWindow = new UIAccessRolesWindowsInWindow();
                }
                return this.mUIAccessRolesWindowsInWindow;
            }
        }
        
        public UIAccessRoleNewWindowsWindow UIAccessRoleNewWindowsWindow
        {
            get
            {
                if ((this.mUIAccessRoleNewWindowsWindow == null))
                {
                    this.mUIAccessRoleNewWindowsWindow = new UIAccessRoleNewWindowsWindow();
                }
                return this.mUIAccessRoleNewWindowsWindow;
            }
        }
        
        public UIAccessRoleManagerWinWindow UIAccessRoleManagerWinWindow
        {
            get
            {
                if ((this.mUIAccessRoleManagerWinWindow == null))
                {
                    this.mUIAccessRoleManagerWinWindow = new UIAccessRoleManagerWinWindow();
                }
                return this.mUIAccessRoleManagerWinWindow;
            }
        }
        
        public UIAccessRole__CodedUIAWindow UIAccessRole__CodedUIAWindow
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIAWindow == null))
                {
                    this.mUIAccessRole__CodedUIAWindow = new UIAccessRole__CodedUIAWindow();
                }
                return this.mUIAccessRole__CodedUIAWindow;
            }
        }
        
        public UIAccessRole__CodedUIAWindow1 UIAccessRole__CodedUIAWindow1
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIAWindow1 == null))
                {
                    this.mUIAccessRole__CodedUIAWindow1 = new UIAccessRole__CodedUIAWindow1();
                }
                return this.mUIAccessRole__CodedUIAWindow1;
            }
        }
        #endregion
        
        #region Fields
        private EnterAccessRoleNameAndDescriptionParams mEnterAccessRoleNameAndDescriptionParams;
        
        private SelectReportAccessDataFollowingAccessRolesParams mSelectReportAccessDataFollowingAccessRolesParams;
        
        private SelectReportAccessAllDataParams mSelectReportAccessAllDataParams;
        
        private ValidateAccessRoleCorrectOnSummaryPageExpectedValues mValidateAccessRoleCorrectOnSummaryPageExpectedValues;
        
        private ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues mValidateAccessRoleCorrectNotOnSummaryPageExpectedValues;
        
        private ValidateDuplicateAccessRoleNameErrorMsgExpectedValues mValidateDuplicateAccessRoleNameErrorMsgExpectedValues;
        
        private SelectAccessRolesToReportFromParams mSelectAccessRolesToReportFromParams;
        
        private SetViewAddEditDeleteForAllElementsFrameworkParams mSetViewAddEditDeleteForAllElementsFrameworkParams;
        
        private SetViewAddEditDeleteForAllElementsExpensesParams mSetViewAddEditDeleteForAllElementsExpensesParams;
        
        private SetEmployeesCodeAccessParams mSetEmployeesCodeAccessParams;
        
        private SetMinMaxClaimAmountsParams mSetMinMaxClaimAmountsParams;
        
        private UnSelectAllExpensesElementsParams mUnSelectAllExpensesElementsParams;
        
        private ValidateExpensesElementsNotSelectedExpectedValues mValidateExpensesElementsNotSelectedExpectedValues;
        
        private ValidateAccessRoleEditedDetailsExpectedValues mValidateAccessRoleEditedDetailsExpectedValues;
        
        private UIAccessRolesWindowsInWindow mUIAccessRolesWindowsInWindow;
        
        private UIAccessRoleNewWindowsWindow mUIAccessRoleNewWindowsWindow;
        
        private UIAccessRoleManagerWinWindow mUIAccessRoleManagerWinWindow;
        
        private UIAccessRole__CodedUIAWindow mUIAccessRole__CodedUIAWindow;
        
        private UIAccessRole__CodedUIAWindow1 mUIAccessRole__CodedUIAWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterAccessRoleNameAndDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterAccessRoleNameAndDescriptionParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Coded UI Access Role' in 'Role Name*' text box
        /// </summary>
        public string UIRoleNameEditText = "__Coded UI Access Role";
        
        /// <summary>
        /// Type '__Coded UI Access Role Description' in 'Description' text box
        /// </summary>
        public string UIDescriptionEditText = "__Coded UI Access Role Description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectReportAccessDataFollowingAccessRoles'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SelectReportAccessDataFollowingAccessRolesParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ctl00$contentmain$accessLevel' radio button
        /// </summary>
        public bool UICtl00contentmainacceRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectReportAccessAllData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SelectReportAccessAllDataParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Reports Access' radio button
        /// </summary>
        public bool UIReportsAccessRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAccessRoleCorrectOnSummaryPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAccessRoleCorrectOnSummaryPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__Coded UI Access Role' cell's property 'InnerText' equals '__Coded UI Access Role'
        /// </summary>
        public string UI__CodedUIAccessRoleCellInnerText = "__Coded UI Access Role";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAccessRoleCorrectNotOnSummaryPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAccessRoleCorrectNotOnSummaryPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__Coded UI Access Role' cell's property 'InnerText' is not equal to '__Coded UI Access Role'
        /// </summary>
        public string UI__CodedUIAccessRoleCellInnerText = "__Coded UI Access Role";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateAccessRoleNameErrorMsg'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateDuplicateAccessRoleNameErrorMsgExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' contains 'This access role name is already in use.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "This access role name is already in use.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAccessRolesToReportFrom'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SelectAccessRolesToReportFromParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Claimant' check box
        /// </summary>
        public bool UIClaimantCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Manager' check box
        /// </summary>
        public bool UIManagerCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetViewAddEditDeleteForAllElementsFramework'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SetViewAddEditDeleteForAllElementsFrameworkParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_d...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_e...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox1Checked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb3$chk_module_a...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox2Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetViewAddEditDeleteForAllElementsExpenses'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SetViewAddEditDeleteForAllElementsExpensesParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox3Checked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox2Checked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox1Checked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetEmployeesCodeAccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SetEmployeesCodeAccessParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Can edit cost code' check box
        /// </summary>
        public bool UICaneditcostcodeCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Can edit project code' check box
        /// </summary>
        public bool UICaneditprojectcodeCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Can edit department' check box
        /// </summary>
        public bool UICaneditdepartmentCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetMinMaxClaimAmounts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SetMinMaxClaimAmountsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1000' in 'Maximum claim amount' text box
        /// </summary>
        public string UIMaximumclaimamountEditText = "1000";
        
        /// <summary>
        /// Type '5' in 'Minimum claim amount' text box
        /// </summary>
        public string UIMinimumclaimamountEditText = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnSelectAllExpensesElements'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UnSelectAllExpensesElementsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox1Checked = true;
        
        /// <summary>
        /// Select 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox2Checked = true;
        
        /// <summary>
        /// Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBoxChecked1 = false;
        
        /// <summary>
        /// Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox1Checked1 = false;
        
        /// <summary>
        /// Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox2Checked1 = false;
        
        /// <summary>
        /// Clear 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox3Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateExpensesElementsNotSelected'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateExpensesElementsNotSelectedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_v...' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox3Checked = false;
        
        /// <summary>
        /// Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_a...' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UICtl00contentmaintcElCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_e...' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox1Checked = false;
        
        /// <summary>
        /// Verify that 'ctl00$contentmain$tcElementAccess$tb2$chk_module_d...' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UICtl00contentmaintcElCheckBox2Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAccessRoleEditedDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAccessRoleEditedDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Role Name*' text box's property 'Text' equals '__Coded UI Access Role - Updated'
        /// </summary>
        public string UIRoleNameEditText = "__Coded UI Access Role - Updated";
        
        /// <summary>
        /// Verify that 'Description' text box's property 'Text' equals '__Coded UI Access Role Description - Edited'
        /// </summary>
        public string UIDescriptionEditText = "__Coded UI Access Role Description - Edited";
        
        /// <summary>
        /// Verify that 'Reports Access' radio button's property 'Selected' equals 'True'
        /// </summary>
        public bool UIReportsAccessRadioButtonSelected = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRolesWindowsInWindow : BrowserWindow
    {
        
        public UIAccessRolesWindowsInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Access Roles";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAccessRolesDocument UIAccessRolesDocument
        {
            get
            {
                if ((this.mUIAccessRolesDocument == null))
                {
                    this.mUIAccessRolesDocument = new UIAccessRolesDocument(this);
                }
                return this.mUIAccessRolesDocument;
            }
        }
        
        public UIAccessRolesDocument1 UIAccessRolesDocument1
        {
            get
            {
                if ((this.mUIAccessRolesDocument1 == null))
                {
                    this.mUIAccessRolesDocument1 = new UIAccessRolesDocument1(this);
                }
                return this.mUIAccessRolesDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIAccessRolesDocument mUIAccessRolesDocument;
        
        private UIAccessRolesDocument1 mUIAccessRolesDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRolesDocument : HtmlDocument
    {
        
        public UIAccessRolesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Roles";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accessRoles.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/accessRoles.aspx";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsNewAccessPane UIPageOptionsNewAccessPane
        {
            get
            {
                if ((this.mUIPageOptionsNewAccessPane == null))
                {
                    this.mUIPageOptionsNewAccessPane = new UIPageOptionsNewAccessPane(this);
                }
                return this.mUIPageOptionsNewAccessPane;
            }
        }
        
        public UITbl_accessRolesGrid_Row UITbl_accessRolesGrid_Row
        {
            get
            {
                if ((this.mUITbl_accessRolesGrid_Row == null))
                {
                    this.mUITbl_accessRolesGrid_Row = new UITbl_accessRolesGrid_Row(this);
                }
                return this.mUITbl_accessRolesGrid_Row;
            }
        }
        
        public UITbl_accessRolesGridTable UITbl_accessRolesGridTable
        {
            get
            {
                if ((this.mUITbl_accessRolesGridTable == null))
                {
                    this.mUITbl_accessRolesGridTable = new UITbl_accessRolesGridTable(this);
                }
                return this.mUITbl_accessRolesGridTable;
            }
        }
        
        public UITbl_accessRolesGridTable1 UITbl_accessRolesGridTable1
        {
            get
            {
                if ((this.mUITbl_accessRolesGridTable1 == null))
                {
                    this.mUITbl_accessRolesGridTable1 = new UITbl_accessRolesGridTable1(this);
                }
                return this.mUITbl_accessRolesGridTable1;
            }
        }
        
        public UITbl_accessRolesGrid_Row1 UITbl_accessRolesGrid_Row1
        {
            get
            {
                if ((this.mUITbl_accessRolesGrid_Row1 == null))
                {
                    this.mUITbl_accessRolesGrid_Row1 = new UITbl_accessRolesGrid_Row1(this);
                }
                return this.mUITbl_accessRolesGrid_Row1;
            }
        }
        
        public UITbl_accessRolesGrid_Row2 UITbl_accessRolesGrid_Row2
        {
            get
            {
                if ((this.mUITbl_accessRolesGrid_Row2 == null))
                {
                    this.mUITbl_accessRolesGrid_Row2 = new UITbl_accessRolesGrid_Row2(this);
                }
                return this.mUITbl_accessRolesGrid_Row2;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsNewAccessPane mUIPageOptionsNewAccessPane;
        
        private UITbl_accessRolesGrid_Row mUITbl_accessRolesGrid_Row;
        
        private UITbl_accessRolesGridTable mUITbl_accessRolesGridTable;
        
        private UITbl_accessRolesGridTable1 mUITbl_accessRolesGridTable1;
        
        private UITbl_accessRolesGrid_Row1 mUITbl_accessRolesGrid_Row1;
        
        private UITbl_accessRolesGrid_Row2 mUITbl_accessRolesGrid_Row2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsNewAccessPane : HtmlDiv
    {
        
        public UIPageOptionsNewAccessPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nNew Access Role ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewAccessRoleHyperlink
        {
            get
            {
                if ((this.mUINewAccessRoleHyperlink == null))
                {
                    this.mUINewAccessRoleHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewAccessRoleHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewAccessRoleHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewAccessRoleHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewAccessRoleHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Access Role";
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx";
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aeAccessRole.asp";
                    this.mUINewAccessRoleHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINewAccessRoleHyperlink.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUINewAccessRoleHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewAccessRoleHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGrid_Row : HtmlRow
    {
        
        public UITbl_accessRolesGrid_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_accessRolesGrid_277";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Test Access RoleDesription of Test Acces";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid_277";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "11";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "12";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteAccessRole(277);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteAccessRole(277);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGridTable : HtmlTable
    {
        
        public UITbl_accessRolesGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_accessRolesGrid";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Access Role Name Description\r\nA Test\r\nAu";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "15";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlCell UITestAccessRole1Cell
        {
            get
            {
                if ((this.mUITestAccessRole1Cell == null))
                {
                    this.mUITestAccessRole1Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITestAccessRole1Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITestAccessRole1Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITestAccessRole1Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Test Access Role 1";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "11";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUITestAccessRole1Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "43";
                    this.mUITestAccessRole1Cell.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUITestAccessRole1Cell;
            }
        }
        
        public HtmlCell UIDescriptionoftestAccCell
        {
            get
            {
                if ((this.mUIDescriptionoftestAccCell == null))
                {
                    this.mUIDescriptionoftestAccCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIDescriptionoftestAccCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIDescriptionoftestAccCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIDescriptionoftestAccCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Description of test Access Role 1";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "11";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUIDescriptionoftestAccCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "44";
                    this.mUIDescriptionoftestAccCell.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUIDescriptionoftestAccCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUITestAccessRole1Cell;
        
        private HtmlCell mUIDescriptionoftestAccCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGridTable1 : HtmlTable
    {
        
        public UITbl_accessRolesGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_accessRolesGrid";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Access Role Name Description\r\n__Coded UI";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "15";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlCell UI__CodedUIAccessRoleCell
        {
            get
            {
                if ((this.mUI__CodedUIAccessRoleCell == null))
                {
                    this.mUI__CodedUIAccessRoleCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__CodedUIAccessRoleCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__CodedUIAccessRoleCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__CodedUIAccessRoleCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__Coded UI Access Role";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__CodedUIAccessRoleCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
                    this.mUI__CodedUIAccessRoleCell.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUI__CodedUIAccessRoleCell;
            }
        }
        
        public HtmlCustom AccessRolesTable
        {
            get
            {
                if ((this.mAccessRolesTable == null))
                {
                    this.mAccessRolesTable = new HtmlCustom(this);
                    #region Search Criteria
                    this.mAccessRolesTable.SearchProperties["Id"] = null;
                    this.mAccessRolesTable.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mAccessRolesTable.SearchProperties["TagName"] = "TBODY";
                    this.mAccessRolesTable.FilterProperties["Class"] = null;
                    this.mAccessRolesTable.FilterProperties["ControlDefinition"] = null;
                    this.mAccessRolesTable.FilterProperties["TagInstance"] = "1";
                    this.mAccessRolesTable.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mAccessRolesTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUI__CodedUIAccessRoleCell;
        
        private HtmlCustom mAccessRolesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGrid_Row1 : HtmlRow
    {
        
        public UITbl_accessRolesGrid_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_accessRolesGrid_290";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Coded UI Access RoleDescription for Co";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid_290";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteAccessRole(290);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteAccessRole(290);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGrid_Row2 : HtmlRow
    {
        
        public UITbl_accessRolesGrid_Row2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_accessRolesGrid_296";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Coded UI Access Role__Coded UI Access ";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid_296";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aeAccessRole.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=296";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRolesDocument1 : HtmlDocument
    {
        
        public UIAccessRolesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Roles";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accessRoles.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/accessRoles.aspx";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public UITbl_accessRolesGrid_Row3 UITbl_accessRolesGrid_Row
        {
            get
            {
                if ((this.mUITbl_accessRolesGrid_Row == null))
                {
                    this.mUITbl_accessRolesGrid_Row = new UITbl_accessRolesGrid_Row3(this);
                }
                return this.mUITbl_accessRolesGrid_Row;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_accessRolesGrid_Row3 mUITbl_accessRolesGrid_Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_accessRolesGrid_Row3 : HtmlRow
    {
        
        public UITbl_accessRolesGrid_Row3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_accessRolesGrid_277";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Duplicate Access RoleDuplicate Access Ro";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid_277";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "7";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteAccessRole(277);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteAccessRole(277);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleNewWindowsWindow : BrowserWindow
    {
        
        public UIAccessRoleNewWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Access Role: New";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Access Role: New");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAccessRoleNewDocument UIAccessRoleNewDocument
        {
            get
            {
                if ((this.mUIAccessRoleNewDocument == null))
                {
                    this.mUIAccessRoleNewDocument = new UIAccessRoleNewDocument(this);
                }
                return this.mUIAccessRoleNewDocument;
            }
        }
        
        public UIAccessRoleNewDocument1 UIAccessRoleNewDocument1
        {
            get
            {
                if ((this.mUIAccessRoleNewDocument1 == null))
                {
                    this.mUIAccessRoleNewDocument1 = new UIAccessRoleNewDocument1(this);
                }
                return this.mUIAccessRoleNewDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIAccessRoleNewDocument mUIAccessRoleNewDocument;
        
        private UIAccessRoleNewDocument1 mUIAccessRoleNewDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleNewDocument : HtmlDocument
    {
        
        public UIAccessRoleNewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx";
            this.WindowTitles.Add("Access Role: New");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIRoleNameEdit
        {
            get
            {
                if ((this.mUIRoleNameEdit == null))
                {
                    this.mUIRoleNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRoleNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtRoleName";
                    this.mUIRoleNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtRoleName";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Role Name*";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtRoleName class=f";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIRoleNameEdit.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIRoleNameEdit;
            }
        }
        
        public HtmlTextArea UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDescription";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDescription";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtDescription name";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDescriptionEdit.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public HtmlRadioButton UICtl00contentmainacceRadioButton
        {
            get
            {
                if ((this.mUICtl00contentmainacceRadioButton == null))
                {
                    this.mUICtl00contentmainacceRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmainacceRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_radReportAccessLevel_2";
                    this.mUICtl00contentmainacceRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$accessLevel";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "radReportAccessLevel_2";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_radReportAccessLeve";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainacceRadioButton.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmainacceRadioButton;
            }
        }
        
        public HtmlRadioButton UIReportsAccessRadioButton
        {
            get
            {
                if ((this.mUIReportsAccessRadioButton == null))
                {
                    this.mUIReportsAccessRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$accessLevel";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Reports Access";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_radReportAccessLeve";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "7";
                    this.mUIReportsAccessRadioButton.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIReportsAccessRadioButton;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Warning\r\n\r\n\r\nThis access role name is al";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIOKImage.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlCustom UICtl00_contentmain_lnCustom
        {
            get
            {
                if ((this.mUICtl00_contentmain_lnCustom == null))
                {
                    this.mUICtl00_contentmain_lnCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["Id"] = "ctl00_contentmain_lnkAccessRoles";
                    this.mUICtl00_contentmain_lnCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["TagName"] = "A";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["Class"] = "hyperlink";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["ControlDefinition"] = "style=\"HEIGHT: 300px; OVERFLOW: auto\" id";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["TagInstance"] = "6";
                    this.mUICtl00_contentmain_lnCustom.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00_contentmain_lnCustom;
            }
        }
        
        public HtmlCheckBox UIFWMasterCheckBox
        {
            get
            {
                if ((this.mUIFWMasterCheckBox == null))
                {
                    this.mUIFWMasterCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIFWMasterCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole1";
                    this.mUIFWMasterCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIFWMasterCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIFWMasterCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "FWMaster";
                    this.mUIFWMasterCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIFWMasterCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIFWMasterCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole1 value=on type=check";
                    this.mUIFWMasterCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "285";
                    this.mUIFWMasterCheckBox.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIFWMasterCheckBox;
            }
        }
        
        public HtmlCheckBox UIFWModifierCheckBox
        {
            get
            {
                if ((this.mUIFWModifierCheckBox == null))
                {
                    this.mUIFWModifierCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIFWModifierCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole3";
                    this.mUIFWModifierCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIFWModifierCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIFWModifierCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "FW Modifier";
                    this.mUIFWModifierCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIFWModifierCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIFWModifierCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole3 value=on type=check";
                    this.mUIFWModifierCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "287";
                    this.mUIFWModifierCheckBox.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIFWModifierCheckBox;
            }
        }
        
        public HtmlDiv UIMaindivPane1
        {
            get
            {
                if ((this.mUIMaindivPane1 == null))
                {
                    this.mUIMaindivPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMaindivPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
                    this.mUIMaindivPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMaindivPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Role Name* *DescriptionReports AccessSel";
                    this.mUIMaindivPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMaindivPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIMaindivPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
                    this.mUIMaindivPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
                    this.mUIMaindivPane1.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIMaindivPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIRoleNameEdit;
        
        private HtmlTextArea mUIDescriptionEdit;
        
        private HtmlRadioButton mUICtl00contentmainacceRadioButton;
        
        private HtmlRadioButton mUIReportsAccessRadioButton;
        
        private UIMaindivPane mUIMaindivPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlCustom mUICtl00_contentmain_lnCustom;
        
        private HtmlCheckBox mUIFWMasterCheckBox;
        
        private HtmlCheckBox mUIFWModifierCheckBox;
        
        private HtmlDiv mUIMaindivPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Role Name* *DescriptionDesription of Tes";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Access Role: New");
            #endregion
        }
        
        #region Properties
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Save onclick=\"saveAccessRoleElemen";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "24";
                    this.mUISaveImage.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUISaveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleNewDocument1 : HtmlDocument
    {
        
        public UIAccessRoleNewDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeAccessRole.aspx";
            this.WindowTitles.Add("Access Role: New");
            #endregion
        }
        
        #region Properties
        public HtmlRadioButton UICtl00contentmainacceRadioButton
        {
            get
            {
                if ((this.mUICtl00contentmainacceRadioButton == null))
                {
                    this.mUICtl00contentmainacceRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmainacceRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_radReportAccessLevel_1";
                    this.mUICtl00contentmainacceRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$accessLevel";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "radReportAccessLevel_1";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_radReportAccessLeve";
                    this.mUICtl00contentmainacceRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainacceRadioButton.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmainacceRadioButton;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox == null))
                {
                    this.mUICtl00contentmaintcElCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmaintcElCheckBox.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox1
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox1 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmaintcElCheckBox1.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox1;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox2
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox2 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox2 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmaintcElCheckBox2.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox2;
            }
        }
        
        public HtmlCustom UICtl00_contentmain_lnCustom
        {
            get
            {
                if ((this.mUICtl00_contentmain_lnCustom == null))
                {
                    this.mUICtl00_contentmain_lnCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["Id"] = "ctl00_contentmain_lnkAccessRoles";
                    this.mUICtl00_contentmain_lnCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["TagName"] = "A";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["Class"] = "hyperlink";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["ControlDefinition"] = "id=ctl00_contentmain_lnkAccessRoles clas";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["TagInstance"] = "5";
                    this.mUICtl00_contentmain_lnCustom.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00_contentmain_lnCustom;
            }
        }
        
        public HtmlCheckBox UIClaimantCheckBox
        {
            get
            {
                if ((this.mUIClaimantCheckBox == null))
                {
                    this.mUIClaimantCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole23";
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimant";
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole23 value=on type=chec";
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "275";
                    this.mUIClaimantCheckBox.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIClaimantCheckBox;
            }
        }
        
        public HtmlCheckBox UIManagerCheckBox
        {
            get
            {
                if ((this.mUIManagerCheckBox == null))
                {
                    this.mUIManagerCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole24";
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Manager";
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole24 value=on type=chec";
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "276";
                    this.mUIManagerCheckBox.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIManagerCheckBox;
            }
        }
        
        public HtmlDiv UIReportAccessLevelDivPane
        {
            get
            {
                if ((this.mUIReportAccessLevelDivPane == null))
                {
                    this.mUIReportAccessLevelDivPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIReportAccessLevelDivPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "reportAccessLevelDiv";
                    this.mUIReportAccessLevelDivPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIReportAccessLevelDivPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Reports AccessSelect what data can be re";
                    this.mUIReportAccessLevelDivPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIReportAccessLevelDivPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "onecolumn";
                    this.mUIReportAccessLevelDivPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=reportAccessLevelDiv class=onecolumn";
                    this.mUIReportAccessLevelDivPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mUIReportAccessLevelDivPane.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUIReportAccessLevelDivPane;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox3
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox3 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox3 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmaintcElCheckBox3.WindowTitles.Add("Access Role: New");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox3;
            }
        }
        #endregion
        
        #region Fields
        private HtmlRadioButton mUICtl00contentmainacceRadioButton;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox1;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox2;
        
        private HtmlCustom mUICtl00_contentmain_lnCustom;
        
        private HtmlCheckBox mUIClaimantCheckBox;
        
        private HtmlCheckBox mUIManagerCheckBox;
        
        private HtmlDiv mUIReportAccessLevelDivPane;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleManagerWinWindow : BrowserWindow
    {
        
        public UIAccessRoleManagerWinWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Access Role: Manager";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Access Role: Manager");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAccessRoleManagerDocument UIAccessRoleManagerDocument
        {
            get
            {
                if ((this.mUIAccessRoleManagerDocument == null))
                {
                    this.mUIAccessRoleManagerDocument = new UIAccessRoleManagerDocument(this);
                }
                return this.mUIAccessRoleManagerDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAccessRoleManagerDocument mUIAccessRoleManagerDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleManagerDocument : HtmlDocument
    {
        
        public UIAccessRoleManagerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: Manager";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=24";
            this.WindowTitles.Add("Access Role: Manager");
            #endregion
        }
        
        #region Properties
        public UIMaindivPane1 UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane1(this);
                }
                return this.mUIMaindivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIMaindivPane1 mUIMaindivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane1 : HtmlDiv
    {
        
        public UIMaindivPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Role Name* *DescriptionReports AccessSel";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Access Role: Manager");
            #endregion
        }
        
        #region Properties
        public HtmlImage UICancelImage
        {
            get
            {
                if ((this.mUICancelImage == null))
                {
                    this.mUICancelImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Cancel";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/accessRoles.aspx";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/admin/accessRoles.aspx";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Cancel alt=Cancel src=\"/shared/ima";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "25";
                    this.mUICancelImage.WindowTitles.Add("Access Role: Manager");
                    #endregion
                }
                return this.mUICancelImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUICancelImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIAWindow : BrowserWindow
    {
        
        public UIAccessRole__CodedUIAWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Access Role: __Coded UI Access Role";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAccessRole__CodedUIADocument UIAccessRole__CodedUIADocument
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument == null))
                {
                    this.mUIAccessRole__CodedUIADocument = new UIAccessRole__CodedUIADocument(this);
                }
                return this.mUIAccessRole__CodedUIADocument;
            }
        }
        
        public UIAccessRole__CodedUIADocument1 UIAccessRole__CodedUIADocument1
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument1 == null))
                {
                    this.mUIAccessRole__CodedUIADocument1 = new UIAccessRole__CodedUIADocument1(this);
                }
                return this.mUIAccessRole__CodedUIADocument1;
            }
        }
        
        public UIAccessRole__CodedUIADocument2 UIAccessRole__CodedUIADocument2
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument2 == null))
                {
                    this.mUIAccessRole__CodedUIADocument2 = new UIAccessRole__CodedUIADocument2(this);
                }
                return this.mUIAccessRole__CodedUIADocument2;
            }
        }
        
        public UIAccessRole__CodedUIADocument3 UIAccessRole__CodedUIADocument3
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument3 == null))
                {
                    this.mUIAccessRole__CodedUIADocument3 = new UIAccessRole__CodedUIADocument3(this);
                }
                return this.mUIAccessRole__CodedUIADocument3;
            }
        }
        
        public UIAccessRole__CodedUIADocument4 UIAccessRole__CodedUIADocument4
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument4 == null))
                {
                    this.mUIAccessRole__CodedUIADocument4 = new UIAccessRole__CodedUIADocument4(this);
                }
                return this.mUIAccessRole__CodedUIADocument4;
            }
        }
        #endregion
        
        #region Fields
        private UIAccessRole__CodedUIADocument mUIAccessRole__CodedUIADocument;
        
        private UIAccessRole__CodedUIADocument1 mUIAccessRole__CodedUIADocument1;
        
        private UIAccessRole__CodedUIADocument2 mUIAccessRole__CodedUIADocument2;
        
        private UIAccessRole__CodedUIADocument3 mUIAccessRole__CodedUIADocument3;
        
        private UIAccessRole__CodedUIADocument4 mUIAccessRole__CodedUIADocument4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=296";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UICtl00_contentmain_lnCustom
        {
            get
            {
                if ((this.mUICtl00_contentmain_lnCustom == null))
                {
                    this.mUICtl00_contentmain_lnCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["Id"] = "ctl00_contentmain_lnkAccessRoles";
                    this.mUICtl00_contentmain_lnCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_lnCustom.SearchProperties["TagName"] = "A";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["Class"] = "hyperlink";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["ControlDefinition"] = "id=ctl00_contentmain_lnkAccessRoles clas";
                    this.mUICtl00_contentmain_lnCustom.FilterProperties["TagInstance"] = "4";
                    this.mUICtl00_contentmain_lnCustom.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00_contentmain_lnCustom;
            }
        }
        
        public HtmlCheckBox UIClaimantCheckBox
        {
            get
            {
                if ((this.mUIClaimantCheckBox == null))
                {
                    this.mUIClaimantCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole23";
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIClaimantCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimant";
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole23 value=on type=chec";
                    this.mUIClaimantCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "461";
                    this.mUIClaimantCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUIClaimantCheckBox;
            }
        }
        
        public HtmlCheckBox UIManagerCheckBox
        {
            get
            {
                if ((this.mUIManagerCheckBox == null))
                {
                    this.mUIManagerCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "linkedAccessRole24";
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIManagerCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Manager";
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=linkedAccessRole24 value=on type=chec";
                    this.mUIManagerCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "462";
                    this.mUIManagerCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUIManagerCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUICtl00_contentmain_lnCustom;
        
        private HtmlCheckBox mUIClaimantCheckBox;
        
        private HtmlCheckBox mUIManagerCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument1 : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=299";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UICtl00contentmaintcElCheckBox
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox == null))
                {
                    this.mUICtl00contentmaintcElCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb3_chk_module_delete_3";
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb3$chk_module_delete_3";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb3";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmaintcElCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox1
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox1 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb3_chk_module_edit_3";
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb3$chk_module_edit_3";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb3";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmaintcElCheckBox1.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox1;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox2
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox2 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox2 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb3_chk_module_add_3";
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb3$chk_module_add_3";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb3";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUICtl00contentmaintcElCheckBox2.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox1;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument2 : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=301";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UICaneditcostcodeCheckBox
        {
            get
            {
                if ((this.mUICaneditcostcodeCheckBox == null))
                {
                    this.mUICaneditcostcodeCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICaneditcostcodeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chkCanEditCostCodes";
                    this.mUICaneditcostcodeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chkCanEditCostCodes";
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Can edit cost code";
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICaneditcostcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUICaneditcostcodeCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICaneditcostcodeCheckBox;
            }
        }
        
        public HtmlCheckBox UICaneditprojectcodeCheckBox
        {
            get
            {
                if ((this.mUICaneditprojectcodeCheckBox == null))
                {
                    this.mUICaneditprojectcodeCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICaneditprojectcodeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chkCanEditProjectCodes";
                    this.mUICaneditprojectcodeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chkCanEditProjectCodes";
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Can edit project code";
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICaneditprojectcodeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUICaneditprojectcodeCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICaneditprojectcodeCheckBox;
            }
        }
        
        public HtmlCheckBox UICaneditdepartmentCheckBox
        {
            get
            {
                if ((this.mUICaneditdepartmentCheckBox == null))
                {
                    this.mUICaneditdepartmentCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICaneditdepartmentCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chkCanEditDepartments";
                    this.mUICaneditdepartmentCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chkCanEditDepartments";
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Can edit department";
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICaneditdepartmentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "12";
                    this.mUICaneditdepartmentCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICaneditdepartmentCheckBox;
            }
        }
        
        public HtmlEdit UIMaximumclaimamountEdit
        {
            get
            {
                if ((this.mUIMaximumclaimamountEdit == null))
                {
                    this.mUIMaximumclaimamountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMaximumclaimamountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_txtClaimMaximumAmount";
                    this.mUIMaximumclaimamountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$txtClaimMaximumAmount";
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Maximum claim amount";
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUIMaximumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUIMaximumclaimamountEdit.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUIMaximumclaimamountEdit;
            }
        }
        
        public HtmlEdit UIMinimumclaimamountEdit
        {
            get
            {
                if ((this.mUIMinimumclaimamountEdit == null))
                {
                    this.mUIMinimumclaimamountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMinimumclaimamountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_txtClaimMinimumAmount";
                    this.mUIMinimumclaimamountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$txtClaimMinimumAmount";
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Minimum claim amount";
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUIMinimumclaimamountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUIMinimumclaimamountEdit.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUIMinimumclaimamountEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUICaneditcostcodeCheckBox;
        
        private HtmlCheckBox mUICaneditprojectcodeCheckBox;
        
        private HtmlCheckBox mUICaneditdepartmentCheckBox;
        
        private HtmlEdit mUIMaximumclaimamountEdit;
        
        private HtmlEdit mUIMinimumclaimamountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument3 : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=304";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        #region Properties
        public HtmlRadioButton UIReportsAccessRadioButton
        {
            get
            {
                if ((this.mUIReportsAccessRadioButton == null))
                {
                    this.mUIReportsAccessRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$accessLevel";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Reports Access";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_radReportAccessLeve";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "7";
                    this.mUIReportsAccessRadioButton.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUIReportsAccessRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlRadioButton mUIReportsAccessRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument4 : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=275";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UICtl00contentmaintcElCheckBox
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox == null))
                {
                    this.mUICtl00contentmaintcElCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmaintcElCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox1
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox1 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmaintcElCheckBox1.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox1;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox2
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox2 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox2 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmaintcElCheckBox2.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox2;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox3
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox3 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox3 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmaintcElCheckBox3.WindowTitles.Add("Access Role: __Coded UI Access Role");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox3;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox1;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox2;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIAWindow1 : BrowserWindow
    {
        
        public UIAccessRole__CodedUIAWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Access Role: __Coded UI Access Role - Updated";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAccessRole__CodedUIADocument5 UIAccessRole__CodedUIADocument
        {
            get
            {
                if ((this.mUIAccessRole__CodedUIADocument == null))
                {
                    this.mUIAccessRole__CodedUIADocument = new UIAccessRole__CodedUIADocument5(this);
                }
                return this.mUIAccessRole__CodedUIADocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAccessRole__CodedUIADocument5 mUIAccessRole__CodedUIADocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRole__CodedUIADocument5 : HtmlDocument
    {
        
        public UIAccessRole__CodedUIADocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: __Coded UI Access Role - Updated";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=275";
            this.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UICtl00contentmaintcElCheckBox
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox == null))
                {
                    this.mUICtl00contentmaintcElCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_add_2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmaintcElCheckBox.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox1
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox1 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_edit_2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmaintcElCheckBox1.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox1;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox2
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox2 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox2 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_delete_2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmaintcElCheckBox2.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox2;
            }
        }
        
        public HtmlCheckBox UICtl00contentmaintcElCheckBox3
        {
            get
            {
                if ((this.mUICtl00contentmaintcElCheckBox3 == null))
                {
                    this.mUICtl00contentmaintcElCheckBox3 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tcElementAccess$tb2$chk_module_view_2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00contentmaintcElCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmaintcElCheckBox3.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUICtl00contentmaintcElCheckBox3;
            }
        }
        
        public HtmlEdit UIRoleNameEdit
        {
            get
            {
                if ((this.mUIRoleNameEdit == null))
                {
                    this.mUIRoleNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRoleNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtRoleName";
                    this.mUIRoleNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtRoleName";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Role Name*";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtRoleName class=f";
                    this.mUIRoleNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIRoleNameEdit.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUIRoleNameEdit;
            }
        }
        
        public HtmlTextArea UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDescription";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDescription";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtDescription name";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDescriptionEdit.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public HtmlRadioButton UIReportsAccessRadioButton
        {
            get
            {
                if ((this.mUIReportsAccessRadioButton == null))
                {
                    this.mUIReportsAccessRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$accessLevel";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "radReportAccessLevel_3";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Reports Access";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_radReportAccessLeve";
                    this.mUIReportsAccessRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "7";
                    this.mUIReportsAccessRadioButton.WindowTitles.Add("Access Role: __Coded UI Access Role - Updated");
                    #endregion
                }
                return this.mUIReportsAccessRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox1;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox2;
        
        private HtmlCheckBox mUICtl00contentmaintcElCheckBox3;
        
        private HtmlEdit mUIRoleNameEdit;
        
        private HtmlTextArea mUIDescriptionEdit;
        
        private HtmlRadioButton mUIReportsAccessRadioButton;
        #endregion
    }
}
