// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.UserDefinedFieldsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UserDefinedFieldsUIMap
    {
        
        /// <summary>
        /// CancelAddDuplicateUDFMessage
        /// </summary>
        public void CancelAddDuplicateUDFMessage()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            HtmlInputButton uICtl00contentmaincmdcButton = this.UIAddEditUserDefinedFiWindow.UIAddEditUserDefinedFiDocument.UICtl00contentmaincmdcButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(30, 12));

            // Click 'ctl00$contentmain$cmdcancel' button
            Mouse.Click(uICtl00contentmaincmdcButton, new Point(44, 17));
        }
        
        /// <summary>
        /// DeleteUDF
        /// </summary>
        public void DeleteUDF()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIUserDefinedFieldsWinWindow.UIUserDefinedFieldsDocument.UITbl_gridFields_84Row.UIDeleteImage;
            BrowserWindow uIUserDefinedFieldsWinWindow = this.UIUserDefinedFieldsWinWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 9));

            // Click 'Ok' button in the browser dialog window
            uIUserDefinedFieldsWinWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// EditFirstListItem - Use 'EditFirstListItemParams' to pass parameters into this method.
        /// </summary>
        public void EditFirstListItem()
        {
            #region Variable Declarations
            HtmlList uICtl00contentmainlstiList = this.UIUserdefinedField__liWindow.UIUserdefinedField__liDocument.UICtl00contentmainlstiList;
            HtmlImage uIEditListItemImage = this.UIUserdefinedField__liWindow.UIUserdefinedField__liDocument.UIListItemsItem1Item2IPane.UIEditListItemImage;
            HtmlEdit uICtl00contentmaintxtlEdit = this.UIUserdefinedField__liWindow.UIUserdefinedField__liDocument.UICtl00contentmaintxtlEdit;
            HtmlImage uISaveImage = this.UIUserdefinedField__liWindow.UIUserdefinedField__liDocument.UISaveImage;
            #endregion

            // Select 'Item 1' in 'ctl00$contentmain$lstitems' list box
            uICtl00contentmainlstiList.SelectedItemsAsString = this.EditFirstListItemParams.UICtl00contentmainlstiListSelectedItemsAsString;

            // Click 'Edit List Item' image
            Mouse.Click(uIEditListItemImage, new Point(10, 13));

            // Type 'Item 4' in 'ctl00$contentmain$txtlistitem' text box
            uICtl00contentmaintxtlEdit.Text = this.EditFirstListItemParams.UICtl00contentmaintxtlEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(27, 8));
        }
        
        /// <summary>
        /// EnterDescription - Use 'EnterDescriptionParams' to pass parameters into this method.
        /// </summary>
        public void EnterDescription()
        {
            #region Variable Declarations
            HtmlTextArea uIDescriptionEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIDescriptionEdit;
            #endregion

            // Type 'Automatically generated UDF' in 'Description' text box
            uIDescriptionEdit.Text = this.EnterDescriptionParams.UIDescriptionEditText;
        }
        
        /// <summary>
        /// EnterDisplayName - Use 'EnterDisplayNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterDisplayName()
        {
            #region Variable Declarations
            HtmlEdit uIDisplayNameEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIDisplayNameEdit;
            #endregion

            // Type '__Auto UDF' in 'Display Name*' text box
            uIDisplayNameEdit.Text = this.EnterDisplayNameParams.UIDisplayNameEditText;
        }
        
        /// <summary>
        /// EnterHyperlinkPath - Use 'EnterHyperlinkPathParams' to pass parameters into this method.
        /// </summary>
        public void EnterHyperlinkPath()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtHEdit1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtHEdit1;
            #endregion

            // Type 'http://www.google.co.uk' in 'ctl00$contentmain$txtHyperlinkPath' text box
            uICtl00contentmaintxtHEdit1.Text = this.EnterHyperlinkPathParams.UICtl00contentmaintxtHEdit1Text;
        }
        
        /// <summary>
        /// EnterHyperlinkText - Use 'EnterHyperlinkTextParams' to pass parameters into this method.
        /// </summary>
        public void EnterHyperlinkText()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtHEdit2 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtHEdit2;
            #endregion

            // Type 'Google' in 'ctl00$contentmain$txtHyperlinkText' text box
            uICtl00contentmaintxtHEdit2.Text = this.EnterHyperlinkTextParams.UICtl00contentmaintxtHEdit2Text;
        }
        
        /// <summary>
        /// EnterItemName - Use 'EnterItemNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterItemName()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtlEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtlEdit;
            #endregion

            // Type 'Test Item' in 'ctl00$contentmain$txtlistitem' text box
            uICtl00contentmaintxtlEdit.Text = this.EnterItemNameParams.UICtl00contentmaintxtlEditText;
        }
        
        /// <summary>
        /// EnterLargeTextMaximumLength - Use 'EnterLargeTextMaximumLengthParams' to pass parameters into this method.
        /// </summary>
        public void EnterLargeTextMaximumLength()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtmEdit1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtmEdit1;
            #endregion

            // Type '100' in 'ctl00$contentmain$txtmaxlengthlarge' text box
            uICtl00contentmaintxtmEdit1.Text = this.EnterLargeTextMaximumLengthParams.UICtl00contentmaintxtmEdit1Text;
        }
        
        /// <summary>
        /// EnterListItemName - Use 'EnterListItemNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterListItemName()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtlEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UICtl00contentmaintxtlEdit;
            HtmlImage uISaveImage = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UISaveImage;
            #endregion

            // Type 'Item 1' in 'ctl00$contentmain$txtlistitem' text box
            uICtl00contentmaintxtlEdit.Text = this.EnterListItemNameParams.UICtl00contentmaintxtlEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(27, 20));
        }
        
        /// <summary>
        /// EnterMaximumLength - Use 'EnterMaximumLengthParams' to pass parameters into this method.
        /// </summary>
        public void EnterMaximumLength()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtmEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtmEdit;
            #endregion

            // Type '50' in 'ctl00$contentmain$txtmaxlength' text box
            uICtl00contentmaintxtmEdit.Text = this.EnterMaximumLengthParams.UICtl00contentmaintxtmEditText;
        }
        
        /// <summary>
        /// EnterPrecision - Use 'EnterPrecisionParams' to pass parameters into this method.
        /// </summary>
        public void EnterPrecision()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtpEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtpEdit;
            #endregion

            // Type '2' in 'ctl00$contentmain$txtprecision' text box
            uICtl00contentmaintxtpEdit.Text = this.EnterPrecisionParams.UICtl00contentmaintxtpEditText;
        }
        
        /// <summary>
        /// EnterTooltip - Use 'EnterTooltipParams' to pass parameters into this method.
        /// </summary>
        public void EnterTooltip()
        {
            #region Variable Declarations
            HtmlTextArea uITooltipEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UITooltipEdit;
            #endregion

            // Type 'Automatically generated UDF Tooltip' in 'Tooltip' text box
            uITooltipEdit.Text = this.EnterTooltipParams.UITooltipEditText;
        }
        
        /// <summary>
        /// EnterYesNoDefault - Use 'EnterYesNoDefaultParams' to pass parameters into this method.
        /// </summary>
        public void EnterYesNoDefault()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UICtl00contentmaincmbdComboBox;
            #endregion

            // Select 'Yes' in 'ctl00$contentmain$cmbdefaultvalue' combo box
            uICtl00contentmaincmbdComboBox.SelectedItem = this.EnterYesNoDefaultParams.UICtl00contentmaincmbdComboBoxSelectedItem;
        }
        
        /// <summary>
        /// PressAddListItem
        /// </summary>
        public void PressAddListItem()
        {
            #region Variable Declarations
            HtmlImage uIAddListItemImage = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIListItemsPane.UIAddListItemImage;
            #endregion

            // Click 'Add List Item' image
            Mouse.Click(uIAddListItemImage, new Point(10, 9));
        }
        
        /// <summary>
        /// PressAddListItemCancelButton
        /// </summary>
        public void PressAddListItemCancelButton()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdlButton = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmdlButton;
            #endregion

            // Click 'ctl00$contentmain$cmdlistitemcancel' button
            Mouse.Click(uICtl00contentmaincmdlButton, new Point(32, 14));
        }
        
        /// <summary>
        /// PressAddListItemSaveButton
        /// </summary>
        public void PressAddListItemSaveButton()
        {
            #region Variable Declarations
            HtmlImage uISaveImage = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UISaveImage;
            #endregion

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(27, 19));
        }
        
        /// <summary>
        /// PressAddUserDefinedFieldLink
        /// </summary>
        public void PressAddUserDefinedFieldLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddUserdefinedFieldHyperlink = this.UIUserdefinedFieldsWinWindow1.UIUserdefinedFieldsDocument.UIAddUserdefinedFieldHyperlink;
            #endregion

            // Click 'Add Userdefined Field' link
            Mouse.Click(uIAddUserdefinedFieldHyperlink, new Point(24, 3));
        }
        
        /// <summary>
        /// PressCloseButtonOnModalMessage
        /// </summary>
        public void PressCloseButtonOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIUserdefinedFieldsWinWindow1.UIUserdefinedFieldsDocument1.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(10, 11));
        }
        
        /// <summary>
        /// PressDeleteIconForDuplicateUDFTests
        /// </summary>
        public void PressDeleteIconForDuplicateUDFTests()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIUserDefinedFieldsWinWindow.UIUserDefinedFieldsDocument2.UITbl_gridFields_326Row.UIDeleteImage;
            BrowserWindow uIUserDefinedFieldsWinWindow = this.UIUserDefinedFieldsWinWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(9, 11));

            // Click 'Ok' button in the browser dialog window
            uIUserDefinedFieldsWinWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// PressDeleteListItem
        /// </summary>
        public void PressDeleteListItem()
        {
            #region Variable Declarations
            HtmlImage uIDeleteListItemImage = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIListItemsPane.UIDeleteListItemImage;
            #endregion

            // Click 'Delete List Item' image
            Mouse.Click(uIDeleteListItemImage, new Point(10, 15));
        }
        
        /// <summary>
        /// PressEditListItem
        /// </summary>
        public void PressEditListItem()
        {
            #region Variable Declarations
            HtmlImage uIEditListItemImage = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIListItemsPane.UIEditListItemImage;
            #endregion

            // Click 'Edit List Item' image
            Mouse.Click(uIEditListItemImage, new Point(8, 12));
        }
        
        /// <summary>
        /// PressEditUserDefinedFieldLink
        /// </summary>
        public void PressEditUserDefinedFieldLink()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIUserDefinedFieldsWinWindow.UIUserDefinedFieldsDocument.UITbl_gridFields_158Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 14));
        }
        
        /// <summary>
        /// PressUDFSaveButton
        /// </summary>
        public void PressUDFSaveButton()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdoButton = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UICtl00contentmaincmdoButton;
            #endregion

            // Click 'ctl00$contentmain$cmdok' button
            Mouse.Click(uICtl00contentmaincmdoButton, new Point(18, 16));
        }
        
        /// <summary>
        /// SelectAndPressEditForFirstItem - Use 'SelectAndPressEditForFirstItemParams' to pass parameters into this method.
        /// </summary>
        public void SelectAndPressEditForFirstItem()
        {
            #region Variable Declarations
            HtmlList uICtl00contentmainlstiList = this.UIUserdefinedField__CoWindow1.UIUserdefinedField__CoDocument.UICtl00contentmainlstiList;
            HtmlImage uIEditListItemImage = this.UIUserdefinedField__CoWindow1.UIUserdefinedField__CoDocument.UIDivListOptionsPane.UIEditListItemImage;
            #endregion

            // Select 'Test Item 1' in 'ctl00$contentmain$lstitems' list box
            uICtl00contentmainlstiList.SelectedItemsAsString = this.SelectAndPressEditForFirstItemParams.UICtl00contentmainlstiListSelectedItemsAsString;

            // Click 'Edit List Item' image
            Mouse.Click(uIEditListItemImage, new Point(11, 10));
        }
        
        /// <summary>
        /// SelectAppliesTo - Use 'SelectAppliesToParams' to pass parameters into this method.
        /// </summary>
        public void SelectAppliesTo()
        {
            #region Variable Declarations
            HtmlComboBox uIAppliesToComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIAppliesToComboBox;
            #endregion

            // Select 'Contract Details' in 'Applies To*' combo box
            uIAppliesToComboBox.SelectedItem = this.SelectAppliesToParams.UIAppliesToComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectDateFormat - Use 'SelectDateFormatParams' to pass parameters into this method.
        /// </summary>
        public void SelectDateFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbdComboBox1;
            #endregion

            // Select 'Date Only' in 'ctl00$contentmain$cmbdateformat' combo box
            uICtl00contentmaincmbdComboBox1.SelectedItem = this.SelectDateFormatParams.UICtl00contentmaincmbdComboBox1SelectedItem;
        }
        
        /// <summary>
        /// SelectDefaultValue - Use 'SelectDefaultValueParams' to pass parameters into this method.
        /// </summary>
        public void SelectDefaultValue()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbdComboBox;
            #endregion

            // Select 'No' in 'ctl00$contentmain$cmbdefaultvalue' combo box
            uICtl00contentmaincmbdComboBox.SelectedItem = this.SelectDefaultValueParams.UICtl00contentmaincmbdComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectFormat - Use 'SelectFormatParams' to pass parameters into this method.
        /// </summary>
        public void SelectFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbtComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbtComboBox;
            #endregion

            // Select 'Single Line' in 'ctl00$contentmain$cmbtextformat' combo box
            uICtl00contentmaincmbtComboBox.SelectedItem = this.SelectFormatParams.UICtl00contentmaincmbtComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectGroup - Use 'SelectGroupParams' to pass parameters into this method.
        /// </summary>
        public void SelectGroup()
        {
            #region Variable Declarations
            HtmlComboBox uIGroupComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UIGroupComboBox;
            #endregion

            // Select 'CodedUI 2 Do Not Delete' in 'Group' combo box
            uIGroupComboBox.SelectedItem = this.SelectGroupParams.UIGroupComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectItemSpecific - Use 'SelectItemSpecificParams' to pass parameters into this method.
        /// </summary>
        public void SelectItemSpecific()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox;
            #endregion

            // Select 'Item Specific' check box
            uIItemSpecificCheckBox.Checked = this.SelectItemSpecificParams.UIItemSpecificCheckBoxChecked;
        }
        
        /// <summary>
        /// SelectLargeTextFormat - Use 'SelectLargeTextFormatParams' to pass parameters into this method.
        /// </summary>
        public void SelectLargeTextFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbtComboBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbtComboBox1;
            #endregion

            // Select 'Multiple Line' in 'ctl00$contentmain$cmbtextformatlarge' combo box
            uICtl00contentmaincmbtComboBox1.SelectedItem = this.SelectLargeTextFormatParams.UICtl00contentmaincmbtComboBox1SelectedItem;
        }
        
        /// <summary>
        /// SelectMandatory - Use 'SelectMandatoryParams' to pass parameters into this method.
        /// </summary>
        public void SelectMandatory()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIMandatoryCheckBox;
            #endregion

            // Select 'Mandatory' check box
            uIMandatoryCheckBox.Checked = this.SelectMandatoryParams.UIMandatoryCheckBoxChecked;
        }
        
        /// <summary>
        /// SelectRelatedTable - Use 'SelectRelatedTableParams' to pass parameters into this method.
        /// </summary>
        public void SelectRelatedTable()
        {
            #region Variable Declarations
            HtmlComboBox uIRelatedTableComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIRelatedTableComboBox;
            #endregion

            // Select 'Budget Holders' in 'Related Table*' combo box
            uIRelatedTableComboBox.SelectedItem = this.SelectRelatedTableParams.UIRelatedTableComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectTextFormat - Use 'SelectTextFormatParams' to pass parameters into this method.
        /// </summary>
        public void SelectTextFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbtComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbtComboBox;
            #endregion

            // Select 'Single Line' in 'ctl00$contentmain$cmbtextformat' combo box
            uICtl00contentmaincmbtComboBox.SelectedItem = this.SelectTextFormatParams.UICtl00contentmaincmbtComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectType - Use 'SelectTypeParams' to pass parameters into this method.
        /// </summary>
        public void SelectType()
        {
            #region Variable Declarations
            HtmlComboBox uITypeComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UITypeComboBox;
            #endregion

            // Select 'Text' in 'Type' combo box
            uITypeComboBox.SelectedItem = this.SelectTypeParams.UITypeComboBoxSelectedItem;
        }
        
        /// <summary>
        /// TickAllowSearch - Use 'TickAllowSearchParams' to pass parameters into this method.
        /// </summary>
        public void TickAllowSearch()
        {
            #region Variable Declarations
            HtmlCheckBox uIAllowSearchCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIAllowSearchCheckBox;
            #endregion

            // Select 'Allow Search?' check box
            uIAllowSearchCheckBox.Checked = this.TickAllowSearchParams.UIAllowSearchCheckBoxChecked;
        }
        
        /// <summary>
        /// TickItemSpecific - Use 'TickItemSpecificParams' to pass parameters into this method.
        /// </summary>
        public void TickItemSpecific()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox;
            #endregion

            // Select 'Item Specific' check box
            uIItemSpecificCheckBox.Checked = this.TickItemSpecificParams.UIItemSpecificCheckBoxChecked;
        }
        
        /// <summary>
        /// TickMandatory - Use 'TickMandatoryParams' to pass parameters into this method.
        /// </summary>
        public void TickMandatory()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIMandatoryCheckBox;
            #endregion

            // Select 'Mandatory' check box
            uIMandatoryCheckBox.Checked = this.TickMandatoryParams.UIMandatoryCheckBoxChecked;
        }
        
        /// <summary>
        /// UnTickAllowSearch - Use 'UnTickAllowSearchParams' to pass parameters into this method.
        /// </summary>
        public void UnTickAllowSearch()
        {
            #region Variable Declarations
            HtmlCheckBox uIAllowSearchCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIAllowSearchCheckBox;
            #endregion

            // Clear 'Allow Search?' check box
            uIAllowSearchCheckBox.Checked = this.UnTickAllowSearchParams.UIAllowSearchCheckBoxChecked;
        }
        
        /// <summary>
        /// UnTickItemSpecific - Use 'UnTickItemSpecificParams' to pass parameters into this method.
        /// </summary>
        public void UnTickItemSpecific()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox;
            #endregion

            // Clear 'Item Specific' check box
            uIItemSpecificCheckBox.Checked = this.UnTickItemSpecificParams.UIItemSpecificCheckBoxChecked;
        }
        
        /// <summary>
        /// UnTickMandatory - Use 'UnTickMandatoryParams' to pass parameters into this method.
        /// </summary>
        public void UnTickMandatory()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIMandatoryCheckBox;
            #endregion

            // Clear 'Mandatory' check box
            uIMandatoryCheckBox.Checked = this.UnTickMandatoryParams.UIMandatoryCheckBoxChecked;
        }
        
        /// <summary>
        /// ValidateAddUDF - Use 'ValidateAddUDFExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddUDF()
        {
            #region Variable Declarations
            HtmlCell uI__UDFTestCarsCell = this.UIUserDefinedFieldsWinWindow.UIUserDefinedFieldsDocument1.UITbl_gridFieldsTable.UI__UDFTestCarsCell;
            #endregion

            // Verify that the 'InnerText' property of '__UDF Test Cars' cell equals '__UDF Test Cars'
            Assert.AreEqual(this.ValidateAddUDFExpectedValues.UI__UDFTestCarsCellInnerText, uI__UDFTestCarsCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAllowSearch - Use 'ValidateAllowSearchExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAllowSearch()
        {
            #region Variable Declarations
            HtmlCheckBox uIAllowSearchCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIAllowSearchCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'Allow Search?' check box equals 'False'
            Assert.AreEqual(this.ValidateAllowSearchExpectedValues.UIAllowSearchCheckBoxChecked, uIAllowSearchCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidateAppliesTo - Use 'ValidateAppliesToExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAppliesTo()
        {
            #region Variable Declarations
            HtmlComboBox uIAppliesToComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIAppliesToComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Applies To*' combo box equals 'Contract Details'
            Assert.AreEqual(this.ValidateAppliesToExpectedValues.UIAppliesToComboBoxSelectedItem, uIAppliesToComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessage - Use 'ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessage()
        {
            #region Variable Declarations
            WinText uIUserdefinedfieldcannText = this.UIMessagefromwebpageWindow.UIUserdefinedfieldalreWindow.UIUserdefinedfieldcannText;
            #endregion

            // Verify that the 'Name' property of 'Userdefined field cannot be deleted as it is curre...' label equals 'Userdefined field cannot be deleted as it is currently in use on a GreenLight View.'
            Assert.AreEqual(this.ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues.UIUserdefinedfieldcannTextName, uIUserdefinedfieldcannText.Name);
        }
        
        /// <summary>
        /// ValidateDateFormat - Use 'ValidateDateFormatExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDateFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbdComboBox1;
            #endregion

            // Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbdateformat' combo box equals 'Date Only'
            Assert.AreEqual(this.ValidateDateFormatExpectedValues.UICtl00contentmaincmbdComboBox1SelectedItem, uICtl00contentmaincmbdComboBox1.SelectedItem);
        }
        
        /// <summary>
        /// ValidateDateFormatIsNotEnabled - Use 'ValidateDateFormatIsNotEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDateFormatIsNotEnabled()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox = this.UIUserdefinedField__teWindow.UIUserdefinedField__asDocument.UICtl00contentmaincmbdComboBox;
            #endregion

            // Verify that the 'Enabled' property of 'ctl00$contentmain$cmbdateformat' combo box equals 'False'
            Assert.AreEqual(this.ValidateDateFormatIsNotEnabledExpectedValues.UICtl00contentmaincmbdComboBoxEnabled, uICtl00contentmaincmbdComboBox.Enabled);
        }
        
        /// <summary>
        /// ValidateDescription - Use 'ValidateDescriptionExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDescription()
        {
            #region Variable Declarations
            HtmlTextArea uIDescriptionEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIDescriptionEdit;
            #endregion

            // Verify that the 'Text' property of 'Description' text box equals 'Auto UDF Description'
            Assert.AreEqual(this.ValidateDescriptionExpectedValues.UIDescriptionEditText, uIDescriptionEdit.Text);
        }
        
        /// <summary>
        /// ValidateDisplayName - Use 'ValidateDisplayNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDisplayName()
        {
            #region Variable Declarations
            HtmlEdit uIDisplayNameEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIDisplayNameEdit;
            #endregion

            // Verify that the 'Text' property of 'Display Name*' text box equals '__Auto UDF'
            Assert.AreEqual(this.ValidateDisplayNameExpectedValues.UIDisplayNameEditText, uIDisplayNameEdit.Text);
        }
        
        /// <summary>
        /// ValidateDisplayOrder - Use 'ValidateDisplayOrderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDisplayOrder()
        {
            #region Variable Declarations
            HtmlEdit uIDisplayOrderEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIDisplayOrderEdit;
            #endregion

            // Verify that the 'Text' property of 'Display Order' text box equals ''
            Assert.AreEqual(this.ValidateDisplayOrderExpectedValues.UIDisplayOrderEditText, uIDisplayOrderEdit.Text);
        }
        
        /// <summary>
        /// ValidateDuplicateMessage - Use 'ValidateDuplicateMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateMessage()
        {
            #region Variable Declarations
            WinWindow uIMessagefromwebpageWindow = this.UIMessagefromwebpageWindow;
            WinText uIUserdefinedfieldalreText = this.UIMessagefromwebpageWindow.UIUserdefinedfieldalreWindow.UIUserdefinedfieldalreText;
            #endregion

            // Verify that the 'Exists' property of 'Message from webpage' window equals 'True'
            Assert.AreEqual(this.ValidateDuplicateMessageExpectedValues.UIMessagefromwebpageWindowExists, uIMessagefromwebpageWindow.Exists);

            // Verify that the 'DisplayText' property of 'Userdefined field already exists' label equals 'Userdefined field already exists'
            Assert.AreEqual(this.ValidateDuplicateMessageExpectedValues.UIUserdefinedfieldalreTextDisplayText, uIUserdefinedfieldalreText.DisplayText);
        }
        
        /// <summary>
        /// ValidateGroup - Use 'ValidateGroupExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateGroup()
        {
            #region Variable Declarations
            HtmlComboBox uIGroupComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UIGroupComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Group' combo box equals 'CodedUI 2 Do Not Delete'
            Assert.AreEqual(this.ValidateGroupExpectedValues.UIGroupComboBoxSelectedItem, uIGroupComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateHyperlinkPath - Use 'ValidateHyperlinkPathExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateHyperlinkPath()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtHEdit3 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtHEdit3;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtHyperlinkPath' text box equals 'http://www.google.co.uk'
            Assert.AreEqual(this.ValidateHyperlinkPathExpectedValues.UICtl00contentmaintxtHEdit3Text, uICtl00contentmaintxtHEdit3.Text);
        }
        
        /// <summary>
        /// ValidateHyperlinkText - Use 'ValidateHyperlinkTextExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateHyperlinkText()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtHEdit2 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtHEdit2;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtHyperlinkText' text box equals 'Google'
            Assert.AreEqual(this.ValidateHyperlinkTextExpectedValues.UICtl00contentmaintxtHEdit2Text, uICtl00contentmaintxtHEdit2.Text);
        }
        
        /// <summary>
        /// ValidateItemSpecific - Use 'ValidateItemSpecificExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateItemSpecific()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'Item Specific' check box equals 'False'
            Assert.AreEqual(this.ValidateItemSpecificExpectedValues.UIItemSpecificCheckBoxChecked, uIItemSpecificCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidateItemSpecificIsEnabled - Use 'ValidateItemSpecificIsEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateItemSpecificIsEnabled()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox1;
            #endregion

            // Verify that the 'Enabled' property of 'Item Specific' check box equals 'True'
            Assert.AreEqual(this.ValidateItemSpecificIsEnabledExpectedValues.UIItemSpecificCheckBox1Enabled, uIItemSpecificCheckBox1.Enabled);
        }
        
        /// <summary>
        /// ValidateItemSpecificIsNotEnabled - Use 'ValidateItemSpecificIsNotEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateItemSpecificIsNotEnabled()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox1;
            #endregion

            // Verify that the 'Enabled' property of 'Item Specific' check box equals 'False'
            Assert.AreEqual(this.ValidateItemSpecificIsNotEnabledExpectedValues.UIItemSpecificCheckBox1Enabled, uIItemSpecificCheckBox1.Enabled);
        }
        
        /// <summary>
        /// ValidateItemSpecificIsTicked - Use 'ValidateItemSpecificIsTickedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateItemSpecificIsTicked()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemSpecificCheckBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIItemSpecificCheckBox1;
            #endregion

            // Verify that the 'Checked' property of 'Item Specific' check box equals 'True'
            Assert.AreEqual(this.ValidateItemSpecificIsTickedExpectedValues.UIItemSpecificCheckBox1Checked, uIItemSpecificCheckBox1.Checked);
        }
        
        /// <summary>
        /// ValidateLargeTextFormat - Use 'ValidateLargeTextFormatExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLargeTextFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbtComboBox1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbtComboBox1;
            #endregion

            // Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbtextformatlarge' combo box equals 'Multiple Line'
            Assert.AreEqual(this.ValidateLargeTextFormatExpectedValues.UICtl00contentmaincmbtComboBox1SelectedItem, uICtl00contentmaincmbtComboBox1.SelectedItem);
        }
        
        /// <summary>
        /// ValidateLargeTextMaximumLength - Use 'ValidateLargeTextMaximumLengthExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLargeTextMaximumLength()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtmEdit1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtmEdit1;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlengthlarge' text box equals '100'
            Assert.AreEqual(this.ValidateLargeTextMaximumLengthExpectedValues.UICtl00contentmaintxtmEdit1Text, uICtl00contentmaintxtmEdit1.Text);
        }
        
        /// <summary>
        /// ValidateListItems - Use 'ValidateListItemsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateListItems()
        {
            #region Variable Declarations
            HtmlList uICtl00contentmainlstiList = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UICtl00contentmainlstiList;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00$contentmain$lstitems' list box equals 'Item 1Item 2Item 3'
            Assert.AreEqual(this.ValidateListItemsExpectedValues.UICtl00contentmainlstiListInnerText, uICtl00contentmainlstiList.InnerText);
        }
        
        /// <summary>
        /// ValidateMandatory - Use 'ValidateMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatory()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIMandatoryCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'Mandatory' check box equals 'False'
            Assert.AreEqual(this.ValidateMandatoryExpectedValues.UIMandatoryCheckBoxChecked, uIMandatoryCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidateMandatoryIsEnabled - Use 'ValidateMandatoryIsEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryIsEnabled()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UIMandatoryCheckBox;
            #endregion

            // Verify that the 'Enabled' property of 'Mandatory' check box equals 'True'
            Assert.AreEqual(this.ValidateMandatoryIsEnabledExpectedValues.UIMandatoryCheckBoxEnabled, uIMandatoryCheckBox.Enabled);
        }
        
        /// <summary>
        /// ValidateMandatoryIsNotEnabled - Use 'ValidateMandatoryIsNotEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryIsNotEnabled()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument2.UIMandatoryCheckBox;
            #endregion

            // Verify that the 'Enabled' property of 'Mandatory' check box equals 'False'
            Assert.AreEqual(this.ValidateMandatoryIsNotEnabledExpectedValues.UIMandatoryCheckBoxEnabled, uIMandatoryCheckBox.Enabled);
        }
        
        /// <summary>
        /// ValidateMandatoryIsTicked - Use 'ValidateMandatoryIsTickedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryIsTicked()
        {
            #region Variable Declarations
            HtmlCheckBox uIMandatoryCheckBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument1.UIMandatoryCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'Mandatory' check box equals 'True'
            Assert.AreEqual(this.ValidateMandatoryIsTickedExpectedValues.UIMandatoryCheckBoxChecked, uIMandatoryCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidateMaximumLength - Use 'ValidateMaximumLengthExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMaximumLength()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtmEdit2 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtmEdit2;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlength' text box equals '50'
            Assert.AreEqual(this.ValidateMaximumLengthExpectedValues.UICtl00contentmaintxtmEdit2Text, uICtl00contentmaintxtmEdit2.Text);
        }
        
        /// <summary>
        /// ValidateModalMessage - Use 'ValidateModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateModalMessage()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIUserdefinedFieldsWinWindow1.UIUserdefinedFieldsDocument1.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'DisplayText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Userdefined field cannot be deleted as it is currently in use on a GreenLight View.'
            Assert.AreEqual(this.ValidateModalMessageExpectedValues.UICtl00_pnlMasterPopupPaneDisplayText, uICtl00_pnlMasterPopupPane.DisplayText);
        }
        
        /// <summary>
        /// ValidatePrecisio - Use 'ValidatePrecisioExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePrecisio()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtpEdit1 = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaintxtpEdit1;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtprecision' text box equals '2'
            Assert.AreEqual(this.ValidatePrecisioExpectedValues.UICtl00contentmaintxtpEdit1Text, uICtl00contentmaintxtpEdit1.Text);
        }
        
        /// <summary>
        /// ValidatePrecisionIsNotEnabled - Use 'ValidatePrecisionIsNotEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePrecisionIsNotEnabled()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtpEdit = this.UIUserdefinedField__teWindow.UIUserdefinedField__jaDocument.UICtl00contentmaintxtpEdit;
            #endregion

            // Verify that the 'Enabled' property of 'ctl00$contentmain$txtprecision' text box equals 'False'
            Assert.AreEqual(this.ValidatePrecisionIsNotEnabledExpectedValues.UICtl00contentmaintxtpEditEnabled, uICtl00contentmaintxtpEdit.Enabled);
        }
        
        /// <summary>
        /// ValidateRelatedTable - Use 'ValidateRelatedTableExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateRelatedTable()
        {
            #region Variable Declarations
            HtmlComboBox uIRelatedTableComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UIRelatedTableComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Related Table*' combo box equals 'Budget Holders'
            Assert.AreEqual(this.ValidateRelatedTableExpectedValues.UIRelatedTableComboBoxSelectedItem, uIRelatedTableComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateRelatedTableIsNotEnabled - Use 'ValidateRelatedTableIsNotEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateRelatedTableIsNotEnabled()
        {
            #region Variable Declarations
            HtmlComboBox uIRelatedTableComboBox = this.UIUserdefinedField__CoWindow2.UIUserdefinedField__CoDocument.UIRelatedTableComboBox;
            #endregion

            // Verify that the 'Enabled' property of 'Related Table*' combo box equals 'False'
            Assert.AreEqual(this.ValidateRelatedTableIsNotEnabledExpectedValues.UIRelatedTableComboBoxEnabled, uIRelatedTableComboBox.Enabled);
        }
        
        /// <summary>
        /// ValidateSelectedType - Use 'ValidateSelectedTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSelectedType()
        {
            #region Variable Declarations
            HtmlComboBox uITypeComboBox = this.UIUserdefinedField__teWindow.UIUserdefinedField__teDocument.UITypeComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Type' combo box equals 'Text'
            Assert.AreEqual(this.ValidateSelectedTypeExpectedValues.UITypeComboBoxSelectedItem, uITypeComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateTextFormat - Use 'ValidateTextFormatExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextFormat()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbtComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbtComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbtextformat' combo box equals 'Single Line'
            Assert.AreEqual(this.ValidateTextFormatExpectedValues.UICtl00contentmaincmbtComboBoxSelectedItem, uICtl00contentmaincmbtComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateTextLength - Use 'ValidateTextLengthExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextLength()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtmEdit = this.UIUserdefinedField__teWindow.UIUserdefinedField__teDocument.UICtl00contentmaintxtmEdit;
            #endregion

            // Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlength' text box equals '50'
            Assert.AreEqual(this.ValidateTextLengthExpectedValues.UICtl00contentmaintxtmEditText, uICtl00contentmaintxtmEdit.Text);
        }
        
        /// <summary>
        /// ValidateThereAreNoListItems - Use 'ValidateThereAreNoListItemsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateThereAreNoListItems()
        {
            #region Variable Declarations
            HtmlList uICtl00contentmainlstiList = this.UIUserdefinedField__CoWindow.UIUserdefinedField__CoDocument.UICtl00contentmainlstiList;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00$contentmain$lstitems' list box equals '   '
            Assert.AreEqual(this.ValidateThereAreNoListItemsExpectedValues.UICtl00contentmainlstiListInnerText, uICtl00contentmainlstiList.InnerText);
        }
        
        /// <summary>
        /// ValidateTooltip - Use 'ValidateTooltipExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTooltip()
        {
            #region Variable Declarations
            HtmlTextArea uITooltipEdit = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UITooltipEdit;
            #endregion

            // Verify that the 'Text' property of 'Tooltip' text box equals 'Auto UDF Tooltip'
            Assert.AreEqual(this.ValidateTooltipExpectedValues.UITooltipEditText, uITooltipEdit.Text);
        }
        
        /// <summary>
        /// ValidateTypeEnabled - Use 'ValidateTypeEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTypeEnabled()
        {
            #region Variable Declarations
            HtmlComboBox uITypeComboBox = this.UIUserdefinedField__teWindow.UIUserdefinedField__teDocument.UITypeComboBox;
            #endregion

            // Verify that the 'Enabled' property of 'Type' combo box equals 'False'
            Assert.AreEqual(this.ValidateTypeEnabledExpectedValues.UITypeComboBoxEnabled, uITypeComboBox.Enabled);
        }
        
        /// <summary>
        /// ValidateYesNoDefaultValue - Use 'ValidateYesNoDefaultValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateYesNoDefaultValue()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmaincmbdComboBox = this.UIUserdefinedFieldNewWWindow.UIUserdefinedFieldNewDocument.UICtl00contentmaincmbdComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbdefaultvalue' combo box equals 'No'
            Assert.AreEqual(this.ValidateYesNoDefaultValueExpectedValues.UICtl00contentmaincmbdComboBoxSelectedItem, uICtl00contentmaincmbdComboBox.SelectedItem);
        }
        
        #region Properties
        public virtual EditFirstListItemParams EditFirstListItemParams
        {
            get
            {
                if ((this.mEditFirstListItemParams == null))
                {
                    this.mEditFirstListItemParams = new EditFirstListItemParams();
                }
                return this.mEditFirstListItemParams;
            }
        }
        
        public virtual EnterDescriptionParams EnterDescriptionParams
        {
            get
            {
                if ((this.mEnterDescriptionParams == null))
                {
                    this.mEnterDescriptionParams = new EnterDescriptionParams();
                }
                return this.mEnterDescriptionParams;
            }
        }
        
        public virtual EnterDisplayNameParams EnterDisplayNameParams
        {
            get
            {
                if ((this.mEnterDisplayNameParams == null))
                {
                    this.mEnterDisplayNameParams = new EnterDisplayNameParams();
                }
                return this.mEnterDisplayNameParams;
            }
        }
        
        public virtual EnterHyperlinkPathParams EnterHyperlinkPathParams
        {
            get
            {
                if ((this.mEnterHyperlinkPathParams == null))
                {
                    this.mEnterHyperlinkPathParams = new EnterHyperlinkPathParams();
                }
                return this.mEnterHyperlinkPathParams;
            }
        }
        
        public virtual EnterHyperlinkTextParams EnterHyperlinkTextParams
        {
            get
            {
                if ((this.mEnterHyperlinkTextParams == null))
                {
                    this.mEnterHyperlinkTextParams = new EnterHyperlinkTextParams();
                }
                return this.mEnterHyperlinkTextParams;
            }
        }
        
        public virtual EnterItemNameParams EnterItemNameParams
        {
            get
            {
                if ((this.mEnterItemNameParams == null))
                {
                    this.mEnterItemNameParams = new EnterItemNameParams();
                }
                return this.mEnterItemNameParams;
            }
        }
        
        public virtual EnterLargeTextMaximumLengthParams EnterLargeTextMaximumLengthParams
        {
            get
            {
                if ((this.mEnterLargeTextMaximumLengthParams == null))
                {
                    this.mEnterLargeTextMaximumLengthParams = new EnterLargeTextMaximumLengthParams();
                }
                return this.mEnterLargeTextMaximumLengthParams;
            }
        }
        
        public virtual EnterListItemNameParams EnterListItemNameParams
        {
            get
            {
                if ((this.mEnterListItemNameParams == null))
                {
                    this.mEnterListItemNameParams = new EnterListItemNameParams();
                }
                return this.mEnterListItemNameParams;
            }
        }
        
        public virtual EnterMaximumLengthParams EnterMaximumLengthParams
        {
            get
            {
                if ((this.mEnterMaximumLengthParams == null))
                {
                    this.mEnterMaximumLengthParams = new EnterMaximumLengthParams();
                }
                return this.mEnterMaximumLengthParams;
            }
        }
        
        public virtual EnterPrecisionParams EnterPrecisionParams
        {
            get
            {
                if ((this.mEnterPrecisionParams == null))
                {
                    this.mEnterPrecisionParams = new EnterPrecisionParams();
                }
                return this.mEnterPrecisionParams;
            }
        }
        
        public virtual EnterTooltipParams EnterTooltipParams
        {
            get
            {
                if ((this.mEnterTooltipParams == null))
                {
                    this.mEnterTooltipParams = new EnterTooltipParams();
                }
                return this.mEnterTooltipParams;
            }
        }
        
        public virtual EnterYesNoDefaultParams EnterYesNoDefaultParams
        {
            get
            {
                if ((this.mEnterYesNoDefaultParams == null))
                {
                    this.mEnterYesNoDefaultParams = new EnterYesNoDefaultParams();
                }
                return this.mEnterYesNoDefaultParams;
            }
        }
        
        public virtual SelectAndPressEditForFirstItemParams SelectAndPressEditForFirstItemParams
        {
            get
            {
                if ((this.mSelectAndPressEditForFirstItemParams == null))
                {
                    this.mSelectAndPressEditForFirstItemParams = new SelectAndPressEditForFirstItemParams();
                }
                return this.mSelectAndPressEditForFirstItemParams;
            }
        }
        
        public virtual SelectAppliesToParams SelectAppliesToParams
        {
            get
            {
                if ((this.mSelectAppliesToParams == null))
                {
                    this.mSelectAppliesToParams = new SelectAppliesToParams();
                }
                return this.mSelectAppliesToParams;
            }
        }
        
        public virtual SelectDateFormatParams SelectDateFormatParams
        {
            get
            {
                if ((this.mSelectDateFormatParams == null))
                {
                    this.mSelectDateFormatParams = new SelectDateFormatParams();
                }
                return this.mSelectDateFormatParams;
            }
        }
        
        public virtual SelectDefaultValueParams SelectDefaultValueParams
        {
            get
            {
                if ((this.mSelectDefaultValueParams == null))
                {
                    this.mSelectDefaultValueParams = new SelectDefaultValueParams();
                }
                return this.mSelectDefaultValueParams;
            }
        }
        
        public virtual SelectFormatParams SelectFormatParams
        {
            get
            {
                if ((this.mSelectFormatParams == null))
                {
                    this.mSelectFormatParams = new SelectFormatParams();
                }
                return this.mSelectFormatParams;
            }
        }
        
        public virtual SelectGroupParams SelectGroupParams
        {
            get
            {
                if ((this.mSelectGroupParams == null))
                {
                    this.mSelectGroupParams = new SelectGroupParams();
                }
                return this.mSelectGroupParams;
            }
        }
        
        public virtual SelectItemSpecificParams SelectItemSpecificParams
        {
            get
            {
                if ((this.mSelectItemSpecificParams == null))
                {
                    this.mSelectItemSpecificParams = new SelectItemSpecificParams();
                }
                return this.mSelectItemSpecificParams;
            }
        }
        
        public virtual SelectLargeTextFormatParams SelectLargeTextFormatParams
        {
            get
            {
                if ((this.mSelectLargeTextFormatParams == null))
                {
                    this.mSelectLargeTextFormatParams = new SelectLargeTextFormatParams();
                }
                return this.mSelectLargeTextFormatParams;
            }
        }
        
        public virtual SelectMandatoryParams SelectMandatoryParams
        {
            get
            {
                if ((this.mSelectMandatoryParams == null))
                {
                    this.mSelectMandatoryParams = new SelectMandatoryParams();
                }
                return this.mSelectMandatoryParams;
            }
        }
        
        public virtual SelectRelatedTableParams SelectRelatedTableParams
        {
            get
            {
                if ((this.mSelectRelatedTableParams == null))
                {
                    this.mSelectRelatedTableParams = new SelectRelatedTableParams();
                }
                return this.mSelectRelatedTableParams;
            }
        }
        
        public virtual SelectTextFormatParams SelectTextFormatParams
        {
            get
            {
                if ((this.mSelectTextFormatParams == null))
                {
                    this.mSelectTextFormatParams = new SelectTextFormatParams();
                }
                return this.mSelectTextFormatParams;
            }
        }
        
        public virtual SelectTypeParams SelectTypeParams
        {
            get
            {
                if ((this.mSelectTypeParams == null))
                {
                    this.mSelectTypeParams = new SelectTypeParams();
                }
                return this.mSelectTypeParams;
            }
        }
        
        public virtual TickAllowSearchParams TickAllowSearchParams
        {
            get
            {
                if ((this.mTickAllowSearchParams == null))
                {
                    this.mTickAllowSearchParams = new TickAllowSearchParams();
                }
                return this.mTickAllowSearchParams;
            }
        }
        
        public virtual TickItemSpecificParams TickItemSpecificParams
        {
            get
            {
                if ((this.mTickItemSpecificParams == null))
                {
                    this.mTickItemSpecificParams = new TickItemSpecificParams();
                }
                return this.mTickItemSpecificParams;
            }
        }
        
        public virtual TickMandatoryParams TickMandatoryParams
        {
            get
            {
                if ((this.mTickMandatoryParams == null))
                {
                    this.mTickMandatoryParams = new TickMandatoryParams();
                }
                return this.mTickMandatoryParams;
            }
        }
        
        public virtual UnTickAllowSearchParams UnTickAllowSearchParams
        {
            get
            {
                if ((this.mUnTickAllowSearchParams == null))
                {
                    this.mUnTickAllowSearchParams = new UnTickAllowSearchParams();
                }
                return this.mUnTickAllowSearchParams;
            }
        }
        
        public virtual UnTickItemSpecificParams UnTickItemSpecificParams
        {
            get
            {
                if ((this.mUnTickItemSpecificParams == null))
                {
                    this.mUnTickItemSpecificParams = new UnTickItemSpecificParams();
                }
                return this.mUnTickItemSpecificParams;
            }
        }
        
        public virtual UnTickMandatoryParams UnTickMandatoryParams
        {
            get
            {
                if ((this.mUnTickMandatoryParams == null))
                {
                    this.mUnTickMandatoryParams = new UnTickMandatoryParams();
                }
                return this.mUnTickMandatoryParams;
            }
        }
        
        public virtual ValidateAddUDFExpectedValues ValidateAddUDFExpectedValues
        {
            get
            {
                if ((this.mValidateAddUDFExpectedValues == null))
                {
                    this.mValidateAddUDFExpectedValues = new ValidateAddUDFExpectedValues();
                }
                return this.mValidateAddUDFExpectedValues;
            }
        }
        
        public virtual ValidateAllowSearchExpectedValues ValidateAllowSearchExpectedValues
        {
            get
            {
                if ((this.mValidateAllowSearchExpectedValues == null))
                {
                    this.mValidateAllowSearchExpectedValues = new ValidateAllowSearchExpectedValues();
                }
                return this.mValidateAllowSearchExpectedValues;
            }
        }
        
        public virtual ValidateAppliesToExpectedValues ValidateAppliesToExpectedValues
        {
            get
            {
                if ((this.mValidateAppliesToExpectedValues == null))
                {
                    this.mValidateAppliesToExpectedValues = new ValidateAppliesToExpectedValues();
                }
                return this.mValidateAppliesToExpectedValues;
            }
        }
        
        public virtual ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues == null))
                {
                    this.mValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues = new ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues();
                }
                return this.mValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues;
            }
        }
        
        public virtual ValidateDateFormatExpectedValues ValidateDateFormatExpectedValues
        {
            get
            {
                if ((this.mValidateDateFormatExpectedValues == null))
                {
                    this.mValidateDateFormatExpectedValues = new ValidateDateFormatExpectedValues();
                }
                return this.mValidateDateFormatExpectedValues;
            }
        }
        
        public virtual ValidateDateFormatIsNotEnabledExpectedValues ValidateDateFormatIsNotEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateDateFormatIsNotEnabledExpectedValues == null))
                {
                    this.mValidateDateFormatIsNotEnabledExpectedValues = new ValidateDateFormatIsNotEnabledExpectedValues();
                }
                return this.mValidateDateFormatIsNotEnabledExpectedValues;
            }
        }
        
        public virtual ValidateDescriptionExpectedValues ValidateDescriptionExpectedValues
        {
            get
            {
                if ((this.mValidateDescriptionExpectedValues == null))
                {
                    this.mValidateDescriptionExpectedValues = new ValidateDescriptionExpectedValues();
                }
                return this.mValidateDescriptionExpectedValues;
            }
        }
        
        public virtual ValidateDisplayNameExpectedValues ValidateDisplayNameExpectedValues
        {
            get
            {
                if ((this.mValidateDisplayNameExpectedValues == null))
                {
                    this.mValidateDisplayNameExpectedValues = new ValidateDisplayNameExpectedValues();
                }
                return this.mValidateDisplayNameExpectedValues;
            }
        }
        
        public virtual ValidateDisplayOrderExpectedValues ValidateDisplayOrderExpectedValues
        {
            get
            {
                if ((this.mValidateDisplayOrderExpectedValues == null))
                {
                    this.mValidateDisplayOrderExpectedValues = new ValidateDisplayOrderExpectedValues();
                }
                return this.mValidateDisplayOrderExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateMessageExpectedValues ValidateDuplicateMessageExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateMessageExpectedValues == null))
                {
                    this.mValidateDuplicateMessageExpectedValues = new ValidateDuplicateMessageExpectedValues();
                }
                return this.mValidateDuplicateMessageExpectedValues;
            }
        }
        
        public virtual ValidateGroupExpectedValues ValidateGroupExpectedValues
        {
            get
            {
                if ((this.mValidateGroupExpectedValues == null))
                {
                    this.mValidateGroupExpectedValues = new ValidateGroupExpectedValues();
                }
                return this.mValidateGroupExpectedValues;
            }
        }
        
        public virtual ValidateHyperlinkPathExpectedValues ValidateHyperlinkPathExpectedValues
        {
            get
            {
                if ((this.mValidateHyperlinkPathExpectedValues == null))
                {
                    this.mValidateHyperlinkPathExpectedValues = new ValidateHyperlinkPathExpectedValues();
                }
                return this.mValidateHyperlinkPathExpectedValues;
            }
        }
        
        public virtual ValidateHyperlinkTextExpectedValues ValidateHyperlinkTextExpectedValues
        {
            get
            {
                if ((this.mValidateHyperlinkTextExpectedValues == null))
                {
                    this.mValidateHyperlinkTextExpectedValues = new ValidateHyperlinkTextExpectedValues();
                }
                return this.mValidateHyperlinkTextExpectedValues;
            }
        }
        
        public virtual ValidateItemSpecificExpectedValues ValidateItemSpecificExpectedValues
        {
            get
            {
                if ((this.mValidateItemSpecificExpectedValues == null))
                {
                    this.mValidateItemSpecificExpectedValues = new ValidateItemSpecificExpectedValues();
                }
                return this.mValidateItemSpecificExpectedValues;
            }
        }
        
        public virtual ValidateItemSpecificIsEnabledExpectedValues ValidateItemSpecificIsEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateItemSpecificIsEnabledExpectedValues == null))
                {
                    this.mValidateItemSpecificIsEnabledExpectedValues = new ValidateItemSpecificIsEnabledExpectedValues();
                }
                return this.mValidateItemSpecificIsEnabledExpectedValues;
            }
        }
        
        public virtual ValidateItemSpecificIsNotEnabledExpectedValues ValidateItemSpecificIsNotEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateItemSpecificIsNotEnabledExpectedValues == null))
                {
                    this.mValidateItemSpecificIsNotEnabledExpectedValues = new ValidateItemSpecificIsNotEnabledExpectedValues();
                }
                return this.mValidateItemSpecificIsNotEnabledExpectedValues;
            }
        }
        
        public virtual ValidateItemSpecificIsTickedExpectedValues ValidateItemSpecificIsTickedExpectedValues
        {
            get
            {
                if ((this.mValidateItemSpecificIsTickedExpectedValues == null))
                {
                    this.mValidateItemSpecificIsTickedExpectedValues = new ValidateItemSpecificIsTickedExpectedValues();
                }
                return this.mValidateItemSpecificIsTickedExpectedValues;
            }
        }
        
        public virtual ValidateLargeTextFormatExpectedValues ValidateLargeTextFormatExpectedValues
        {
            get
            {
                if ((this.mValidateLargeTextFormatExpectedValues == null))
                {
                    this.mValidateLargeTextFormatExpectedValues = new ValidateLargeTextFormatExpectedValues();
                }
                return this.mValidateLargeTextFormatExpectedValues;
            }
        }
        
        public virtual ValidateLargeTextMaximumLengthExpectedValues ValidateLargeTextMaximumLengthExpectedValues
        {
            get
            {
                if ((this.mValidateLargeTextMaximumLengthExpectedValues == null))
                {
                    this.mValidateLargeTextMaximumLengthExpectedValues = new ValidateLargeTextMaximumLengthExpectedValues();
                }
                return this.mValidateLargeTextMaximumLengthExpectedValues;
            }
        }
        
        public virtual ValidateListItemsExpectedValues ValidateListItemsExpectedValues
        {
            get
            {
                if ((this.mValidateListItemsExpectedValues == null))
                {
                    this.mValidateListItemsExpectedValues = new ValidateListItemsExpectedValues();
                }
                return this.mValidateListItemsExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryExpectedValues ValidateMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryExpectedValues == null))
                {
                    this.mValidateMandatoryExpectedValues = new ValidateMandatoryExpectedValues();
                }
                return this.mValidateMandatoryExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryIsEnabledExpectedValues ValidateMandatoryIsEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryIsEnabledExpectedValues == null))
                {
                    this.mValidateMandatoryIsEnabledExpectedValues = new ValidateMandatoryIsEnabledExpectedValues();
                }
                return this.mValidateMandatoryIsEnabledExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryIsNotEnabledExpectedValues ValidateMandatoryIsNotEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryIsNotEnabledExpectedValues == null))
                {
                    this.mValidateMandatoryIsNotEnabledExpectedValues = new ValidateMandatoryIsNotEnabledExpectedValues();
                }
                return this.mValidateMandatoryIsNotEnabledExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryIsTickedExpectedValues ValidateMandatoryIsTickedExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryIsTickedExpectedValues == null))
                {
                    this.mValidateMandatoryIsTickedExpectedValues = new ValidateMandatoryIsTickedExpectedValues();
                }
                return this.mValidateMandatoryIsTickedExpectedValues;
            }
        }
        
        public virtual ValidateMaximumLengthExpectedValues ValidateMaximumLengthExpectedValues
        {
            get
            {
                if ((this.mValidateMaximumLengthExpectedValues == null))
                {
                    this.mValidateMaximumLengthExpectedValues = new ValidateMaximumLengthExpectedValues();
                }
                return this.mValidateMaximumLengthExpectedValues;
            }
        }
        
        public virtual ValidateModalMessageExpectedValues ValidateModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateModalMessageExpectedValues == null))
                {
                    this.mValidateModalMessageExpectedValues = new ValidateModalMessageExpectedValues();
                }
                return this.mValidateModalMessageExpectedValues;
            }
        }
        
        public virtual ValidatePrecisioExpectedValues ValidatePrecisioExpectedValues
        {
            get
            {
                if ((this.mValidatePrecisioExpectedValues == null))
                {
                    this.mValidatePrecisioExpectedValues = new ValidatePrecisioExpectedValues();
                }
                return this.mValidatePrecisioExpectedValues;
            }
        }
        
        public virtual ValidatePrecisionIsNotEnabledExpectedValues ValidatePrecisionIsNotEnabledExpectedValues
        {
            get
            {
                if ((this.mValidatePrecisionIsNotEnabledExpectedValues == null))
                {
                    this.mValidatePrecisionIsNotEnabledExpectedValues = new ValidatePrecisionIsNotEnabledExpectedValues();
                }
                return this.mValidatePrecisionIsNotEnabledExpectedValues;
            }
        }
        
        public virtual ValidateRelatedTableExpectedValues ValidateRelatedTableExpectedValues
        {
            get
            {
                if ((this.mValidateRelatedTableExpectedValues == null))
                {
                    this.mValidateRelatedTableExpectedValues = new ValidateRelatedTableExpectedValues();
                }
                return this.mValidateRelatedTableExpectedValues;
            }
        }
        
        public virtual ValidateRelatedTableIsNotEnabledExpectedValues ValidateRelatedTableIsNotEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateRelatedTableIsNotEnabledExpectedValues == null))
                {
                    this.mValidateRelatedTableIsNotEnabledExpectedValues = new ValidateRelatedTableIsNotEnabledExpectedValues();
                }
                return this.mValidateRelatedTableIsNotEnabledExpectedValues;
            }
        }
        
        public virtual ValidateSelectedTypeExpectedValues ValidateSelectedTypeExpectedValues
        {
            get
            {
                if ((this.mValidateSelectedTypeExpectedValues == null))
                {
                    this.mValidateSelectedTypeExpectedValues = new ValidateSelectedTypeExpectedValues();
                }
                return this.mValidateSelectedTypeExpectedValues;
            }
        }
        
        public virtual ValidateTextFormatExpectedValues ValidateTextFormatExpectedValues
        {
            get
            {
                if ((this.mValidateTextFormatExpectedValues == null))
                {
                    this.mValidateTextFormatExpectedValues = new ValidateTextFormatExpectedValues();
                }
                return this.mValidateTextFormatExpectedValues;
            }
        }
        
        public virtual ValidateTextLengthExpectedValues ValidateTextLengthExpectedValues
        {
            get
            {
                if ((this.mValidateTextLengthExpectedValues == null))
                {
                    this.mValidateTextLengthExpectedValues = new ValidateTextLengthExpectedValues();
                }
                return this.mValidateTextLengthExpectedValues;
            }
        }
        
        public virtual ValidateThereAreNoListItemsExpectedValues ValidateThereAreNoListItemsExpectedValues
        {
            get
            {
                if ((this.mValidateThereAreNoListItemsExpectedValues == null))
                {
                    this.mValidateThereAreNoListItemsExpectedValues = new ValidateThereAreNoListItemsExpectedValues();
                }
                return this.mValidateThereAreNoListItemsExpectedValues;
            }
        }
        
        public virtual ValidateTooltipExpectedValues ValidateTooltipExpectedValues
        {
            get
            {
                if ((this.mValidateTooltipExpectedValues == null))
                {
                    this.mValidateTooltipExpectedValues = new ValidateTooltipExpectedValues();
                }
                return this.mValidateTooltipExpectedValues;
            }
        }
        
        public virtual ValidateTypeEnabledExpectedValues ValidateTypeEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateTypeEnabledExpectedValues == null))
                {
                    this.mValidateTypeEnabledExpectedValues = new ValidateTypeEnabledExpectedValues();
                }
                return this.mValidateTypeEnabledExpectedValues;
            }
        }
        
        public virtual ValidateYesNoDefaultValueExpectedValues ValidateYesNoDefaultValueExpectedValues
        {
            get
            {
                if ((this.mValidateYesNoDefaultValueExpectedValues == null))
                {
                    this.mValidateYesNoDefaultValueExpectedValues = new ValidateYesNoDefaultValueExpectedValues();
                }
                return this.mValidateYesNoDefaultValueExpectedValues;
            }
        }
        
        public UIUserDefinedFieldsWinWindow UIUserDefinedFieldsWinWindow
        {
            get
            {
                if ((this.mUIUserDefinedFieldsWinWindow == null))
                {
                    this.mUIUserDefinedFieldsWinWindow = new UIUserDefinedFieldsWinWindow();
                }
                return this.mUIUserDefinedFieldsWinWindow;
            }
        }
        
        public UIUserdefinedFieldNewWWindow UIUserdefinedFieldNewWWindow
        {
            get
            {
                if ((this.mUIUserdefinedFieldNewWWindow == null))
                {
                    this.mUIUserdefinedFieldNewWWindow = new UIUserdefinedFieldNewWWindow();
                }
                return this.mUIUserdefinedFieldNewWWindow;
            }
        }
        
        public UIUserdefinedFieldtestWindow UIUserdefinedFieldtestWindow
        {
            get
            {
                if ((this.mUIUserdefinedFieldtestWindow == null))
                {
                    this.mUIUserdefinedFieldtestWindow = new UIUserdefinedFieldtestWindow();
                }
                return this.mUIUserdefinedFieldtestWindow;
            }
        }
        
        public UIUserdefinedField__teWindow UIUserdefinedField__teWindow
        {
            get
            {
                if ((this.mUIUserdefinedField__teWindow == null))
                {
                    this.mUIUserdefinedField__teWindow = new UIUserdefinedField__teWindow();
                }
                return this.mUIUserdefinedField__teWindow;
            }
        }
        
        public UIUserdefinedField__liWindow UIUserdefinedField__liWindow
        {
            get
            {
                if ((this.mUIUserdefinedField__liWindow == null))
                {
                    this.mUIUserdefinedField__liWindow = new UIUserdefinedField__liWindow();
                }
                return this.mUIUserdefinedField__liWindow;
            }
        }
        
        public UIUserdefinedField__CoWindow UIUserdefinedField__CoWindow
        {
            get
            {
                if ((this.mUIUserdefinedField__CoWindow == null))
                {
                    this.mUIUserdefinedField__CoWindow = new UIUserdefinedField__CoWindow();
                }
                return this.mUIUserdefinedField__CoWindow;
            }
        }
        
        public UIUserdefinedField__CoWindow1 UIUserdefinedField__CoWindow1
        {
            get
            {
                if ((this.mUIUserdefinedField__CoWindow1 == null))
                {
                    this.mUIUserdefinedField__CoWindow1 = new UIUserdefinedField__CoWindow1();
                }
                return this.mUIUserdefinedField__CoWindow1;
            }
        }
        
        public UIUserdefinedField__CoWindow2 UIUserdefinedField__CoWindow2
        {
            get
            {
                if ((this.mUIUserdefinedField__CoWindow2 == null))
                {
                    this.mUIUserdefinedField__CoWindow2 = new UIUserdefinedField__CoWindow2();
                }
                return this.mUIUserdefinedField__CoWindow2;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIAddEditUserDefinedFiWindow UIAddEditUserDefinedFiWindow
        {
            get
            {
                if ((this.mUIAddEditUserDefinedFiWindow == null))
                {
                    this.mUIAddEditUserDefinedFiWindow = new UIAddEditUserDefinedFiWindow();
                }
                return this.mUIAddEditUserDefinedFiWindow;
            }
        }
        
        public UIUserdefinedFieldsWinWindow1 UIUserdefinedFieldsWinWindow1
        {
            get
            {
                if ((this.mUIUserdefinedFieldsWinWindow1 == null))
                {
                    this.mUIUserdefinedFieldsWinWindow1 = new UIUserdefinedFieldsWinWindow1();
                }
                return this.mUIUserdefinedFieldsWinWindow1;
            }
        }
        #endregion
        
        #region Fields
        private EditFirstListItemParams mEditFirstListItemParams;
        
        private EnterDescriptionParams mEnterDescriptionParams;
        
        private EnterDisplayNameParams mEnterDisplayNameParams;
        
        private EnterHyperlinkPathParams mEnterHyperlinkPathParams;
        
        private EnterHyperlinkTextParams mEnterHyperlinkTextParams;
        
        private EnterItemNameParams mEnterItemNameParams;
        
        private EnterLargeTextMaximumLengthParams mEnterLargeTextMaximumLengthParams;
        
        private EnterListItemNameParams mEnterListItemNameParams;
        
        private EnterMaximumLengthParams mEnterMaximumLengthParams;
        
        private EnterPrecisionParams mEnterPrecisionParams;
        
        private EnterTooltipParams mEnterTooltipParams;
        
        private EnterYesNoDefaultParams mEnterYesNoDefaultParams;
        
        private SelectAndPressEditForFirstItemParams mSelectAndPressEditForFirstItemParams;
        
        private SelectAppliesToParams mSelectAppliesToParams;
        
        private SelectDateFormatParams mSelectDateFormatParams;
        
        private SelectDefaultValueParams mSelectDefaultValueParams;
        
        private SelectFormatParams mSelectFormatParams;
        
        private SelectGroupParams mSelectGroupParams;
        
        private SelectItemSpecificParams mSelectItemSpecificParams;
        
        private SelectLargeTextFormatParams mSelectLargeTextFormatParams;
        
        private SelectMandatoryParams mSelectMandatoryParams;
        
        private SelectRelatedTableParams mSelectRelatedTableParams;
        
        private SelectTextFormatParams mSelectTextFormatParams;
        
        private SelectTypeParams mSelectTypeParams;
        
        private TickAllowSearchParams mTickAllowSearchParams;
        
        private TickItemSpecificParams mTickItemSpecificParams;
        
        private TickMandatoryParams mTickMandatoryParams;
        
        private UnTickAllowSearchParams mUnTickAllowSearchParams;
        
        private UnTickItemSpecificParams mUnTickItemSpecificParams;
        
        private UnTickMandatoryParams mUnTickMandatoryParams;
        
        private ValidateAddUDFExpectedValues mValidateAddUDFExpectedValues;
        
        private ValidateAllowSearchExpectedValues mValidateAllowSearchExpectedValues;
        
        private ValidateAppliesToExpectedValues mValidateAppliesToExpectedValues;
        
        private ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues mValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues;
        
        private ValidateDateFormatExpectedValues mValidateDateFormatExpectedValues;
        
        private ValidateDateFormatIsNotEnabledExpectedValues mValidateDateFormatIsNotEnabledExpectedValues;
        
        private ValidateDescriptionExpectedValues mValidateDescriptionExpectedValues;
        
        private ValidateDisplayNameExpectedValues mValidateDisplayNameExpectedValues;
        
        private ValidateDisplayOrderExpectedValues mValidateDisplayOrderExpectedValues;
        
        private ValidateDuplicateMessageExpectedValues mValidateDuplicateMessageExpectedValues;
        
        private ValidateGroupExpectedValues mValidateGroupExpectedValues;
        
        private ValidateHyperlinkPathExpectedValues mValidateHyperlinkPathExpectedValues;
        
        private ValidateHyperlinkTextExpectedValues mValidateHyperlinkTextExpectedValues;
        
        private ValidateItemSpecificExpectedValues mValidateItemSpecificExpectedValues;
        
        private ValidateItemSpecificIsEnabledExpectedValues mValidateItemSpecificIsEnabledExpectedValues;
        
        private ValidateItemSpecificIsNotEnabledExpectedValues mValidateItemSpecificIsNotEnabledExpectedValues;
        
        private ValidateItemSpecificIsTickedExpectedValues mValidateItemSpecificIsTickedExpectedValues;
        
        private ValidateLargeTextFormatExpectedValues mValidateLargeTextFormatExpectedValues;
        
        private ValidateLargeTextMaximumLengthExpectedValues mValidateLargeTextMaximumLengthExpectedValues;
        
        private ValidateListItemsExpectedValues mValidateListItemsExpectedValues;
        
        private ValidateMandatoryExpectedValues mValidateMandatoryExpectedValues;
        
        private ValidateMandatoryIsEnabledExpectedValues mValidateMandatoryIsEnabledExpectedValues;
        
        private ValidateMandatoryIsNotEnabledExpectedValues mValidateMandatoryIsNotEnabledExpectedValues;
        
        private ValidateMandatoryIsTickedExpectedValues mValidateMandatoryIsTickedExpectedValues;
        
        private ValidateMaximumLengthExpectedValues mValidateMaximumLengthExpectedValues;
        
        private ValidateModalMessageExpectedValues mValidateModalMessageExpectedValues;
        
        private ValidatePrecisioExpectedValues mValidatePrecisioExpectedValues;
        
        private ValidatePrecisionIsNotEnabledExpectedValues mValidatePrecisionIsNotEnabledExpectedValues;
        
        private ValidateRelatedTableExpectedValues mValidateRelatedTableExpectedValues;
        
        private ValidateRelatedTableIsNotEnabledExpectedValues mValidateRelatedTableIsNotEnabledExpectedValues;
        
        private ValidateSelectedTypeExpectedValues mValidateSelectedTypeExpectedValues;
        
        private ValidateTextFormatExpectedValues mValidateTextFormatExpectedValues;
        
        private ValidateTextLengthExpectedValues mValidateTextLengthExpectedValues;
        
        private ValidateThereAreNoListItemsExpectedValues mValidateThereAreNoListItemsExpectedValues;
        
        private ValidateTooltipExpectedValues mValidateTooltipExpectedValues;
        
        private ValidateTypeEnabledExpectedValues mValidateTypeEnabledExpectedValues;
        
        private ValidateYesNoDefaultValueExpectedValues mValidateYesNoDefaultValueExpectedValues;
        
        private UIUserDefinedFieldsWinWindow mUIUserDefinedFieldsWinWindow;
        
        private UIUserdefinedFieldNewWWindow mUIUserdefinedFieldNewWWindow;
        
        private UIUserdefinedFieldtestWindow mUIUserdefinedFieldtestWindow;
        
        private UIUserdefinedField__teWindow mUIUserdefinedField__teWindow;
        
        private UIUserdefinedField__liWindow mUIUserdefinedField__liWindow;
        
        private UIUserdefinedField__CoWindow mUIUserdefinedField__CoWindow;
        
        private UIUserdefinedField__CoWindow1 mUIUserdefinedField__CoWindow1;
        
        private UIUserdefinedField__CoWindow2 mUIUserdefinedField__CoWindow2;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIAddEditUserDefinedFiWindow mUIAddEditUserDefinedFiWindow;
        
        private UIUserdefinedFieldsWinWindow1 mUIUserdefinedFieldsWinWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditFirstListItem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EditFirstListItemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Item 1' in 'ctl00$contentmain$lstitems' list box
        /// </summary>
        public string UICtl00contentmainlstiListSelectedItemsAsString = "Item 1";
        
        /// <summary>
        /// Type 'Item 4' in 'ctl00$contentmain$txtlistitem' text box
        /// </summary>
        public string UICtl00contentmaintxtlEditText = "Item 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterDescriptionParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Automatically generated UDF' in 'Description' text box
        /// </summary>
        public string UIDescriptionEditText = "Automatically generated UDF";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterDisplayName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterDisplayNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Auto UDF' in 'Display Name*' text box
        /// </summary>
        public string UIDisplayNameEditText = "__Auto UDF";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterHyperlinkPath'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterHyperlinkPathParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'http://www.google.co.uk' in 'ctl00$contentmain$txtHyperlinkPath' text box
        /// </summary>
        public string UICtl00contentmaintxtHEdit1Text = "http://www.google.co.uk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterHyperlinkText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterHyperlinkTextParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Google' in 'ctl00$contentmain$txtHyperlinkText' text box
        /// </summary>
        public string UICtl00contentmaintxtHEdit2Text = "Google";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterItemName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterItemNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test Item' in 'ctl00$contentmain$txtlistitem' text box
        /// </summary>
        public string UICtl00contentmaintxtlEditText = "Test Item";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterLargeTextMaximumLength'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterLargeTextMaximumLengthParams
    {
        
        #region Fields
        /// <summary>
        /// Type '100' in 'ctl00$contentmain$txtmaxlengthlarge' text box
        /// </summary>
        public string UICtl00contentmaintxtmEdit1Text = "100";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterListItemName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterListItemNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Item 1' in 'ctl00$contentmain$txtlistitem' text box
        /// </summary>
        public string UICtl00contentmaintxtlEditText = "Item 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterMaximumLength'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterMaximumLengthParams
    {
        
        #region Fields
        /// <summary>
        /// Type '50' in 'ctl00$contentmain$txtmaxlength' text box
        /// </summary>
        public string UICtl00contentmaintxtmEditText = "50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterPrecision'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterPrecisionParams
    {
        
        #region Fields
        /// <summary>
        /// Type '2' in 'ctl00$contentmain$txtprecision' text box
        /// </summary>
        public string UICtl00contentmaintxtpEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterTooltip'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterTooltipParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Automatically generated UDF Tooltip' in 'Tooltip' text box
        /// </summary>
        public string UITooltipEditText = "Automatically generated UDF Tooltip";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterYesNoDefault'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterYesNoDefaultParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Yes' in 'ctl00$contentmain$cmbdefaultvalue' combo box
        /// </summary>
        public string UICtl00contentmaincmbdComboBoxSelectedItem = "Yes";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAndPressEditForFirstItem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectAndPressEditForFirstItemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Test Item 1' in 'ctl00$contentmain$lstitems' list box
        /// </summary>
        public string UICtl00contentmainlstiListSelectedItemsAsString = "Test Item 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAppliesTo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectAppliesToParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Contract Details' in 'Applies To*' combo box
        /// </summary>
        public string UIAppliesToComboBoxSelectedItem = "Contract Details";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDateFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectDateFormatParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Date Only' in 'ctl00$contentmain$cmbdateformat' combo box
        /// </summary>
        public string UICtl00contentmaincmbdComboBox1SelectedItem = "Date Only";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDefaultValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectDefaultValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'No' in 'ctl00$contentmain$cmbdefaultvalue' combo box
        /// </summary>
        public string UICtl00contentmaincmbdComboBoxSelectedItem = "No";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectFormatParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Single Line' in 'ctl00$contentmain$cmbtextformat' combo box
        /// </summary>
        public string UICtl00contentmaincmbtComboBoxSelectedItem = "Single Line";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectGroup'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectGroupParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'CodedUI 2 Do Not Delete' in 'Group' combo box
        /// </summary>
        public string UIGroupComboBoxSelectedItem = "CodedUI 2 Do Not Delete";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectItemSpecific'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectItemSpecificParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Item Specific' check box
        /// </summary>
        public bool UIItemSpecificCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectLargeTextFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectLargeTextFormatParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Multiple Line' in 'ctl00$contentmain$cmbtextformatlarge' combo box
        /// </summary>
        public string UICtl00contentmaincmbtComboBox1SelectedItem = "Multiple Line";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectMandatoryParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Mandatory' check box
        /// </summary>
        public bool UIMandatoryCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectRelatedTable'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectRelatedTableParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Budget Holders' in 'Related Table*' combo box
        /// </summary>
        public string UIRelatedTableComboBoxSelectedItem = "Budget Holders";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectTextFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectTextFormatParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Single Line' in 'ctl00$contentmain$cmbtextformat' combo box
        /// </summary>
        public string UICtl00contentmaincmbtComboBoxSelectedItem = "Single Line";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SelectTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Text' in 'Type' combo box
        /// </summary>
        public string UITypeComboBoxSelectedItem = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TickAllowSearch'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TickAllowSearchParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Allow Search?' check box
        /// </summary>
        public bool UIAllowSearchCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TickItemSpecific'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TickItemSpecificParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Item Specific' check box
        /// </summary>
        public bool UIItemSpecificCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TickMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TickMandatoryParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Mandatory' check box
        /// </summary>
        public bool UIMandatoryCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnTickAllowSearch'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UnTickAllowSearchParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Allow Search?' check box
        /// </summary>
        public bool UIAllowSearchCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnTickItemSpecific'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UnTickItemSpecificParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Item Specific' check box
        /// </summary>
        public bool UIItemSpecificCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnTickMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UnTickMandatoryParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Mandatory' check box
        /// </summary>
        public bool UIMandatoryCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddUDF'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateAddUDFExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '__UDF Test Cars' cell equals '__UDF Test Cars'
        /// </summary>
        public string UI__UDFTestCarsCellInnerText = "__UDF Test Cars";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAllowSearch'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateAllowSearchExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Allow Search?' check box equals 'False'
        /// </summary>
        public bool UIAllowSearchCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAppliesTo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateAppliesToExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Applies To*' combo box equals 'Contract Details'
        /// </summary>
        public string UIAppliesToComboBoxSelectedItem = "Contract Details";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateCannotDeleteDeleteUDFWhenInUseByViewModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Userdefined field cannot be deleted as it is curre...' label equals 'Userdefined field cannot be deleted as it is currently in use on a GreenLight View.'
        /// </summary>
        public string UIUserdefinedfieldcannTextName = "Userdefined field cannot be deleted as it is currently in use on a GreenLight Vie" +
            "w.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDateFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDateFormatExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbdateformat' combo box equals 'Date Only'
        /// </summary>
        public string UICtl00contentmaincmbdComboBox1SelectedItem = "Date Only";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDateFormatIsNotEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDateFormatIsNotEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'ctl00$contentmain$cmbdateformat' combo box equals 'False'
        /// </summary>
        public bool UICtl00contentmaincmbdComboBoxEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDescriptionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Description' text box equals 'Auto UDF Description'
        /// </summary>
        public string UIDescriptionEditText = "Auto UDF Description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDisplayName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDisplayNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Display Name*' text box equals '__Auto UDF'
        /// </summary>
        public string UIDisplayNameEditText = "__Auto UDF";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDisplayOrder'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDisplayOrderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Display Order' text box equals ''
        /// </summary>
        public string UIDisplayOrderEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateDuplicateMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Message from webpage' window equals 'True'
        /// </summary>
        public bool UIMessagefromwebpageWindowExists = true;
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Userdefined field already exists' label equals 'Userdefined field already exists'
        /// </summary>
        public string UIUserdefinedfieldalreTextDisplayText = "Userdefined field already exists";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateGroup'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateGroupExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Group' combo box equals 'CodedUI 2 Do Not Delete'
        /// </summary>
        public string UIGroupComboBoxSelectedItem = "CodedUI 2 Do Not Delete";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateHyperlinkPath'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateHyperlinkPathExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtHyperlinkPath' text box equals 'http://www.google.co.uk'
        /// </summary>
        public string UICtl00contentmaintxtHEdit3Text = "http://www.google.co.uk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateHyperlinkText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateHyperlinkTextExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtHyperlinkText' text box equals 'Google'
        /// </summary>
        public string UICtl00contentmaintxtHEdit2Text = "Google";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateItemSpecific'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateItemSpecificExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Item Specific' check box equals 'False'
        /// </summary>
        public bool UIItemSpecificCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateItemSpecificIsEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateItemSpecificIsEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Item Specific' check box equals 'True'
        /// </summary>
        public bool UIItemSpecificCheckBox1Enabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateItemSpecificIsNotEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateItemSpecificIsNotEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Item Specific' check box equals 'False'
        /// </summary>
        public bool UIItemSpecificCheckBox1Enabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateItemSpecificIsTicked'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateItemSpecificIsTickedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Item Specific' check box equals 'True'
        /// </summary>
        public bool UIItemSpecificCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLargeTextFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateLargeTextFormatExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbtextformatlarge' combo box equals 'Multiple Line'
        /// </summary>
        public string UICtl00contentmaincmbtComboBox1SelectedItem = "Multiple Line";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLargeTextMaximumLength'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateLargeTextMaximumLengthExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlengthlarge' text box equals '100'
        /// </summary>
        public string UICtl00contentmaintxtmEdit1Text = "100";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateListItems'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateListItemsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00$contentmain$lstitems' list box equals 'Item 1Item 2Item 3'
        /// </summary>
        public string UICtl00contentmainlstiListInnerText = "Item 1Item 2Item 3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Mandatory' check box equals 'False'
        /// </summary>
        public bool UIMandatoryCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryIsEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateMandatoryIsEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Mandatory' check box equals 'True'
        /// </summary>
        public bool UIMandatoryCheckBoxEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryIsNotEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateMandatoryIsNotEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Mandatory' check box equals 'False'
        /// </summary>
        public bool UIMandatoryCheckBoxEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryIsTicked'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateMandatoryIsTickedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Mandatory' check box equals 'True'
        /// </summary>
        public bool UIMandatoryCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMaximumLength'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateMaximumLengthExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlength' text box equals '50'
        /// </summary>
        public string UICtl00contentmaintxtmEdit2Text = "50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Userdefined field cannot be deleted as it is currently in use on a GreenLight View.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneDisplayText = "Message from Expenses\r\n\r\n\r\nUserdefined field cannot be deleted as it is currently" +
            " in use on a GreenLight View.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePrecisio'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidatePrecisioExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtprecision' text box equals '2'
        /// </summary>
        public string UICtl00contentmaintxtpEdit1Text = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePrecisionIsNotEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidatePrecisionIsNotEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'ctl00$contentmain$txtprecision' text box equals 'False'
        /// </summary>
        public bool UICtl00contentmaintxtpEditEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateRelatedTable'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateRelatedTableExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Related Table*' combo box equals 'Budget Holders'
        /// </summary>
        public string UIRelatedTableComboBoxSelectedItem = "Budget Holders";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateRelatedTableIsNotEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateRelatedTableIsNotEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Related Table*' combo box equals 'False'
        /// </summary>
        public bool UIRelatedTableComboBoxEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSelectedType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateSelectedTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Type' combo box equals 'Text'
        /// </summary>
        public string UITypeComboBoxSelectedItem = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextFormat'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateTextFormatExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbtextformat' combo box equals 'Single Line'
        /// </summary>
        public string UICtl00contentmaincmbtComboBoxSelectedItem = "Single Line";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextLength'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateTextLengthExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ctl00$contentmain$txtmaxlength' text box equals '50'
        /// </summary>
        public string UICtl00contentmaintxtmEditText = "50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateThereAreNoListItems'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateThereAreNoListItemsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00$contentmain$lstitems' list box equals '   '
        /// </summary>
        public string UICtl00contentmainlstiListInnerText = "   ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTooltip'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateTooltipExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Tooltip' text box equals 'Auto UDF Tooltip'
        /// </summary>
        public string UITooltipEditText = "Auto UDF Tooltip";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTypeEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateTypeEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Type' combo box equals 'False'
        /// </summary>
        public bool UITypeComboBoxEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateYesNoDefaultValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class ValidateYesNoDefaultValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ctl00$contentmain$cmbdefaultvalue' combo box equals 'No'
        /// </summary>
        public string UICtl00contentmaincmbdComboBoxSelectedItem = "No";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserDefinedFieldsWinWindow : BrowserWindow
    {
        
        public UIUserDefinedFieldsWinWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "User Defined Fields";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserDefinedFieldsDocument UIUserDefinedFieldsDocument
        {
            get
            {
                if ((this.mUIUserDefinedFieldsDocument == null))
                {
                    this.mUIUserDefinedFieldsDocument = new UIUserDefinedFieldsDocument(this);
                }
                return this.mUIUserDefinedFieldsDocument;
            }
        }
        
        public UIUserDefinedFieldsDocument1 UIUserDefinedFieldsDocument1
        {
            get
            {
                if ((this.mUIUserDefinedFieldsDocument1 == null))
                {
                    this.mUIUserDefinedFieldsDocument1 = new UIUserDefinedFieldsDocument1(this);
                }
                return this.mUIUserDefinedFieldsDocument1;
            }
        }
        
        public UIUserDefinedFieldsDocument2 UIUserDefinedFieldsDocument2
        {
            get
            {
                if ((this.mUIUserDefinedFieldsDocument2 == null))
                {
                    this.mUIUserDefinedFieldsDocument2 = new UIUserDefinedFieldsDocument2(this);
                }
                return this.mUIUserDefinedFieldsDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIUserDefinedFieldsDocument mUIUserDefinedFieldsDocument;
        
        private UIUserDefinedFieldsDocument1 mUIUserDefinedFieldsDocument1;
        
        private UIUserDefinedFieldsDocument2 mUIUserDefinedFieldsDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserDefinedFieldsDocument : HtmlDocument
    {
        
        public UIUserDefinedFieldsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "User Defined Fields";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/adminuserdefined.aspx";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public UISubmenuPane UISubmenuPane
        {
            get
            {
                if ((this.mUISubmenuPane == null))
                {
                    this.mUISubmenuPane = new UISubmenuPane(this);
                }
                return this.mUISubmenuPane;
            }
        }
        
        public UITbl_gridFieldsTable UITbl_gridFieldsTable
        {
            get
            {
                if ((this.mUITbl_gridFieldsTable == null))
                {
                    this.mUITbl_gridFieldsTable = new UITbl_gridFieldsTable(this);
                }
                return this.mUITbl_gridFieldsTable;
            }
        }
        
        public UITbl_gridFields_84Row UITbl_gridFields_84Row
        {
            get
            {
                if ((this.mUITbl_gridFields_84Row == null))
                {
                    this.mUITbl_gridFields_84Row = new UITbl_gridFields_84Row(this);
                }
                return this.mUITbl_gridFields_84Row;
            }
        }
        
        public UITbl_gridFields_158Row UITbl_gridFields_158Row
        {
            get
            {
                if ((this.mUITbl_gridFields_158Row == null))
                {
                    this.mUITbl_gridFields_158Row = new UITbl_gridFields_158Row(this);
                }
                return this.mUITbl_gridFields_158Row;
            }
        }
        #endregion
        
        #region Fields
        private UISubmenuPane mUISubmenuPane;
        
        private UITbl_gridFieldsTable mUITbl_gridFieldsTable;
        
        private UITbl_gridFields_84Row mUITbl_gridFields_84Row;
        
        private UITbl_gridFields_158Row mUITbl_gridFields_158Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISubmenuPane : HtmlDiv
    {
        
        public UISubmenuPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nAdd User Defined Field \r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddUserDefinedFieldHyperlink
        {
            get
            {
                if ((this.mUIAddUserDefinedFieldHyperlink == null))
                {
                    this.mUIAddUserDefinedFieldHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddUserDefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddUserDefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddUserDefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddUserDefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add User Defined Field";
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx";
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aeuserdefined.as";
                    this.mUIAddUserDefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddUserDefinedFieldHyperlink.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUIAddUserDefinedFieldHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddUserDefinedFieldHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFieldsTable : HtmlTable
    {
        
        public UITbl_gridFieldsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display Name DescriptionField TypeMandat";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlCell UITestCell
        {
            get
            {
                if ((this.mUITestCell == null))
                {
                    this.mUITestCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITestCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITestCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITestCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "test";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUITestCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
                    this.mUITestCell.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUITestCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUITestCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFields_84Row : HtmlRow
    {
        
        public UITbl_gridFields_84Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridFields_84";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "testtestText";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridFields_84";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFields_158Row : HtmlRow
    {
        
        public UITbl_gridFields_158Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridFields_158";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Contract Details Text Single LinetestT";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridFields_158";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserDefinedFieldsDocument1 : HtmlDocument
    {
        
        public UIUserDefinedFieldsDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "User Defined Fields";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminuserdefined.aspx";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public UITbl_gridFieldsTable1 UITbl_gridFieldsTable
        {
            get
            {
                if ((this.mUITbl_gridFieldsTable == null))
                {
                    this.mUITbl_gridFieldsTable = new UITbl_gridFieldsTable1(this);
                }
                return this.mUITbl_gridFieldsTable;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridFieldsTable1 mUITbl_gridFieldsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFieldsTable1 : HtmlTable
    {
        
        public UITbl_gridFieldsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display Name DescriptionField TypeMandat";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "20";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlCell UI__UDFTestCarsCell
        {
            get
            {
                if ((this.mUI__UDFTestCarsCell == null))
                {
                    this.mUI__UDFTestCarsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__UDFTestCarsCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__UDFTestCarsCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__UDFTestCarsCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__UDF Test Cars";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__UDFTestCarsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
                    this.mUI__UDFTestCarsCell.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUI__UDFTestCarsCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUI__UDFTestCarsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserDefinedFieldsDocument2 : HtmlDocument
    {
        
        public UIUserDefinedFieldsDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "User Defined Fields";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/adminuserdefined.aspx";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public UITbl_gridFields_326Row UITbl_gridFields_326Row
        {
            get
            {
                if ((this.mUITbl_gridFields_326Row == null))
                {
                    this.mUITbl_gridFields_326Row = new UITbl_gridFields_326Row(this);
                }
                return this.mUITbl_gridFields_326Row;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridFields_326Row mUITbl_gridFields_326Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFields_326Row : HtmlRow
    {
        
        public UITbl_gridFields_326Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridFields_326";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Auto UDFAutomatically generated UDFTex";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridFields_326";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("User Defined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteUserdefined(326);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteUserdefined(326);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("User Defined Fields");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldNewWWindow : BrowserWindow
    {
        
        public UIUserdefinedFieldNewWWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: New";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedFieldNewDocument UIUserdefinedFieldNewDocument
        {
            get
            {
                if ((this.mUIUserdefinedFieldNewDocument == null))
                {
                    this.mUIUserdefinedFieldNewDocument = new UIUserdefinedFieldNewDocument(this);
                }
                return this.mUIUserdefinedFieldNewDocument;
            }
        }
        
        public UIUserdefinedFieldNewDocument1 UIUserdefinedFieldNewDocument1
        {
            get
            {
                if ((this.mUIUserdefinedFieldNewDocument1 == null))
                {
                    this.mUIUserdefinedFieldNewDocument1 = new UIUserdefinedFieldNewDocument1(this);
                }
                return this.mUIUserdefinedFieldNewDocument1;
            }
        }
        
        public UIUserdefinedFieldNewDocument2 UIUserdefinedFieldNewDocument2
        {
            get
            {
                if ((this.mUIUserdefinedFieldNewDocument2 == null))
                {
                    this.mUIUserdefinedFieldNewDocument2 = new UIUserdefinedFieldNewDocument2(this);
                }
                return this.mUIUserdefinedFieldNewDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedFieldNewDocument mUIUserdefinedFieldNewDocument;
        
        private UIUserdefinedFieldNewDocument1 mUIUserdefinedFieldNewDocument1;
        
        private UIUserdefinedFieldNewDocument2 mUIUserdefinedFieldNewDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldNewDocument : HtmlDocument
    {
        
        public UIUserdefinedFieldNewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIDisplayNameEdit
        {
            get
            {
                if ((this.mUIDisplayNameEdit == null))
                {
                    this.mUIDisplayNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributename";
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributename";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Display Name*";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributename cl";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIDisplayNameEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIDisplayNameEdit;
            }
        }
        
        public HtmlTextArea UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributedescription";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributedescription";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributedescrip";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDescriptionEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public HtmlTextArea UITooltipEdit
        {
            get
            {
                if ((this.mUITooltipEdit == null))
                {
                    this.mUITooltipEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUITooltipEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributetooltip";
                    this.mUITooltipEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributetooltip";
                    this.mUITooltipEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Tooltip";
                    this.mUITooltipEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITooltipEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITooltipEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributetooltip";
                    this.mUITooltipEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITooltipEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUITooltipEdit;
            }
        }
        
        public HtmlComboBox UIGroupComboBox
        {
            get
            {
                if ((this.mUIGroupComboBox == null))
                {
                    this.mUIGroupComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlstgroup";
                    this.mUIGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlstgroup";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Group";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "1";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlstgroup class=fi";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUIGroupComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIGroupComboBox;
            }
        }
        
        public HtmlComboBox UITypeComboBox
        {
            get
            {
                if ((this.mUITypeComboBox == null))
                {
                    this.mUITypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbattributetype";
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbattributetype";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Type";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "11";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbattributetype cl";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUITypeComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUITypeComboBox;
            }
        }
        
        public HtmlComboBox UICtl00contentmaincmbtComboBox
        {
            get
            {
                if ((this.mUICtl00contentmaincmbtComboBox == null))
                {
                    this.mUICtl00contentmaincmbtComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbtComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbtextformat";
                    this.mUICtl00contentmaincmbtComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbtextformat";
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbtextformat name=";
                    this.mUICtl00contentmaincmbtComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUICtl00contentmaincmbtComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmbtComboBox;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtmEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtmEdit == null))
                {
                    this.mUICtl00contentmaintxtmEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtmEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmaxlength type=t";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmaintxtmEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtmEdit;
            }
        }
        
        public HtmlCheckBox UIAllowSearchCheckBox
        {
            get
            {
                if ((this.mUIAllowSearchCheckBox == null))
                {
                    this.mUIAllowSearchCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIAllowSearchCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkallowsearch";
                    this.mUIAllowSearchCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkallowsearch";
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow Search?";
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkallowsearch type";
                    this.mUIAllowSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "9";
                    this.mUIAllowSearchCheckBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIAllowSearchCheckBox;
            }
        }
        
        public HtmlCheckBox UIMandatoryCheckBox
        {
            get
            {
                if ((this.mUIMandatoryCheckBox == null))
                {
                    this.mUIMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkattributemandatory";
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkattributemandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkattributemandato";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUIMandatoryCheckBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIMandatoryCheckBox;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtpEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtpEdit == null))
                {
                    this.mUICtl00contentmaintxtpEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtpEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtprecision";
                    this.mUICtl00contentmaintxtpEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtprecision";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtprecision maxLen";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUICtl00contentmaintxtpEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtpEdit;
            }
        }
        
        public HtmlComboBox UICtl00contentmaincmbdComboBox
        {
            get
            {
                if ((this.mUICtl00contentmaincmbdComboBox == null))
                {
                    this.mUICtl00contentmaincmbdComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdefaultvalue";
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdefaultvalue";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbdefaultvalue nam";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaincmbdComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmbdComboBox;
            }
        }
        
        public HtmlComboBox UICtl00contentmaincmbdComboBox1
        {
            get
            {
                if ((this.mUICtl00contentmaincmbdComboBox1 == null))
                {
                    this.mUICtl00contentmaincmbdComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdateformat";
                    this.mUICtl00contentmaincmbdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdateformat";
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbdateformat name=";
                    this.mUICtl00contentmaincmbdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmbdComboBox1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmbdComboBox1;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtmEdit1
        {
            get
            {
                if ((this.mUICtl00contentmaintxtmEdit1 == null))
                {
                    this.mUICtl00contentmaintxtmEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtmEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlengthlarge";
                    this.mUICtl00contentmaintxtmEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlengthlarge";
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmaxlengthlarge v";
                    this.mUICtl00contentmaintxtmEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmaintxtmEdit1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtmEdit1;
            }
        }
        
        public HtmlComboBox UICtl00contentmaincmbtComboBox1
        {
            get
            {
                if ((this.mUICtl00contentmaincmbtComboBox1 == null))
                {
                    this.mUICtl00contentmaincmbtComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbtComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbtextformatlarge";
                    this.mUICtl00contentmaincmbtComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbtextformatlarge";
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbtextformatlarge ";
                    this.mUICtl00contentmaincmbtComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "5";
                    this.mUICtl00contentmaincmbtComboBox1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmbtComboBox1;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtHEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtHEdit == null))
                {
                    this.mUICtl00contentmaintxtHEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtHEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkText";
                    this.mUICtl00contentmaintxtHEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkText";
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtHyperlinkText ma";
                    this.mUICtl00contentmaintxtHEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmaintxtHEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtHEdit;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtHEdit1
        {
            get
            {
                if ((this.mUICtl00contentmaintxtHEdit1 == null))
                {
                    this.mUICtl00contentmaintxtHEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtHEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkPath";
                    this.mUICtl00contentmaintxtHEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkPath";
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtHyperlinkPath ma";
                    this.mUICtl00contentmaintxtHEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmaintxtHEdit1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtHEdit1;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtHEdit2
        {
            get
            {
                if ((this.mUICtl00contentmaintxtHEdit2 == null))
                {
                    this.mUICtl00contentmaintxtHEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtHEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkText";
                    this.mUICtl00contentmaintxtHEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkText";
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtHyperlinkText va";
                    this.mUICtl00contentmaintxtHEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmaintxtHEdit2.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtHEdit2;
            }
        }
        
        public HtmlComboBox UIRelatedTableComboBox
        {
            get
            {
                if ((this.mUIRelatedTableComboBox == null))
                {
                    this.mUIRelatedTableComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlRelatedTable";
                    this.mUIRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlRelatedTable";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Related Table*";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "21";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlRelatedTable nam";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "9";
                    this.mUIRelatedTableComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIRelatedTableComboBox;
            }
        }
        
        public HtmlEdit UIDisplayOrderEdit
        {
            get
            {
                if ((this.mUIDisplayOrderEdit == null))
                {
                    this.mUIDisplayOrderEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDisplayOrderEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtorder";
                    this.mUIDisplayOrderEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtorder";
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Display Order";
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtorder class=fill";
                    this.mUIDisplayOrderEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIDisplayOrderEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIDisplayOrderEdit;
            }
        }
        
        public HtmlComboBox UIAppliesToComboBox
        {
            get
            {
                if ((this.mUIAppliesToComboBox == null))
                {
                    this.mUIAppliesToComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIAppliesToComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbappliesto";
                    this.mUIAppliesToComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbappliesto";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Applies To*";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "9";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbappliesto class=";
                    this.mUIAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIAppliesToComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIAppliesToComboBox;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtmEdit2
        {
            get
            {
                if ((this.mUICtl00contentmaintxtmEdit2 == null))
                {
                    this.mUICtl00contentmaintxtmEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtmEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmaxlength value=";
                    this.mUICtl00contentmaintxtmEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmaintxtmEdit2.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtmEdit2;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtpEdit1
        {
            get
            {
                if ((this.mUICtl00contentmaintxtpEdit1 == null))
                {
                    this.mUICtl00contentmaintxtpEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtpEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtprecision";
                    this.mUICtl00contentmaintxtpEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtprecision";
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtprecision value=";
                    this.mUICtl00contentmaintxtpEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUICtl00contentmaintxtpEdit1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtpEdit1;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtHEdit3
        {
            get
            {
                if ((this.mUICtl00contentmaintxtHEdit3 == null))
                {
                    this.mUICtl00contentmaintxtHEdit3 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtHEdit3.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkPath";
                    this.mUICtl00contentmaintxtHEdit3.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkPath";
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtHyperlinkPath va";
                    this.mUICtl00contentmaintxtHEdit3.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmaintxtHEdit3.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtHEdit3;
            }
        }
        
        public UIListItemsPane UIListItemsPane
        {
            get
            {
                if ((this.mUIListItemsPane == null))
                {
                    this.mUIListItemsPane = new UIListItemsPane(this);
                }
                return this.mUIListItemsPane;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdlButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdlButton == null))
                {
                    this.mUICtl00contentmaincmdlButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdlButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdlistitemcancel";
                    this.mUICtl00contentmaincmdlButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdlistitemcancel";
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdlButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdlButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "20";
                    this.mUICtl00contentmaincmdlButton.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmdlButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSaveListitem";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "6";
                    this.mUISaveImage.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtlEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtlEdit == null))
                {
                    this.mUICtl00contentmaintxtlEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=DontSubmitForm(event); id=ctl0";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "19";
                    this.mUICtl00contentmaintxtlEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtlEdit;
            }
        }
        
        public HtmlList UICtl00contentmainlstiList
        {
            get
            {
                if ((this.mUICtl00contentmainlstiList == null))
                {
                    this.mUICtl00contentmainlstiList = new HtmlList(this);
                    #region Search Criteria
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ItemCount] = "0";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lstitems size=4 nam";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainlstiList.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmainlstiList;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIDisplayNameEdit;
        
        private HtmlTextArea mUIDescriptionEdit;
        
        private HtmlTextArea mUITooltipEdit;
        
        private HtmlComboBox mUIGroupComboBox;
        
        private HtmlComboBox mUITypeComboBox;
        
        private HtmlComboBox mUICtl00contentmaincmbtComboBox;
        
        private HtmlEdit mUICtl00contentmaintxtmEdit;
        
        private HtmlCheckBox mUIAllowSearchCheckBox;
        
        private HtmlCheckBox mUIMandatoryCheckBox;
        
        private HtmlEdit mUICtl00contentmaintxtpEdit;
        
        private HtmlComboBox mUICtl00contentmaincmbdComboBox;
        
        private HtmlComboBox mUICtl00contentmaincmbdComboBox1;
        
        private HtmlEdit mUICtl00contentmaintxtmEdit1;
        
        private HtmlComboBox mUICtl00contentmaincmbtComboBox1;
        
        private HtmlEdit mUICtl00contentmaintxtHEdit;
        
        private HtmlEdit mUICtl00contentmaintxtHEdit1;
        
        private HtmlEdit mUICtl00contentmaintxtHEdit2;
        
        private HtmlComboBox mUIRelatedTableComboBox;
        
        private HtmlEdit mUIDisplayOrderEdit;
        
        private HtmlComboBox mUIAppliesToComboBox;
        
        private HtmlEdit mUICtl00contentmaintxtmEdit2;
        
        private HtmlEdit mUICtl00contentmaintxtpEdit1;
        
        private HtmlEdit mUICtl00contentmaintxtHEdit3;
        
        private UIListItemsPane mUIListItemsPane;
        
        private HtmlInputButton mUICtl00contentmaincmdlButton;
        
        private HtmlImage mUISaveImage;
        
        private HtmlEdit mUICtl00contentmaintxtlEdit;
        
        private HtmlList mUICtl00contentmainlstiList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIListItemsPane : HtmlDiv
    {
        
        public UIListItemsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divListOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "List Items \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divListOptions";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIAddListItemImage
        {
            get
            {
                if ((this.mUIAddListItemImage == null))
                {
                    this.mUIAddListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Add List Item";
                    this.mUIAddListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/plain/add2.png";
                    this.mUIAddListItemImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/16/plain/add2.png";
                    this.mUIAddListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIAddListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Add List Item\" src=\"../images/icons";
                    this.mUIAddListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIAddListItemImage.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIAddListItemImage;
            }
        }
        
        public HtmlImage UIEditListItemImage
        {
            get
            {
                if ((this.mUIEditListItemImage == null))
                {
                    this.mUIEditListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit List Item";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit List Item\" src=\"../images/icon";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIEditListItemImage.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIEditListItemImage;
            }
        }
        
        public HtmlImage UIDeleteListItemImage
        {
            get
            {
                if ((this.mUIDeleteListItemImage == null))
                {
                    this.mUIDeleteListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete List Item";
                    this.mUIDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.gif";
                    this.mUIDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/delete2.gif";
                    this.mUIDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Delete List Item\" src=\"../images/ic";
                    this.mUIDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    this.mUIDeleteListItemImage.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIDeleteListItemImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIAddListItemImage;
        
        private HtmlImage mUIEditListItemImage;
        
        private HtmlImage mUIDeleteListItemImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldNewDocument1 : HtmlDocument
    {
        
        public UIUserdefinedFieldNewDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeuserdefined.aspx";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemSpecificCheckBox
        {
            get
            {
                if ((this.mUIItemSpecificCheckBox == null))
                {
                    this.mUIItemSpecificCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemSpecificCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkspecific";
                    this.mUIItemSpecificCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkspecific";
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Item Specific";
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkspecific type=ch";
                    this.mUIItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "8";
                    this.mUIItemSpecificCheckBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIItemSpecificCheckBox;
            }
        }
        
        public HtmlCheckBox UIItemSpecificCheckBox1
        {
            get
            {
                if ((this.mUIItemSpecificCheckBox1 == null))
                {
                    this.mUIItemSpecificCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemSpecificCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkspecific";
                    this.mUIItemSpecificCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkspecific";
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Item Specific";
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkspecific disable";
                    this.mUIItemSpecificCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "8";
                    this.mUIItemSpecificCheckBox1.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIItemSpecificCheckBox1;
            }
        }
        
        public HtmlCheckBox UIMandatoryCheckBox
        {
            get
            {
                if ((this.mUIMandatoryCheckBox == null))
                {
                    this.mUIMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkattributemandatory";
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkattributemandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkattributemandato";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUIMandatoryCheckBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIMandatoryCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemSpecificCheckBox;
        
        private HtmlCheckBox mUIItemSpecificCheckBox1;
        
        private HtmlCheckBox mUIMandatoryCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldNewDocument2 : HtmlDocument
    {
        
        public UIUserdefinedFieldNewDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICtl00contentmaincmdoButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdoButton == null))
                {
                    this.mUICtl00contentmaincmdoButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdoButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmaincmdoButton.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmdoButton;
            }
        }
        
        public HtmlComboBox UICtl00contentmaincmbdComboBox
        {
            get
            {
                if ((this.mUICtl00contentmaincmbdComboBox == null))
                {
                    this.mUICtl00contentmaincmbdComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdefaultvalue";
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdefaultvalue";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbdefaultvalue nam";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaincmbdComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmbdComboBox;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtlEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtlEdit == null))
                {
                    this.mUICtl00contentmaintxtlEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=DontSubmitForm(event); id=ctl0";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "20";
                    this.mUICtl00contentmaintxtlEdit.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmaintxtlEdit;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSaveListitem";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "6";
                    this.mUISaveImage.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public HtmlList UICtl00contentmainlstiList
        {
            get
            {
                if ((this.mUICtl00contentmainlstiList == null))
                {
                    this.mUICtl00contentmainlstiList = new HtmlList(this);
                    #region Search Criteria
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lstitems tabIndex=0";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainlstiList.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUICtl00contentmainlstiList;
            }
        }
        
        public HtmlCheckBox UIMandatoryCheckBox
        {
            get
            {
                if ((this.mUIMandatoryCheckBox == null))
                {
                    this.mUIMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkattributemandatory";
                    this.mUIMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkattributemandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkattributemandato";
                    this.mUIMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUIMandatoryCheckBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIMandatoryCheckBox;
            }
        }
        
        public HtmlComboBox UIGroupComboBox
        {
            get
            {
                if ((this.mUIGroupComboBox == null))
                {
                    this.mUIGroupComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlstgroup";
                    this.mUIGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlstgroup";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Group";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlstgroup class=fi";
                    this.mUIGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUIGroupComboBox.WindowTitles.Add("Userdefined Field: New");
                    #endregion
                }
                return this.mUIGroupComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICtl00contentmaincmdoButton;
        
        private HtmlComboBox mUICtl00contentmaincmbdComboBox;
        
        private HtmlEdit mUICtl00contentmaintxtlEdit;
        
        private HtmlImage mUISaveImage;
        
        private HtmlList mUICtl00contentmainlstiList;
        
        private HtmlCheckBox mUIMandatoryCheckBox;
        
        private HtmlComboBox mUIGroupComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldtestWindow : BrowserWindow
    {
        
        public UIUserdefinedFieldtestWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: test";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: test");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedFieldtestDocument UIUserdefinedFieldtestDocument
        {
            get
            {
                if ((this.mUIUserdefinedFieldtestDocument == null))
                {
                    this.mUIUserdefinedFieldtestDocument = new UIUserdefinedFieldtestDocument(this);
                }
                return this.mUIUserdefinedFieldtestDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedFieldtestDocument mUIUserdefinedFieldtestDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldtestDocument : HtmlDocument
    {
        
        public UIUserdefinedFieldtestDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: test";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=84";
            this.WindowTitles.Add("Userdefined Field: test");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICtl00contentmaincmdoButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdoButton == null))
                {
                    this.mUICtl00contentmaincmdoButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdoButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmaincmdoButton.WindowTitles.Add("Userdefined Field: test");
                    #endregion
                }
                return this.mUICtl00contentmaincmdoButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICtl00contentmaincmdoButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__teWindow : BrowserWindow
    {
        
        public UIUserdefinedField__teWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: __text test";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: __text test");
            this.WindowTitles.Add("Userdefined Field: __james test");
            this.WindowTitles.Add("Userdefined Field: __asdf");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedField__teDocument UIUserdefinedField__teDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__teDocument == null))
                {
                    this.mUIUserdefinedField__teDocument = new UIUserdefinedField__teDocument(this);
                }
                return this.mUIUserdefinedField__teDocument;
            }
        }
        
        public UIUserdefinedField__jaDocument UIUserdefinedField__jaDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__jaDocument == null))
                {
                    this.mUIUserdefinedField__jaDocument = new UIUserdefinedField__jaDocument(this);
                }
                return this.mUIUserdefinedField__jaDocument;
            }
        }
        
        public UIUserdefinedField__asDocument UIUserdefinedField__asDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__asDocument == null))
                {
                    this.mUIUserdefinedField__asDocument = new UIUserdefinedField__asDocument(this);
                }
                return this.mUIUserdefinedField__asDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedField__teDocument mUIUserdefinedField__teDocument;
        
        private UIUserdefinedField__jaDocument mUIUserdefinedField__jaDocument;
        
        private UIUserdefinedField__asDocument mUIUserdefinedField__asDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__teDocument : HtmlDocument
    {
        
        public UIUserdefinedField__teDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __text test";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=207";
            this.WindowTitles.Add("Userdefined Field: __text test");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UITypeComboBox
        {
            get
            {
                if ((this.mUITypeComboBox == null))
                {
                    this.mUITypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbattributetype";
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbattributetype";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Type";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "11";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbattributetype cl";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUITypeComboBox.WindowTitles.Add("Userdefined Field: __text test");
                    #endregion
                }
                return this.mUITypeComboBox;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtmEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtmEdit == null))
                {
                    this.mUICtl00contentmaintxtmEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtmEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlength";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmaxlength type=t";
                    this.mUICtl00contentmaintxtmEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmaintxtmEdit.WindowTitles.Add("Userdefined Field: __text test");
                    #endregion
                }
                return this.mUICtl00contentmaintxtmEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUITypeComboBox;
        
        private HtmlEdit mUICtl00contentmaintxtmEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__jaDocument : HtmlDocument
    {
        
        public UIUserdefinedField__jaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __james test";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=208";
            this.WindowTitles.Add("Userdefined Field: __james test");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UICtl00contentmaintxtpEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtpEdit == null))
                {
                    this.mUICtl00contentmaintxtpEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtpEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtprecision";
                    this.mUICtl00contentmaintxtpEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtprecision";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtprecision disabl";
                    this.mUICtl00contentmaintxtpEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUICtl00contentmaintxtpEdit.WindowTitles.Add("Userdefined Field: __james test");
                    #endregion
                }
                return this.mUICtl00contentmaintxtpEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUICtl00contentmaintxtpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__asDocument : HtmlDocument
    {
        
        public UIUserdefinedField__asDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __asdf";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=210";
            this.WindowTitles.Add("Userdefined Field: __asdf");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UICtl00contentmaincmbdComboBox
        {
            get
            {
                if ((this.mUICtl00contentmaincmbdComboBox == null))
                {
                    this.mUICtl00contentmaincmbdComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdateformat";
                    this.mUICtl00contentmaincmbdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdateformat";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbdateformat disab";
                    this.mUICtl00contentmaincmbdComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmbdComboBox.WindowTitles.Add("Userdefined Field: __asdf");
                    #endregion
                }
                return this.mUICtl00contentmaincmbdComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUICtl00contentmaincmbdComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__liWindow : BrowserWindow
    {
        
        public UIUserdefinedField__liWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: __list test";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: __list test");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedField__liDocument UIUserdefinedField__liDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__liDocument == null))
                {
                    this.mUIUserdefinedField__liDocument = new UIUserdefinedField__liDocument(this);
                }
                return this.mUIUserdefinedField__liDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedField__liDocument mUIUserdefinedField__liDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__liDocument : HtmlDocument
    {
        
        public UIUserdefinedField__liDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __list test";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=219";
            this.WindowTitles.Add("Userdefined Field: __list test");
            #endregion
        }
        
        #region Properties
        public HtmlList UICtl00contentmainlstiList
        {
            get
            {
                if ((this.mUICtl00contentmainlstiList == null))
                {
                    this.mUICtl00contentmainlstiList = new HtmlList(this);
                    #region Search Criteria
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lstitems tabIndex=0";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainlstiList.WindowTitles.Add("Userdefined Field: __list test");
                    #endregion
                }
                return this.mUICtl00contentmainlstiList;
            }
        }
        
        public UIListItemsItem1Item2IPane UIListItemsItem1Item2IPane
        {
            get
            {
                if ((this.mUIListItemsItem1Item2IPane == null))
                {
                    this.mUIListItemsItem1Item2IPane = new UIListItemsItem1Item2IPane(this);
                }
                return this.mUIListItemsItem1Item2IPane;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtlEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtlEdit == null))
                {
                    this.mUICtl00contentmaintxtlEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlistitem";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=DontSubmitForm(event); id=ctl0";
                    this.mUICtl00contentmaintxtlEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "20";
                    this.mUICtl00contentmaintxtlEdit.WindowTitles.Add("Userdefined Field: __list test");
                    #endregion
                }
                return this.mUICtl00contentmaintxtlEdit;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSaveListitem";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "6";
                    this.mUISaveImage.WindowTitles.Add("Userdefined Field: __list test");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlList mUICtl00contentmainlstiList;
        
        private UIListItemsItem1Item2IPane mUIListItemsItem1Item2IPane;
        
        private HtmlEdit mUICtl00contentmaintxtlEdit;
        
        private HtmlImage mUISaveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIListItemsItem1Item2IPane : HtmlDiv
    {
        
        public UIListItemsItem1Item2IPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divListOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "List Items Item 1 Item 2 Item 3 \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divListOptions";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
            this.WindowTitles.Add("Userdefined Field: __list test");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditListItemImage
        {
            get
            {
                if ((this.mUIEditListItemImage == null))
                {
                    this.mUIEditListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit List Item";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit List Item\" src=\"../images/icon";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIEditListItemImage.WindowTitles.Add("Userdefined Field: __list test");
                    #endregion
                }
                return this.mUIEditListItemImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditListItemImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoWindow : BrowserWindow
    {
        
        public UIUserdefinedField__CoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: __Contract Details List";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: __Contract Details List");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedField__CoDocument UIUserdefinedField__CoDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__CoDocument == null))
                {
                    this.mUIUserdefinedField__CoDocument = new UIUserdefinedField__CoDocument(this);
                }
                return this.mUIUserdefinedField__CoDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedField__CoDocument mUIUserdefinedField__CoDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoDocument : HtmlDocument
    {
        
        public UIUserdefinedField__CoDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __Contract Details List";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=287";
            this.WindowTitles.Add("Userdefined Field: __Contract Details List");
            #endregion
        }
        
        #region Properties
        public HtmlList UICtl00contentmainlstiList
        {
            get
            {
                if ((this.mUICtl00contentmainlstiList == null))
                {
                    this.mUICtl00contentmainlstiList = new HtmlList(this);
                    #region Search Criteria
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lstitems size=4 nam";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainlstiList.WindowTitles.Add("Userdefined Field: __Contract Details List");
                    #endregion
                }
                return this.mUICtl00contentmainlstiList;
            }
        }
        #endregion
        
        #region Fields
        private HtmlList mUICtl00contentmainlstiList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoWindow1 : BrowserWindow
    {
        
        public UIUserdefinedField__CoWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: __Contract Details List EDITED";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: __Contract Details List EDITED");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedField__CoDocument1 UIUserdefinedField__CoDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__CoDocument == null))
                {
                    this.mUIUserdefinedField__CoDocument = new UIUserdefinedField__CoDocument1(this);
                }
                return this.mUIUserdefinedField__CoDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedField__CoDocument1 mUIUserdefinedField__CoDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoDocument1 : HtmlDocument
    {
        
        public UIUserdefinedField__CoDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __Contract Details List EDITED";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=297";
            this.WindowTitles.Add("Userdefined Field: __Contract Details List EDITED");
            #endregion
        }
        
        #region Properties
        public HtmlList UICtl00contentmainlstiList
        {
            get
            {
                if ((this.mUICtl00contentmainlstiList == null))
                {
                    this.mUICtl00contentmainlstiList = new HtmlList(this);
                    #region Search Criteria
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mUICtl00contentmainlstiList.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ItemCount] = "3";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lstitems size=4 nam";
                    this.mUICtl00contentmainlstiList.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainlstiList.WindowTitles.Add("Userdefined Field: __Contract Details List EDITED");
                    #endregion
                }
                return this.mUICtl00contentmainlstiList;
            }
        }
        
        public UIDivListOptionsPane UIDivListOptionsPane
        {
            get
            {
                if ((this.mUIDivListOptionsPane == null))
                {
                    this.mUIDivListOptionsPane = new UIDivListOptionsPane(this);
                }
                return this.mUIDivListOptionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlList mUICtl00contentmainlstiList;
        
        private UIDivListOptionsPane mUIDivListOptionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDivListOptionsPane : HtmlDiv
    {
        
        public UIDivListOptionsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divListOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "List Items Test Item 1 Test Item 2 Test ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divListOptions";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
            this.WindowTitles.Add("Userdefined Field: __Contract Details List EDITED");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditListItemImage
        {
            get
            {
                if ((this.mUIEditListItemImage == null))
                {
                    this.mUIEditListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit List Item";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.gif";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit List Item\" src=\"../images/icon";
                    this.mUIEditListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIEditListItemImage.WindowTitles.Add("Userdefined Field: __Contract Details List EDITED");
                    #endregion
                }
                return this.mUIEditListItemImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditListItemImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoWindow2 : BrowserWindow
    {
        
        public UIUserdefinedField__CoWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Field: __Contract Details Relationship Textbox EDITED";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Userdefined Field: __Contract Details Relationship Textbox EDITED");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedField__CoDocument2 UIUserdefinedField__CoDocument
        {
            get
            {
                if ((this.mUIUserdefinedField__CoDocument == null))
                {
                    this.mUIUserdefinedField__CoDocument = new UIUserdefinedField__CoDocument2(this);
                }
                return this.mUIUserdefinedField__CoDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedField__CoDocument2 mUIUserdefinedField__CoDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedField__CoDocument2 : HtmlDocument
    {
        
        public UIUserdefinedField__CoDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Field: __Contract Details Relationship Textbox EDITED";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx?userdefineid=303";
            this.WindowTitles.Add("Userdefined Field: __Contract Details Relationship Textbox EDITED");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIRelatedTableComboBox
        {
            get
            {
                if ((this.mUIRelatedTableComboBox == null))
                {
                    this.mUIRelatedTableComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlRelatedTable";
                    this.mUIRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlRelatedTable";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Related Table*";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "16";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlRelatedTable dis";
                    this.mUIRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "9";
                    this.mUIRelatedTableComboBox.WindowTitles.Add("Userdefined Field: __Contract Details Relationship Textbox EDITED");
                    #endregion
                }
                return this.mUIRelatedTableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIRelatedTableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIUserdefinedfieldalreWindow UIUserdefinedfieldalreWindow
        {
            get
            {
                if ((this.mUIUserdefinedfieldalreWindow == null))
                {
                    this.mUIUserdefinedfieldalreWindow = new UIUserdefinedfieldalreWindow(this);
                }
                return this.mUIUserdefinedfieldalreWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedfieldalreWindow mUIUserdefinedfieldalreWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedfieldalreWindow : WinWindow
    {
        
        public UIUserdefinedfieldalreWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UIUserdefinedfieldalreText
        {
            get
            {
                if ((this.mUIUserdefinedfieldalreText == null))
                {
                    this.mUIUserdefinedfieldalreText = new WinText(this);
                    #region Search Criteria
                    this.mUIUserdefinedfieldalreText.SearchProperties[WinText.PropertyNames.Name] = "Userdefined field already exists";
                    this.mUIUserdefinedfieldalreText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIUserdefinedfieldalreText;
            }
        }
        
        public WinText UIUserdefinedfieldcannText
        {
            get
            {
                if ((this.mUIUserdefinedfieldcannText == null))
                {
                    this.mUIUserdefinedfieldcannText = new WinText(this);
                    #region Search Criteria
                    this.mUIUserdefinedfieldcannText.SearchProperties[WinText.PropertyNames.Name] = "Userdefined field cannot be deleted as it is currently in use on a GreenLight Vie" +
                        "w.";
                    this.mUIUserdefinedfieldcannText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIUserdefinedfieldcannText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIUserdefinedfieldalreText;
        
        private WinText mUIUserdefinedfieldcannText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAddEditUserDefinedFiWindow : BrowserWindow
    {
        
        public UIAddEditUserDefinedFiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Add / Edit User Defined Field";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Add / Edit User Defined Field");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddEditUserDefinedFiDocument UIAddEditUserDefinedFiDocument
        {
            get
            {
                if ((this.mUIAddEditUserDefinedFiDocument == null))
                {
                    this.mUIAddEditUserDefinedFiDocument = new UIAddEditUserDefinedFiDocument(this);
                }
                return this.mUIAddEditUserDefinedFiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddEditUserDefinedFiDocument mUIAddEditUserDefinedFiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAddEditUserDefinedFiDocument : HtmlDocument
    {
        
        public UIAddEditUserDefinedFiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add / Edit User Defined Field";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aeuserdefined.aspx";
            this.WindowTitles.Add("Add / Edit User Defined Field");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICtl00contentmaincmdcButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdcButton == null))
                {
                    this.mUICtl00contentmaincmdcButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdcancel";
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdcancel";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdcButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmaincmdcButton.WindowTitles.Add("Add / Edit User Defined Field");
                    #endregion
                }
                return this.mUICtl00contentmaincmdcButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICtl00contentmaincmdcButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldsWinWindow1 : BrowserWindow
    {
        
        public UIUserdefinedFieldsWinWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Userdefined Fields";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIUserdefinedFieldsDocument3 UIUserdefinedFieldsDocument
        {
            get
            {
                if ((this.mUIUserdefinedFieldsDocument == null))
                {
                    this.mUIUserdefinedFieldsDocument = new UIUserdefinedFieldsDocument3(this);
                }
                return this.mUIUserdefinedFieldsDocument;
            }
        }
        
        public UIUserdefinedFieldsDocument11 UIUserdefinedFieldsDocument1
        {
            get
            {
                if ((this.mUIUserdefinedFieldsDocument1 == null))
                {
                    this.mUIUserdefinedFieldsDocument1 = new UIUserdefinedFieldsDocument11(this);
                }
                return this.mUIUserdefinedFieldsDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIUserdefinedFieldsDocument3 mUIUserdefinedFieldsDocument;
        
        private UIUserdefinedFieldsDocument11 mUIUserdefinedFieldsDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldsDocument3 : HtmlDocument
    {
        
        public UIUserdefinedFieldsDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Userdefined Fields";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminuserdefined.aspx";
            this.WindowTitles.Add("Userdefined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddUserdefinedFieldHyperlink
        {
            get
            {
                if ((this.mUIAddUserdefinedFieldHyperlink == null))
                {
                    this.mUIAddUserdefinedFieldHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_lnkAddUDF";
                    this.mUIAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Userdefined Field";
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://testing.sel-expenses.com/shared/admin/aeuserdefined.aspx";
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_lnkAddUDF class=sub";
                    this.mUIAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddUserdefinedFieldHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIAddUserdefinedFieldHyperlink;
            }
        }
        
        public HtmlTable UITbl_gridFieldsTable
        {
            get
            {
                if ((this.mUITbl_gridFieldsTable == null))
                {
                    this.mUITbl_gridFieldsTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridFieldsTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
                    this.mUITbl_gridFieldsTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display NameDescriptionField TypeMandato";
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=datatbl";
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "12";
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUITbl_gridFieldsTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mUITbl_gridFieldsTable.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUITbl_gridFieldsTable;
            }
        }
        
        public UITbl_gridFieldsTable11 UITbl_gridFieldsTable1
        {
            get
            {
                if ((this.mUITbl_gridFieldsTable1 == null))
                {
                    this.mUITbl_gridFieldsTable1 = new UITbl_gridFieldsTable11(this);
                }
                return this.mUITbl_gridFieldsTable1;
            }
        }
        
        public UITbl_gridFieldsTable2 UITbl_gridFieldsTable2
        {
            get
            {
                if ((this.mUITbl_gridFieldsTable2 == null))
                {
                    this.mUITbl_gridFieldsTable2 = new UITbl_gridFieldsTable2(this);
                }
                return this.mUITbl_gridFieldsTable2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddUserdefinedFieldHyperlink;
        
        private HtmlTable mUITbl_gridFieldsTable;
        
        private UITbl_gridFieldsTable11 mUITbl_gridFieldsTable1;
        
        private UITbl_gridFieldsTable2 mUITbl_gridFieldsTable2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFieldsTable11 : HtmlTable
    {
        
        public UITbl_gridFieldsTable11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display NameDescription Field TypeMandat";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "9";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Userdefined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDisplayNameHyperlink
        {
            get
            {
                if ((this.mUIDisplayNameHyperlink == null))
                {
                    this.mUIDisplayNameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDisplayNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDisplayNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDisplayNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDisplayNameHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Display Name", PropertyExpressionOperator.Contains));
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridFields\',\'b384f241-1cf5-4c9e-8bbe-07880ab2a0a4\',0);";
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridFields\',\'b384f241-1cf5-4c9e-8bbe-07880ab2a0a4\'," +
                        "0);";
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIDisplayNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIDisplayNameHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIDisplayNameHyperlink;
            }
        }
        
        public HtmlHyperlink UIDescriptionHyperlink
        {
            get
            {
                if ((this.mUIDescriptionHyperlink == null))
                {
                    this.mUIDescriptionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDescriptionHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Description", PropertyExpressionOperator.Contains));
                    this.mUIDescriptionHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIDescriptionHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDisplayNameHyperlink;
        
        private HtmlHyperlink mUIDescriptionHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITbl_gridFieldsTable2 : HtmlTable
    {
        
        public UITbl_gridFieldsTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display NameDescription Field TypeMandat";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "10";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Userdefined Fields");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFieldTypeHyperlink
        {
            get
            {
                if ((this.mUIFieldTypeHyperlink == null))
                {
                    this.mUIFieldTypeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFieldTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFieldTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFieldTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFieldTypeHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Field Type", PropertyExpressionOperator.Contains));
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridFields\',\'c8b01e80-df69-4d44-9d77-118c1f71ad23\',0);";
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridFields\',\'c8b01e80-df69-4d44-9d77-118c1f71ad23\'," +
                        "0);";
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIFieldTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIFieldTypeHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIFieldTypeHyperlink;
            }
        }
        
        public HtmlHyperlink UIMandatoryHyperlink
        {
            get
            {
                if ((this.mUIMandatoryHyperlink == null))
                {
                    this.mUIMandatoryHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMandatoryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMandatoryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMandatoryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMandatoryHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Mandatory", PropertyExpressionOperator.Contains));
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridFields\',\'2cf396de-8db6-4c79-a30d-a44584609351\',0);";
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridFields\',\'2cf396de-8db6-4c79-a30d-a44584609351\'," +
                        "0);";
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIMandatoryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIMandatoryHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIMandatoryHyperlink;
            }
        }
        
        public HtmlHyperlink UIAppliesToHyperlink
        {
            get
            {
                if ((this.mUIAppliesToHyperlink == null))
                {
                    this.mUIAppliesToHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAppliesToHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAppliesToHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAppliesToHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAppliesToHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Applies To", PropertyExpressionOperator.Contains));
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridFields\',\'86aa4acb-a36b-458c-9b6b-1bc6fe012dcd\',0);";
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridFields\',\'86aa4acb-a36b-458c-9b6b-1bc6fe012dcd\'," +
                        "0);";
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIAppliesToHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIAppliesToHyperlink.WindowTitles.Add("Userdefined Fields");
                    #endregion
                }
                return this.mUIAppliesToHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFieldTypeHyperlink;
        
        private HtmlHyperlink mUIMandatoryHyperlink;
        
        private HtmlHyperlink mUIAppliesToHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUserdefinedFieldsDocument11 : HtmlDocument
    {
        
        public UIUserdefinedFieldsDocument11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/adminuserdefined.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nUserdefined f";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = "";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        #endregion
    }
}
