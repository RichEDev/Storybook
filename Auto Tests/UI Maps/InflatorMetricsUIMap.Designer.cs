// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.InflatorMetricsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class InflatorMetricsUIMap
    {
        
        /// <summary>
        /// NavigateToInflatorMetricsFromHomePage
        /// </summary>
        public void NavigateToInflatorMetricsFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uIInflatorMetricsPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UIInflatorMetricsPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(67, 16));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(66, 13));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(88, 15));

            // Click 'Inflator Metrics' pane
            Mouse.Click(uIInflatorMetricsPane, new Point(75, 16));
        }
        
        /// <summary>
        /// AddInflatorMetricWithCancel - Use 'AddInflatorMetricWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddInflatorMetricWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIInflatorMetricDescriEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricDescriEdit;
            HtmlEdit uIInflatorMetricEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricEdit;
            HtmlCheckBox uIRequiresExtraPercentCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIRequiresExtraPercentCheckBox;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(33, 2));

            // Type 'CodedUI Inflator Metric' in 'Inflator Metric Description' text box
            uIInflatorMetricDescriEdit.Text = this.AddInflatorMetricWithCancelParams.UIInflatorMetricDescriEditText;

            // Type '5' in 'Inflator Metric %' text box
            uIInflatorMetricEdit.Text = this.AddInflatorMetricWithCancelParams.UIInflatorMetricEditText;

            // Select 'Requires Extra Percentage' check box
            uIRequiresExtraPercentCheckBox.Checked = this.AddInflatorMetricWithCancelParams.UIRequiresExtraPercentCheckBoxChecked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(37, 14));
        }
        
        /// <summary>
        /// AddInflatorMetric - Use 'AddInflatorMetricParams' to pass parameters into this method.
        /// </summary>
        public void AddInflatorMetric()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uIInflatorMetricDescriEdit1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricDescriEdit1;
            HtmlEdit uIInflatorMetricEdit1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricEdit1;
            HtmlImage uISaveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(54, 13));

            // Type 'CodedUI Inflator' in 'Inflator Metric Description' text box
            uIInflatorMetricDescriEdit1.Text = this.AddInflatorMetricParams.UIInflatorMetricDescriEdit1Text;

            // Type '2.5' in 'Inflator Metric %' text box
            uIInflatorMetricEdit1.Text = this.AddInflatorMetricParams.UIInflatorMetricEdit1Text;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(33, 11));
        }
        
        /// <summary>
        /// ValidateDuplicateInflatorMetric - Use 'ValidateDuplicateInflatorMetricExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateInflatorMetric()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateDuplicateInflatorMetricExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateDuplicateInflatorMetricExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// ValidateAddInflatorMetric - Use 'ValidateAddInflatorMetricExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddInflatorMetric()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInflatorCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Table.UICodedUIInflatorCell;
            HtmlCheckBox uIItemCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row.UIItemCheckBox;
            HtmlCell uIItem250Cell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Table.UIItem250Cell;
            #endregion

            // Verify that 'CodedUI Inflator' cell's property 'InnerText' equals 'CodedUI Inflator'
            Assert.AreEqual(this.ValidateAddInflatorMetricExpectedValues.UICodedUIInflatorCellInnerText, uICodedUIInflatorCell.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateAddInflatorMetricExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);

            // Verify that '2.50' cell's property 'FriendlyName' equals '2.50'
            Assert.AreEqual(this.ValidateAddInflatorMetricExpectedValues.UIItem250CellFriendlyName, uIItem250Cell.FriendlyName);
        }
        
        /// <summary>
        /// ValidateInflatorMetricDoesNotExist - Use 'ValidateInflatorMetricDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInflatorMetricDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInflatorCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Table.UICodedUIInflatorCell;
            #endregion

            // Verify that 'CodedUI Inflator' cell's property 'InnerText' is not equal to 'CodedUI Inflator'
            Assert.AreNotEqual(this.ValidateInflatorMetricDoesNotExistExpectedValues.UICodedUIInflatorCellInnerText, uICodedUIInflatorCell.InnerText);
        }
        
        /// <summary>
        /// EditInflatorMetricWithCancel - Use 'EditInflatorMetricWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditInflatorMetricWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row.UIEditImage;
            HtmlEdit uIInflatorMetricDescriEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricDescriEdit;
            HtmlEdit uIInflatorMetricEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricEdit;
            HtmlCheckBox uIRequiresExtraPercentCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIRequiresExtraPercentCheckBox;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 7));

            // Type 'CodedUI InflatorEDIT' in 'Inflator Metric Description' text box
            uIInflatorMetricDescriEdit.Text = this.EditInflatorMetricWithCancelParams.UIInflatorMetricDescriEditText;

            // Type '5' in 'Inflator Metric %' text box
            uIInflatorMetricEdit.Text = this.EditInflatorMetricWithCancelParams.UIInflatorMetricEditText;

            // Select 'Requires Extra Percentage' check box
            uIRequiresExtraPercentCheckBox.Checked = this.EditInflatorMetricWithCancelParams.UIRequiresExtraPercentCheckBoxChecked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(46, 10));
        }
        
        /// <summary>
        /// EditInflatorMetric - Use 'EditInflatorMetricParams' to pass parameters into this method.
        /// </summary>
        public void EditInflatorMetric()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row.UIEditImage;
            HtmlEdit uIInflatorMetricDescriEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricDescriEdit;
            HtmlEdit uIInflatorMetricEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricEdit;
            HtmlCheckBox uIRequiresExtraPercentCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIRequiresExtraPercentCheckBox;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 10));

            // Type 'CodedUI InflatorEDIT' in 'Inflator Metric Description' text box
            uIInflatorMetricDescriEdit.Text = this.EditInflatorMetricParams.UIInflatorMetricDescriEditText;

            // Type '5' in 'Inflator Metric %' text box
            uIInflatorMetricEdit.Text = this.EditInflatorMetricParams.UIInflatorMetricEditText;

            // Select 'Requires Extra Percentage' check box
            uIRequiresExtraPercentCheckBox.Checked = this.EditInflatorMetricParams.UIRequiresExtraPercentCheckBoxChecked;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(41, 12));
        }
        
        /// <summary>
        /// ValidateEditInflatorMetric - Use 'ValidateEditInflatorMetricExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditInflatorMetric()
        {
            #region Variable Declarations
            HtmlCell uICodedUIInflatorEDITCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Table.UICodedUIInflatorEDITCell;
            HtmlCheckBox uIItemCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row1.UIItemCheckBox;
            HtmlCell uIItem500Cell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Table.UIItem500Cell;
            #endregion

            // Verify that 'CodedUI InflatorEDIT' cell's property 'InnerText' equals 'CodedUI InflatorEDIT'
            Assert.AreEqual(this.ValidateEditInflatorMetricExpectedValues.UICodedUIInflatorEDITCellInnerText, uICodedUIInflatorEDITCell.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
            Assert.AreEqual(this.ValidateEditInflatorMetricExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);

            // Verify that '5.00' cell's property 'InnerText' equals '5.00'
            Assert.AreEqual(this.ValidateEditInflatorMetricExpectedValues.UIItem500CellInnerText, uIItem500Cell.InnerText);
        }
        
        /// <summary>
        /// EditInflatorMetricResetValues - Use 'EditInflatorMetricResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditInflatorMetricResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row1.UIEditImage;
            HtmlEdit uIInflatorMetricDescriEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricDescriEdit;
            HtmlEdit uIInflatorMetricEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricEdit;
            HtmlCheckBox uIRequiresExtraPercentCheckBox = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIRequiresExtraPercentCheckBox;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 10));

            // Type 'CodedUI Inflator' in 'Inflator Metric Description' text box
            uIInflatorMetricDescriEdit.Text = this.EditInflatorMetricResetValuesParams.UIInflatorMetricDescriEditText;

            // Type '2.5' in 'Inflator Metric %' text box
            uIInflatorMetricEdit.Text = this.EditInflatorMetricResetValuesParams.UIInflatorMetricEditText;

            // Clear 'Requires Extra Percentage' check box
            uIRequiresExtraPercentCheckBox.Checked = this.EditInflatorMetricResetValuesParams.UIRequiresExtraPercentCheckBoxChecked;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(40, 12));
        }
        
        /// <summary>
        /// ArchiveInflatorMetricWithCancel
        /// </summary>
        public void ArchiveInflatorMetricWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(9, 10));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateInflatorMetricIsNotArchived - Use 'ValidateInflatorMetricIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInflatorMetricIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateInflatorMetricIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ArchiveInflatorMetric
        /// </summary>
        public void ArchiveInflatorMetric()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(11, 8));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateInflatorMetricIsArchived - Use 'ValidateInflatorMetricIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInflatorMetricIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateInflatorMetricIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveInflatorMetric
        /// </summary>
        public void UnArchiveInflatorMetric()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(11, 7));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveInflatorMetricWithCancel
        /// </summary>
        public void UnArchiveInflatorMetricWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(10, 8));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteInflatorMetricWithCancel
        /// </summary>
        public void DeleteInflatorMetricWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(10, 7));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteInflatorMetric
        /// </summary>
        public void DeleteInflatorMetric()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_85c8555c_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(9, 10));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateInflatorMetricsPageLayout - Use 'ValidateInflatorMetricsPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInflatorMetricsPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIItemPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uIJamesLloyd21SeptembePane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInfodivPane1.UIJamesLloyd21SeptembePane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIInflatorMetricsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInflatorMetricsPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateInflatorMetricsPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateInflatorMetricsPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'James Lloyd | 21 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd21SeptembePane.DisplayText, this.ValidateInflatorMetricsPageLayoutExpectedValues.UIJamesLloyd21SeptembePaneDisplayText);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Inflator Metrics '
            Assert.AreEqual(this.ValidateInflatorMetricsPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Inflator Metrics' pane's property 'InnerText' equals 'Inflator Metrics'
            Assert.AreEqual(this.ValidateInflatorMetricsPageLayoutExpectedValues.UIInflatorMetricsPaneInnerText, uIInflatorMetricsPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateInflatorMetricsPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);
        }
        
        #region Properties
        public virtual AddInflatorMetricWithCancelParams AddInflatorMetricWithCancelParams
        {
            get
            {
                if ((this.mAddInflatorMetricWithCancelParams == null))
                {
                    this.mAddInflatorMetricWithCancelParams = new AddInflatorMetricWithCancelParams();
                }
                return this.mAddInflatorMetricWithCancelParams;
            }
        }
        
        public virtual AddInflatorMetricParams AddInflatorMetricParams
        {
            get
            {
                if ((this.mAddInflatorMetricParams == null))
                {
                    this.mAddInflatorMetricParams = new AddInflatorMetricParams();
                }
                return this.mAddInflatorMetricParams;
            }
        }
        
        public virtual ValidateDuplicateInflatorMetricExpectedValues ValidateDuplicateInflatorMetricExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateInflatorMetricExpectedValues == null))
                {
                    this.mValidateDuplicateInflatorMetricExpectedValues = new ValidateDuplicateInflatorMetricExpectedValues();
                }
                return this.mValidateDuplicateInflatorMetricExpectedValues;
            }
        }
        
        public virtual ValidateAddInflatorMetricExpectedValues ValidateAddInflatorMetricExpectedValues
        {
            get
            {
                if ((this.mValidateAddInflatorMetricExpectedValues == null))
                {
                    this.mValidateAddInflatorMetricExpectedValues = new ValidateAddInflatorMetricExpectedValues();
                }
                return this.mValidateAddInflatorMetricExpectedValues;
            }
        }
        
        public virtual ValidateInflatorMetricDoesNotExistExpectedValues ValidateInflatorMetricDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateInflatorMetricDoesNotExistExpectedValues == null))
                {
                    this.mValidateInflatorMetricDoesNotExistExpectedValues = new ValidateInflatorMetricDoesNotExistExpectedValues();
                }
                return this.mValidateInflatorMetricDoesNotExistExpectedValues;
            }
        }
        
        public virtual EditInflatorMetricWithCancelParams EditInflatorMetricWithCancelParams
        {
            get
            {
                if ((this.mEditInflatorMetricWithCancelParams == null))
                {
                    this.mEditInflatorMetricWithCancelParams = new EditInflatorMetricWithCancelParams();
                }
                return this.mEditInflatorMetricWithCancelParams;
            }
        }
        
        public virtual EditInflatorMetricParams EditInflatorMetricParams
        {
            get
            {
                if ((this.mEditInflatorMetricParams == null))
                {
                    this.mEditInflatorMetricParams = new EditInflatorMetricParams();
                }
                return this.mEditInflatorMetricParams;
            }
        }
        
        public virtual ValidateEditInflatorMetricExpectedValues ValidateEditInflatorMetricExpectedValues
        {
            get
            {
                if ((this.mValidateEditInflatorMetricExpectedValues == null))
                {
                    this.mValidateEditInflatorMetricExpectedValues = new ValidateEditInflatorMetricExpectedValues();
                }
                return this.mValidateEditInflatorMetricExpectedValues;
            }
        }
        
        public virtual EditInflatorMetricResetValuesParams EditInflatorMetricResetValuesParams
        {
            get
            {
                if ((this.mEditInflatorMetricResetValuesParams == null))
                {
                    this.mEditInflatorMetricResetValuesParams = new EditInflatorMetricResetValuesParams();
                }
                return this.mEditInflatorMetricResetValuesParams;
            }
        }
        
        public virtual ValidateInflatorMetricIsNotArchivedExpectedValues ValidateInflatorMetricIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateInflatorMetricIsNotArchivedExpectedValues == null))
                {
                    this.mValidateInflatorMetricIsNotArchivedExpectedValues = new ValidateInflatorMetricIsNotArchivedExpectedValues();
                }
                return this.mValidateInflatorMetricIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateInflatorMetricIsArchivedExpectedValues ValidateInflatorMetricIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateInflatorMetricIsArchivedExpectedValues == null))
                {
                    this.mValidateInflatorMetricIsArchivedExpectedValues = new ValidateInflatorMetricIsArchivedExpectedValues();
                }
                return this.mValidateInflatorMetricIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateInflatorMetricsPageLayoutExpectedValues ValidateInflatorMetricsPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateInflatorMetricsPageLayoutExpectedValues == null))
                {
                    this.mValidateInflatorMetricsPageLayoutExpectedValues = new ValidateInflatorMetricsPageLayoutExpectedValues();
                }
                return this.mValidateInflatorMetricsPageLayoutExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        #endregion
        
        #region Fields
        private AddInflatorMetricWithCancelParams mAddInflatorMetricWithCancelParams;
        
        private AddInflatorMetricParams mAddInflatorMetricParams;
        
        private ValidateDuplicateInflatorMetricExpectedValues mValidateDuplicateInflatorMetricExpectedValues;
        
        private ValidateAddInflatorMetricExpectedValues mValidateAddInflatorMetricExpectedValues;
        
        private ValidateInflatorMetricDoesNotExistExpectedValues mValidateInflatorMetricDoesNotExistExpectedValues;
        
        private EditInflatorMetricWithCancelParams mEditInflatorMetricWithCancelParams;
        
        private EditInflatorMetricParams mEditInflatorMetricParams;
        
        private ValidateEditInflatorMetricExpectedValues mValidateEditInflatorMetricExpectedValues;
        
        private EditInflatorMetricResetValuesParams mEditInflatorMetricResetValuesParams;
        
        private ValidateInflatorMetricIsNotArchivedExpectedValues mValidateInflatorMetricIsNotArchivedExpectedValues;
        
        private ValidateInflatorMetricIsArchivedExpectedValues mValidateInflatorMetricIsArchivedExpectedValues;
        
        private ValidateInflatorMetricsPageLayoutExpectedValues mValidateInflatorMetricsPageLayoutExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddInflatorMetricWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddInflatorMetricWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Inflator Metric' in 'Inflator Metric Description' text box
        /// </summary>
        public string UIInflatorMetricDescriEditText = "CodedUI Inflator Metric";
        
        /// <summary>
        /// Type '5' in 'Inflator Metric %' text box
        /// </summary>
        public string UIInflatorMetricEditText = "5";
        
        /// <summary>
        /// Select 'Requires Extra Percentage' check box
        /// </summary>
        public bool UIRequiresExtraPercentCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddInflatorMetric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddInflatorMetricParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Inflator' in 'Inflator Metric Description' text box
        /// </summary>
        public string UIInflatorMetricDescriEdit1Text = "CodedUI Inflator";
        
        /// <summary>
        /// Type '2.5' in 'Inflator Metric %' text box
        /// </summary>
        public string UIInflatorMetricEdit1Text = "2.5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateInflatorMetric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateDuplicateInflatorMetricExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddInflatorMetric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddInflatorMetricExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Inflator' cell's property 'InnerText' equals 'CodedUI Inflator'
        /// </summary>
        public string UICodedUIInflatorCellInnerText = "CodedUI Inflator";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UIItemCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that '2.50' cell's property 'FriendlyName' equals '2.50'
        /// </summary>
        public string UIItem250CellFriendlyName = "2.50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInflatorMetricDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInflatorMetricDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Inflator' cell's property 'InnerText' is not equal to 'CodedUI Inflator'
        /// </summary>
        public string UICodedUIInflatorCellInnerText = "CodedUI Inflator";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInflatorMetricWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInflatorMetricWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI InflatorEDIT' in 'Inflator Metric Description' text box
        /// </summary>
        public string UIInflatorMetricDescriEditText = "CodedUI InflatorEDIT";
        
        /// <summary>
        /// Type '5' in 'Inflator Metric %' text box
        /// </summary>
        public string UIInflatorMetricEditText = "5";
        
        /// <summary>
        /// Select 'Requires Extra Percentage' check box
        /// </summary>
        public bool UIRequiresExtraPercentCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInflatorMetric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInflatorMetricParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI InflatorEDIT' in 'Inflator Metric Description' text box
        /// </summary>
        public string UIInflatorMetricDescriEditText = "CodedUI InflatorEDIT";
        
        /// <summary>
        /// Type '5' in 'Inflator Metric %' text box
        /// </summary>
        public string UIInflatorMetricEditText = "5";
        
        /// <summary>
        /// Select 'Requires Extra Percentage' check box
        /// </summary>
        public bool UIRequiresExtraPercentCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditInflatorMetric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditInflatorMetricExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI InflatorEDIT' cell's property 'InnerText' equals 'CodedUI InflatorEDIT'
        /// </summary>
        public string UICodedUIInflatorEDITCellInnerText = "CodedUI InflatorEDIT";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
        /// </summary>
        public bool UIItemCheckBoxChecked = true;
        
        /// <summary>
        /// Verify that '5.00' cell's property 'InnerText' equals '5.00'
        /// </summary>
        public string UIItem500CellInnerText = "5.00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditInflatorMetricResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditInflatorMetricResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Inflator' in 'Inflator Metric Description' text box
        /// </summary>
        public string UIInflatorMetricDescriEditText = "CodedUI Inflator";
        
        /// <summary>
        /// Type '2.5' in 'Inflator Metric %' text box
        /// </summary>
        public string UIInflatorMetricEditText = "2.5";
        
        /// <summary>
        /// Clear 'Requires Extra Percentage' check box
        /// </summary>
        public bool UIRequiresExtraPercentCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInflatorMetricIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInflatorMetricIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInflatorMetricIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInflatorMetricIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInflatorMetricsPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateInflatorMetricsPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'James Lloyd | 21 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd21SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Inflator Metrics '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Contract Information : Inflator Metrics ";
        
        /// <summary>
        /// Verify that 'Inflator Metrics' pane's property 'InnerText' equals 'Inflator Metrics'
        /// </summary>
        public string UIInflatorMetricsPaneInnerText = "Inflator Metrics";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIInflatorMetricsPane
        {
            get
            {
                if ((this.mUIInflatorMetricsPane == null))
                {
                    this.mUIInflatorMetricsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIInflatorMetricsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel3";
                    this.mUIInflatorMetricsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Inflator Metrics";
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel3 class=menuitemtitle";
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
                    this.mUIInflatorMetricsPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUIInflatorMetricsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIInflatorMetricsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=112";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UIInflatorMetricsPane
        {
            get
            {
                if ((this.mUIInflatorMetricsPane == null))
                {
                    this.mUIInflatorMetricsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIInflatorMetricsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIInflatorMetricsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Inflator Metrics";
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIInflatorMetricsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIInflatorMetricsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInflatorMetricsPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIInflatorMetricDescriEdit
        {
            get
            {
                if ((this.mUIInflatorMetricDescriEdit == null))
                {
                    this.mUIInflatorMetricDescriEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInflatorMetricDescriEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_inflatormetrics_name";
                    this.mUIInflatorMetricDescriEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_inflatormetrics_name";
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Inflator Metric Description";
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_inflatorme";
                    this.mUIInflatorMetricDescriEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIInflatorMetricDescriEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInflatorMetricDescriEdit;
            }
        }
        
        public HtmlEdit UIInflatorMetricEdit
        {
            get
            {
                if ((this.mUIInflatorMetricEdit == null))
                {
                    this.mUIInflatorMetricEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInflatorMetricEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_inflatormetrics_percentage";
                    this.mUIInflatorMetricEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_inflatormetrics_percentage";
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Inflator Metric %";
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_inflatorme";
                    this.mUIInflatorMetricEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    this.mUIInflatorMetricEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInflatorMetricEdit;
            }
        }
        
        public HtmlCheckBox UIRequiresExtraPercentCheckBox
        {
            get
            {
                if ((this.mUIRequiresExtraPercentCheckBox == null))
                {
                    this.mUIRequiresExtraPercentCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIRequiresExtraPercentCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkcodes_inflatormetrics_requiresExtraPct";
                    this.mUIRequiresExtraPercentCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkcodes_inflatormetrics_requiresExtraPct";
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Requires Extra Percentage";
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkcodes_inflatorme";
                    this.mUIRequiresExtraPercentCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUIRequiresExtraPercentCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIRequiresExtraPercentCheckBox;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlEdit UIInflatorMetricDescriEdit1
        {
            get
            {
                if ((this.mUIInflatorMetricDescriEdit1 == null))
                {
                    this.mUIInflatorMetricDescriEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInflatorMetricDescriEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_inflatormetrics_name";
                    this.mUIInflatorMetricDescriEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_inflatormetrics_name";
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Inflator Metric Description";
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_inflatorme";
                    this.mUIInflatorMetricDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIInflatorMetricDescriEdit1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInflatorMetricDescriEdit1;
            }
        }
        
        public HtmlEdit UIInflatorMetricEdit1
        {
            get
            {
                if ((this.mUIInflatorMetricEdit1 == null))
                {
                    this.mUIInflatorMetricEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInflatorMetricEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_inflatormetrics_percentage";
                    this.mUIInflatorMetricEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_inflatormetrics_percentage";
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Inflator Metric %";
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_inflatorme";
                    this.mUIInflatorMetricEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIInflatorMetricEdit1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIInflatorMetricEdit1;
            }
        }
        
        public HtmlCheckBox UIRequiresExtraPercentCheckBox1
        {
            get
            {
                if ((this.mUIRequiresExtraPercentCheckBox1 == null))
                {
                    this.mUIRequiresExtraPercentCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIRequiresExtraPercentCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkcodes_inflatormetrics_requiresExtraPct";
                    this.mUIRequiresExtraPercentCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkcodes_inflatormetrics_requiresExtraPct";
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Requires Extra Percentage";
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkcodes_inflatorme";
                    this.mUIRequiresExtraPercentCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUIRequiresExtraPercentCheckBox1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIRequiresExtraPercentCheckBox1;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "16";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UITbl_bdGrid_85c8555c_Table UITbl_bdGrid_85c8555c_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_85c8555c_Table == null))
                {
                    this.mUITbl_bdGrid_85c8555c_Table = new UITbl_bdGrid_85c8555c_Table(this);
                }
                return this.mUITbl_bdGrid_85c8555c_Table;
            }
        }
        
        public UITbl_bdGrid_85c8555c_Row UITbl_bdGrid_85c8555c_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_85c8555c_Row == null))
                {
                    this.mUITbl_bdGrid_85c8555c_Row = new UITbl_bdGrid_85c8555c_Row(this);
                }
                return this.mUITbl_bdGrid_85c8555c_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "19";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_85c8555c_Row1 UITbl_bdGrid_85c8555c_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_85c8555c_Row1 == null))
                {
                    this.mUITbl_bdGrid_85c8555c_Row1 = new UITbl_bdGrid_85c8555c_Row1(this);
                }
                return this.mUITbl_bdGrid_85c8555c_Row1;
            }
        }
        
        public UITbl_bdGrid_85c8555c_Cell UITbl_bdGrid_85c8555c_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_85c8555c_Cell == null))
                {
                    this.mUITbl_bdGrid_85c8555c_Cell = new UITbl_bdGrid_85c8555c_Cell(this);
                }
                return this.mUITbl_bdGrid_85c8555c_Cell;
            }
        }
        
        public UIInfodivPane1 UIInfodivPane1
        {
            get
            {
                if ((this.mUIInfodivPane1 == null))
                {
                    this.mUIInfodivPane1 = new UIInfodivPane1(this);
                }
                return this.mUIInfodivPane1;
            }
        }
        #endregion
        
        #region Fields
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUIInflatorMetricsPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIMaindivPane mUIMaindivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIInflatorMetricDescriEdit;
        
        private HtmlEdit mUIInflatorMetricEdit;
        
        private HtmlCheckBox mUIRequiresExtraPercentCheckBox;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlEdit mUIInflatorMetricDescriEdit1;
        
        private HtmlEdit mUIInflatorMetricEdit1;
        
        private HtmlCheckBox mUIRequiresExtraPercentCheckBox1;
        
        private HtmlImage mUISaveImage;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UITbl_bdGrid_85c8555c_Table mUITbl_bdGrid_85c8555c_Table;
        
        private UITbl_bdGrid_85c8555c_Row mUITbl_bdGrid_85c8555c_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_85c8555c_Row1 mUITbl_bdGrid_85c8555c_Row1;
        
        private UITbl_bdGrid_85c8555c_Cell mUITbl_bdGrid_85c8555c_Cell;
        
        private UIInfodivPane1 mUIInfodivPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd20SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd20SeptembePane == null))
                {
                    this.mUIJamesLloyd20SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 ";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd20SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd20SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd20SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nInflator Metric % R";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_85c8555c_Table : HtmlTable
    {
        
        public UITbl_bdGrid_85c8555c_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_85c8555c_0172_4feb_aa59_85f8607e4253";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Inflator Metric % Requires Extra Percent";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_85c8555c_0172_4feb_aa59_85";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIInflatorCell
        {
            get
            {
                if ((this.mUICodedUIInflatorCell == null))
                {
                    this.mUICodedUIInflatorCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIInflatorCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIInflatorCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIInflatorCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Inflator";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "5";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIInflatorCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "6";
                    this.mUICodedUIInflatorCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIInflatorCell;
            }
        }
        
        public HtmlCell UIItem250Cell
        {
            get
            {
                if ((this.mUIItem250Cell == null))
                {
                    this.mUIItem250Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem250Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem250Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem250Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "2.50";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1 align=right";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUIItem250Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUIItem250Cell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItem250Cell;
            }
        }
        
        public HtmlCell UICodedUIInflatorEDITCell
        {
            get
            {
                if ((this.mUICodedUIInflatorEDITCell == null))
                {
                    this.mUICodedUIInflatorEDITCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIInflatorEDITCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIInflatorEDITCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIInflatorEDITCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI InflatorEDIT";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "5";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUIInflatorEDITCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "12";
                    this.mUICodedUIInflatorEDITCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIInflatorEDITCell;
            }
        }
        
        public HtmlCell UIItem500Cell
        {
            get
            {
                if ((this.mUIItem500Cell == null))
                {
                    this.mUIItem500Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem500Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem500Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem500Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "5.00";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2 align=right";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUIItem500Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "10";
                    this.mUIItem500Cell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItem500Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIInflatorCell;
        
        private HtmlCell mUIItem250Cell;
        
        private HtmlCell mUICodedUIInflatorEDITCell;
        
        private HtmlCell mUIItem500Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_85c8555c_Row : HtmlRow
    {
        
        public UITbl_bdGrid_85c8555c_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_85c8555c_0172_4feb_aa59_85f8607e4253_CodedUI Inflator";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "2.50CodedUI Inflator";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_85c8555c_0172_4feb_aa59_8";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_85c8555c_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_85c8555c_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_85c8555c_0172_4feb_aa59_85f8607e4253_CodedUI InflatorEDIT";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "5.00CodedUI InflatorEDIT";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_85c8555c_0172_4feb_aa59_8";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled CHECKED type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_85c8555c_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_85c8555c_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_85c8555c_0172_4feb_aa59_85f8607e4253_CodedUI Inflator_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_85c8555c_0172_4feb_aa59_8";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane1 : HtmlDiv
    {
        
        public UIInfodivPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 21 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd21SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd21SeptembePane == null))
                {
                    this.mUIJamesLloyd21SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd21SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd21SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 21 September 2010 ";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd21SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd21SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd21SeptembePane;
        #endregion
    }
}
