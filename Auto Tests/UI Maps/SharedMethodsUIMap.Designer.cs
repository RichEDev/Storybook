// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.SharedMethodsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class SharedMethodsUIMap
    {
        
        /// <summary>
        /// RefreshBrowswerWindow
        /// </summary>
        public void RefreshBrowswerWindow()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleWindowsInterneWindow = this.UIGoogleWindowsInterneWindow;
            #endregion

            // Perform Refresh on Browser Window
            uIGoogleWindowsInterneWindow.Refresh();
        }
        
        /// <summary>
        /// SharedFrameworkLogonEnterLogonDetails - Use 'SharedFrameworkLogonEnterLogonDetailsParams' to pass parameters into this method.
        /// </summary>
        public void SharedFrameworkLogonEnterLogonDetails()
        {
            #region Variable Declarations
            HtmlEdit uICompanyIDEdit = this.UIFramework2010logonWiWindow.UIFramework2010logonDocument.UICompanyIDEdit;
            HtmlEdit uIUsernameEdit = this.UIFramework2010logonWiWindow.UIFramework2010logonDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIFramework2010logonWiWindow.UIFramework2010logonDocument.UIPasswordEdit;
            HtmlInputButton uILogonButton = this.UIFramework2010logonWiWindow.UIFramework2010logonDocument.UILogonButton;
            #endregion

            // Type 'sel' in 'Company ID' text box
            uICompanyIDEdit.Text = this.SharedFrameworkLogonEnterLogonDetailsParams.UICompanyIDEditText;

            // Type 'james' in 'Username' text box
            uIUsernameEdit.Text = this.SharedFrameworkLogonEnterLogonDetailsParams.UIUsernameEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.SharedFrameworkLogonEnterLogonDetailsParams.UIPasswordEditPassword;

            // Click 'Logon' button
            Mouse.Click(uILogonButton, new Point(11, 12));
        }
        
        /// <summary>
        /// SharedLaunchIE - Use 'SharedLaunchIEParams' to pass parameters into this method.
        /// </summary>
        public void SharedLaunchIE()
        {

            // Go to web page 'https://testing.sel-expenses.com/' using new browser instance
            BrowserWindow testingselexpensescomBrowser = BrowserWindow.Launch(new System.Uri(this.SharedLaunchIEParams.Url));
        }
        
        /// <summary>
        /// SharedLogonEnterLogonDetails - Use 'SharedLogonEnterLogonDetailsParams' to pass parameters into this method.
        /// </summary>
        public void SharedLogonEnterLogonDetails()
        {
            #region Variable Declarations
            HtmlEdit uICompanyIDEdit = this.UIExpenseslogonWindowsWindow.UIExpenseslogonDocument.UICompanyIDEdit;
            HtmlEdit uIUsernameEdit = this.UIExpenseslogonWindowsWindow.UIExpenseslogonDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIExpenseslogonWindowsWindow.UIExpenseslogonDocument.UIPasswordEdit;
            #endregion

            // Type 'migration' in 'Company ID' text box
            uICompanyIDEdit.Text = this.SharedLogonEnterLogonDetailsParams.UICompanyIDEditText;

            // Type 'james' in 'Username' text box
            uIUsernameEdit.Text = this.SharedLogonEnterLogonDetailsParams.UIUsernameEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.SharedLogonEnterLogonDetailsParams.UIPasswordEditPassword;

            // Type '{Enter}' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.SharedLogonEnterLogonDetailsParams.UIPasswordEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SharedNavigateToExpensesLogon - Use 'SharedNavigateToExpensesLogonParams' to pass parameters into this method.
        /// </summary>
        public void SharedNavigateToExpensesLogon()
        {
            #region Variable Declarations
            BrowserWindow uIExpenseslogonWindowsWindow = this.UIExpenseslogonWindowsWindow;
            #endregion

            // Go to web page 'https://testing.sel-expenses.com/'
            uIExpenseslogonWindowsWindow.NavigateToUrl(new System.Uri(this.SharedNavigateToExpensesLogonParams.UIExpenseslogonWindowsWindowUrl));
        }
        
        /// <summary>
        /// SharedNavigateToHomePage - Use 'SharedNavigateToHomePageParams' to pass parameters into this method.
        /// </summary>
        public void SharedNavigateToHomePage()
        {
            #region Variable Declarations
            BrowserWindow uIMyDetailsWindowsInteWindow = this.UIMyDetailsWindowsInteWindow;
            #endregion

            // Go to web page 'https://testing.sel-expenses.com/home.aspx'
            uIMyDetailsWindowsInteWindow.NavigateToUrl(new System.Uri(this.SharedNavigateToHomePageParams.UIMyDetailsWindowsInteWindowUrl));
        }
        
        /// <summary>
        /// ClickExitExpensesPane
        /// </summary>
        public void ClickExitExpensesPane()
        {
            #region Variable Declarations
            HtmlSpan uIExitPane = this.UIWelcometoExpensesWinWindow.UIWelcometoExpensesDocument1.UIExitPane;
            #endregion

            // Click 'Exit' pane
            Mouse.Click(uIExitPane, new Point(3, 5));
        }
        
        #region Properties
        public virtual SharedFrameworkLogonEnterLogonDetailsParams SharedFrameworkLogonEnterLogonDetailsParams
        {
            get
            {
                if ((this.mSharedFrameworkLogonEnterLogonDetailsParams == null))
                {
                    this.mSharedFrameworkLogonEnterLogonDetailsParams = new SharedFrameworkLogonEnterLogonDetailsParams();
                }
                return this.mSharedFrameworkLogonEnterLogonDetailsParams;
            }
        }
        
        public virtual SharedLaunchIEParams SharedLaunchIEParams
        {
            get
            {
                if ((this.mSharedLaunchIEParams == null))
                {
                    this.mSharedLaunchIEParams = new SharedLaunchIEParams();
                }
                return this.mSharedLaunchIEParams;
            }
        }
        
        public virtual SharedLogonEnterLogonDetailsParams SharedLogonEnterLogonDetailsParams
        {
            get
            {
                if ((this.mSharedLogonEnterLogonDetailsParams == null))
                {
                    this.mSharedLogonEnterLogonDetailsParams = new SharedLogonEnterLogonDetailsParams();
                }
                return this.mSharedLogonEnterLogonDetailsParams;
            }
        }
        
        public virtual SharedNavigateToExpensesLogonParams SharedNavigateToExpensesLogonParams
        {
            get
            {
                if ((this.mSharedNavigateToExpensesLogonParams == null))
                {
                    this.mSharedNavigateToExpensesLogonParams = new SharedNavigateToExpensesLogonParams();
                }
                return this.mSharedNavigateToExpensesLogonParams;
            }
        }
        
        public virtual SharedNavigateToHomePageParams SharedNavigateToHomePageParams
        {
            get
            {
                if ((this.mSharedNavigateToHomePageParams == null))
                {
                    this.mSharedNavigateToHomePageParams = new SharedNavigateToHomePageParams();
                }
                return this.mSharedNavigateToHomePageParams;
            }
        }
        
        public UIExpenseslogonWindowsWindow UIExpenseslogonWindowsWindow
        {
            get
            {
                if ((this.mUIExpenseslogonWindowsWindow == null))
                {
                    this.mUIExpenseslogonWindowsWindow = new UIExpenseslogonWindowsWindow();
                }
                return this.mUIExpenseslogonWindowsWindow;
            }
        }
        
        public UIRunningApplicationsWindow UIRunningApplicationsWindow
        {
            get
            {
                if ((this.mUIRunningApplicationsWindow == null))
                {
                    this.mUIRunningApplicationsWindow = new UIRunningApplicationsWindow();
                }
                return this.mUIRunningApplicationsWindow;
            }
        }
        
        public UIMyDetailsWindowsInteWindow UIMyDetailsWindowsInteWindow
        {
            get
            {
                if ((this.mUIMyDetailsWindowsInteWindow == null))
                {
                    this.mUIMyDetailsWindowsInteWindow = new UIMyDetailsWindowsInteWindow();
                }
                return this.mUIMyDetailsWindowsInteWindow;
            }
        }
        
        public UIFramework2010logonWiWindow UIFramework2010logonWiWindow
        {
            get
            {
                if ((this.mUIFramework2010logonWiWindow == null))
                {
                    this.mUIFramework2010logonWiWindow = new UIFramework2010logonWiWindow();
                }
                return this.mUIFramework2010logonWiWindow;
            }
        }
        
        public UIFrameworklogonWindowWindow UIFrameworklogonWindowWindow
        {
            get
            {
                if ((this.mUIFrameworklogonWindowWindow == null))
                {
                    this.mUIFrameworklogonWindowWindow = new UIFrameworklogonWindowWindow();
                }
                return this.mUIFrameworklogonWindowWindow;
            }
        }
        
        public UIGoogleWindowsInterneWindow UIGoogleWindowsInterneWindow
        {
            get
            {
                if ((this.mUIGoogleWindowsInterneWindow == null))
                {
                    this.mUIGoogleWindowsInterneWindow = new UIGoogleWindowsInterneWindow();
                }
                return this.mUIGoogleWindowsInterneWindow;
            }
        }
        
        public UIIPAddressFilteringWiWindow UIIPAddressFilteringWiWindow
        {
            get
            {
                if ((this.mUIIPAddressFilteringWiWindow == null))
                {
                    this.mUIIPAddressFilteringWiWindow = new UIIPAddressFilteringWiWindow();
                }
                return this.mUIIPAddressFilteringWiWindow;
            }
        }
        
        public UICustomEntityCustomEnWindow UICustomEntityCustomEnWindow
        {
            get
            {
                if ((this.mUICustomEntityCustomEnWindow == null))
                {
                    this.mUICustomEntityCustomEnWindow = new UICustomEntityCustomEnWindow();
                }
                return this.mUICustomEntityCustomEnWindow;
            }
        }
        
        public UICustomEntityabcabcabWindow UICustomEntityabcabcabWindow
        {
            get
            {
                if ((this.mUICustomEntityabcabcabWindow == null))
                {
                    this.mUICustomEntityabcabcabWindow = new UICustomEntityabcabcabWindow();
                }
                return this.mUICustomEntityabcabcabWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIWelcometoExpensesWinWindow UIWelcometoExpensesWinWindow
        {
            get
            {
                if ((this.mUIWelcometoExpensesWinWindow == null))
                {
                    this.mUIWelcometoExpensesWinWindow = new UIWelcometoExpensesWinWindow();
                }
                return this.mUIWelcometoExpensesWinWindow;
            }
        }
        #endregion
        
        #region Fields
        private SharedFrameworkLogonEnterLogonDetailsParams mSharedFrameworkLogonEnterLogonDetailsParams;
        
        private SharedLaunchIEParams mSharedLaunchIEParams;
        
        private SharedLogonEnterLogonDetailsParams mSharedLogonEnterLogonDetailsParams;
        
        private SharedNavigateToExpensesLogonParams mSharedNavigateToExpensesLogonParams;
        
        private SharedNavigateToHomePageParams mSharedNavigateToHomePageParams;
        
        private UIExpenseslogonWindowsWindow mUIExpenseslogonWindowsWindow;
        
        private UIRunningApplicationsWindow mUIRunningApplicationsWindow;
        
        private UIMyDetailsWindowsInteWindow mUIMyDetailsWindowsInteWindow;
        
        private UIFramework2010logonWiWindow mUIFramework2010logonWiWindow;
        
        private UIFrameworklogonWindowWindow mUIFrameworklogonWindowWindow;
        
        private UIGoogleWindowsInterneWindow mUIGoogleWindowsInterneWindow;
        
        private UIIPAddressFilteringWiWindow mUIIPAddressFilteringWiWindow;
        
        private UICustomEntityCustomEnWindow mUICustomEntityCustomEnWindow;
        
        private UICustomEntityabcabcabWindow mUICustomEntityabcabcabWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UIWelcometoExpensesWinWindow mUIWelcometoExpensesWinWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SharedFrameworkLogonEnterLogonDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SharedFrameworkLogonEnterLogonDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'sel' in 'Company ID' text box
        /// </summary>
        public string UICompanyIDEditText = "sel";
        
        /// <summary>
        /// Type 'james' in 'Username' text box
        /// </summary>
        public string UIUsernameEditText = "james";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wN/lLRjKUVagBsE3iJewBMd";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SharedLaunchIE'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SharedLaunchIEParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://testing.sel-expenses.com/' using new browser instance
        /// </summary>
        public string Url = "https://testing.sel-expenses.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SharedLogonEnterLogonDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SharedLogonEnterLogonDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'migration' in 'Company ID' text box
        /// </summary>
        public string UICompanyIDEditText = "migration";
        
        /// <summary>
        /// Type 'james' in 'Username' text box
        /// </summary>
        public string UIUsernameEditText = "james";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wN/lLRjKUVagBsE3iJewBMd";
        
        /// <summary>
        /// Type '{Enter}' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SharedNavigateToExpensesLogon'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SharedNavigateToExpensesLogonParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://testing.sel-expenses.com/'
        /// </summary>
        public string UIExpenseslogonWindowsWindowUrl = "https://testing.sel-expenses.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SharedNavigateToHomePage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SharedNavigateToHomePageParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://testing.sel-expenses.com/home.aspx'
        /// </summary>
        public string UIMyDetailsWindowsInteWindowUrl = "https://testing.sel-expenses.com/home.aspx";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIExpenseslogonWindowsWindow : BrowserWindow
    {
        
        public UIExpenseslogonWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "expenses logon";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("expenses logon");
            this.WindowTitles.Add("Welcome to expenses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIExpenseslogonDocument UIExpenseslogonDocument
        {
            get
            {
                if ((this.mUIExpenseslogonDocument == null))
                {
                    this.mUIExpenseslogonDocument = new UIExpenseslogonDocument(this);
                }
                return this.mUIExpenseslogonDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIExpenseslogonDocument mUIExpenseslogonDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIExpenseslogonDocument : HtmlDocument
    {
        
        public UIExpenseslogonDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "logonpage";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "expenses logon";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/logon.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/logon.aspx";
            this.WindowTitles.Add("expenses logon");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UICompanyIDEdit
        {
            get
            {
                if ((this.mUICompanyIDEdit == null))
                {
                    this.mUICompanyIDEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICompanyIDEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtCompanyID";
                    this.mUICompanyIDEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtCompanyID";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Company ID";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtCompanyID typ";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUICompanyIDEdit.WindowTitles.Add("expenses logon");
                    #endregion
                }
                return this.mUICompanyIDEdit;
            }
        }
        
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtUsername";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtUsername";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Username";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtUsername type";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIUsernameEdit.WindowTitles.Add("expenses logon");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtPassword";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtPassword";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtPassword valu";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIPasswordEdit.WindowTitles.Add("expenses logon");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUICompanyIDEdit;
        
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRunningApplicationsWindow : WinWindow
    {
        
        public UIRunningApplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running Applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running Applications");
            #endregion
        }
        
        #region Properties
        public UIRunningApplicationsClient UIRunningApplicationsClient
        {
            get
            {
                if ((this.mUIRunningApplicationsClient == null))
                {
                    this.mUIRunningApplicationsClient = new UIRunningApplicationsClient(this);
                }
                return this.mUIRunningApplicationsClient;
            }
        }
        
        public UIRunningApplicationsToolBar UIRunningApplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningApplicationsToolBar == null))
                {
                    this.mUIRunningApplicationsToolBar = new UIRunningApplicationsToolBar(this);
                }
                return this.mUIRunningApplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningApplicationsClient mUIRunningApplicationsClient;
        
        private UIRunningApplicationsToolBar mUIRunningApplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRunningApplicationsClient : WinClient
    {
        
        public UIRunningApplicationsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Running Applications";
            this.WindowTitles.Add("Running Applications");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIRunningApplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningApplicationsToolBar == null))
                {
                    this.mUIRunningApplicationsToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIRunningApplicationsToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Running Applications";
                    this.mUIRunningApplicationsToolBar.WindowTitles.Add("Running Applications");
                    #endregion
                }
                return this.mUIRunningApplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIRunningApplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRunningApplicationsToolBar : WinToolBar
    {
        
        public UIRunningApplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running Applications";
            this.WindowTitles.Add("Running Applications");
            #endregion
        }
        
        #region Properties
        public WinButton UIExpenseslogonWindowsButton
        {
            get
            {
                if ((this.mUIExpenseslogonWindowsButton == null))
                {
                    this.mUIExpenseslogonWindowsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIExpenseslogonWindowsButton.SearchProperties[WinButton.PropertyNames.Name] = "expenses logon - Windows Internet Explorer";
                    this.mUIExpenseslogonWindowsButton.WindowTitles.Add("Running Applications");
                    #endregion
                }
                return this.mUIExpenseslogonWindowsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIExpenseslogonWindowsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMyDetailsWindowsInteWindow : BrowserWindow
    {
        
        public UIMyDetailsWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "My Details";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("My Details");
            this.WindowTitles.Add("https://testing.sel-expenses.com/home.aspx");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIFramework2010logonWiWindow : BrowserWindow
    {
        
        public UIFramework2010logonWiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "framework2010 logon";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("framework2010 logon");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFramework2010logonDocument UIFramework2010logonDocument
        {
            get
            {
                if ((this.mUIFramework2010logonDocument == null))
                {
                    this.mUIFramework2010logonDocument = new UIFramework2010logonDocument(this);
                }
                return this.mUIFramework2010logonDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIFramework2010logonDocument mUIFramework2010logonDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIFramework2010logonDocument : HtmlDocument
    {
        
        public UIFramework2010logonDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "logonpage";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "framework2010 logon";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/logon.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/logon.aspx?ReturnUrl=%2f";
            this.WindowTitles.Add("framework2010 logon");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UICompanyIDEdit
        {
            get
            {
                if ((this.mUICompanyIDEdit == null))
                {
                    this.mUICompanyIDEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICompanyIDEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtCompanyID";
                    this.mUICompanyIDEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtCompanyID";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Company ID";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtCompanyID typ";
                    this.mUICompanyIDEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUICompanyIDEdit.WindowTitles.Add("framework2010 logon");
                    #endregion
                }
                return this.mUICompanyIDEdit;
            }
        }
        
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtUsername";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtUsername";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Username";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtUsername type";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIUsernameEdit.WindowTitles.Add("framework2010 logon");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtPassword";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtPassword";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 145px\" id=txtPassword valu";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIPasswordEdit.WindowTitles.Add("framework2010 logon");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlInputButton UILogonButton
        {
            get
            {
                if ((this.mUILogonButton == null))
                {
                    this.mUILogonButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILogonButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLogon";
                    this.mUILogonButton.SearchProperties[HtmlButton.PropertyNames.Name] = "btnLogon";
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUILogonButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/button_logon.png";
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.Title] = "Logon";
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUILogonButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    this.mUILogonButton.WindowTitles.Add("framework2010 logon");
                    #endregion
                }
                return this.mUILogonButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUICompanyIDEdit;
        
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlInputButton mUILogonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIFrameworklogonWindowWindow : BrowserWindow
    {
        
        public UIFrameworklogonWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "framework logon";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("framework logon");
            this.WindowTitles.Add("Tailoring Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "40961";
            this.WindowTitles.Add("framework logon");
            this.WindowTitles.Add("Tailoring Options");
            #endregion
        }
        
        #region Properties
        public WinText UIDoneText
        {
            get
            {
                if ((this.mUIDoneText == null))
                {
                    this.mUIDoneText = new WinText(this);
                    #region Search Criteria
                    this.mUIDoneText.SearchProperties[WinText.PropertyNames.Name] = "Done";
                    this.mUIDoneText.WindowTitles.Add("framework logon");
                    this.mUIDoneText.WindowTitles.Add("Tailoring Options");
                    #endregion
                }
                return this.mUIDoneText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIDoneText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIGoogleWindowsInterneWindow : BrowserWindow
    {
        
        public UIGoogleWindowsInterneWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public WinProgressBar UIItemProgressBar
        {
            get
            {
                if ((this.mUIItemProgressBar == null))
                {
                    this.mUIItemProgressBar = new WinProgressBar(this);
                    #region Search Criteria
                    this.mUIItemProgressBar.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIItemProgressBar;
            }
        }
        #endregion
        
        #region Fields
        private WinProgressBar mUIItemProgressBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIPAddressFilteringWiWindow : BrowserWindow
    {
        
        public UIIPAddressFilteringWiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "IP Address Filtering";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIPAddressFilteringDocument UIIPAddressFilteringDocument
        {
            get
            {
                if ((this.mUIIPAddressFilteringDocument == null))
                {
                    this.mUIIPAddressFilteringDocument = new UIIPAddressFilteringDocument(this);
                }
                return this.mUIIPAddressFilteringDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIPAddressFilteringDocument mUIIPAddressFilteringDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIPAddressFilteringDocument : HtmlDocument
    {
        
        public UIIPAddressFilteringDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "IP Address Filtering";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminIPfilters.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminIPfilters.aspx";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlSpan UICtl00_sitemapPane
        {
            get
            {
                if ((this.mUICtl00_sitemapPane == null))
                {
                    this.mUICtl00_sitemapPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICtl00_sitemapPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_sitemap";
                    this.mUICtl00_sitemapPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Home : Administrative Settings : System ";
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FONT-FAMILY: Arial; TEXT-DECORATI";
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_sitemapPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00_sitemapPane;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlSpan mUICtl00_sitemapPane;
        
        private UIInfodivPane mUIInfodivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy | Help & Support | Exit H";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICompanyPolicyHelpSupPane
        {
            get
            {
                if ((this.mUICompanyPolicyHelpSupPane == null))
                {
                    this.mUICompanyPolicyHelpSupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy | Help & Support | Exit ";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "linkbar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=linkbar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICompanyPolicyHelpSupPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICompanyPolicyHelpSupPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICompanyPolicyHelpSupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr CodedUI Admin | 15 July 2011 IP Addre";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMrCodedUIAdmin15JulyPane
        {
            get
            {
                if ((this.mUIMrCodedUIAdmin15JulyPane == null))
                {
                    this.mUIMrCodedUIAdmin15JulyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMrCodedUIAdmin15JulyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMrCodedUIAdmin15JulyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMrCodedUIAdmin15JulyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr CodedUI Admin | 15 July 2011 ";
                    this.mUIMrCodedUIAdmin15JulyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMrCodedUIAdmin15JulyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIMrCodedUIAdmin15JulyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIMrCodedUIAdmin15JulyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIMrCodedUIAdmin15JulyPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIMrCodedUIAdmin15JulyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMrCodedUIAdmin15JulyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICustomEntityCustomEnWindow : BrowserWindow
    {
        
        public UICustomEntityCustomEnWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Custom Entity: Custom Entity 1";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Custom Entity: Custom Entity 1");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntityCustomEnDocument UICustomEntityCustomEnDocument
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument == null))
                {
                    this.mUICustomEntityCustomEnDocument = new UICustomEntityCustomEnDocument(this);
                }
                return this.mUICustomEntityCustomEnDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntityCustomEnDocument mUICustomEntityCustomEnDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICustomEntityCustomEnDocument : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Custom Entity: Custom Entity 1";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GreenLight/expenses//shared/admin/aecustomentity.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GreenLight/expenses//shared/admin/aecustomentity.aspx?entityid=6" +
                "5693";
            this.WindowTitles.Add("Custom Entity: Custom Entity 1");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITextforsaveandstaybuEdit
        {
            get
            {
                if ((this.mUITextforsaveandstaybuEdit == null))
                {
                    this.mUITextforsaveandstaybuEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITextforsaveandstaybuEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabConForms$tabGenDet$txtsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Text for \'save and stay\' button";
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=\"SEL.Forms.RunOnEnter(event, s";
                    this.mUITextforsaveandstaybuEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "38";
                    this.mUITextforsaveandstaybuEdit.WindowTitles.Add("Custom Entity: Custom Entity 1");
                    #endregion
                }
                return this.mUITextforsaveandstaybuEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITextforsaveandstaybuEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICustomEntityabcabcabWindow : BrowserWindow
    {
        
        public UICustomEntityabcabcabWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Custom Entity: abc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc" +
                " abcabc abcabc";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Custom Entity: abc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc" +
                    " abcabc abcabc");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntityabcabcabDocument UICustomEntityabcabcabDocument
        {
            get
            {
                if ((this.mUICustomEntityabcabcabDocument == null))
                {
                    this.mUICustomEntityabcabcabDocument = new UICustomEntityabcabcabDocument(this);
                }
                return this.mUICustomEntityabcabcabDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntityabcabcabDocument mUICustomEntityabcabcabDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICustomEntityabcabcabDocument : HtmlDocument
    {
        
        public UICustomEntityabcabcabDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = @"Custom Entity: abc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc a";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GreenLight/expenses//shared/admin/aecustomentity.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GreenLight/expenses//shared/admin/aecustomentity.aspx?entityid=6" +
                "9987";
            this.WindowTitles.Add("Custom Entity: abc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc" +
                    " abcabc abcabc");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEntitynameEdit
        {
            get
            {
                if ((this.mUIEntitynameEdit == null))
                {
                    this.mUIEntitynameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEntitynameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtentityname";
                    this.mUIEntitynameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtentityname";
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Entity name*";
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=\"SEL.Forms.RunOnEnter(event, s";
                    this.mUIEntitynameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIEntitynameEdit.WindowTitles.Add("Custom Entity: abc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc abcabc" +
                            " abcabc abcabc");
                    #endregion
                }
                return this.mUIEntitynameEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEntitynameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIPasteMenuItem
        {
            get
            {
                if ((this.mUIPasteMenuItem == null))
                {
                    this.mUIPasteMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIPasteMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Paste";
                    #endregion
                }
                return this.mUIPasteMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIPasteMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIWelcometoExpensesWinWindow : BrowserWindow
    {
        
        public UIWelcometoExpensesWinWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to Expenses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to Expenses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoExpensesDocument UIWelcometoExpensesDocument
        {
            get
            {
                if ((this.mUIWelcometoExpensesDocument == null))
                {
                    this.mUIWelcometoExpensesDocument = new UIWelcometoExpensesDocument(this);
                }
                return this.mUIWelcometoExpensesDocument;
            }
        }
        
        public UIWelcometoExpensesDocument1 UIWelcometoExpensesDocument1
        {
            get
            {
                if ((this.mUIWelcometoExpensesDocument1 == null))
                {
                    this.mUIWelcometoExpensesDocument1 = new UIWelcometoExpensesDocument1(this);
                }
                return this.mUIWelcometoExpensesDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoExpensesDocument mUIWelcometoExpensesDocument;
        
        private UIWelcometoExpensesDocument1 mUIWelcometoExpensesDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIWelcometoExpensesDocument : HtmlDocument
    {
        
        public UIWelcometoExpensesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to Expenses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/home.aspx";
            this.WindowTitles.Add("Welcome to Expenses");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIExitPane
        {
            get
            {
                if ((this.mUIExitPane == null))
                {
                    this.mUIExitPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIExitPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel9";
                    this.mUIExitPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Exit";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"COLOR: #6280a7\" id=menuitemlabel9";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIExitPane.WindowTitles.Add("Welcome to Expenses");
                    #endregion
                }
                return this.mUIExitPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIExitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIWelcometoExpensesDocument1 : HtmlDocument
    {
        
        public UIWelcometoExpensesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to Expenses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing3.sel-expenses.com/home.aspx";
            this.WindowTitles.Add("Welcome to Expenses");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIExitPane
        {
            get
            {
                if ((this.mUIExitPane == null))
                {
                    this.mUIExitPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIExitPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel15";
                    this.mUIExitPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Exit";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"COLOR: #6280a7\" id=menuitemlabel1";
                    this.mUIExitPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "33";
                    this.mUIExitPane.WindowTitles.Add("Welcome to Expenses");
                    #endregion
                }
                return this.mUIExitPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIExitPane;
        #endregion
    }
}
