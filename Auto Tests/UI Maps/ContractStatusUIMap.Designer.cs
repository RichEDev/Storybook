// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ContractStatusUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ContractStatusUIMap
    {
        
        /// <summary>
        /// NavigateToContractStatusFromHomePage
        /// </summary>
        public void NavigateToContractStatusFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uIContractStatusPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UIContractStatusPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(69, 17));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(63, 12));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(69, 15));

            // Click 'Contract Status' pane
            Mouse.Click(uIContractStatusPane, new Point(59, 12));
        }
        
        /// <summary>
        /// AddContractStatusWithCancel - Use 'AddContractStatusWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddContractStatusWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIContractStatusDescriEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDescriEdit;
            HtmlCheckBox uIContractStatusDefiniCheckBox = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDefiniCheckBox;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(45, 11));

            // Type 'CodedUI Contract Status' in 'Contract Status Description' text box
            uIContractStatusDescriEdit.Text = this.AddContractStatusWithCancelParams.UIContractStatusDescriEditText;

            // Select 'Contract Status Definition Archive Type Indicator' check box
            uIContractStatusDefiniCheckBox.Checked = this.AddContractStatusWithCancelParams.UIContractStatusDefiniCheckBoxChecked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(37, 22));
        }
        
        /// <summary>
        /// AddContractStatus - Use 'AddContractStatusParams' to pass parameters into this method.
        /// </summary>
        public void AddContractStatus()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uIContractStatusDescriEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDescriEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(52, 13));

            // Type 'CodedUI Contract Status' in 'Contract Status Description' text box
            uIContractStatusDescriEdit.Text = this.AddContractStatusParams.UIContractStatusDescriEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(33, 22));
        }
        
        /// <summary>
        /// ValidateContractStatusDoesNotExist - Use 'ValidateContractStatusDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractStatusDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractStatuCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Table.UICodedUIContractStatuCell;
            #endregion

            // Verify that 'CodedUI Contract Status' cell's property 'InnerText' is not equal to 'CodedUI Contract Status'
            Assert.AreNotEqual(this.ValidateContractStatusDoesNotExistExpectedValues.UICodedUIContractStatuCellInnerText, uICodedUIContractStatuCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddContractStatus - Use 'ValidateAddContractStatusExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractStatus()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractStatuCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Table.UICodedUIContractStatuCell;
            HtmlCheckBox uIItemCheckBox = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row.UIItemCheckBox;
            #endregion

            // Verify that 'CodedUI Contract Status' cell's property 'InnerText' equals 'CodedUI Contract Status'
            Assert.AreEqual(this.ValidateAddContractStatusExpectedValues.UICodedUIContractStatuCellInnerText, uICodedUIContractStatuCell.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateAddContractStatusExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        /// <summary>
        /// EditContractStatusWithCancel - Use 'EditContractStatusWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditContractStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row.UIEditImage;
            HtmlEdit uIContractStatusDescriEdit1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDescriEdit1;
            HtmlCheckBox uIContractStatusDefiniCheckBox1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDefiniCheckBox1;
            HtmlInputButton uICtl00contentmaincmdDButton1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(7, 11));

            // Type 'CodedUI Contract Status EDITED' in 'Contract Status Description' text box
            uIContractStatusDescriEdit1.Text = this.EditContractStatusWithCancelParams.UIContractStatusDescriEdit1Text;

            // Select 'Contract Status Definition Archive Type Indicator' check box
            uIContractStatusDefiniCheckBox1.Checked = this.EditContractStatusWithCancelParams.UIContractStatusDefiniCheckBox1Checked;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton1, new Point(39, 7));
        }
        
        /// <summary>
        /// EditContractStatus - Use 'EditContractStatusParams' to pass parameters into this method.
        /// </summary>
        public void EditContractStatus()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row.UIEditImage;
            HtmlEdit uIContractStatusDescriEdit1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDescriEdit1;
            HtmlCheckBox uIContractStatusDefiniCheckBox1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDefiniCheckBox1;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(5, 9));

            // Type 'CodedUI Contract Status EDITED' in 'Contract Status Description' text box
            uIContractStatusDescriEdit1.Text = this.EditContractStatusParams.UIContractStatusDescriEdit1Text;

            // Select 'Contract Status Definition Archive Type Indicator' check box
            uIContractStatusDefiniCheckBox1.Checked = this.EditContractStatusParams.UIContractStatusDefiniCheckBox1Checked;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(11, 8));
        }
        
        /// <summary>
        /// ValidateEditContractStatus - Use 'ValidateEditContractStatusExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditContractStatus()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractStatuCell1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Table.UICodedUIContractStatuCell1;
            HtmlCheckBox uIItemCheckBox = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row1.UIItemCheckBox;
            #endregion

            // Verify that 'CodedUI Contract Status EDITED' cell's property 'InnerText' equals 'CodedUI Contract Status EDITED'
            Assert.AreEqual(this.ValidateEditContractStatusExpectedValues.UICodedUIContractStatuCell1InnerText, uICodedUIContractStatuCell1.InnerText);

            // Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
            Assert.AreEqual(this.ValidateEditContractStatusExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        /// <summary>
        /// EditContractStatusResetValues - Use 'EditContractStatusResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditContractStatusResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row1.UIEditImage;
            HtmlEdit uIContractStatusDescriEdit1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDescriEdit1;
            HtmlCheckBox uIContractStatusDefiniCheckBox1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusDefiniCheckBox1;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(7, 12));

            // Type 'CodedUI Contract Status' in 'Contract Status Description' text box
            uIContractStatusDescriEdit1.Text = this.EditContractStatusResetValuesParams.UIContractStatusDescriEdit1Text;

            // Clear 'Contract Status Definition Archive Type Indicator' check box
            uIContractStatusDefiniCheckBox1.Checked = this.EditContractStatusResetValuesParams.UIContractStatusDefiniCheckBox1Checked;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(38, 15));
        }
        
        /// <summary>
        /// ArchiveContractStatusWithCancel
        /// </summary>
        public void ArchiveContractStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(14, 14));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateContractStatusIsNotArchived - Use 'ValidateContractStatusIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractStatusIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateContractStatusIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ArchiveContractStatus
        /// </summary>
        public void ArchiveContractStatus()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(14, 14));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveContractStatusWithCancel
        /// </summary>
        public void UnArchiveContractStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(11, 11));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateContractStatusIsArchived - Use 'ValidateContractStatusIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractStatusIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateContractStatusIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveContractStatus
        /// </summary>
        public void UnArchiveContractStatus()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(9, 10));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateAddDuplicateContractStatus - Use 'ValidateAddDuplicateContractStatusExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateContractStatus()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'DisplayText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateContractStatusExpectedValues.UICtl00_pnlMasterPopupPaneDisplayText, uICtl00_pnlMasterPopupPane.DisplayText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateContractStatusExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// DeleteContractStatusWithCancel
        /// </summary>
        public void DeleteContractStatusWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(6, 4));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteContractStatus
        /// </summary>
        public void DeleteContractStatus()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_8ceaa3fa_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(3, 8));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateContractStatusPageLayout - Use 'ValidateContractStatusPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractStatusPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uICurrentDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMaindivPane.UICurrentDefinitionsPane;
            HtmlDiv uIJamesLloyd21SeptembePane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd21SeptembePane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIContractStatusPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractStatusPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UICurrentDefinitionsPaneInnerText, uICurrentDefinitionsPane.InnerText);

            // Verify that 'James Lloyd | 21 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd21SeptembePane.DisplayText, this.ValidateContractStatusPageLayoutExpectedValues.UIJamesLloyd21SeptembePaneDisplayText);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Contract Status '
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Contract Status' pane's property 'InnerText' equals 'Contract Status'
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UIContractStatusPaneInnerText, uIContractStatusPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateContractStatusPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);
        }
        
        #region Properties
        public virtual AddContractStatusWithCancelParams AddContractStatusWithCancelParams
        {
            get
            {
                if ((this.mAddContractStatusWithCancelParams == null))
                {
                    this.mAddContractStatusWithCancelParams = new AddContractStatusWithCancelParams();
                }
                return this.mAddContractStatusWithCancelParams;
            }
        }
        
        public virtual AddContractStatusParams AddContractStatusParams
        {
            get
            {
                if ((this.mAddContractStatusParams == null))
                {
                    this.mAddContractStatusParams = new AddContractStatusParams();
                }
                return this.mAddContractStatusParams;
            }
        }
        
        public virtual ValidateContractStatusDoesNotExistExpectedValues ValidateContractStatusDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateContractStatusDoesNotExistExpectedValues == null))
                {
                    this.mValidateContractStatusDoesNotExistExpectedValues = new ValidateContractStatusDoesNotExistExpectedValues();
                }
                return this.mValidateContractStatusDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateAddContractStatusExpectedValues ValidateAddContractStatusExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractStatusExpectedValues == null))
                {
                    this.mValidateAddContractStatusExpectedValues = new ValidateAddContractStatusExpectedValues();
                }
                return this.mValidateAddContractStatusExpectedValues;
            }
        }
        
        public virtual EditContractStatusWithCancelParams EditContractStatusWithCancelParams
        {
            get
            {
                if ((this.mEditContractStatusWithCancelParams == null))
                {
                    this.mEditContractStatusWithCancelParams = new EditContractStatusWithCancelParams();
                }
                return this.mEditContractStatusWithCancelParams;
            }
        }
        
        public virtual EditContractStatusParams EditContractStatusParams
        {
            get
            {
                if ((this.mEditContractStatusParams == null))
                {
                    this.mEditContractStatusParams = new EditContractStatusParams();
                }
                return this.mEditContractStatusParams;
            }
        }
        
        public virtual ValidateEditContractStatusExpectedValues ValidateEditContractStatusExpectedValues
        {
            get
            {
                if ((this.mValidateEditContractStatusExpectedValues == null))
                {
                    this.mValidateEditContractStatusExpectedValues = new ValidateEditContractStatusExpectedValues();
                }
                return this.mValidateEditContractStatusExpectedValues;
            }
        }
        
        public virtual EditContractStatusResetValuesParams EditContractStatusResetValuesParams
        {
            get
            {
                if ((this.mEditContractStatusResetValuesParams == null))
                {
                    this.mEditContractStatusResetValuesParams = new EditContractStatusResetValuesParams();
                }
                return this.mEditContractStatusResetValuesParams;
            }
        }
        
        public virtual ValidateContractStatusIsNotArchivedExpectedValues ValidateContractStatusIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractStatusIsNotArchivedExpectedValues == null))
                {
                    this.mValidateContractStatusIsNotArchivedExpectedValues = new ValidateContractStatusIsNotArchivedExpectedValues();
                }
                return this.mValidateContractStatusIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateContractStatusIsArchivedExpectedValues ValidateContractStatusIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractStatusIsArchivedExpectedValues == null))
                {
                    this.mValidateContractStatusIsArchivedExpectedValues = new ValidateContractStatusIsArchivedExpectedValues();
                }
                return this.mValidateContractStatusIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateContractStatusExpectedValues ValidateAddDuplicateContractStatusExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateContractStatusExpectedValues == null))
                {
                    this.mValidateAddDuplicateContractStatusExpectedValues = new ValidateAddDuplicateContractStatusExpectedValues();
                }
                return this.mValidateAddDuplicateContractStatusExpectedValues;
            }
        }
        
        public virtual ValidateContractStatusPageLayoutExpectedValues ValidateContractStatusPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateContractStatusPageLayoutExpectedValues == null))
                {
                    this.mValidateContractStatusPageLayoutExpectedValues = new ValidateContractStatusPageLayoutExpectedValues();
                }
                return this.mValidateContractStatusPageLayoutExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddContractStatusWithCancelParams mAddContractStatusWithCancelParams;
        
        private AddContractStatusParams mAddContractStatusParams;
        
        private ValidateContractStatusDoesNotExistExpectedValues mValidateContractStatusDoesNotExistExpectedValues;
        
        private ValidateAddContractStatusExpectedValues mValidateAddContractStatusExpectedValues;
        
        private EditContractStatusWithCancelParams mEditContractStatusWithCancelParams;
        
        private EditContractStatusParams mEditContractStatusParams;
        
        private ValidateEditContractStatusExpectedValues mValidateEditContractStatusExpectedValues;
        
        private EditContractStatusResetValuesParams mEditContractStatusResetValuesParams;
        
        private ValidateContractStatusIsNotArchivedExpectedValues mValidateContractStatusIsNotArchivedExpectedValues;
        
        private ValidateContractStatusIsArchivedExpectedValues mValidateContractStatusIsArchivedExpectedValues;
        
        private ValidateAddDuplicateContractStatusExpectedValues mValidateAddDuplicateContractStatusExpectedValues;
        
        private ValidateContractStatusPageLayoutExpectedValues mValidateContractStatusPageLayoutExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractStatusWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractStatusWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Status' in 'Contract Status Description' text box
        /// </summary>
        public string UIContractStatusDescriEditText = "CodedUI Contract Status";
        
        /// <summary>
        /// Select 'Contract Status Definition Archive Type Indicator' check box
        /// </summary>
        public bool UIContractStatusDefiniCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractStatusParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Status' in 'Contract Status Description' text box
        /// </summary>
        public string UIContractStatusDescriEditText = "CodedUI Contract Status";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractStatusDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractStatusDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Status' cell's property 'InnerText' is not equal to 'CodedUI Contract Status'
        /// </summary>
        public string UICodedUIContractStatuCellInnerText = "CodedUI Contract Status";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractStatusExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Status' cell's property 'InnerText' equals 'CodedUI Contract Status'
        /// </summary>
        public string UICodedUIContractStatuCellInnerText = "CodedUI Contract Status";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UIItemCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractStatusWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractStatusWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Status EDITED' in 'Contract Status Description' text box
        /// </summary>
        public string UIContractStatusDescriEdit1Text = "CodedUI Contract Status EDITED";
        
        /// <summary>
        /// Select 'Contract Status Definition Archive Type Indicator' check box
        /// </summary>
        public bool UIContractStatusDefiniCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractStatusParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Status EDITED' in 'Contract Status Description' text box
        /// </summary>
        public string UIContractStatusDescriEdit1Text = "CodedUI Contract Status EDITED";
        
        /// <summary>
        /// Select 'Contract Status Definition Archive Type Indicator' check box
        /// </summary>
        public bool UIContractStatusDefiniCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditContractStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditContractStatusExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Status EDITED' cell's property 'InnerText' equals 'CodedUI Contract Status EDITED'
        /// </summary>
        public string UICodedUIContractStatuCell1InnerText = "CodedUI Contract Status EDITED";
        
        /// <summary>
        /// Verify that 'Unknown Name' check box's property 'Checked' equals 'True'
        /// </summary>
        public bool UIItemCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractStatusResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractStatusResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Status' in 'Contract Status Description' text box
        /// </summary>
        public string UIContractStatusDescriEdit1Text = "CodedUI Contract Status";
        
        /// <summary>
        /// Clear 'Contract Status Definition Archive Type Indicator' check box
        /// </summary>
        public bool UIContractStatusDefiniCheckBox1Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractStatusIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractStatusIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractStatusIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractStatusIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateContractStatus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateContractStatusExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'DisplayText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneDisplayText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractStatusPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractStatusPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
        /// </summary>
        public string UICurrentDefinitionsPaneInnerText = "Current Definitions";
        
        /// <summary>
        /// Verify that 'James Lloyd | 21 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd21SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Contract Status '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Contract Information : Contract Status ";
        
        /// <summary>
        /// Verify that 'Contract Status' pane's property 'InnerText' equals 'Contract Status'
        /// </summary>
        public string UIContractStatusPaneInnerText = "Contract Status";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractStatusPane
        {
            get
            {
                if ((this.mUIContractStatusPane == null))
                {
                    this.mUIContractStatusPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractStatusPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel1";
                    this.mUIContractStatusPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Status";
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel1 class=menuitemtitle";
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIContractStatusPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUIContractStatusPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractStatusPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=111";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIContractStatusDescriEdit
        {
            get
            {
                if ((this.mUIContractStatusDescriEdit == null))
                {
                    this.mUIContractStatusDescriEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractStatusDescriEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_contractstatus_statusDescription";
                    this.mUIContractStatusDescriEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_contractstatus_statusDescription";
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Status Description";
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_contractst";
                    this.mUIContractStatusDescriEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIContractStatusDescriEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractStatusDescriEdit;
            }
        }
        
        public HtmlCheckBox UIContractStatusDefiniCheckBox
        {
            get
            {
                if ((this.mUIContractStatusDefiniCheckBox == null))
                {
                    this.mUIContractStatusDefiniCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIContractStatusDefiniCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkcodes_contractstatus_IsArchive";
                    this.mUIContractStatusDefiniCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkcodes_contractstatus_IsArchive";
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Contract Status Definition Archive Type Indicator";
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkcodes_contractst";
                    this.mUIContractStatusDefiniCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "9";
                    this.mUIContractStatusDefiniCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractStatusDefiniCheckBox;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "10";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "16";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_8ceaa3fa_Table UITbl_bdGrid_8ceaa3fa_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_8ceaa3fa_Table == null))
                {
                    this.mUITbl_bdGrid_8ceaa3fa_Table = new UITbl_bdGrid_8ceaa3fa_Table(this);
                }
                return this.mUITbl_bdGrid_8ceaa3fa_Table;
            }
        }
        
        public UITbl_bdGrid_8ceaa3fa_Row UITbl_bdGrid_8ceaa3fa_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_8ceaa3fa_Row == null))
                {
                    this.mUITbl_bdGrid_8ceaa3fa_Row = new UITbl_bdGrid_8ceaa3fa_Row(this);
                }
                return this.mUITbl_bdGrid_8ceaa3fa_Row;
            }
        }
        
        public HtmlEdit UIContractStatusDescriEdit1
        {
            get
            {
                if ((this.mUIContractStatusDescriEdit1 == null))
                {
                    this.mUIContractStatusDescriEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractStatusDescriEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_contractstatus_statusDescription";
                    this.mUIContractStatusDescriEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_contractstatus_statusDescription";
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Status Description";
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_contractst";
                    this.mUIContractStatusDescriEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIContractStatusDescriEdit1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractStatusDescriEdit1;
            }
        }
        
        public HtmlCheckBox UIContractStatusDefiniCheckBox1
        {
            get
            {
                if ((this.mUIContractStatusDefiniCheckBox1 == null))
                {
                    this.mUIContractStatusDefiniCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIContractStatusDefiniCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkcodes_contractstatus_IsArchive";
                    this.mUIContractStatusDefiniCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkcodes_contractstatus_IsArchive";
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Contract Status Definition Archive Type Indicator";
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkcodes_contractst";
                    this.mUIContractStatusDefiniCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUIContractStatusDefiniCheckBox1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractStatusDefiniCheckBox1;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton1
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton1 == null))
                {
                    this.mUICtl00contentmaincmdDButton1 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton1.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton1.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmaincmdDButton1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton1;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "19";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_8ceaa3fa_Row1 UITbl_bdGrid_8ceaa3fa_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_8ceaa3fa_Row1 == null))
                {
                    this.mUITbl_bdGrid_8ceaa3fa_Row1 = new UITbl_bdGrid_8ceaa3fa_Row1(this);
                }
                return this.mUITbl_bdGrid_8ceaa3fa_Row1;
            }
        }
        
        public UITbl_bdGrid_8ceaa3fa_Cell UITbl_bdGrid_8ceaa3fa_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_8ceaa3fa_Cell == null))
                {
                    this.mUITbl_bdGrid_8ceaa3fa_Cell = new UITbl_bdGrid_8ceaa3fa_Cell(this);
                }
                return this.mUITbl_bdGrid_8ceaa3fa_Cell;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UIContractStatusPane
        {
            get
            {
                if ((this.mUIContractStatusPane == null))
                {
                    this.mUIContractStatusPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIContractStatusPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIContractStatusPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Status";
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIContractStatusPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIContractStatusPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractStatusPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIContractStatusDescriEdit;
        
        private HtmlCheckBox mUIContractStatusDefiniCheckBox;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_8ceaa3fa_Table mUITbl_bdGrid_8ceaa3fa_Table;
        
        private UITbl_bdGrid_8ceaa3fa_Row mUITbl_bdGrid_8ceaa3fa_Row;
        
        private HtmlEdit mUIContractStatusDescriEdit1;
        
        private HtmlCheckBox mUIContractStatusDefiniCheckBox1;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton1;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_8ceaa3fa_Row1 mUITbl_bdGrid_8ceaa3fa_Row1;
        
        private UITbl_bdGrid_8ceaa3fa_Cell mUITbl_bdGrid_8ceaa3fa_Cell;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIMaindivPane mUIMaindivPane;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUIContractStatusPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UILogodivPane mUILogodivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_8ceaa3fa_Table : HtmlTable
    {
        
        public UITbl_bdGrid_8ceaa3fa_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_22cc7e643d94";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Contract Status Definition Archive Type ";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_22";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIContractStatuCell
        {
            get
            {
                if ((this.mUICodedUIContractStatuCell == null))
                {
                    this.mUICodedUIContractStatuCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractStatuCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractStatuCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractStatuCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Status";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUIContractStatuCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "20";
                    this.mUICodedUIContractStatuCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractStatuCell;
            }
        }
        
        public HtmlCell UICodedUIContractStatuCell1
        {
            get
            {
                if ((this.mUICodedUIContractStatuCell1 == null))
                {
                    this.mUICodedUIContractStatuCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractStatuCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractStatuCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractStatuCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Status EDITED";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUIContractStatuCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "20";
                    this.mUICodedUIContractStatuCell1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractStatuCell1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIContractStatuCell;
        
        private HtmlCell mUICodedUIContractStatuCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_8ceaa3fa_Row : HtmlRow
    {
        
        public UITbl_bdGrid_8ceaa3fa_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_22cc7e643d94_CodedUI Contract Status";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Status";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_2";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "4";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "5";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_8ceaa3fa_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_8ceaa3fa_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_22cc7e643d94_CodedUI Contract Status EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Status EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_2";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "4";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "5";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled CHECKED type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_8ceaa3fa_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_8ceaa3fa_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_22cc7e643d94_CodedUI Contract Status_archiveSt" +
                "atus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_8ceaa3fa_4b2c_4846_b988_2";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "18";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nContract Status Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 21 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd21SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd21SeptembePane == null))
                {
                    this.mUIJamesLloyd21SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd21SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd21SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 21 September 2010 ";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd21SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd21SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd21SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd21SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
}
