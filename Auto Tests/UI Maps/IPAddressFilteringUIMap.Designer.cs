// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.IPAddressFilteringUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class IPAddressFilteringUIMap
    {
        
        /// <summary>
        /// ClickDeleteIPFilter
        /// </summary>
        public void ClickDeleteIPFilter()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UITbl_gridIPFilters_2Row1.UIDeleteImage;
            BrowserWindow uIIPAddressFilteringWiWindow = this.UIIPAddressFilteringWiWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(7, 9));

            // Click 'Ok' button in the browser dialog window
            uIIPAddressFilteringWiWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ClickEditIPFilter
        /// </summary>
        public void ClickEditIPFilter()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UITbl_gridIPFilters_2Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(1, 6));
        }
        
        /// <summary>
        /// ClickNewIPFilter
        /// </summary>
        public void ClickNewIPFilter()
        {
            #region Variable Declarations
            HtmlHyperlink uINewIPFilterHyperlink = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UINewIPFilterPane.UINewIPFilterHyperlink;
            #endregion

            // Click 'New IP Filter' link
            Mouse.Click(uINewIPFilterHyperlink, new Point(44, 2));
        }
        
        /// <summary>
        /// PopulateIPFilterDetails - Use 'PopulateIPFilterDetailsParams' to pass parameters into this method.
        /// </summary>
        public void PopulateIPFilterDetails()
        {
            #region Variable Declarations
            HtmlEdit uIIPAddressEdit = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIIPAddressEdit;
            HtmlCheckBox uIActiveCheckBox = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIActiveCheckBox;
            HtmlTextArea uIDescriptionEdit = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDescriptionEdit;
            #endregion

            // Type '192.168.111.168' in 'IP Address*' text box
            uIIPAddressEdit.Text = this.PopulateIPFilterDetailsParams.UIIPAddressEditText;

            // Select 'Active' check box
            uIActiveCheckBox.Checked = this.PopulateIPFilterDetailsParams.UIActiveCheckBoxChecked;

            // Type 'Build Server IP Address' in 'Description' text box
            uIDescriptionEdit.Text = this.PopulateIPFilterDetailsParams.UIDescriptionEditText;
        }
        
        /// <summary>
        /// PressCancel
        /// </summary>
        public void PressCancel()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdCButton = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UICtl00contentmaincmdCButton;
            #endregion

            // Click 'ctl00$contentmain$cmdCancelIPFilter' button
            Mouse.Click(uICtl00contentmaincmdCButton, new Point(24, 18));
        }
        
        /// <summary>
        /// PressOKToConfirmDeletion
        /// </summary>
        public void PressOKToConfirmDeletion()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(25, 11));
        }
        
        /// <summary>
        /// PressSave
        /// </summary>
        public void PressSave()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdSButton = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UICtl00contentmaincmdSButton;
            #endregion

            // Click 'ctl00$contentmain$cmdSaveIPFilter' button
            Mouse.Click(uICtl00contentmaincmdSButton, new Point(16, 14));
        }
        
        /// <summary>
        /// ValidateCancelAddingIPAddressFilter - Use 'ValidateCancelAddingIPAddressFilterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCancelAddingIPAddressFilter()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UITbl_gridIPFiltersTable.UIItemCustom;
            #endregion

            // Verify that 'Unknown Name' custom control's property 'InnerText' is not equal to '2.2.2.2__Testing Cancel'
            Assert.AreNotEqual(this.ValidateCancelAddingIPAddressFilterExpectedValues.UIItemCustomInnerText, uIItemCustom.InnerText);
        }
        
        /// <summary>
        /// ValidateDeleteIPAddressFilter - Use 'ValidateDeleteIPAddressFilterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDeleteIPAddressFilter()
        {
            #region Variable Declarations
            HtmlTable uITbl_gridIPFiltersTable = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UITbl_gridIPFiltersTable;
            #endregion

            // Verify that 'tbl_gridIPFilters' table's property 'InnerText' is not equal to '1.1.1.1__Build Server IP Address EDITED'
            Assert.AreNotEqual(this.ValidateDeleteIPAddressFilterExpectedValues.UITbl_gridIPFiltersTableInnerText, uITbl_gridIPFiltersTable.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateIPAddressFilterWithInvalidData - Use 'ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateIPAddressFilterWithInvalidData()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane1 = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDivMasterPopupPane1;
            #endregion

            // Verify that 'divMasterPopup' pane's property 'InnerText' equals 'Message from Expenses
            //
            //
            //The IP address you have entered already exists'
            Assert.AreEqual(this.ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues.UIDivMasterPopupPane1InnerText, uIDivMasterPopupPane1.InnerText);
        }
        
        /// <summary>
        /// ValidateEditIPAddressFilter - Use 'ValidateEditIPAddressFilterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditIPAddressFilter()
        {
            #region Variable Declarations
            HtmlDiv uIGridIPFiltersPane = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIGridIPFiltersPane;
            #endregion

            // Verify that 'gridIPFilters' pane's property 'InnerText' contains '1.1.1.1Build Server IP Address EDITED'
            StringAssert.Contains(uIGridIPFiltersPane.InnerText, this.ValidateEditIPAddressFilterExpectedValues.UIGridIPFiltersPaneInnerText);
        }
        
        /// <summary>
        /// ValidateIPAddressField - Use 'ValidateIPAddressFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateIPAddressField()
        {
            #region Variable Declarations
            HtmlEdit uIIPAddressEdit1 = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIIPAddressEdit1;
            #endregion

            // Verify that 'IP Address*' text box's property 'ValueAttribute' equals '1.1.1.1'
            Assert.AreEqual(this.ValidateIPAddressFieldExpectedValues.UIIPAddressEdit1ValueAttribute, uIIPAddressEdit1.ValueAttribute);
        }
        
        /// <summary>
        /// ValidateIPFilterActiveField - Use 'ValidateIPFilterActiveFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateIPFilterActiveField()
        {
            #region Variable Declarations
            HtmlCheckBox uIActiveCheckBox1 = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIActiveCheckBox1;
            #endregion

            // Verify that 'Active' check box's property 'Checked' equals 'False'
            Assert.AreEqual(this.ValidateIPFilterActiveFieldExpectedValues.UIActiveCheckBox1Checked, uIActiveCheckBox1.Checked);
        }
        
        /// <summary>
        /// ValidateIPFilterDescriptionField - Use 'ValidateIPFilterDescriptionFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateIPFilterDescriptionField()
        {
            #region Variable Declarations
            HtmlTextArea uIDescriptionEdit = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDescriptionEdit;
            #endregion

            // Verify that 'Description' text box's property 'InnerText' equals 'EDITED Description'
            Assert.AreEqual(this.ValidateIPFilterDescriptionFieldExpectedValues.UIDescriptionEditInnerText, uIDescriptionEdit.InnerText);
        }
        
        /// <summary>
        /// ValidateNewIPAddressFilter - Use 'ValidateNewIPAddressFilterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNewIPAddressFilter()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_contentmain_pnPane = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UICtl00_contentmain_pnPane;
            #endregion

            // Verify that 'ctl00_contentmain_pnlGrid' pane's property 'InnerText' contains '192.168.111.168Build Server IP Address'
            StringAssert.Contains(uICtl00_contentmain_pnPane.InnerText, this.ValidateNewIPAddressFilterExpectedValues.UICtl00_contentmain_pnPaneInnerText);
        }
        
        /// <summary>
        /// PressClose
        /// </summary>
        public void PressClose()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(38, 14));
        }
        
        /// <summary>
        /// ValidateMandatoryFieldsMissing - Use 'ValidateMandatoryFieldsMissingExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryFieldsMissing()
        {
            #region Variable Declarations
            HtmlCustom uIPleaseenteranIPaddreCustom = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDivMasterPopupPane2.UIPleaseenteranIPaddreCustom;
            #endregion

            // Verify that 'Please enter an IP address in the box pr' custom control's property 'InnerText' equals 'Please enter an IP Address in the box provided'
            Assert.AreEqual(this.ValidateMandatoryFieldsMissingExpectedValues.UIPleaseenteranIPaddreCustomInnerText, uIPleaseenteranIPaddreCustom.InnerText);
        }
        
        /// <summary>
        /// ValidateAddIPAddressFilterWithInvalidData - Use 'ValidateAddIPAddressFilterWithInvalidDataExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddIPAddressFilterWithInvalidData()
        {
            #region Variable Declarations
            HtmlCustom uITheIPaddressyouhaveeCustom = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDivMasterPopupPane2.UITheIPaddressyouhaveeCustom;
            #endregion

            // Verify that 'The IP address you have entered is not v' custom control's property 'InnerText' equals 'The IP Address you have entered is not valid'
            Assert.AreEqual(this.ValidateAddIPAddressFilterWithInvalidDataExpectedValues.UITheIPaddressyouhaveeCustomInnerText, uITheIPaddressyouhaveeCustom.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateIPAddressFilter - Use 'ValidateDuplicateIPAddressFilterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateIPAddressFilter()
        {
            #region Variable Declarations
            HtmlDiv uITheIPaddressyouhaveePane = this.UIIPAddressFilteringWiWindow.UIIPAddressFilteringDocument.UIDivMasterPopupPane2.UITheIPaddressyouhaveePane;
            #endregion

            // Verify that 'The IP address you have entered already' pane's property 'InnerText' equals 'The IP Address you have entered already exists'
            Assert.AreEqual(this.ValidateDuplicateIPAddressFilterExpectedValues.UITheIPaddressyouhaveePaneInnerText, uITheIPaddressyouhaveePane.InnerText);
        }
        
        #region Properties
        public virtual PopulateIPFilterDetailsParams PopulateIPFilterDetailsParams
        {
            get
            {
                if ((this.mPopulateIPFilterDetailsParams == null))
                {
                    this.mPopulateIPFilterDetailsParams = new PopulateIPFilterDetailsParams();
                }
                return this.mPopulateIPFilterDetailsParams;
            }
        }
        
        public virtual ValidateCancelAddingIPAddressFilterExpectedValues ValidateCancelAddingIPAddressFilterExpectedValues
        {
            get
            {
                if ((this.mValidateCancelAddingIPAddressFilterExpectedValues == null))
                {
                    this.mValidateCancelAddingIPAddressFilterExpectedValues = new ValidateCancelAddingIPAddressFilterExpectedValues();
                }
                return this.mValidateCancelAddingIPAddressFilterExpectedValues;
            }
        }
        
        public virtual ValidateDeleteIPAddressFilterExpectedValues ValidateDeleteIPAddressFilterExpectedValues
        {
            get
            {
                if ((this.mValidateDeleteIPAddressFilterExpectedValues == null))
                {
                    this.mValidateDeleteIPAddressFilterExpectedValues = new ValidateDeleteIPAddressFilterExpectedValues();
                }
                return this.mValidateDeleteIPAddressFilterExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues == null))
                {
                    this.mValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues = new ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues();
                }
                return this.mValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues;
            }
        }
        
        public virtual ValidateEditIPAddressFilterExpectedValues ValidateEditIPAddressFilterExpectedValues
        {
            get
            {
                if ((this.mValidateEditIPAddressFilterExpectedValues == null))
                {
                    this.mValidateEditIPAddressFilterExpectedValues = new ValidateEditIPAddressFilterExpectedValues();
                }
                return this.mValidateEditIPAddressFilterExpectedValues;
            }
        }
        
        public virtual ValidateIPAddressFieldExpectedValues ValidateIPAddressFieldExpectedValues
        {
            get
            {
                if ((this.mValidateIPAddressFieldExpectedValues == null))
                {
                    this.mValidateIPAddressFieldExpectedValues = new ValidateIPAddressFieldExpectedValues();
                }
                return this.mValidateIPAddressFieldExpectedValues;
            }
        }
        
        public virtual ValidateIPFilterActiveFieldExpectedValues ValidateIPFilterActiveFieldExpectedValues
        {
            get
            {
                if ((this.mValidateIPFilterActiveFieldExpectedValues == null))
                {
                    this.mValidateIPFilterActiveFieldExpectedValues = new ValidateIPFilterActiveFieldExpectedValues();
                }
                return this.mValidateIPFilterActiveFieldExpectedValues;
            }
        }
        
        public virtual ValidateIPFilterDescriptionFieldExpectedValues ValidateIPFilterDescriptionFieldExpectedValues
        {
            get
            {
                if ((this.mValidateIPFilterDescriptionFieldExpectedValues == null))
                {
                    this.mValidateIPFilterDescriptionFieldExpectedValues = new ValidateIPFilterDescriptionFieldExpectedValues();
                }
                return this.mValidateIPFilterDescriptionFieldExpectedValues;
            }
        }
        
        public virtual ValidateNewIPAddressFilterExpectedValues ValidateNewIPAddressFilterExpectedValues
        {
            get
            {
                if ((this.mValidateNewIPAddressFilterExpectedValues == null))
                {
                    this.mValidateNewIPAddressFilterExpectedValues = new ValidateNewIPAddressFilterExpectedValues();
                }
                return this.mValidateNewIPAddressFilterExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryFieldsMissingExpectedValues ValidateMandatoryFieldsMissingExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryFieldsMissingExpectedValues == null))
                {
                    this.mValidateMandatoryFieldsMissingExpectedValues = new ValidateMandatoryFieldsMissingExpectedValues();
                }
                return this.mValidateMandatoryFieldsMissingExpectedValues;
            }
        }
        
        public virtual ValidateAddIPAddressFilterWithInvalidDataExpectedValues ValidateAddIPAddressFilterWithInvalidDataExpectedValues
        {
            get
            {
                if ((this.mValidateAddIPAddressFilterWithInvalidDataExpectedValues == null))
                {
                    this.mValidateAddIPAddressFilterWithInvalidDataExpectedValues = new ValidateAddIPAddressFilterWithInvalidDataExpectedValues();
                }
                return this.mValidateAddIPAddressFilterWithInvalidDataExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateIPAddressFilterExpectedValues ValidateDuplicateIPAddressFilterExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateIPAddressFilterExpectedValues == null))
                {
                    this.mValidateDuplicateIPAddressFilterExpectedValues = new ValidateDuplicateIPAddressFilterExpectedValues();
                }
                return this.mValidateDuplicateIPAddressFilterExpectedValues;
            }
        }
        
        public UIIPAddressFilteringWiWindow UIIPAddressFilteringWiWindow
        {
            get
            {
                if ((this.mUIIPAddressFilteringWiWindow == null))
                {
                    this.mUIIPAddressFilteringWiWindow = new UIIPAddressFilteringWiWindow();
                }
                return this.mUIIPAddressFilteringWiWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        #endregion
        
        #region Fields
        private PopulateIPFilterDetailsParams mPopulateIPFilterDetailsParams;
        
        private ValidateCancelAddingIPAddressFilterExpectedValues mValidateCancelAddingIPAddressFilterExpectedValues;
        
        private ValidateDeleteIPAddressFilterExpectedValues mValidateDeleteIPAddressFilterExpectedValues;
        
        private ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues mValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues;
        
        private ValidateEditIPAddressFilterExpectedValues mValidateEditIPAddressFilterExpectedValues;
        
        private ValidateIPAddressFieldExpectedValues mValidateIPAddressFieldExpectedValues;
        
        private ValidateIPFilterActiveFieldExpectedValues mValidateIPFilterActiveFieldExpectedValues;
        
        private ValidateIPFilterDescriptionFieldExpectedValues mValidateIPFilterDescriptionFieldExpectedValues;
        
        private ValidateNewIPAddressFilterExpectedValues mValidateNewIPAddressFilterExpectedValues;
        
        private ValidateMandatoryFieldsMissingExpectedValues mValidateMandatoryFieldsMissingExpectedValues;
        
        private ValidateAddIPAddressFilterWithInvalidDataExpectedValues mValidateAddIPAddressFilterWithInvalidDataExpectedValues;
        
        private ValidateDuplicateIPAddressFilterExpectedValues mValidateDuplicateIPAddressFilterExpectedValues;
        
        private UIIPAddressFilteringWiWindow mUIIPAddressFilteringWiWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PopulateIPFilterDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class PopulateIPFilterDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '192.168.111.168' in 'IP Address*' text box
        /// </summary>
        public string UIIPAddressEditText = "192.168.111.168";
        
        /// <summary>
        /// Select 'Active' check box
        /// </summary>
        public bool UIActiveCheckBoxChecked = true;
        
        /// <summary>
        /// Type 'Build Server IP Address' in 'Description' text box
        /// </summary>
        public string UIDescriptionEditText = "Build Server IP Address";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCancelAddingIPAddressFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateCancelAddingIPAddressFilterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Unknown Name' custom control's property 'InnerText' is not equal to '2.2.2.2__Testing Cancel'
        /// </summary>
        public string UIItemCustomInnerText = "2.2.2.2__Testing Cancel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDeleteIPAddressFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateDeleteIPAddressFilterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'tbl_gridIPFilters' table's property 'InnerText' is not equal to '1.1.1.1__Build Server IP Address EDITED'
        /// </summary>
        public string UITbl_gridIPFiltersTableInnerText = "1.1.1.1__Build Server IP Address EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateIPAddressFilterWithInvalidData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateDuplicateIPAddressFilterWithInvalidDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'divMasterPopup' pane's property 'InnerText' equals 'Message from Expenses
        ///
        ///
        ///The IP address you have entered already exists'
        /// </summary>
        public string UIDivMasterPopupPane1InnerText = "Message from Expenses\r\n\r\n\r\nThe IP address you have entered already exists";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditIPAddressFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateEditIPAddressFilterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'gridIPFilters' pane's property 'InnerText' contains '1.1.1.1Build Server IP Address EDITED'
        /// </summary>
        public string UIGridIPFiltersPaneInnerText = "1.1.1.1Build Server IP Address EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateIPAddressField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateIPAddressFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'IP Address*' text box's property 'ValueAttribute' equals '1.1.1.1'
        /// </summary>
        public string UIIPAddressEdit1ValueAttribute = "1.1.1.1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateIPFilterActiveField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateIPFilterActiveFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Active' check box's property 'Checked' equals 'False'
        /// </summary>
        public bool UIActiveCheckBox1Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateIPFilterDescriptionField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateIPFilterDescriptionFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Description' text box's property 'InnerText' equals 'EDITED Description'
        /// </summary>
        public string UIDescriptionEditInnerText = "EDITED Description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNewIPAddressFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateNewIPAddressFilterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_contentmain_pnlGrid' pane's property 'InnerText' contains '192.168.111.168Build Server IP Address'
        /// </summary>
        public string UICtl00_contentmain_pnPaneInnerText = "192.168.111.168Build Server IP Address";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryFieldsMissing'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateMandatoryFieldsMissingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Please enter an IP address in the box pr' custom control's property 'InnerText' equals 'Please enter an IP Address in the box provided'
        /// </summary>
        public string UIPleaseenteranIPaddreCustomInnerText = "Please enter an IP Address in the box provided";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddIPAddressFilterWithInvalidData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddIPAddressFilterWithInvalidDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The IP address you have entered is not v' custom control's property 'InnerText' equals 'The IP Address you have entered is not valid'
        /// </summary>
        public string UITheIPaddressyouhaveeCustomInnerText = "The IP Address you have entered is not valid";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateIPAddressFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateDuplicateIPAddressFilterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The IP address you have entered already' pane's property 'InnerText' equals 'The IP Address you have entered already exists'
        /// </summary>
        public string UITheIPaddressyouhaveePaneInnerText = "The IP Address you have entered already exists";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIPAddressFilteringWiWindow : BrowserWindow
    {
        
        public UIIPAddressFilteringWiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "IP Address Filtering";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIPAddressFilteringDocument UIIPAddressFilteringDocument
        {
            get
            {
                if ((this.mUIIPAddressFilteringDocument == null))
                {
                    this.mUIIPAddressFilteringDocument = new UIIPAddressFilteringDocument(this);
                }
                return this.mUIIPAddressFilteringDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIPAddressFilteringDocument mUIIPAddressFilteringDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIPAddressFilteringDocument : HtmlDocument
    {
        
        public UIIPAddressFilteringDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "IP Address Filtering";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminIPfilters.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminIPfilters.aspx";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public UINewIPFilterPane UINewIPFilterPane
        {
            get
            {
                if ((this.mUINewIPFilterPane == null))
                {
                    this.mUINewIPFilterPane = new UINewIPFilterPane(this);
                }
                return this.mUINewIPFilterPane;
            }
        }
        
        public HtmlEdit UIIPAddressEdit
        {
            get
            {
                if ((this.mUIIPAddressEdit == null))
                {
                    this.mUIIPAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIIPAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtipaddress";
                    this.mUIIPAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtipaddress";
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "IP Address*";
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtipaddress class=";
                    this.mUIIPAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIIPAddressEdit.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIIPAddressEdit;
            }
        }
        
        public HtmlCheckBox UIActiveCheckBox
        {
            get
            {
                if ((this.mUIActiveCheckBox == null))
                {
                    this.mUIActiveCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIActiveCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkactive";
                    this.mUIActiveCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkactive";
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Active";
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkactive type=chec";
                    this.mUIActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "7";
                    this.mUIActiveCheckBox.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIActiveCheckBox;
            }
        }
        
        public HtmlTextArea UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtdescription";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtdescription";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtdescription name";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDescriptionEdit.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdSButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdSButton == null))
                {
                    this.mUICtl00contentmaincmdSButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdSButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdSaveIPFilter";
                    this.mUICtl00contentmaincmdSButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdSaveIPFilter";
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdSButton.FilterProperties["Src"] = "https://testing.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdSButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmaincmdSButton.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00contentmaincmdSButton;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_pnPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_pnPane == null))
                {
                    this.mUICtl00_contentmain_pnPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_pnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnlGrid";
                    this.mUICtl00_contentmain_pnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_pnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "IP Address DescriptionActive\r\n192.168.11";
                    this.mUICtl00_contentmain_pnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_pnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUICtl00_contentmain_pnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_pnlGrid";
                    this.mUICtl00_contentmain_pnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
                    this.mUICtl00_contentmain_pnPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00_contentmain_pnPane;
            }
        }
        
        public UITbl_gridIPFilters_2Row UITbl_gridIPFilters_2Row
        {
            get
            {
                if ((this.mUITbl_gridIPFilters_2Row == null))
                {
                    this.mUITbl_gridIPFilters_2Row = new UITbl_gridIPFilters_2Row(this);
                }
                return this.mUITbl_gridIPFilters_2Row;
            }
        }
        
        public HtmlDiv UIGridIPFiltersPane
        {
            get
            {
                if ((this.mUIGridIPFiltersPane == null))
                {
                    this.mUIGridIPFiltersPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIGridIPFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "gridIPFilters";
                    this.mUIGridIPFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGridIPFiltersPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "IP Address DescriptionActive\r\n1.1.1.1Bui";
                    this.mUIGridIPFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGridIPFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIGridIPFiltersPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=gridIPFilters";
                    this.mUIGridIPFiltersPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
                    this.mUIGridIPFiltersPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIGridIPFiltersPane;
            }
        }
        
        public UITbl_gridIPFilters_2Row1 UITbl_gridIPFilters_2Row1
        {
            get
            {
                if ((this.mUITbl_gridIPFilters_2Row1 == null))
                {
                    this.mUITbl_gridIPFilters_2Row1 = new UITbl_gridIPFilters_2Row1(this);
                }
                return this.mUITbl_gridIPFilters_2Row1;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Validation Failed\r\n\r\n\r\nPlease enter";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11003; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "38";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdCButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdCButton == null))
                {
                    this.mUICtl00contentmaincmdCButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdCButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdCancelIPFilter";
                    this.mUICtl00contentmaincmdCButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdCancelIPFilter";
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdCButton.FilterProperties["Src"] = "https://testing.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdCButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmaincmdCButton.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00contentmaincmdCButton;
            }
        }
        
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Validation Failed\r\n\r\n\r\nThe IP addre";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "38";
                    this.mUIDivMasterPopupPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlDiv UIDivMasterPopupPane1
        {
            get
            {
                if ((this.mUIDivMasterPopupPane1 == null))
                {
                    this.mUIDivMasterPopupPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe IP addres";
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "38";
                    this.mUIDivMasterPopupPane1.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIDivMasterPopupPane1;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane1
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane1 == null))
                {
                    this.mUICtl00_pnlMasterPopupPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe IP addres";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11003; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
                    this.mUICtl00_pnlMasterPopupPane1.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane1;
            }
        }
        
        public UITbl_gridIPFiltersTable UITbl_gridIPFiltersTable
        {
            get
            {
                if ((this.mUITbl_gridIPFiltersTable == null))
                {
                    this.mUITbl_gridIPFiltersTable = new UITbl_gridIPFiltersTable(this);
                }
                return this.mUITbl_gridIPFiltersTable;
            }
        }
        
        public HtmlEdit UIIPAddressEdit1
        {
            get
            {
                if ((this.mUIIPAddressEdit1 == null))
                {
                    this.mUIIPAddressEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIIPAddressEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtipaddress";
                    this.mUIIPAddressEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtipaddress";
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "IP Address*";
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtipaddress class=";
                    this.mUIIPAddressEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIIPAddressEdit1.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIIPAddressEdit1;
            }
        }
        
        public HtmlCheckBox UIActiveCheckBox1
        {
            get
            {
                if ((this.mUIActiveCheckBox1 == null))
                {
                    this.mUIActiveCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIActiveCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkactive";
                    this.mUIActiveCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkactive";
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Active";
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkactive type=chec";
                    this.mUIActiveCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mUIActiveCheckBox1.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIActiveCheckBox1;
            }
        }
        
        public UITbl_gridIPFiltersTable1 UITbl_gridIPFiltersTable1
        {
            get
            {
                if ((this.mUITbl_gridIPFiltersTable1 == null))
                {
                    this.mUITbl_gridIPFiltersTable1 = new UITbl_gridIPFiltersTable1(this);
                }
                return this.mUITbl_gridIPFiltersTable1;
            }
        }
        
        public UITbl_gridIPFiltersTable2 UITbl_gridIPFiltersTable2
        {
            get
            {
                if ((this.mUITbl_gridIPFiltersTable2 == null))
                {
                    this.mUITbl_gridIPFiltersTable2 = new UITbl_gridIPFiltersTable2(this);
                }
                return this.mUITbl_gridIPFiltersTable2;
            }
        }
        
        public HtmlSpan UICtl00_sitemapPane
        {
            get
            {
                if ((this.mUICtl00_sitemapPane == null))
                {
                    this.mUICtl00_sitemapPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICtl00_sitemapPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_sitemap";
                    this.mUICtl00_sitemapPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Home : Administrative Settings : System ";
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FONT-FAMILY: Arial; TEXT-DECORATI";
                    this.mUICtl00_sitemapPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_sitemapPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICtl00_sitemapPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "9";
                    this.mUIOKImage.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public UIDivMasterPopupPane2 UIDivMasterPopupPane2
        {
            get
            {
                if ((this.mUIDivMasterPopupPane2 == null))
                {
                    this.mUIDivMasterPopupPane2 = new UIDivMasterPopupPane2(this);
                }
                return this.mUIDivMasterPopupPane2;
            }
        }
        #endregion
        
        #region Fields
        private UINewIPFilterPane mUINewIPFilterPane;
        
        private HtmlEdit mUIIPAddressEdit;
        
        private HtmlCheckBox mUIActiveCheckBox;
        
        private HtmlTextArea mUIDescriptionEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdSButton;
        
        private HtmlDiv mUICtl00_contentmain_pnPane;
        
        private UITbl_gridIPFilters_2Row mUITbl_gridIPFilters_2Row;
        
        private HtmlDiv mUIGridIPFiltersPane;
        
        private UITbl_gridIPFilters_2Row1 mUITbl_gridIPFilters_2Row1;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlInputButton mUICtl00contentmaincmdCButton;
        
        private HtmlDiv mUIDivMasterPopupPane;
        
        private HtmlDiv mUIDivMasterPopupPane1;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane1;
        
        private UITbl_gridIPFiltersTable mUITbl_gridIPFiltersTable;
        
        private HtmlEdit mUIIPAddressEdit1;
        
        private HtmlCheckBox mUIActiveCheckBox1;
        
        private UITbl_gridIPFiltersTable1 mUITbl_gridIPFiltersTable1;
        
        private UITbl_gridIPFiltersTable2 mUITbl_gridIPFiltersTable2;
        
        private HtmlSpan mUICtl00_sitemapPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private UIInfodivPane mUIInfodivPane;
        
        private HtmlImage mUIOKImage;
        
        private UIDivMasterPopupPane2 mUIDivMasterPopupPane2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UINewIPFilterPane : HtmlDiv
    {
        
        public UINewIPFilterPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmenu_pnlAddNewIPFilter";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New IP Filter ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_pnlAddNewIPFilter";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewIPFilterHyperlink
        {
            get
            {
                if ((this.mUINewIPFilterHyperlink == null))
                {
                    this.mUINewIPFilterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewIPFilterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewIPFilterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewIPFilterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewIPFilterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New IP Filter";
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.IPFilters.ShowIPFiltersModal();";
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.IPFilters.ShowIPFiltersModal();";
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:SEL.I";
                    this.mUINewIPFilterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINewIPFilterHyperlink.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUINewIPFilterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewIPFilterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridIPFilters_2Row : HtmlRow
    {
        
        public UITbl_gridIPFilters_2Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridIPFilters_2";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "192.168.111.168Build Server IP Address";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridIPFilters_2";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "SEL.IPFilters.EditIPFilter(2);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:SEL.IPFilters.EditIPFilter(2);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridIPFilters_2Row1 : HtmlRow
    {
        
        public UITbl_gridIPFilters_2Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridIPFilters_2";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "1.1.1.1Build Server IP Address EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridIPFilters_2";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "SEL.IPFilters.DeleteIPFilter(2);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:SEL.IPFilters.DeleteIPFilter(2);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"https://testing.sel-expe";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridIPFiltersTable : HtmlTable
    {
        
        public UITbl_gridIPFiltersTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridIPFilters";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "IP AddressDescription Active\r\n1.1.1.1__B";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridIPFilters class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "TBODY";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridIPFiltersTable1 : HtmlTable
    {
        
        public UITbl_gridIPFiltersTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridIPFilters";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "IP AddressDescriptionActive \r\nThere are ";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridIPFilters class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIIPAddressHyperlink
        {
            get
            {
                if ((this.mUIIPAddressHyperlink == null))
                {
                    this.mUIIPAddressHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIIPAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIIPAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIIPAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIIPAddressHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "IP Address", PropertyExpressionOperator.Contains));
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridIPFilters\',\'b7fa9156-eace-4576-a24b-8ff33ed2c63d\',0);";
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridIPFilters\',\'b7fa9156-eace-4576-a24b-8ff33ed2c63" +
                        "d\',0);";
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIIPAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIIPAddressHyperlink.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIIPAddressHyperlink;
            }
        }
        
        public HtmlHyperlink UIDescriptionHyperlink
        {
            get
            {
                if ((this.mUIDescriptionHyperlink == null))
                {
                    this.mUIDescriptionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDescriptionHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Description", PropertyExpressionOperator.Contains));
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridIPFilters\',\'b9024e7d-5ef5-4667-b7c8-68c1912fe5ef\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridIPFilters\',\'b9024e7d-5ef5-4667-b7c8-68c1912fe5e" +
                        "f\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIDescriptionHyperlink.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIDescriptionHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIIPAddressHyperlink;
        
        private HtmlHyperlink mUIDescriptionHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridIPFiltersTable2 : HtmlTable
    {
        
        public UITbl_gridIPFiltersTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridIPFilters";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "IP AddressDescription Active\r\n192.168.11";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridIPFilters class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIActiveHyperlink
        {
            get
            {
                if ((this.mUIActiveHyperlink == null))
                {
                    this.mUIActiveHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIActiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIActiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIActiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIActiveHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Active", PropertyExpressionOperator.Contains));
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridIPFilters\',\'01958ed5-cda1-4b39-b631-1174c833fa37\',0);";
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridIPFilters\',\'01958ed5-cda1-4b39-b631-1174c833fa3" +
                        "7\',0);";
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIActiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIActiveHyperlink.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIActiveHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIActiveHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy | Help & Support | Exit H";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICompanyPolicyHelpSupPane
        {
            get
            {
                if ((this.mUICompanyPolicyHelpSupPane == null))
                {
                    this.mUICompanyPolicyHelpSupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy | Help & Support | Exit ";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "linkbar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=linkbar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICompanyPolicyHelpSupPane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUICompanyPolicyHelpSupPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICompanyPolicyHelpSupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr James Lloyd | 15 July 2011 IP Address";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMrJamesLloyd15July20Pane
        {
            get
            {
                if ((this.mUIMrJamesLloyd15July20Pane == null))
                {
                    this.mUIMrJamesLloyd15July20Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMrJamesLloyd15July20Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMrJamesLloyd15July20Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMrJamesLloyd15July20Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr James Lloyd | 15 July 2011 ";
                    this.mUIMrJamesLloyd15July20Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMrJamesLloyd15July20Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIMrJamesLloyd15July20Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIMrJamesLloyd15July20Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIMrJamesLloyd15July20Pane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIMrJamesLloyd15July20Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMrJamesLloyd15July20Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDivMasterPopupPane2 : HtmlDiv
    {
        
        public UIDivMasterPopupPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Validation Failed\r\n\r\n\r\nPlease enter";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "38";
            this.WindowTitles.Add("IP Address Filtering");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPleaseenteranIPaddreCustom
        {
            get
            {
                if ((this.mUIPleaseenteranIPaddreCustom == null))
                {
                    this.mUIPleaseenteranIPaddreCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPleaseenteranIPaddreCustom.SearchProperties["Id"] = null;
                    this.mUIPleaseenteranIPaddreCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPleaseenteranIPaddreCustom.SearchProperties["TagName"] = "LI";
                    this.mUIPleaseenteranIPaddreCustom.FilterProperties["Class"] = null;
                    this.mUIPleaseenteranIPaddreCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIPleaseenteranIPaddreCustom.FilterProperties["InnerText"] = "Please enter an IP address in the box pr";
                    this.mUIPleaseenteranIPaddreCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPleaseenteranIPaddreCustom.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUIPleaseenteranIPaddreCustom;
            }
        }
        
        public HtmlCustom UITheIPaddressyouhaveeCustom
        {
            get
            {
                if ((this.mUITheIPaddressyouhaveeCustom == null))
                {
                    this.mUITheIPaddressyouhaveeCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUITheIPaddressyouhaveeCustom.SearchProperties["Id"] = null;
                    this.mUITheIPaddressyouhaveeCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUITheIPaddressyouhaveeCustom.SearchProperties["TagName"] = "LI";
                    this.mUITheIPaddressyouhaveeCustom.FilterProperties["Class"] = null;
                    this.mUITheIPaddressyouhaveeCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUITheIPaddressyouhaveeCustom.FilterProperties["InnerText"] = "The IP address you have entered is not v";
                    this.mUITheIPaddressyouhaveeCustom.FilterProperties["TagInstance"] = "1";
                    this.mUITheIPaddressyouhaveeCustom.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUITheIPaddressyouhaveeCustom;
            }
        }
        
        public HtmlDiv UITheIPaddressyouhaveePane
        {
            get
            {
                if ((this.mUITheIPaddressyouhaveePane == null))
                {
                    this.mUITheIPaddressyouhaveePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITheIPaddressyouhaveePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUITheIPaddressyouhaveePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITheIPaddressyouhaveePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The IP address you have entered already ";
                    this.mUITheIPaddressyouhaveePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITheIPaddressyouhaveePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModalBody";
                    this.mUITheIPaddressyouhaveePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=errorModalBody";
                    this.mUITheIPaddressyouhaveePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUITheIPaddressyouhaveePane.WindowTitles.Add("IP Address Filtering");
                    #endregion
                }
                return this.mUITheIPaddressyouhaveePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPleaseenteranIPaddreCustom;
        
        private HtmlCustom mUITheIPaddressyouhaveeCustom;
        
        private HtmlDiv mUITheIPaddressyouhaveePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
