// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.MobileDevicesEmployeesPageUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class MobileDevicesEmployeesPageUIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlLabel uINameLabel = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UINameLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Name*' label equals 'Name*'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UINameLabelInnerText, uINameLabel.InnerText);
        }
        
        /// <summary>
        /// ClickGeneralOptionsLink
        /// </summary>
        public void ClickGeneralOptionsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIGeneralOptionsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIGeneralOptionsHyperlink;
            #endregion

            // Click 'General Options' link
            Mouse.Click(uIGeneralOptionsHyperlink, new Point(41, 12));
        }
        
        /// <summary>
        /// ClickGeneralOptionsMobileDevicesTab
        /// </summary>
        public void ClickGeneralOptionsMobileDevicesTab()
        {
            #region Variable Declarations
            HtmlSpan uIMobileDevicesPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMobileDevicesPane;
            #endregion

            // Click 'Mobile Devices' pane
            Mouse.Click(uIMobileDevicesPane, new Point(72, 13));
        }
        
        /// <summary>
        /// ClickMobileDevicesLink
        /// </summary>
        public void ClickMobileDevicesLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIMobileDevicesHyperlink = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UIMobileDevicesHyperlink;
            #endregion

            // Click 'Mobile Devices' link
            Mouse.Click(uIMobileDevicesHyperlink, new Point(27, 4));
        }
        
        /// <summary>
        /// ClickNewMobileDeviceLink
        /// </summary>
        public void ClickNewMobileDeviceLink()
        {
            #region Variable Declarations
            HtmlHyperlink uINewMobileDeviceHyperlink = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UINewMobileDevicePane.UINewMobileDeviceHyperlink;
            #endregion

            // Click 'New Mobile Device' link
            Mouse.Click(uINewMobileDeviceHyperlink, new Point(75, 10));
        }
        
        /// <summary>
        /// PressCancelSavingGeneralOptions
        /// </summary>
        public void PressCancelSavingGeneralOptions()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMaindivPane.UIItemPane;
            #endregion

            // Click pane
            Mouse.Click(uIItemPane, new Point(106, 46));
        }
        
        /// <summary>
        /// PressCloseDuplicateMobileDeviceModal
        /// </summary>
        public void PressCloseDuplicateMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(32, 16));
        }
        
        /// <summary>
        /// PressCloseMandatoryFieldsModal
        /// </summary>
        public void PressCloseMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage1 = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UIOKImage1;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage1, new Point(15, 6));
        }
        
        /// <summary>
        /// PressSaveGeneralOptions
        /// </summary>
        public void PressSaveGeneralOptions()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmainbtnSButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICtl00contentmainbtnSButton;
            #endregion

            // Click 'ctl00$contentmain$btnSave' button
            Mouse.Click(uICtl00contentmainbtnSButton, new Point(29, 21));
        }
        
        /// <summary>
        /// ValidateCommentOnMobileDeviceModal - Use 'ValidateCommentOnMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlSpan uISpanMobileDeviceInfoPane = this.UIEmployeejamesWindowsWindow.UIEmployeeJamesDocument2.UISpanMobileDeviceInfoPane;
            #endregion

            // Verify that the 'InnerText' property of pane equals '
            //
            //The device has been linked to this account.
            //
            //
            //The Activation Key is: 00362-89231-021364
            //
            //The Activation Key cannot be used with a device other than the one it is currently assigned to.
            //
            //For new devices, register a new device to obtain a new Activation Key.'
            Assert.AreEqual(this.ValidateCommentOnMobileDeviceModalExpectedValues.UISpanMobileDeviceInfoPaneInnerText, uISpanMobileDeviceInfoPane.InnerText);
        }
        
        /// <summary>
        /// ValidateCommentOnUnpairedMobileDeviceModal - Use 'ValidateCommentOnUnpairedMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnUnpairedMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlSpan uISpanPairingKeyInfoPane = this.UIEmployeejamesWindowsWindow.UIEmployeeJamesDocument2.UISpanPairingKeyInfoPane;
            #endregion

            // Verify that the 'InnerText' property of pane equals 'The device has been registered successfully.
            //
            //
            //The Activation Key is: 00362-89231-021364
            //
            //You now need to activate your device.
            //
            //To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.
            //
            //
            //Don't have the app?
            //
            //To download, open a browser and enter the website address: get.expenses360.mobi
            //
            //Or visit Google Play and search for Expenses360'
            Assert.AreEqual(this.ValidateCommentOnUnpairedMobileDeviceModalExpectedValues.UISpanPairingKeyInfoPaneInnerText, uISpanPairingKeyInfoPane.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateMobileDeviceModal - Use 'ValidateDuplicateMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //This mobile device has already been added to the system.'
            Assert.AreEqual(this.ValidateDuplicateMobileDeviceModalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateGridDoesNotHaveAnyData - Use 'ValidateGridDoesNotHaveAnyDataExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateGridDoesNotHaveAnyData()
        {
            #region Variable Declarations
            HtmlCell uITherearecurrentlynomCell = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument1.UITbl_myMobileDevicesTable.UITherearecurrentlynomCell;
            #endregion

            // Verify that the 'InnerText' property of 'There are currently no mobile devices as' cell equals 'There are currently no mobile devices associated to this account.'
            Assert.AreEqual(this.ValidateGridDoesNotHaveAnyDataExpectedValues.UITherearecurrentlynomCellInnerText, uITherearecurrentlynomCell.InnerText);
        }
        
        /// <summary>
        /// ValidateMandatoryFieldsModal - Use 'ValidateMandatoryFieldsModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane1 = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UICtl00_pnlMasterPopupPane1;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a Name for the mobile device.
            //Please select a Type for the mobile device.'
            Assert.AreEqual(this.ValidateMandatoryFieldsModalExpectedValues.UICtl00_pnlMasterPopupPane1InnerText, uICtl00_pnlMasterPopupPane1.InnerText);
        }
        
        /// <summary>
        /// ValidateMobileDeviceActivationKeyModal - Use 'ValidateMobileDeviceActivationKeyModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMobileDeviceActivationKeyModal()
        {
            #region Variable Declarations
            HtmlDiv uIMobileDeviceActivatiPane = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UICtl00_contentmain_usPane.UIMobileDeviceActivatiPane;
            #endregion

            // Verify that the 'InnerText' property of 'Mobile Device Activation Key' pane equals 'Mobile Device Activation Key'
            Assert.AreEqual(this.ValidateMobileDeviceActivationKeyModalExpectedValues.UIMobileDeviceActivatiPaneInnerText, uIMobileDeviceActivatiPane.InnerText);
        }
        
        /// <summary>
        /// ValidateMobileDeviceModalTitle - Use 'ValidateMobileDeviceModalTitleExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMobileDeviceModalTitle()
        {
            #region Variable Declarations
            HtmlDiv uINewMobileDevicePane1 = this.UIEmployeejamesWindowsWindow.UIEmployeejamesDocument.UINewMobileDevicePane1;
            #endregion

            // Verify that the 'InnerText' property of 'New Mobile Device' pane equals 'New Mobile Device'
            Assert.AreEqual(this.ValidateMobileDeviceModalTitleExpectedValues.UINewMobileDevicePane1InnerText, uINewMobileDevicePane1.InnerText);
        }
        
        /// <summary>
        /// ValidatePairedDeviceDeleteMessage - Use 'ValidatePairedDeviceDeleteMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePairedDeviceDeleteMessage()
        {
            #region Variable Declarations
            WinText uIAreyousureyouwanttodText1 = this.UIMessagefromwebpageWindow.UIAreyousureyouwanttodWindow.UIAreyousureyouwanttodText1;
            #endregion

            // Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?
            //Deletion of this device will deactivate the mobile device's application.'
            Assert.AreEqual(this.ValidatePairedDeviceDeleteMessageExpectedValues.UIAreyousureyouwanttodText1DisplayText, uIAreyousureyouwanttodText1.DisplayText);
        }
        
        /// <summary>
        /// ValidateUnpairedDeviceDeleteMessage - Use 'ValidateUnpairedDeviceDeleteMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnpairedDeviceDeleteMessage()
        {
            #region Variable Declarations
            WinText uIAreyousureyouwanttodText = this.UIMessagefromwebpageWindow.UIAreyousureyouwanttodWindow.UIAreyousureyouwanttodText;
            #endregion

            // Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?'
            Assert.AreEqual(this.ValidateUnpairedDeviceDeleteMessageExpectedValues.UIAreyousureyouwanttodTextDisplayText, uIAreyousureyouwanttodText.DisplayText);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual ValidateCommentOnMobileDeviceModalExpectedValues ValidateCommentOnMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateCommentOnMobileDeviceModalExpectedValues = new ValidateCommentOnMobileDeviceModalExpectedValues();
                }
                return this.mValidateCommentOnMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateCommentOnUnpairedMobileDeviceModalExpectedValues ValidateCommentOnUnpairedMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues = new ValidateCommentOnUnpairedMobileDeviceModalExpectedValues();
                }
                return this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateMobileDeviceModalExpectedValues ValidateDuplicateMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateDuplicateMobileDeviceModalExpectedValues = new ValidateDuplicateMobileDeviceModalExpectedValues();
                }
                return this.mValidateDuplicateMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateGridDoesNotHaveAnyDataExpectedValues ValidateGridDoesNotHaveAnyDataExpectedValues
        {
            get
            {
                if ((this.mValidateGridDoesNotHaveAnyDataExpectedValues == null))
                {
                    this.mValidateGridDoesNotHaveAnyDataExpectedValues = new ValidateGridDoesNotHaveAnyDataExpectedValues();
                }
                return this.mValidateGridDoesNotHaveAnyDataExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryFieldsModalExpectedValues ValidateMandatoryFieldsModalExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryFieldsModalExpectedValues == null))
                {
                    this.mValidateMandatoryFieldsModalExpectedValues = new ValidateMandatoryFieldsModalExpectedValues();
                }
                return this.mValidateMandatoryFieldsModalExpectedValues;
            }
        }
        
        public virtual ValidateMobileDeviceActivationKeyModalExpectedValues ValidateMobileDeviceActivationKeyModalExpectedValues
        {
            get
            {
                if ((this.mValidateMobileDeviceActivationKeyModalExpectedValues == null))
                {
                    this.mValidateMobileDeviceActivationKeyModalExpectedValues = new ValidateMobileDeviceActivationKeyModalExpectedValues();
                }
                return this.mValidateMobileDeviceActivationKeyModalExpectedValues;
            }
        }
        
        public virtual ValidateMobileDeviceModalTitleExpectedValues ValidateMobileDeviceModalTitleExpectedValues
        {
            get
            {
                if ((this.mValidateMobileDeviceModalTitleExpectedValues == null))
                {
                    this.mValidateMobileDeviceModalTitleExpectedValues = new ValidateMobileDeviceModalTitleExpectedValues();
                }
                return this.mValidateMobileDeviceModalTitleExpectedValues;
            }
        }
        
        public virtual ValidatePairedDeviceDeleteMessageExpectedValues ValidatePairedDeviceDeleteMessageExpectedValues
        {
            get
            {
                if ((this.mValidatePairedDeviceDeleteMessageExpectedValues == null))
                {
                    this.mValidatePairedDeviceDeleteMessageExpectedValues = new ValidatePairedDeviceDeleteMessageExpectedValues();
                }
                return this.mValidatePairedDeviceDeleteMessageExpectedValues;
            }
        }
        
        public virtual ValidateUnpairedDeviceDeleteMessageExpectedValues ValidateUnpairedDeviceDeleteMessageExpectedValues
        {
            get
            {
                if ((this.mValidateUnpairedDeviceDeleteMessageExpectedValues == null))
                {
                    this.mValidateUnpairedDeviceDeleteMessageExpectedValues = new ValidateUnpairedDeviceDeleteMessageExpectedValues();
                }
                return this.mValidateUnpairedDeviceDeleteMessageExpectedValues;
            }
        }
        
        public UIEmployeejamesWindowsWindow UIEmployeejamesWindowsWindow
        {
            get
            {
                if ((this.mUIEmployeejamesWindowsWindow == null))
                {
                    this.mUIEmployeejamesWindowsWindow = new UIEmployeejamesWindowsWindow();
                }
                return this.mUIEmployeejamesWindowsWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIGeneralOptionsWindowWindow UIGeneralOptionsWindowWindow
        {
            get
            {
                if ((this.mUIGeneralOptionsWindowWindow == null))
                {
                    this.mUIGeneralOptionsWindowWindow = new UIGeneralOptionsWindowWindow();
                }
                return this.mUIGeneralOptionsWindowWindow;
            }
        }
        
        public UINewEmployeeWindowsInWindow UINewEmployeeWindowsInWindow
        {
            get
            {
                if ((this.mUINewEmployeeWindowsInWindow == null))
                {
                    this.mUINewEmployeeWindowsInWindow = new UINewEmployeeWindowsInWindow();
                }
                return this.mUINewEmployeeWindowsInWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private ValidateCommentOnMobileDeviceModalExpectedValues mValidateCommentOnMobileDeviceModalExpectedValues;
        
        private ValidateCommentOnUnpairedMobileDeviceModalExpectedValues mValidateCommentOnUnpairedMobileDeviceModalExpectedValues;
        
        private ValidateDuplicateMobileDeviceModalExpectedValues mValidateDuplicateMobileDeviceModalExpectedValues;
        
        private ValidateGridDoesNotHaveAnyDataExpectedValues mValidateGridDoesNotHaveAnyDataExpectedValues;
        
        private ValidateMandatoryFieldsModalExpectedValues mValidateMandatoryFieldsModalExpectedValues;
        
        private ValidateMobileDeviceActivationKeyModalExpectedValues mValidateMobileDeviceActivationKeyModalExpectedValues;
        
        private ValidateMobileDeviceModalTitleExpectedValues mValidateMobileDeviceModalTitleExpectedValues;
        
        private ValidatePairedDeviceDeleteMessageExpectedValues mValidatePairedDeviceDeleteMessageExpectedValues;
        
        private ValidateUnpairedDeviceDeleteMessageExpectedValues mValidateUnpairedDeviceDeleteMessageExpectedValues;
        
        private UIEmployeejamesWindowsWindow mUIEmployeejamesWindowsWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIGeneralOptionsWindowWindow mUIGeneralOptionsWindowWindow;
        
        private UINewEmployeeWindowsInWindow mUINewEmployeeWindowsInWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Name*' label equals 'Name*'
        /// </summary>
        public string UINameLabelInnerText = "Name*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateCommentOnMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of pane equals '
        ///
        ///The device has been linked to this account.
        ///
        ///
        ///The Activation Key is: 00362-89231-021364
        ///
        ///The Activation Key cannot be used with a device other than the one it is currently assigned to.
        ///
        ///For new devices, register a new device to obtain a new Activation Key.'
        /// </summary>
        public string UISpanMobileDeviceInfoPaneInnerText = @"

The device has been linked to this account.


The Activation Key is: 00362-89231-021364

The Activation Key cannot be used with a device other than the one it is currently assigned to.

For new devices, register a new device to obtain a new Activation Key.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnUnpairedMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateCommentOnUnpairedMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of pane equals 'The device has been registered successfully.
        ///
        ///
        ///The Activation Key is: 00362-89231-021364
        ///
        ///You now need to activate your device.
        ///
        ///To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.
        ///
        ///
        ///Don't have the app?
        ///
        ///To download, open a browser and enter the website address: get.expenses360.mobi
        ///
        ///Or visit Google Play and search for Expenses360'
        /// </summary>
        public string UISpanPairingKeyInfoPaneInnerText = @"The device has been registered successfully.


The Activation Key is: 00362-89231-021364

You now need to activate your device.

To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.


Don't have the app?

To download, open a browser and enter the website address: get.expenses360.mobi

Or visit Google Play and search for Expenses360";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateDuplicateMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///This mobile device has already been added to the system.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nThis mobile device has already been added to the syste" +
            "m.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateGridDoesNotHaveAnyData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateGridDoesNotHaveAnyDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'There are currently no mobile devices as' cell equals 'There are currently no mobile devices associated to this account.'
        /// </summary>
        public string UITherearecurrentlynomCellInnerText = "There are currently no mobile devices associated to this account.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryFieldsModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateMandatoryFieldsModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a Name for the mobile device.
        ///Please select a Type for the mobile device.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPane1InnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a Name for the mobile device.\r\nPlease sel" +
            "ect a Type for the mobile device.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMobileDeviceActivationKeyModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateMobileDeviceActivationKeyModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Mobile Device Activation Key' pane equals 'Mobile Device Activation Key'
        /// </summary>
        public string UIMobileDeviceActivatiPaneInnerText = "Mobile Device Activation Key";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMobileDeviceModalTitle'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateMobileDeviceModalTitleExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'New Mobile Device' pane equals 'New Mobile Device'
        /// </summary>
        public string UINewMobileDevicePane1InnerText = "New Mobile Device";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePairedDeviceDeleteMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidatePairedDeviceDeleteMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?
        ///Deletion of this device will deactivate the mobile device's application.'
        /// </summary>
        public string UIAreyousureyouwanttodText1DisplayText = "Are you sure you want to delete this mobile device?\nDeletion of this device will " +
            "deactivate the mobile device\'s application.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnpairedDeviceDeleteMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateUnpairedDeviceDeleteMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?'
        /// </summary>
        public string UIAreyousureyouwanttodTextDisplayText = "Are you sure you want to delete this mobile device?";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIEmployeejamesWindowsWindow : BrowserWindow
    {
        
        public UIEmployeejamesWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Employee", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIEmployeejamesDocument UIEmployeejamesDocument
        {
            get
            {
                if ((this.mUIEmployeejamesDocument == null))
                {
                    this.mUIEmployeejamesDocument = new UIEmployeejamesDocument(this);
                }
                return this.mUIEmployeejamesDocument;
            }
        }
        
        public UIEmployeejamesDocument1 UIEmployeejamesDocument1
        {
            get
            {
                if ((this.mUIEmployeejamesDocument1 == null))
                {
                    this.mUIEmployeejamesDocument1 = new UIEmployeejamesDocument1(this);
                }
                return this.mUIEmployeejamesDocument1;
            }
        }
        
        public UIEmployeeJamesDocument2 UIEmployeeJamesDocument2
        {
            get
            {
                if ((this.mUIEmployeeJamesDocument2 == null))
                {
                    this.mUIEmployeeJamesDocument2 = new UIEmployeeJamesDocument2(this);
                }
                return this.mUIEmployeeJamesDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeejamesDocument mUIEmployeejamesDocument;
        
        private UIEmployeejamesDocument1 mUIEmployeejamesDocument1;
        
        private UIEmployeeJamesDocument2 mUIEmployeeJamesDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIEmployeejamesDocument : HtmlDocument
    {
        
        public UIEmployeejamesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Employee", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeemployee.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aeemployee.aspx?employeeid=21333", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIMobileDevicesHyperlink
        {
            get
            {
                if ((this.mUIMobileDevicesHyperlink == null))
                {
                    this.mUIMobileDevicesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkMobileDevices";
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Mobile Devices";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'MobileDevices\');";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'MobileDevices\');";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkMobileDevices href=\"javascript:cha";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mUIMobileDevicesHyperlink;
            }
        }
        
        public HtmlEdit UIEmailAddressEdit
        {
            get
            {
                if ((this.mUIEmailAddressEdit == null))
                {
                    this.mUIEmailAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneral_tabGeneral_txtemail";
                    this.mUIEmailAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneral$tabGeneral$txtemail";
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email Address";
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneral_tabGene";
                    this.mUIEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    #endregion
                }
                return this.mUIEmailAddressEdit;
            }
        }
        
        public UINewMobileDevicePane UINewMobileDevicePane
        {
            get
            {
                if ((this.mUINewMobileDevicePane == null))
                {
                    this.mUINewMobileDevicePane = new UINewMobileDevicePane(this);
                }
                return this.mUINewMobileDevicePane;
            }
        }
        
        public HtmlDiv UINewMobileDevicePane1
        {
            get
            {
                if ((this.mUINewMobileDevicePane1 == null))
                {
                    this.mUINewMobileDevicePane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUINewMobileDevicePane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMobileDeviceHeader";
                    this.mUINewMobileDevicePane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewMobileDevicePane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New Mobile Device";
                    this.mUINewMobileDevicePane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewMobileDevicePane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUINewMobileDevicePane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMobileDeviceHeader class=sectionti";
                    this.mUINewMobileDevicePane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "158";
                    #endregion
                }
                return this.mUINewMobileDevicePane1;
            }
        }
        
        public UICtl00_contentmain_usPane UICtl00_contentmain_usPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane == null))
                {
                    this.mUICtl00_contentmain_usPane = new UICtl00_contentmain_usPane(this);
                }
                return this.mUICtl00_contentmain_usPane;
            }
        }
        
        public HtmlInputButton UIMobileDeviceModalSaveButton
        {
            get
            {
                if ((this.mUIMobileDeviceModalSaveButton == null))
                {
                    this.mUIMobileDeviceModalSaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIMobileDeviceModalSaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_ctl00";
                    this.mUIMobileDeviceModalSaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl00";
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_ct";
                    this.mUIMobileDeviceModalSaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "62";
                    #endregion
                }
                return this.mUIMobileDeviceModalSaveButton;
            }
        }
        
        public HtmlInputButton UIMobileDeviceModalCancelButton
        {
            get
            {
                if ((this.mUIMobileDeviceModalCancelButton == null))
                {
                    this.mUIMobileDeviceModalCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIMobileDeviceModalCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIMobileDeviceModalCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl01";
                    this.mUIMobileDeviceModalCancelButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUIMobileDeviceModalCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIMobileDeviceModalCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIMobileDeviceModalCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUIMobileDeviceModalCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=buttonInner tabIndex=0 onclick=\'SE";
                    this.mUIMobileDeviceModalCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "63";
                    #endregion
                }
                return this.mUIMobileDeviceModalCancelButton;
            }
        }
        
        public HtmlInputButton UIActivationKeyModalCloseButton
        {
            get
            {
                if ((this.mUIActivationKeyModalCloseButton == null))
                {
                    this.mUIActivationKeyModalCloseButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIActivationKeyModalCloseButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIActivationKeyModalCloseButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl02";
                    this.mUIActivationKeyModalCloseButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "close";
                    this.mUIActivationKeyModalCloseButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIActivationKeyModalCloseButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIActivationKeyModalCloseButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUIActivationKeyModalCloseButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=buttonInner tabIndex=0 onclick=\'SE";
                    this.mUIActivationKeyModalCloseButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "65";
                    #endregion
                }
                return this.mUIActivationKeyModalCloseButton;
            }
        }
        
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_txtDeviceName";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$txtDeviceName";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name*";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeydown=\"SEL.Forms.RunOnEnter(event, S";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "61";
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlComboBox UITypeComboBox
        {
            get
            {
                if ((this.mUITypeComboBox == null))
                {
                    this.mUITypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_ddlDeviceType";
                    this.mUITypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ddlDeviceType";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Type*";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "9";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "onkeydown=\"SEL.Forms.RunOnEnter(event, S";
                    this.mUITypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "19";
                    #endregion
                }
                return this.mUITypeComboBox;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_usPane1
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane1 == null))
                {
                    this.mUICtl00_contentmain_usPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_usPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_AddEditDevice";
                    this.mUICtl00_contentmain_usPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_usPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New Mobile Device\r\nName*  * Type* [None]";
                    this.mUICtl00_contentmain_usPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_usPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel";
                    this.mUICtl00_contentmain_usPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
                    this.mUICtl00_contentmain_usPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "156";
                    #endregion
                }
                return this.mUICtl00_contentmain_usPane1;
            }
        }
        
        public HtmlTable UITbl_myMobileDevicesTable
        {
            get
            {
                if ((this.mUITbl_myMobileDevicesTable == null))
                {
                    this.mUITbl_myMobileDevicesTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_myMobileDevicesTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_myMobileDevices";
                    this.mUITbl_myMobileDevicesTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "NameType Activation KeyKey Assigned\r\nCod";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_myMobileDevices class=cGrid";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mUITbl_myMobileDevicesTable;
            }
        }
        
        public HtmlDiv UIDivMobileDeviceInfoPane
        {
            get
            {
                if ((this.mUIDivMobileDeviceInfoPane == null))
                {
                    this.mUIDivMobileDeviceInfoPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMobileDeviceInfo";
                    this.mUIDivMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The mobile device has not yet been activ";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "comment";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMobileDeviceInfo class=comment";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "160";
                    #endregion
                }
                return this.mUIDivMobileDeviceInfoPane;
            }
        }
        
        public HtmlSpan UISpanMobileDeviceInfoPane
        {
            get
            {
                if ((this.mUISpanMobileDeviceInfoPane == null))
                {
                    this.mUISpanMobileDeviceInfoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISpanMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "spanMobileDeviceInfo";
                    this.mUISpanMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The mobile device has not yet been activ";
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=spanMobileDeviceInfo";
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "311";
                    #endregion
                }
                return this.mUISpanMobileDeviceInfoPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThis mobile d";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "331";
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "138";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane1
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane1 == null))
                {
                    this.mUICtl00_pnlMasterPopupPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "330";
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane1;
            }
        }
        
        public HtmlImage UIOKImage1
        {
            get
            {
                if ((this.mUIOKImage1 == null))
                {
                    this.mUIOKImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage1.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "136";
                    #endregion
                }
                return this.mUIOKImage1;
            }
        }
        
        public HtmlSpan UINameAsterisk
        {
            get
            {
                if ((this.mUINameAsterisk == null))
                {
                    this.mUINameAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_rfDeviceName";
                    this.mUINameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible; COLOR: red\" ";
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "305";
                    #endregion
                }
                return this.mUINameAsterisk;
            }
        }
        
        public HtmlSpan UITypeAsterisk
        {
            get
            {
                if ((this.mUITypeAsterisk == null))
                {
                    this.mUITypeAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITypeAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_rfDeviceType";
                    this.mUITypeAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible; COLOR: red\" ";
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "310";
                    #endregion
                }
                return this.mUITypeAsterisk;
            }
        }
        
        public HtmlImage UIEmployeesPageCancelImage
        {
            get
            {
                if ((this.mUIEmployeesPageCancelImage == null))
                {
                    this.mUIEmployeesPageCancelImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEmployeesPageCancelImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_imgCancelEmployee";
                    this.mUIEmployeesPageCancelImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEmployeesPageCancelImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Cancel";
                    this.mUIEmployeesPageCancelImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mUIEmployeesPageCancelImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mUIEmployeesPageCancelImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/selectemployee.aspx";
                    this.mUIEmployeesPageCancelImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Href, ".sel-expenses.com/shared/admin/selectemployee.aspx", PropertyExpressionOperator.Contains));
                    this.mUIEmployeesPageCancelImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEmployeesPageCancelImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIEmployeesPageCancelImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "61";
                    #endregion
                }
                return this.mUIEmployeesPageCancelImage;
            }
        }
        
        public UICtl00_contentmain_spPane UICtl00_contentmain_spPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_spPane == null))
                {
                    this.mUICtl00_contentmain_spPane = new UICtl00_contentmain_spPane(this);
                }
                return this.mUICtl00_contentmain_spPane;
            }
        }
        
        public HtmlLabel UINameLabel
        {
            get
            {
                if ((this.mUINameLabel == null))
                {
                    this.mUINameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_lblDeviceName";
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_usrMobileDevices_txtDeviceName";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Name*";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_lb";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "54";
                    #endregion
                }
                return this.mUINameLabel;
            }
        }
        
        public HtmlLabel UITypeLabel
        {
            get
            {
                if ((this.mUITypeLabel == null))
                {
                    this.mUITypeLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_lblDeviceType";
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_usrMobileDevices_ddlDeviceType";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Type*";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_lb";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "55";
                    #endregion
                }
                return this.mUITypeLabel;
            }
        }
        
        public HtmlDiv UIDivPageMenuPane
        {
            get
            {
                if ((this.mUIDivPageMenuPane == null))
                {
                    this.mUIDivPageMenuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivPageMenuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divPageMenu";
                    this.mUIDivPageMenuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Employee DetailsCarsPool CarsCorporate C";
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divPageMenu";
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mUIDivPageMenuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIMobileDevicesHyperlink;
        
        private HtmlEdit mUIEmailAddressEdit;
        
        private UINewMobileDevicePane mUINewMobileDevicePane;
        
        private HtmlDiv mUINewMobileDevicePane1;
        
        private UICtl00_contentmain_usPane mUICtl00_contentmain_usPane;
        
        private HtmlInputButton mUIMobileDeviceModalSaveButton;
        
        private HtmlInputButton mUIMobileDeviceModalCancelButton;
        
        private HtmlInputButton mUIActivationKeyModalCloseButton;
        
        private HtmlEdit mUINameEdit;
        
        private HtmlComboBox mUITypeComboBox;
        
        private HtmlDiv mUICtl00_contentmain_usPane1;
        
        private HtmlTable mUITbl_myMobileDevicesTable;
        
        private HtmlDiv mUIDivMobileDeviceInfoPane;
        
        private HtmlSpan mUISpanMobileDeviceInfoPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane1;
        
        private HtmlImage mUIOKImage1;
        
        private HtmlSpan mUINameAsterisk;
        
        private HtmlSpan mUITypeAsterisk;
        
        private HtmlImage mUIEmployeesPageCancelImage;
        
        private UICtl00_contentmain_spPane mUICtl00_contentmain_spPane;
        
        private HtmlLabel mUINameLabel;
        
        private HtmlLabel mUITypeLabel;
        
        private HtmlDiv mUIDivPageMenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UINewMobileDevicePane : HtmlDiv
    {
        
        public UINewMobileDevicePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "pgOptMobileDevices";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New Mobile Device ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pgOptMobileDevices class";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewMobileDeviceHyperlink
        {
            get
            {
                if ((this.mUINewMobileDeviceHyperlink == null))
                {
                    this.mUINewMobileDeviceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Mobile Device";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.MobileDevices.LoadMobileDeviceModal(SEL.MobileDevices.LoadType.New,%20null);";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.MobileDevices.LoadMobileDeviceModal(SEL.MobileDevices.LoadType.New" +
                        ", null);";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:SEL.M";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUINewMobileDeviceHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewMobileDeviceHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICtl00_contentmain_usPane : HtmlDiv
    {
        
        public UICtl00_contentmain_usPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_PairingNoticeModal";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key\r\nThe mobile";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "165";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMobileDeviceActivatiPane
        {
            get
            {
                if ((this.mUIMobileDeviceActivatiPane == null))
                {
                    this.mUIMobileDeviceActivatiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMobileDeviceActivatiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMobileDeviceActivatiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIMobileDeviceActivatiPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMobileDeviceActivatiPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICtl00_contentmain_spPane : HtmlSpan
    {
        
        public UICtl00_contentmain_spPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_spanSaveButton";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_spanSaveButton";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "316";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEmployeesPageSaveImage
        {
            get
            {
                if ((this.mUIEmployeesPageSaveImage == null))
                {
                    this.mUIEmployeesPageSaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEmployeesPageSaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEmployeesPageSaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEmployeesPageSaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUIEmployeesPageSaveImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "currentAction%20=%20\'OK\';saveEmployee(true,%20true)";
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:currentAction = \'OK\';saveEmployee(true, true)";
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Save src=\"../images/buttons/btn_save";
                    this.mUIEmployeesPageSaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIEmployeesPageSaveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEmployeesPageSaveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIEmployeejamesDocument1 : HtmlDocument
    {
        
        public UIEmployeejamesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/expenses/shared/admin/aeemployee.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/expenses/shared/admin/aeemployee.aspx?employeeid=21333", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UITbl_myMobileDevicesTable UITbl_myMobileDevicesTable
        {
            get
            {
                if ((this.mUITbl_myMobileDevicesTable == null))
                {
                    this.mUITbl_myMobileDevicesTable = new UITbl_myMobileDevicesTable(this);
                }
                return this.mUITbl_myMobileDevicesTable;
            }
        }
        
        public HtmlDiv UIDivPageMenuPane
        {
            get
            {
                if ((this.mUIDivPageMenuPane == null))
                {
                    this.mUIDivPageMenuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivPageMenuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divPageMenu";
                    this.mUIDivPageMenuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Employee DetailsCarsPool CarsCorporate C";
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divPageMenu";
                    this.mUIDivPageMenuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mUIDivPageMenuPane;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_myMobileDevicesTable mUITbl_myMobileDevicesTable;
        
        private HtmlDiv mUIDivPageMenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITbl_myMobileDevicesTable : HtmlTable
    {
        
        public UITbl_myMobileDevicesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_myMobileDevices";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Type NameActivation Key\r\nThere are curre";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_myMobileDevices class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "10";
            #endregion
        }
        
        #region Properties
        public HtmlCell UITherearecurrentlynomCell
        {
            get
            {
                if ((this.mUITherearecurrentlynomCell == null))
                {
                    this.mUITherearecurrentlynomCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "There are currently no mobile devices as";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1 colSpan=5 align=middle";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITherearecurrentlynomCell;
            }
        }
        
        public HtmlHyperlink UITypeHyperlink
        {
            get
            {
                if ((this.mUITypeHyperlink == null))
                {
                    this.mUITypeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITypeHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Type", PropertyExpressionOperator.Contains));
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'4323cabe-c3a9-4c47-843d-a3efaf5cc9c0\',0);";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'4323cabe-c3a9-4c47-843d-a3efaf5cc" +
                        "9c0\',0);";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITypeHyperlink;
            }
        }
        
        public HtmlHyperlink UINameHyperlink
        {
            get
            {
                if ((this.mUINameHyperlink == null))
                {
                    this.mUINameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINameHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Name", PropertyExpressionOperator.Contains));
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'a08ebda1-250c-4497-b791-d02d9e937a8a\',0);";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'a08ebda1-250c-4497-b791-d02d9e937" +
                        "a8a\',0);";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUINameHyperlink;
            }
        }
        
        public HtmlHyperlink UIActivationKeyHyperlink
        {
            get
            {
                if ((this.mUIActivationKeyHyperlink == null))
                {
                    this.mUIActivationKeyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Activation Key", PropertyExpressionOperator.Contains));
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'269ef5fc-0b2f-4e8c-8dd1-fa2644173495\',0);";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'269ef5fc-0b2f-4e8c-8dd1-fa2644173" +
                        "495\',0);";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIActivationKeyHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUITherearecurrentlynomCell;
        
        private HtmlHyperlink mUITypeHyperlink;
        
        private HtmlHyperlink mUINameHyperlink;
        
        private HtmlHyperlink mUIActivationKeyHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIEmployeeJamesDocument2 : HtmlDocument
    {
        
        public UIEmployeeJamesDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeemployee.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aeemployee.aspx?employeeid=21364", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISpanPairingKeyInfoPane
        {
            get
            {
                if ((this.mUISpanPairingKeyInfoPane == null))
                {
                    this.mUISpanPairingKeyInfoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISpanPairingKeyInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "spanPairingKeyInfo";
                    this.mUISpanPairingKeyInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The device has been registered successfu";
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MARGIN-TOP: 25px; PADDING-LEFT: 10px; DISPLAY: inline-block; VERTICAL-ALIG" +
                        "N: top\" id=spanPairingKeyInfo";
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "308";
                    #endregion
                }
                return this.mUISpanPairingKeyInfoPane;
            }
        }
        
        public HtmlSpan UISpanMobileDeviceInfoPane
        {
            get
            {
                if ((this.mUISpanMobileDeviceInfoPane == null))
                {
                    this.mUISpanMobileDeviceInfoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISpanMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "spanMobileDeviceInfo";
                    this.mUISpanMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The device has been linked to this accou";
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MARGIN-TOP: 25px; PADDING-LEFT: 10px; DISPLAY: inline-block; VERTICAL-ALIG" +
                        "N: top\" id=spanMobileDeviceInfo";
                    this.mUISpanMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "304";
                    #endregion
                }
                return this.mUISpanMobileDeviceInfoPane;
            }
        }
        
        public HtmlImage UISharedimagesandroidpImageonAdd
        {
            get
            {
                if ((this.mUISharedimagesandroidpImageonAdd == null))
                {
                    this.mUISharedimagesandroidpImageonAdd = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesandroidpImageonAdd.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_imgIPhoneNew";
                    this.mUISharedimagesandroidpImageonAdd.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesandroidpImageonAdd.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesandroidpImageonAdd.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/android.png";
                    this.mUISharedimagesandroidpImageonAdd.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/android.png", PropertyExpressionOperator.Contains));
                    this.mUISharedimagesandroidpImageonAdd.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesandroidpImageonAdd.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesandroidpImageonAdd.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "154";
                    #endregion
                }
                return this.mUISharedimagesandroidpImageonAdd;
            }
        }
        
        public HtmlImage UISharedimagesandroidpImageonEdit
        {
            get
            {
                if ((this.mUISharedimagesandroidpImageonEdit == null))
                {
                    this.mUISharedimagesandroidpImageonEdit = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesandroidpImageonEdit.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_imgIPhoneEdit";
                    this.mUISharedimagesandroidpImageonEdit.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesandroidpImageonEdit.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesandroidpImageonEdit.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/android.png";
                    this.mUISharedimagesandroidpImageonEdit.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/android.png", PropertyExpressionOperator.Contains));
                    this.mUISharedimagesandroidpImageonEdit.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesandroidpImageonEdit.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesandroidpImageonEdit.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "152";
                    #endregion
                }
                return this.mUISharedimagesandroidpImageonEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISpanPairingKeyInfoPane;
        
        private HtmlSpan mUISpanMobileDeviceInfoPane;
        
        private HtmlImage mUISharedimagesandroidpImageonAdd;
        
        private HtmlImage mUISharedimagesandroidpImageonEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIAreyousureyouwanttodWindow UIAreyousureyouwanttodWindow
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodWindow == null))
                {
                    this.mUIAreyousureyouwanttodWindow = new UIAreyousureyouwanttodWindow(this);
                }
                return this.mUIAreyousureyouwanttodWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAreyousureyouwanttodWindow mUIAreyousureyouwanttodWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAreyousureyouwanttodWindow : WinWindow
    {
        
        public UIAreyousureyouwanttodWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UIAreyousureyouwanttodText
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodText == null))
                {
                    this.mUIAreyousureyouwanttodText = new WinText(this);
                    #region Search Criteria
                    this.mUIAreyousureyouwanttodText.SearchProperties[WinText.PropertyNames.Name] = "Are you sure you want to delete this mobile device?";
                    this.mUIAreyousureyouwanttodText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIAreyousureyouwanttodText;
            }
        }
        
        public WinText UIAreyousureyouwanttodText1
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodText1 == null))
                {
                    this.mUIAreyousureyouwanttodText1 = new WinText(this);
                    #region Search Criteria
                    this.mUIAreyousureyouwanttodText1.SearchProperties[WinText.PropertyNames.Name] = "Are you sure you want to delete this mobile device?Deletion of this device will d" +
                        "eactivate the mobile device\'s application.";
                    this.mUIAreyousureyouwanttodText1.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIAreyousureyouwanttodText1;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAreyousureyouwanttodText;
        
        private WinText mUIAreyousureyouwanttodText1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIGeneralOptionsWindowWindow : BrowserWindow
    {
        
        public UIGeneralOptionsWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "General Options";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGeneralOptionsDocument UIGeneralOptionsDocument
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument == null))
                {
                    this.mUIGeneralOptionsDocument = new UIGeneralOptionsDocument(this);
                }
                return this.mUIGeneralOptionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGeneralOptionsDocument mUIGeneralOptionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIGeneralOptionsDocument : HtmlDocument
    {
        
        public UIGeneralOptionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGeneralOptionsHyperlink
        {
            get
            {
                if ((this.mUIGeneralOptionsHyperlink == null))
                {
                    this.mUIGeneralOptionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Options";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "selectedPage";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkGeneral class=selectedPage href=\"j";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIGeneralOptionsHyperlink;
            }
        }
        
        public HtmlSpan UIMobileDevicesPane
        {
            get
            {
                if ((this.mUIMobileDevicesPane == null))
                {
                    this.mUIMobileDevicesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabMobileDevices";
                    this.mUIMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Devices";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    #endregion
                }
                return this.mUIMobileDevicesPane;
            }
        }
        
        public HtmlInputButton UICtl00contentmainbtnSButton
        {
            get
            {
                if ((this.mUICtl00contentmainbtnSButton == null))
                {
                    this.mUICtl00contentmainbtnSButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmainbtnSButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSave";
                    this.mUICtl00contentmainbtnSButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSave";
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmainbtnSButton.FilterProperties.Add(new PropertyExpression("Src", ".sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "213";
                    #endregion
                }
                return this.mUICtl00contentmainbtnSButton;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public HtmlCheckBox UIEnableMobileDevicesCheckBox
        {
            get
            {
                if ((this.mUIEnableMobileDevicesCheckBox == null))
                {
                    this.mUIEnableMobileDevicesCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIEnableMobileDevicesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabMobileDevices_chkEnableMobileDevices";
                    this.mUIEnableMobileDevicesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabMobileDevices$chkEnableMobileDevices";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Enable Mobile Devices";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "47";
                    #endregion
                }
                return this.mUIEnableMobileDevicesCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGeneralOptionsHyperlink;
        
        private HtmlSpan mUIMobileDevicesPane;
        
        private HtmlInputButton mUICtl00contentmainbtnSButton;
        
        private UIMaindivPane mUIMaindivPane;
        
        private HtmlCheckBox mUIEnableMobileDevicesCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details Self RegistrationDelegat";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "   ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "formpanel";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=formpanel";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "163";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UINewEmployeeWindowsInWindow : BrowserWindow
    {
        
        public UINewEmployeeWindowsInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New Employee";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New Employee");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINewEmployeeDocument UINewEmployeeDocument
        {
            get
            {
                if ((this.mUINewEmployeeDocument == null))
                {
                    this.mUINewEmployeeDocument = new UINewEmployeeDocument(this);
                }
                return this.mUINewEmployeeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UINewEmployeeDocument mUINewEmployeeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UINewEmployeeDocument : HtmlDocument
    {
        
        public UINewEmployeeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Employee", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeemployee.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aeemployee.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_usPane1 UICtl00_contentmain_usPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane == null))
                {
                    this.mUICtl00_contentmain_usPane = new UICtl00_contentmain_usPane1(this);
                }
                return this.mUICtl00_contentmain_usPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_usPane1 mUICtl00_contentmain_usPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICtl00_contentmain_usPane1 : HtmlDiv
    {
        
        public UICtl00_contentmain_usPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_PairingNoticeModal";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key\r\nThe mobile";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "165";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIThemobiledevicehasnoPane
        {
            get
            {
                if ((this.mUIThemobiledevicehasnoPane == null))
                {
                    this.mUIThemobiledevicehasnoPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIThemobiledevicehasnoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIThemobiledevicehasnoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIThemobiledevicehasnoPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "The mobile device has not yet been activ", PropertyExpressionOperator.Contains));
                    this.mUIThemobiledevicehasnoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIThemobiledevicehasnoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "comment";
                    this.mUIThemobiledevicehasnoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=comment";
                    this.mUIThemobiledevicehasnoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIThemobiledevicehasnoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIThemobiledevicehasnoPane;
        #endregion
    }
}
