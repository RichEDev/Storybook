// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ContractCategoriesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ContractCategoriesUIMap
    {
        
        /// <summary>
        /// NavigateToContractCategoriesFromHomePage
        /// </summary>
        public void NavigateToContractCategoriesFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uIContractCategoriesPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UIContractCategoriesPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(59, 17));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(76, 11));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(79, 12));

            // Click 'Contract Categories' pane
            Mouse.Click(uIContractCategoriesPane, new Point(87, 14));
        }
        
        /// <summary>
        /// AddContractCategoryWithCancel - Use 'AddContractCategoryWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddContractCategoryWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIContractCategoryDescEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractCategoryDescEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(57, 11));

            // Type 'CodedUI Contract Category' in 'Contract Category Description' text box
            uIContractCategoryDescEdit.Text = this.AddContractCategoryWithCancelParams.UIContractCategoryDescEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(19, 13));
        }
        
        /// <summary>
        /// AddContractCategory - Use 'AddContractCategoryParams' to pass parameters into this method.
        /// </summary>
        public void AddContractCategory()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uIContractCategoryDescEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractCategoryDescEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(58, 11));

            // Type 'CodedUI Contract Category' in 'Contract Category Description' text box
            uIContractCategoryDescEdit.Text = this.AddContractCategoryParams.UIContractCategoryDescEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(23, 12));
        }
        
        /// <summary>
        /// ValidateAddContractCategory - Use 'ValidateAddContractCategoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractCategory()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractCategCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Table.UICodedUIContractCategCell;
            #endregion

            // Verify that 'CodedUI Contract Category' cell's property 'InnerText' equals 'CodedUI Contract Category'
            Assert.AreEqual(this.ValidateAddContractCategoryExpectedValues.UICodedUIContractCategCellInnerText, uICodedUIContractCategCell.InnerText);
        }
        
        /// <summary>
        /// ValidateContractCategoryDoesNotExist - Use 'ValidateContractCategoryDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractCategoryDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractCategCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Table.UICodedUIContractCategCell;
            #endregion

            // Verify that 'CodedUI Contract Category' cell's property 'InnerText' is not equal to 'CodedUI Contract Category'
            Assert.AreNotEqual(this.ValidateContractCategoryDoesNotExistExpectedValues.UICodedUIContractCategCellInnerText, uICodedUIContractCategCell.InnerText);
        }
        
        /// <summary>
        /// ArchiveContractCategoryWithCancel
        /// </summary>
        public void ArchiveContractCategoryWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(12, 15));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateContractCategoryIsNotArchived - Use 'ValidateContractCategoryIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractCategoryIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateContractCategoryIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateContractCategoryIsArchived - Use 'ValidateContractCategoryIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractCategoryIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateContractCategoryIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// ArchiveContractCategory
        /// </summary>
        public void ArchiveContractCategory()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(6, 12));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveContractCategoryWithCancel
        /// </summary>
        public void UnArchiveContractCategoryWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(13, 8));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveContractCategory
        /// </summary>
        public void UnArchiveContractCategory()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(9, 11));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// EditContractCategoryWithCancel - Use 'EditContractCategoryWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditContractCategoryWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Row.UIEditImage;
            HtmlEdit uIContractCategoryDescEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractCategoryDescEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(11, 3));

            // Type 'CodedUI Contract Category EDITED' in 'Contract Category Description' text box
            uIContractCategoryDescEdit.Text = this.EditContractCategoryWithCancelParams.UIContractCategoryDescEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(34, 17));
        }
        
        /// <summary>
        /// EditContractCategory - Use 'EditContractCategoryParams' to pass parameters into this method.
        /// </summary>
        public void EditContractCategory()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Row.UIEditImage;
            HtmlEdit uIContractCategoryDescEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractCategoryDescEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(13, 9));

            // Type 'CodedUI Contract Category EDITED' in 'Contract Category Description' text box
            uIContractCategoryDescEdit.Text = this.EditContractCategoryParams.UIContractCategoryDescEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(17, 22));
        }
        
        /// <summary>
        /// ValidateEditContractCategory - Use 'ValidateEditContractCategoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditContractCategory()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractCategCell1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Table.UICodedUIContractCategCell1;
            #endregion

            // Verify that 'CodedUI Contract Category EDITED' cell's property 'InnerText' equals 'CodedUI Contract Category EDITED'
            Assert.AreEqual(this.ValidateEditContractCategoryExpectedValues.UICodedUIContractCategCell1InnerText, uICodedUIContractCategCell1.InnerText);
        }
        
        /// <summary>
        /// EditContractCategoryResetValues - Use 'EditContractCategoryResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditContractCategoryResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Row1.UIEditImage;
            HtmlEdit uIContractCategoryDescEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractCategoryDescEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(7, 12));

            // Type 'CodedUI Contract Category' in 'Contract Category Description' text box
            uIContractCategoryDescEdit.Text = this.EditContractCategoryResetValuesParams.UIContractCategoryDescEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(39, 18));
        }
        
        /// <summary>
        /// ValidateContractCategoryPageLayout - Use 'ValidateContractCategoryPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractCategoryPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIJamesLloyd111117SeptPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd111117SeptPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateContractCategoryPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd111117SeptPane.DisplayText, this.ValidateContractCategoryPageLayoutExpectedValues.UIJamesLloyd111117SeptPaneDisplayText);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Contract Category '
            Assert.AreEqual(this.ValidateContractCategoryPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateContractCategoryPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateContractCategoryPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
            Assert.AreEqual(this.ValidateContractCategoryPageLayoutExpectedValues.UIItemPaneClass, uIItemPane.Class);
        }
        
        /// <summary>
        /// ValidateAddContractCategoryWithDuplicateDetails - Use 'ValidateAddContractCategoryWithDuplicateDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractCategoryWithDuplicateDetails()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddContractCategoryWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddContractCategoryWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// DeleteContractCategoryWithCancel
        /// </summary>
        public void DeleteContractCategoryWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(14, 7));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteContractCategory
        /// </summary>
        public void DeleteContractCategory()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_20133759_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(10, 13));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        #region Properties
        public virtual AddContractCategoryWithCancelParams AddContractCategoryWithCancelParams
        {
            get
            {
                if ((this.mAddContractCategoryWithCancelParams == null))
                {
                    this.mAddContractCategoryWithCancelParams = new AddContractCategoryWithCancelParams();
                }
                return this.mAddContractCategoryWithCancelParams;
            }
        }
        
        public virtual AddContractCategoryParams AddContractCategoryParams
        {
            get
            {
                if ((this.mAddContractCategoryParams == null))
                {
                    this.mAddContractCategoryParams = new AddContractCategoryParams();
                }
                return this.mAddContractCategoryParams;
            }
        }
        
        public virtual ValidateAddContractCategoryExpectedValues ValidateAddContractCategoryExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractCategoryExpectedValues == null))
                {
                    this.mValidateAddContractCategoryExpectedValues = new ValidateAddContractCategoryExpectedValues();
                }
                return this.mValidateAddContractCategoryExpectedValues;
            }
        }
        
        public virtual ValidateContractCategoryDoesNotExistExpectedValues ValidateContractCategoryDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateContractCategoryDoesNotExistExpectedValues == null))
                {
                    this.mValidateContractCategoryDoesNotExistExpectedValues = new ValidateContractCategoryDoesNotExistExpectedValues();
                }
                return this.mValidateContractCategoryDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateContractCategoryIsNotArchivedExpectedValues ValidateContractCategoryIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractCategoryIsNotArchivedExpectedValues == null))
                {
                    this.mValidateContractCategoryIsNotArchivedExpectedValues = new ValidateContractCategoryIsNotArchivedExpectedValues();
                }
                return this.mValidateContractCategoryIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateContractCategoryIsArchivedExpectedValues ValidateContractCategoryIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractCategoryIsArchivedExpectedValues == null))
                {
                    this.mValidateContractCategoryIsArchivedExpectedValues = new ValidateContractCategoryIsArchivedExpectedValues();
                }
                return this.mValidateContractCategoryIsArchivedExpectedValues;
            }
        }
        
        public virtual EditContractCategoryWithCancelParams EditContractCategoryWithCancelParams
        {
            get
            {
                if ((this.mEditContractCategoryWithCancelParams == null))
                {
                    this.mEditContractCategoryWithCancelParams = new EditContractCategoryWithCancelParams();
                }
                return this.mEditContractCategoryWithCancelParams;
            }
        }
        
        public virtual EditContractCategoryParams EditContractCategoryParams
        {
            get
            {
                if ((this.mEditContractCategoryParams == null))
                {
                    this.mEditContractCategoryParams = new EditContractCategoryParams();
                }
                return this.mEditContractCategoryParams;
            }
        }
        
        public virtual ValidateEditContractCategoryExpectedValues ValidateEditContractCategoryExpectedValues
        {
            get
            {
                if ((this.mValidateEditContractCategoryExpectedValues == null))
                {
                    this.mValidateEditContractCategoryExpectedValues = new ValidateEditContractCategoryExpectedValues();
                }
                return this.mValidateEditContractCategoryExpectedValues;
            }
        }
        
        public virtual EditContractCategoryResetValuesParams EditContractCategoryResetValuesParams
        {
            get
            {
                if ((this.mEditContractCategoryResetValuesParams == null))
                {
                    this.mEditContractCategoryResetValuesParams = new EditContractCategoryResetValuesParams();
                }
                return this.mEditContractCategoryResetValuesParams;
            }
        }
        
        public virtual ValidateContractCategoryPageLayoutExpectedValues ValidateContractCategoryPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateContractCategoryPageLayoutExpectedValues == null))
                {
                    this.mValidateContractCategoryPageLayoutExpectedValues = new ValidateContractCategoryPageLayoutExpectedValues();
                }
                return this.mValidateContractCategoryPageLayoutExpectedValues;
            }
        }
        
        public virtual ValidateAddContractCategoryWithDuplicateDetailsExpectedValues ValidateAddContractCategoryWithDuplicateDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractCategoryWithDuplicateDetailsExpectedValues == null))
                {
                    this.mValidateAddContractCategoryWithDuplicateDetailsExpectedValues = new ValidateAddContractCategoryWithDuplicateDetailsExpectedValues();
                }
                return this.mValidateAddContractCategoryWithDuplicateDetailsExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddContractCategoryWithCancelParams mAddContractCategoryWithCancelParams;
        
        private AddContractCategoryParams mAddContractCategoryParams;
        
        private ValidateAddContractCategoryExpectedValues mValidateAddContractCategoryExpectedValues;
        
        private ValidateContractCategoryDoesNotExistExpectedValues mValidateContractCategoryDoesNotExistExpectedValues;
        
        private ValidateContractCategoryIsNotArchivedExpectedValues mValidateContractCategoryIsNotArchivedExpectedValues;
        
        private ValidateContractCategoryIsArchivedExpectedValues mValidateContractCategoryIsArchivedExpectedValues;
        
        private EditContractCategoryWithCancelParams mEditContractCategoryWithCancelParams;
        
        private EditContractCategoryParams mEditContractCategoryParams;
        
        private ValidateEditContractCategoryExpectedValues mValidateEditContractCategoryExpectedValues;
        
        private EditContractCategoryResetValuesParams mEditContractCategoryResetValuesParams;
        
        private ValidateContractCategoryPageLayoutExpectedValues mValidateContractCategoryPageLayoutExpectedValues;
        
        private ValidateAddContractCategoryWithDuplicateDetailsExpectedValues mValidateAddContractCategoryWithDuplicateDetailsExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractCategoryWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractCategoryWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Category' in 'Contract Category Description' text box
        /// </summary>
        public string UIContractCategoryDescEditText = "CodedUI Contract Category";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractCategoryParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Category' in 'Contract Category Description' text box
        /// </summary>
        public string UIContractCategoryDescEditText = "CodedUI Contract Category";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractCategoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Category' cell's property 'InnerText' equals 'CodedUI Contract Category'
        /// </summary>
        public string UICodedUIContractCategCellInnerText = "CodedUI Contract Category";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractCategoryDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractCategoryDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Category' cell's property 'InnerText' is not equal to 'CodedUI Contract Category'
        /// </summary>
        public string UICodedUIContractCategCellInnerText = "CodedUI Contract Category";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractCategoryIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractCategoryIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractCategoryIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractCategoryIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractCategoryWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractCategoryWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Category EDITED' in 'Contract Category Description' text box
        /// </summary>
        public string UIContractCategoryDescEditText = "CodedUI Contract Category EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractCategoryParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Category EDITED' in 'Contract Category Description' text box
        /// </summary>
        public string UIContractCategoryDescEditText = "CodedUI Contract Category EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditContractCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditContractCategoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Category EDITED' cell's property 'InnerText' equals 'CodedUI Contract Category EDITED'
        /// </summary>
        public string UICodedUIContractCategCell1InnerText = "CodedUI Contract Category EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractCategoryResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractCategoryResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Category' in 'Contract Category Description' text box
        /// </summary>
        public string UIContractCategoryDescEditText = "CodedUI Contract Category";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractCategoryPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractCategoryPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd111117SeptPaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Contract Category '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Contract Information : Contract Category ";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
        /// </summary>
        public string UIItemPaneClass = "clientlogo";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractCategoryWithDuplicateDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractCategoryWithDuplicateDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractCategoriesPane
        {
            get
            {
                if ((this.mUIContractCategoriesPane == null))
                {
                    this.mUIContractCategoriesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractCategoriesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractCategoriesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Categories";
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIContractCategoriesPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUIContractCategoriesPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractCategoriesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=109";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIContractCategoryDescEdit
        {
            get
            {
                if ((this.mUIContractCategoryDescEdit == null))
                {
                    this.mUIContractCategoryDescEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractCategoryDescEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_contractcategory_categoryDescription";
                    this.mUIContractCategoryDescEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_contractcategory_categoryDescription";
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Category Description";
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_contractca";
                    this.mUIContractCategoryDescEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIContractCategoryDescEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractCategoryDescEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "31";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_20133759_Table UITbl_bdGrid_20133759_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_20133759_Table == null))
                {
                    this.mUITbl_bdGrid_20133759_Table = new UITbl_bdGrid_20133759_Table(this);
                }
                return this.mUITbl_bdGrid_20133759_Table;
            }
        }
        
        public UITbl_bdGrid_20133759_Cell UITbl_bdGrid_20133759_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_20133759_Cell == null))
                {
                    this.mUITbl_bdGrid_20133759_Cell = new UITbl_bdGrid_20133759_Cell(this);
                }
                return this.mUITbl_bdGrid_20133759_Cell;
            }
        }
        
        public UITbl_bdGrid_20133759_Row UITbl_bdGrid_20133759_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_20133759_Row == null))
                {
                    this.mUITbl_bdGrid_20133759_Row = new UITbl_bdGrid_20133759_Row(this);
                }
                return this.mUITbl_bdGrid_20133759_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "34";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_20133759_Row1 UITbl_bdGrid_20133759_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_20133759_Row1 == null))
                {
                    this.mUITbl_bdGrid_20133759_Row1 = new UITbl_bdGrid_20133759_Row1(this);
                }
                return this.mUITbl_bdGrid_20133759_Row1;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UIContractCategoriesPane
        {
            get
            {
                if ((this.mUIContractCategoriesPane == null))
                {
                    this.mUIContractCategoriesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIContractCategoriesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIContractCategoriesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Categories";
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIContractCategoriesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIContractCategoriesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractCategoriesPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIContractCategoryDescEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_20133759_Table mUITbl_bdGrid_20133759_Table;
        
        private UITbl_bdGrid_20133759_Cell mUITbl_bdGrid_20133759_Cell;
        
        private UITbl_bdGrid_20133759_Row mUITbl_bdGrid_20133759_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_20133759_Row1 mUITbl_bdGrid_20133759_Row1;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUIContractCategoriesPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UILogodivPane mUILogodivPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_20133759_Table : HtmlTable
    {
        
        public UITbl_bdGrid_20133759_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_20133759_fdb8_40d5_bd52_82450124168a";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Contract Category Description \r\nben\r\nben";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_20133759_fdb8_40d5_bd52_82";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "10";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIContractCategCell
        {
            get
            {
                if ((this.mUICodedUIContractCategCell == null))
                {
                    this.mUICodedUIContractCategCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractCategCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractCategCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractCategCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Category";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIContractCategCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "12";
                    this.mUICodedUIContractCategCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractCategCell;
            }
        }
        
        public HtmlCell UICodedUIContractCategCell1
        {
            get
            {
                if ((this.mUICodedUIContractCategCell1 == null))
                {
                    this.mUICodedUIContractCategCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractCategCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractCategCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractCategCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Category EDITED";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIContractCategCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "12";
                    this.mUICodedUIContractCategCell1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractCategCell1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIContractCategCell;
        
        private HtmlCell mUICodedUIContractCategCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_20133759_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_20133759_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_20133759_fdb8_40d5_bd52_82450124168a_CodedUI Contract Category_archive" +
                "Status";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_20133759_fdb8_40d5_bd52_8";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_20133759_Row : HtmlRow
    {
        
        public UITbl_bdGrid_20133759_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_20133759_fdb8_40d5_bd52_82450124168a_CodedUI Contract Category";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Category";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_20133759_fdb8_40d5_bd52_8";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "3";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_20133759_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_20133759_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_20133759_fdb8_40d5_bd52_82450124168a_CodedUI Contract Category EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Category EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_20133759_fdb8_40d5_bd52_8";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "3";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 Base";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd111117SeptPane
        {
            get
            {
                if ((this.mUIJamesLloyd111117SeptPane == null))
                {
                    this.mUIJamesLloyd111117SeptPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 ";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd111117SeptPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd111117SeptPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd111117SeptPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
}
