// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.CountriesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class CountriesUIMap
    {
        
        /// <summary>
        /// SelectNewCountry
        /// </summary>
        public void SelectNewCountry()
        {
            #region Variable Declarations
            HtmlHyperlink uINewCountryHyperlink = this.UICountriesWindowsInteWindow.UICountriesDocument.UIPageOptionsNewCountrPane.UINewCountryHyperlink;
            #endregion

            // Click 'New Country' link
            Mouse.Click(uINewCountryHyperlink, new Point(61, 10));
        }
        
        /// <summary>
        /// SearchForCountry - Use 'SearchForCountryParams' to pass parameters into this method.
        /// </summary>
        public void SearchForCountry()
        {
            #region Variable Declarations
            HtmlEdit uICountryEdit = this.UICountriesWindowsInteWindow.UICountriesDocument.UICountryEdit;
            HtmlImage uIFilterImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UIFilterGridgridCountrHyperlink.UIFilterImage;
            #endregion

            // Type 'United Kingdom' in 'Country' text box
            uICountryEdit.Text = this.SearchForCountryParams.UICountryEditText;

            // Click 'Filter' image
            Mouse.Click(uIFilterImage, new Point(22, 8));
        }
        
        /// <summary>
        /// SelectEditCountry
        /// </summary>
        public void SelectEditCountry()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UITbl_gridCountries_78Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(10, 4));
        }
        
        /// <summary>
        /// SelectDeleteCountry
        /// </summary>
        public void SelectDeleteCountry()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UITbl_gridCountries_22Row.UIDeleteImage;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 6));
        }
        
        /// <summary>
        /// SelectCancelDeletion
        /// </summary>
        public void SelectCancelDeletion()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(13, 9));
        }
        
        /// <summary>
        /// SelectConfirmDeletion
        /// </summary>
        public void SelectConfirmDeletion()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(10, 14));
        }
        
        /// <summary>
        /// SelectArchiveCountry
        /// </summary>
        public void SelectArchiveCountry()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UITbl_gridCountries_22Cell.UIArchiveImage;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(9, 4));
        }
        
        /// <summary>
        /// EnterCountryName - Use 'EnterCountryNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterCountryName()
        {
            #region Variable Declarations
            HtmlComboBox uICountryComboBox = this.UICountryNewWindowsIntWindow.UICountryNewDocument.UICountryComboBox;
            #endregion

            // Select 'Chile' in 'Country*' combo box
            uICountryComboBox.SelectedItem = this.EnterCountryNameParams.UICountryComboBoxSelectedItem;
        }
        
        /// <summary>
        /// SelectCancelCountryDetails
        /// </summary>
        public void SelectCancelCountryDetails()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdcButton = this.UICountryNewWindowsIntWindow.UICountryNewDocument.UICtl00contentmaincmdcButton;
            #endregion

            // Click 'ctl00$contentmain$cmdcancel' button
            Mouse.Click(uICtl00contentmaincmdcButton, new Point(28, 17));
        }
        
        /// <summary>
        /// SaveCountryDetails
        /// </summary>
        public void SaveCountryDetails()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdoButton = this.UICountryAndorraWindowWindow.UICountryAndorraDocument.UICtl00contentmaincmdoButton;
            #endregion

            // Click 'ctl00$contentmain$cmdok' button
            Mouse.Click(uICtl00contentmaincmdoButton, new Point(16, 19));
        }
        
        /// <summary>
        /// ValidateArchviedCountry - Use 'ValidateArchviedCountryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateArchviedCountry()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UITbl_gridCountries_26Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateArchviedCountryExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateUnArchviedCountry - Use 'ValidateUnArchviedCountryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnArchviedCountry()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument.UITbl_gridCountries_26Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateUnArchviedCountryExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// SelectNewSupplier
        /// </summary>
        public void SelectNewSupplier()
        {
            #region Variable Declarations
            HtmlHyperlink uINewHyperlink = this.UISupplierWindowsInterWindow.UISupplierDocument.UINewHyperlink;
            #endregion

            // Click 'New' link
            Mouse.Click(uINewHyperlink, new Point(29, 6));
        }
        
        /// <summary>
        /// EnterSupplierDetails - Use 'EnterSupplierDetailsParams' to pass parameters into this method.
        /// </summary>
        public void EnterSupplierDetails()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmainsuppEdit = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit;
            HtmlEdit uICtl00contentmainsuppEdit1 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit1;
            HtmlEdit uICtl00contentmainsuppEdit2 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit2;
            HtmlEdit uICtl00contentmainsuppEdit3 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit3;
            HtmlEdit uICtl00contentmainsuppEdit4 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit4;
            HtmlEdit uICtl00contentmainsuppEdit5 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit5;
            HtmlEdit uICtl00contentmainsuppEdit6 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit6;
            HtmlComboBox uICtl00contentmainsuppComboBox = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppComboBox;
            HtmlEdit uICtl00contentmainsuppEdit7 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit7;
            HtmlEdit uICtl00contentmainsuppEdit8poop = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit8poop;
            HtmlEdit uICtl00contentmainsuppEdit9 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit9;
            HtmlComboBox uICtl00contentmainsuppComboBox1 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppComboBox1;
            HtmlEdit uICtl00contentmainsuppEdit10 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit10;
            HtmlEdit uICtl00contentmainsuppEdit11 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit11;
            HtmlEdit uICtl00contentmainsuppEdit12 = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit12;
            #endregion

            // Type '__Auto Test Supplier 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
            uICtl00contentmainsuppEdit.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEditText;

            // Type 'Address Title 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
            uICtl00contentmainsuppEdit1.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit1Text;

            // Type 'Line 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
            uICtl00contentmainsuppEdit2.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit2Text;

            // Type 'Li 2' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
            uICtl00contentmainsuppEdit3.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit3Text;

            // Type 'Lincoln' in 'ctl00$contentmain$supplierTabs$SDetailsTab$town' text box
            uICtl00contentmainsuppEdit4.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit4Text;

            // Type 'Lincolnshire' in 'ctl00$contentmain$supplierTabs$SDetailsTab$county' text box
            uICtl00contentmainsuppEdit5.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit5Text;

            // Type 'LN6 3JY' in 'ctl00$contentmain$supplierTabs$SDetailsTab$postcod...' text box
            uICtl00contentmainsuppEdit6.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit6Text;

            // Select 'Chile' in 'ctl00$contentmain$supplierTabs$SDetailsTab$country' combo box
            uICtl00contentmainsuppComboBox.SelectedItem = this.EnterSupplierDetailsParams.UICtl00contentmainsuppComboBoxSelectedItem;

            // Type '12345' in 'ctl00$contentmain$supplierTabs$SDetailsTab$switchb...' text box
            uICtl00contentmainsuppEdit7.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit7Text;

            // Type '98765' in 'ctl00$contentmain$supplierTabs$SDetailsTab$fax' text box
            uICtl00contentmainsuppEdit8poop.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit8poopText;

            // Type '112' in 'ctl00$contentmain$supplierTabs$SDetailsTab$numempl...' text box
            uICtl00contentmainsuppEdit9.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit9Text;

            // Select 'January' in 'ctl00$contentmain$supplierTabs$SDetailsTab$financi...' combo box
            uICtl00contentmainsuppComboBox1.SelectedItem = this.EnterSupplierDetailsParams.UICtl00contentmainsuppComboBox1SelectedItem;

            // Type '12000' in 'ctl00$contentmain$supplierTabs$SDetailsTab$turnove...' text box
            uICtl00contentmainsuppEdit10.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit10Text;

            // Type 'Sup Code 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
            uICtl00contentmainsuppEdit11.Text = this.EnterSupplierDetailsParams.UICtl00contentmainsuppEdit11Text;

            // Click 'ctl00$contentmain$supplierTabs$SDetailsTab$weburl' text box
            Mouse.Click(uICtl00contentmainsuppEdit12, new Point(100, 13));
        }
        
        /// <summary>
        /// SaveSupplierDetails
        /// </summary>
        public void SaveSupplierDetails()
        {
            #region Variable Declarations
            HtmlInputButton uIUpdatesupplierdetailButton = this.UISupplier__AutoTestSuWindow.UISupplier__AutoTestSuDocument.UIUpdatesupplierdetailButton;
            #endregion

            // Click 'Update supplier details' button
            Mouse.Click(uIUpdatesupplierdetailButton, new Point(12, 20));
        }
        
        /// <summary>
        /// SelectSuppliersContactDetailsTab
        /// </summary>
        public void SelectSuppliersContactDetailsTab()
        {
            #region Variable Declarations
            HtmlSpan uIContactDetailsPane = this.UISupplier__TestSuppliWindow.UISupplier__TestSuppliDocument.UIContactDetailsPane;
            #endregion

            // Click 'Contact Details' pane
            Mouse.Click(uIContactDetailsPane, new Point(62, 4));
        }
        
        /// <summary>
        /// SelectNewSupplierContact
        /// </summary>
        public void SelectNewSupplierContact()
        {
            #region Variable Declarations
            HtmlHyperlink uINewContactHyperlink = this.UISupplier__TestSuppliWindow.UISupplier__TestSuppliDocument.UINewContactHyperlink;
            #endregion

            // Click 'New Contact' link
            Mouse.Click(uINewContactHyperlink, new Point(67, 5));
        }
        
        /// <summary>
        /// EnterBusinessContactAddress - Use 'EnterBusinessContactAddressParams' to pass parameters into this method.
        /// </summary>
        public void EnterBusinessContactAddress()
        {
            #region Variable Declarations
            HtmlEdit uIAddressTitleEdit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressTitleEdit;
            HtmlEdit uIAddressLine1Edit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressLine1Edit;
            HtmlEdit uIAddressLine2Edit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressLine2Edit;
            HtmlDiv uITownPane = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIPnlContactFormPane.UITownPane;
            HtmlEdit uITownEdit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UITownEdit;
            HtmlEdit uIPostCodeEdit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIPostCodeEdit;
            WinMenuBar uIApplicationMenuBar = this.UISupplierTestSupplierWindow.UIItemWindow.UIApplicationMenuBar;
            HtmlEdit uITelephoneEdit = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UITelephoneEdit;
            HtmlComboBox uICountryComboBox = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UICountryComboBox;
            #endregion

            // Type 'Business Add Title' in 'Address Title' text box
            uIAddressTitleEdit.Text = this.EnterBusinessContactAddressParams.UIAddressTitleEditText;

            // Type '{Tab}' in 'Address Title' text box
            Keyboard.SendKeys(uIAddressTitleEdit, this.EnterBusinessContactAddressParams.UIAddressTitleEditSendKeys, ModifierKeys.None);

            // Type 'Business Ad Line 1' in 'Address Line 1' text box
            uIAddressLine1Edit.Text = this.EnterBusinessContactAddressParams.UIAddressLine1EditText;

            // Type 'Business Ad Line 2' in 'Address Line 2' text box
            uIAddressLine2Edit.Text = this.EnterBusinessContactAddressParams.UIAddressLine2EditText;

            // Click 'Town' pane
            Mouse.Click(uITownPane, new Point(249, 28));

            // Type 'Lincoln' in 'Town' text box
            uITownEdit.Text = this.EnterBusinessContactAddressParams.UITownEditText;

            // Type '1qa' in 'Post Code' text box
            uIPostCodeEdit.Text = this.EnterBusinessContactAddressParams.UIPostCodeEditText;

            // Type '{LMenu}' in 'Post Code' text box
            Keyboard.SendKeys(uIPostCodeEdit, this.EnterBusinessContactAddressParams.UIPostCodeEditSendKeys, ModifierKeys.None);

            // Type '1' in 'Application' menu bar
            Keyboard.SendKeys(uIApplicationMenuBar, this.EnterBusinessContactAddressParams.UIApplicationMenuBarSendKeys, ModifierKeys.None);

            // Type '1qa aq' in 'Post Code' text box
            uIPostCodeEdit.Text = this.EnterBusinessContactAddressParams.UIPostCodeEditText1;

            // Click 'Telephone' text box
            Mouse.Click(uITelephoneEdit, new Point(30, 10));

            // Select 'United Kingdom' in 'Country' combo box
            uICountryComboBox.SelectedItem = this.EnterBusinessContactAddressParams.UICountryComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EnterPersonelContactAddress - Use 'EnterPersonelContactAddressParams' to pass parameters into this method.
        /// </summary>
        public void EnterPersonelContactAddress()
        {
            #region Variable Declarations
            HtmlEdit uIAddressTitleEdit1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressTitleEdit1;
            HtmlEdit uIAddressLine1Edit1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressLine1Edit1;
            HtmlEdit uIAddressLine2Edit1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIAddressLine2Edit1;
            HtmlEdit uITownEdit1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UITownEdit1;
            HtmlEdit uIPostCodeEdit1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UIPostCodeEdit1;
            HtmlComboBox uICountryComboBox1 = this.UISupplierTestSupplierWindow.UISupplierTestSupplierDocument.UICountryComboBox1;
            #endregion

            // Type 'Personel Add Title' in 'Address Title' text box
            uIAddressTitleEdit1.Text = this.EnterPersonelContactAddressParams.UIAddressTitleEdit1Text;

            // Type 'Personel Add Line 1' in 'Address Line 1' text box
            uIAddressLine1Edit1.Text = this.EnterPersonelContactAddressParams.UIAddressLine1Edit1Text;

            // Click 'Address Line 1' text box
            Mouse.Click(uIAddressLine1Edit1, new Point(146, 8));

            // Type 'Personel Add Line 2' in 'Address Line 2' text box
            uIAddressLine2Edit1.Text = this.EnterPersonelContactAddressParams.UIAddressLine2Edit1Text;

            // Type 'Lincoln' in 'Town' text box
            uITownEdit1.Text = this.EnterPersonelContactAddressParams.UITownEdit1Text;

            // Type '1QA 1AQ' in 'Post Code' text box
            uIPostCodeEdit1.Text = this.EnterPersonelContactAddressParams.UIPostCodeEdit1Text;

            // Select 'United Kingdom' in 'Country' combo box
            uICountryComboBox1.SelectedItem = this.EnterPersonelContactAddressParams.UICountryComboBox1SelectedItem;
        }
        
        /// <summary>
        /// SelectEditSupplier
        /// </summary>
        public void SelectEditSupplier()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UISupplierWindowsInterWindow.UISupplierDocument.UITbl_suppliergrid_21Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 5));
        }
        
        /// <summary>
        /// ValidateAddCountryList - Use 'ValidateAddCountryListExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddCountryList()
        {
            #region Variable Declarations
            HtmlComboBox uICountryComboBox1 = this.UICountryNewWindowsIntWindow.UICountryNewDocument.UICountryComboBox1;
            #endregion

            // Verify that 'Country*' combo box's property 'InnerText' contains 'Chile'
            StringAssert.Contains(uICountryComboBox1.InnerText, this.ValidateAddCountryListExpectedValues.UICountryComboBox1InnerText);
        }
        
        /// <summary>
        /// ValidateSupplierExists - Use 'ValidateSupplierExistsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSupplierExists()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UISupplierWindowsInterWindow.UISupplierDocument.UITbl_suppliergridTable.UIItemCustom;
            #endregion

            // Verify that 'Unknown Name' custom control's property 'TagName' contains '___Auto Test Supplier 1'
            StringAssert.Contains(uIItemCustom.TagName, this.ValidateSupplierExistsExpectedValues.UIItemCustomTagName);
        }
        
        /// <summary>
        /// ValidateSuppliersCountry - Use 'ValidateSuppliersCountryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSuppliersCountry()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmainusrSComboBox = this.UISupplier__AutoTestSuWindow.UISupplier__AutoTestSuDocument.UICtl00contentmainusrSComboBox;
            #endregion

            // Verify that 'ctl00$contentmain$usrSupplierDetails$supplierTabs$...' combo box's property 'SelectedItem' equals 'Chile'
            Assert.AreEqual(this.ValidateSuppliersCountryExpectedValues.UICtl00contentmainusrSComboBoxSelectedItem, uICtl00contentmainusrSComboBox.SelectedItem);
        }
        
        /// <summary>
        /// SelectCancelSupplierDetails
        /// </summary>
        public void SelectCancelSupplierDetails()
        {
            #region Variable Declarations
            HtmlInputButton uIAbortandexitSupplierButton = this.UISupplier__AutoTestSuWindow.UISupplier__AutoTestSuDocument.UIAbortandexitSupplierButton;
            #endregion

            // Click 'Abort and exit Supplier details' button
            Mouse.Click(uIAbortandexitSupplierButton, new Point(15, 15));
        }
        
        /// <summary>
        /// EnterSuppliersCountry - Use 'EnterSuppliersCountryParams' to pass parameters into this method.
        /// </summary>
        public void EnterSuppliersCountry()
        {
            #region Variable Declarations
            HtmlComboBox uICtl00contentmainsuppComboBox = this.UISupplier__AutoTestSuWindow.UISupplier__AutoTestSuDocument.UICtl00contentmainsuppComboBox;
            #endregion

            // Select 'Chile' in 'ctl00$contentmain$supplierTabs$SDetailsTab$country' combo box
            uICtl00contentmainsuppComboBox.SelectedItem = this.EnterSuppliersCountryParams.UICtl00contentmainsuppComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EnterSupplierName - Use 'EnterSupplierNameParams' to pass parameters into this method.
        /// </summary>
        public void EnterSupplierName()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmainsuppEdit = this.UISupplierNewWindowsInWindow.UISupplierNewDocument.UICtl00contentmainsuppEdit;
            #endregion

            // Type '__Auto Test Supplier 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
            uICtl00contentmainsuppEdit.Text = this.EnterSupplierNameParams.UICtl00contentmainsuppEditText;
        }
        
        /// <summary>
        /// EditCountryWhenNotPaginated
        /// </summary>
        public void EditCountryWhenNotPaginated()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_18Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(3, 8));
        }
        
        /// <summary>
        /// ValidateThatCountryExists - Use 'ValidateThatCountryExistsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateThatCountryExists()
        {
            #region Variable Declarations
            HtmlComboBox uICountryComboBox = this.UICountryBrazilWindowsWindow.UICountryBrazilDocument.UICountryComboBox;
            #endregion

            // Verify that 'Country*' combo box's property 'SelectedItem' equals 'Brazil'
            Assert.AreEqual(this.ValidateThatCountryExistsExpectedValues.UICountryComboBoxSelectedItem, uICountryComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ValidateCountriesTable - Use 'ValidateCountriesTableExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCountriesTable()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountriesTable1.UIItemCustom;
            #endregion

            // Verify that 'Unknown Name' custom control's property 'InnerText' contains 'Brazil'
            StringAssert.Contains(uIItemCustom.InnerText, this.ValidateCountriesTableExpectedValues.UIItemCustomInnerText);
        }
        
        /// <summary>
        /// AssertCountryAlpah2Value - Use 'AssertCountryAlpah2ValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCountryAlpah2Value()
        {
            #region Variable Declarations
            HtmlEdit uIAlpha2Edit = this.UICountryBrazilWindowsWindow.UICountryBrazilDocument1.UIAlpha2Edit;
            #endregion

            // Verify that 'Alpha 2*' text box's property 'Text' equals 'BR'
            Assert.AreEqual(this.AssertCountryAlpah2ValueExpectedValues.UIAlpha2EditText, uIAlpha2Edit.Text);
        }
        
        /// <summary>
        /// AssertCountryAlpha3Value - Use 'AssertCountryAlpha3ValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCountryAlpha3Value()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtAEdit = this.UICountryBrazilWindowsWindow.UICountryBrazilDocument1.UICtl00contentmaintxtAEdit;
            #endregion

            // Verify that 'ctl00$contentmain$txtAlpha3' text box's property 'Text' equals 'BRA'
            Assert.AreEqual(this.AssertCountryAlpha3ValueExpectedValues.UICtl00contentmaintxtAEditText, uICtl00contentmaintxtAEdit.Text);
        }
        
        /// <summary>
        /// AssertCountryNumeric3Value - Use 'AssertCountryNumeric3ValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCountryNumeric3Value()
        {
            #region Variable Declarations
            HtmlEdit uICtl00contentmaintxtNEdit = this.UICountryBrazilWindowsWindow.UICountryBrazilDocument1.UICtl00contentmaintxtNEdit;
            #endregion

            // Verify that 'ctl00$contentmain$txtNumeric3' text box's property 'Text' equals '076'
            Assert.AreEqual(this.AssertCountryNumeric3ValueExpectedValues.UICtl00contentmaintxtNEditText, uICtl00contentmaintxtNEdit.Text);
        }
        
        /// <summary>
        /// DeleteCountry
        /// </summary>
        public void DeleteCountry()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_23Row.UIDeleteImage;
            BrowserWindow uICountriesWindowsInteWindow = this.UICountriesWindowsInteWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(5, 5));

            // Click 'Ok' button in the browser dialog window
            uICountriesWindowsInteWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// DeleteCountryUnitedKingdom
        /// </summary>
        public void DeleteCountryUnitedKingdom()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_1Row.UIDeleteImage;
            BrowserWindow uICountriesWindowsInteWindow = this.UICountriesWindowsInteWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(1, 9));

            // Click 'Ok' button in the browser dialog window
            uICountriesWindowsInteWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// AssertDeletionMessageUsedOnSupplierContact - Use 'AssertDeletionMessageUsedOnSupplierContactExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDeletionMessageUsedOnSupplierContact()
        {
            #region Variable Declarations
            WinText uITheselectedcountrycaText = this.UIMessagefromwebpageWindow.UITheselectedcountrycaWindow.UITheselectedcountrycaText;
            #endregion

            // Verify that 'The selected country cannot be deleted as it has b...' label's property 'DisplayText' equals 'The selected country cannot be deleted as it has been used on one more suppliers'
            Assert.AreEqual(this.AssertDeletionMessageUsedOnSupplierContactExpectedValues.UITheselectedcountrycaTextDisplayText, uITheselectedcountrycaText.DisplayText);
        }
        
        /// <summary>
        /// ArchiveCountryInUse
        /// </summary>
        public void ArchiveCountryInUse()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_1_Cell.UIArchiveImage;
            WinPane uICountriesPane = this.UICountriesWindowsInteWindow.UIItemWindow.UICountriesWindowsInteClient.UICountriesPane;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(5, 12));

            // Click 'Countries' pane
            Mouse.Click(uICountriesPane, new Point(1253, 798));
        }
        
        /// <summary>
        /// AssertCountryNotArchivedINUseOnSupplier - Use 'AssertCountryNotArchivedINUseOnSupplierExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCountryNotArchivedINUseOnSupplier()
        {
            #region Variable Declarations
            WinText uITheselectedcountrycaText1 = this.UIMessagefromwebpageWindow.UITheselectedcountrycaWindow.UITheselectedcountrycaText1;
            #endregion

            // Verify that 'The selected country cannot be archived as it has ...' label's property 'DisplayText' equals 'The selected country cannot be archived as it has been used on one more suppliers'
            Assert.AreEqual(this.AssertCountryNotArchivedINUseOnSupplierExpectedValues.UITheselectedcountrycaText1DisplayText, uITheselectedcountrycaText1.DisplayText);
        }
        
        /// <summary>
        /// ArchiveCountryInUseOnContact
        /// </summary>
        public void ArchiveCountryInUseOnContact()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_23Cell.UIArchiveImage;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(6, 9));
        }
        
        /// <summary>
        /// AssertCountryNotArchivedINUseOnSupplierContact - Use 'AssertCountryNotArchivedINUseOnSupplierContactExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCountryNotArchivedINUseOnSupplierContact()
        {
            #region Variable Declarations
            WinText uITheselectedcountrycaText1 = this.UIMessagefromwebpageWindow.UITheselectedcountrycaWindow.UITheselectedcountrycaText1;
            #endregion

            // Verify that 'The selected country cannot be archived as it has ...' label's property 'FriendlyName' equals 'The selected country cannot be archived as it has ...'
            Assert.AreEqual(this.AssertCountryNotArchivedINUseOnSupplierContactExpectedValues.UITheselectedcountrycaText1FriendlyName, uITheselectedcountrycaText1.FriendlyName);
        }
        
        /// <summary>
        /// PressArchiveCountryIcon
        /// </summary>
        public void PressArchiveCountryIcon()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_37Cell.UIArchiveImage;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(6, 8));
        }
        
        /// <summary>
        /// PressUnarchiveCountryIcon
        /// </summary>
        public void PressUnarchiveCountryIcon()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_37Cell.UIUnArchiveImage;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(9, 8));
        }
        
        /// <summary>
        /// AssertDeletionMessageUsedOnSupplier - Use 'AssertDeletionMessageUsedOnSupplierExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDeletionMessageUsedOnSupplier()
        {
            #region Variable Declarations
            WinText uITheselectedcountrycaText2 = this.UIMessagefromwebpageWindow.UITheselectedcountrycaWindow.UITheselectedcountrycaText2;
            #endregion

            // Verify that 'The selected country cannot be deleted as it has b...' label's property 'DisplayText' equals 'The selected country cannot be deleted as it has been used on one or more suppliers'
            Assert.AreEqual(this.AssertDeletionMessageUsedOnSupplierExpectedValues.UITheselectedcountrycaText2DisplayText, uITheselectedcountrycaText2.DisplayText);
        }
        
        /// <summary>
        /// PressUnArchiveCountryIcon1
        /// </summary>
        public void PressUnArchiveCountryIcon1()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_1_Cell.UIUnArchiveImage;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(11, 4));
        }
        
        /// <summary>
        /// ValidateCountryIsNotArchived - Use 'ValidateCountryIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCountryIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage1 = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_1_Cell.UIArchiveImage1;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateCountryIsNotArchivedExpectedValues.UIArchiveImage1Title, uIArchiveImage1.Title);
        }
        
        /// <summary>
        /// PressUnsuccessfulDeleteClose
        /// </summary>
        public void PressUnsuccessfulDeleteClose()
        {
            #region Variable Declarations
            WinTitleBar uIMessagefromwebpageTitleBar = this.UIMessagefromwebpageWindow.UIMessagefromwebpageTitleBar;
            WinButton uICloseButton = this.UIMessagefromwebpageWindow.UIMessagefromwebpageTitleBar.UICloseButton;
            #endregion

            // Click 'Message from webpage' title bar
            Mouse.Click(uIMessagefromwebpageTitleBar, new Point(349, 6));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(21, 9));
        }
        
        /// <summary>
        /// PressUnarchiveCountryUnitedKingdom
        /// </summary>
        public void PressUnarchiveCountryUnitedKingdom()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_1_Cell.UIUnArchiveImage;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(7, 4));
        }
        
        /// <summary>
        /// ValidateCountryIsArchived - Use 'ValidateCountryIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCountryIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UICountriesWindowsInteWindow.UICountriesDocument1.UITbl_gridCountries_53Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateCountryIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        #region Properties
        public virtual SearchForCountryParams SearchForCountryParams
        {
            get
            {
                if ((this.mSearchForCountryParams == null))
                {
                    this.mSearchForCountryParams = new SearchForCountryParams();
                }
                return this.mSearchForCountryParams;
            }
        }
        
        public virtual EnterCountryNameParams EnterCountryNameParams
        {
            get
            {
                if ((this.mEnterCountryNameParams == null))
                {
                    this.mEnterCountryNameParams = new EnterCountryNameParams();
                }
                return this.mEnterCountryNameParams;
            }
        }
        
        public virtual ValidateArchviedCountryExpectedValues ValidateArchviedCountryExpectedValues
        {
            get
            {
                if ((this.mValidateArchviedCountryExpectedValues == null))
                {
                    this.mValidateArchviedCountryExpectedValues = new ValidateArchviedCountryExpectedValues();
                }
                return this.mValidateArchviedCountryExpectedValues;
            }
        }
        
        public virtual ValidateUnArchviedCountryExpectedValues ValidateUnArchviedCountryExpectedValues
        {
            get
            {
                if ((this.mValidateUnArchviedCountryExpectedValues == null))
                {
                    this.mValidateUnArchviedCountryExpectedValues = new ValidateUnArchviedCountryExpectedValues();
                }
                return this.mValidateUnArchviedCountryExpectedValues;
            }
        }
        
        public virtual EnterSupplierDetailsParams EnterSupplierDetailsParams
        {
            get
            {
                if ((this.mEnterSupplierDetailsParams == null))
                {
                    this.mEnterSupplierDetailsParams = new EnterSupplierDetailsParams();
                }
                return this.mEnterSupplierDetailsParams;
            }
        }
        
        public virtual EnterBusinessContactAddressParams EnterBusinessContactAddressParams
        {
            get
            {
                if ((this.mEnterBusinessContactAddressParams == null))
                {
                    this.mEnterBusinessContactAddressParams = new EnterBusinessContactAddressParams();
                }
                return this.mEnterBusinessContactAddressParams;
            }
        }
        
        public virtual EnterPersonelContactAddressParams EnterPersonelContactAddressParams
        {
            get
            {
                if ((this.mEnterPersonelContactAddressParams == null))
                {
                    this.mEnterPersonelContactAddressParams = new EnterPersonelContactAddressParams();
                }
                return this.mEnterPersonelContactAddressParams;
            }
        }
        
        public virtual ValidateAddCountryListExpectedValues ValidateAddCountryListExpectedValues
        {
            get
            {
                if ((this.mValidateAddCountryListExpectedValues == null))
                {
                    this.mValidateAddCountryListExpectedValues = new ValidateAddCountryListExpectedValues();
                }
                return this.mValidateAddCountryListExpectedValues;
            }
        }
        
        public virtual ValidateSupplierExistsExpectedValues ValidateSupplierExistsExpectedValues
        {
            get
            {
                if ((this.mValidateSupplierExistsExpectedValues == null))
                {
                    this.mValidateSupplierExistsExpectedValues = new ValidateSupplierExistsExpectedValues();
                }
                return this.mValidateSupplierExistsExpectedValues;
            }
        }
        
        public virtual ValidateSuppliersCountryExpectedValues ValidateSuppliersCountryExpectedValues
        {
            get
            {
                if ((this.mValidateSuppliersCountryExpectedValues == null))
                {
                    this.mValidateSuppliersCountryExpectedValues = new ValidateSuppliersCountryExpectedValues();
                }
                return this.mValidateSuppliersCountryExpectedValues;
            }
        }
        
        public virtual EnterSuppliersCountryParams EnterSuppliersCountryParams
        {
            get
            {
                if ((this.mEnterSuppliersCountryParams == null))
                {
                    this.mEnterSuppliersCountryParams = new EnterSuppliersCountryParams();
                }
                return this.mEnterSuppliersCountryParams;
            }
        }
        
        public virtual EnterSupplierNameParams EnterSupplierNameParams
        {
            get
            {
                if ((this.mEnterSupplierNameParams == null))
                {
                    this.mEnterSupplierNameParams = new EnterSupplierNameParams();
                }
                return this.mEnterSupplierNameParams;
            }
        }
        
        public virtual ValidateThatCountryExistsExpectedValues ValidateThatCountryExistsExpectedValues
        {
            get
            {
                if ((this.mValidateThatCountryExistsExpectedValues == null))
                {
                    this.mValidateThatCountryExistsExpectedValues = new ValidateThatCountryExistsExpectedValues();
                }
                return this.mValidateThatCountryExistsExpectedValues;
            }
        }
        
        public virtual ValidateCountriesTableExpectedValues ValidateCountriesTableExpectedValues
        {
            get
            {
                if ((this.mValidateCountriesTableExpectedValues == null))
                {
                    this.mValidateCountriesTableExpectedValues = new ValidateCountriesTableExpectedValues();
                }
                return this.mValidateCountriesTableExpectedValues;
            }
        }
        
        public virtual AssertCountryAlpah2ValueExpectedValues AssertCountryAlpah2ValueExpectedValues
        {
            get
            {
                if ((this.mAssertCountryAlpah2ValueExpectedValues == null))
                {
                    this.mAssertCountryAlpah2ValueExpectedValues = new AssertCountryAlpah2ValueExpectedValues();
                }
                return this.mAssertCountryAlpah2ValueExpectedValues;
            }
        }
        
        public virtual AssertCountryAlpha3ValueExpectedValues AssertCountryAlpha3ValueExpectedValues
        {
            get
            {
                if ((this.mAssertCountryAlpha3ValueExpectedValues == null))
                {
                    this.mAssertCountryAlpha3ValueExpectedValues = new AssertCountryAlpha3ValueExpectedValues();
                }
                return this.mAssertCountryAlpha3ValueExpectedValues;
            }
        }
        
        public virtual AssertCountryNumeric3ValueExpectedValues AssertCountryNumeric3ValueExpectedValues
        {
            get
            {
                if ((this.mAssertCountryNumeric3ValueExpectedValues == null))
                {
                    this.mAssertCountryNumeric3ValueExpectedValues = new AssertCountryNumeric3ValueExpectedValues();
                }
                return this.mAssertCountryNumeric3ValueExpectedValues;
            }
        }
        
        public virtual AssertDeletionMessageUsedOnSupplierContactExpectedValues AssertDeletionMessageUsedOnSupplierContactExpectedValues
        {
            get
            {
                if ((this.mAssertDeletionMessageUsedOnSupplierContactExpectedValues == null))
                {
                    this.mAssertDeletionMessageUsedOnSupplierContactExpectedValues = new AssertDeletionMessageUsedOnSupplierContactExpectedValues();
                }
                return this.mAssertDeletionMessageUsedOnSupplierContactExpectedValues;
            }
        }
        
        public virtual AssertCountryNotArchivedINUseOnSupplierExpectedValues AssertCountryNotArchivedINUseOnSupplierExpectedValues
        {
            get
            {
                if ((this.mAssertCountryNotArchivedINUseOnSupplierExpectedValues == null))
                {
                    this.mAssertCountryNotArchivedINUseOnSupplierExpectedValues = new AssertCountryNotArchivedINUseOnSupplierExpectedValues();
                }
                return this.mAssertCountryNotArchivedINUseOnSupplierExpectedValues;
            }
        }
        
        public virtual AssertCountryNotArchivedINUseOnSupplierContactExpectedValues AssertCountryNotArchivedINUseOnSupplierContactExpectedValues
        {
            get
            {
                if ((this.mAssertCountryNotArchivedINUseOnSupplierContactExpectedValues == null))
                {
                    this.mAssertCountryNotArchivedINUseOnSupplierContactExpectedValues = new AssertCountryNotArchivedINUseOnSupplierContactExpectedValues();
                }
                return this.mAssertCountryNotArchivedINUseOnSupplierContactExpectedValues;
            }
        }
        
        public virtual AssertDeletionMessageUsedOnSupplierExpectedValues AssertDeletionMessageUsedOnSupplierExpectedValues
        {
            get
            {
                if ((this.mAssertDeletionMessageUsedOnSupplierExpectedValues == null))
                {
                    this.mAssertDeletionMessageUsedOnSupplierExpectedValues = new AssertDeletionMessageUsedOnSupplierExpectedValues();
                }
                return this.mAssertDeletionMessageUsedOnSupplierExpectedValues;
            }
        }
        
        public virtual ValidateCountryIsNotArchivedExpectedValues ValidateCountryIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateCountryIsNotArchivedExpectedValues == null))
                {
                    this.mValidateCountryIsNotArchivedExpectedValues = new ValidateCountryIsNotArchivedExpectedValues();
                }
                return this.mValidateCountryIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateCountryIsArchivedExpectedValues ValidateCountryIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateCountryIsArchivedExpectedValues == null))
                {
                    this.mValidateCountryIsArchivedExpectedValues = new ValidateCountryIsArchivedExpectedValues();
                }
                return this.mValidateCountryIsArchivedExpectedValues;
            }
        }
        
        public UICountriesWindowsInteWindow UICountriesWindowsInteWindow
        {
            get
            {
                if ((this.mUICountriesWindowsInteWindow == null))
                {
                    this.mUICountriesWindowsInteWindow = new UICountriesWindowsInteWindow();
                }
                return this.mUICountriesWindowsInteWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UICountryNewWindowsIntWindow UICountryNewWindowsIntWindow
        {
            get
            {
                if ((this.mUICountryNewWindowsIntWindow == null))
                {
                    this.mUICountryNewWindowsIntWindow = new UICountryNewWindowsIntWindow();
                }
                return this.mUICountryNewWindowsIntWindow;
            }
        }
        
        public UICountryAndorraWindowWindow UICountryAndorraWindowWindow
        {
            get
            {
                if ((this.mUICountryAndorraWindowWindow == null))
                {
                    this.mUICountryAndorraWindowWindow = new UICountryAndorraWindowWindow();
                }
                return this.mUICountryAndorraWindowWindow;
            }
        }
        
        public UISupplierWindowsInterWindow UISupplierWindowsInterWindow
        {
            get
            {
                if ((this.mUISupplierWindowsInterWindow == null))
                {
                    this.mUISupplierWindowsInterWindow = new UISupplierWindowsInterWindow();
                }
                return this.mUISupplierWindowsInterWindow;
            }
        }
        
        public UISupplierNewWindowsInWindow UISupplierNewWindowsInWindow
        {
            get
            {
                if ((this.mUISupplierNewWindowsInWindow == null))
                {
                    this.mUISupplierNewWindowsInWindow = new UISupplierNewWindowsInWindow();
                }
                return this.mUISupplierNewWindowsInWindow;
            }
        }
        
        public UISupplier__TestSuppliWindow UISupplier__TestSuppliWindow
        {
            get
            {
                if ((this.mUISupplier__TestSuppliWindow == null))
                {
                    this.mUISupplier__TestSuppliWindow = new UISupplier__TestSuppliWindow();
                }
                return this.mUISupplier__TestSuppliWindow;
            }
        }
        
        public UISupplierTestSupplierWindow UISupplierTestSupplierWindow
        {
            get
            {
                if ((this.mUISupplierTestSupplierWindow == null))
                {
                    this.mUISupplierTestSupplierWindow = new UISupplierTestSupplierWindow();
                }
                return this.mUISupplierTestSupplierWindow;
            }
        }
        
        public UISupplier__AutoTestSuWindow UISupplier__AutoTestSuWindow
        {
            get
            {
                if ((this.mUISupplier__AutoTestSuWindow == null))
                {
                    this.mUISupplier__AutoTestSuWindow = new UISupplier__AutoTestSuWindow();
                }
                return this.mUISupplier__AutoTestSuWindow;
            }
        }
        
        public UICountryBrazilWindowsWindow UICountryBrazilWindowsWindow
        {
            get
            {
                if ((this.mUICountryBrazilWindowsWindow == null))
                {
                    this.mUICountryBrazilWindowsWindow = new UICountryBrazilWindowsWindow();
                }
                return this.mUICountryBrazilWindowsWindow;
            }
        }
        #endregion
        
        #region Fields
        private SearchForCountryParams mSearchForCountryParams;
        
        private EnterCountryNameParams mEnterCountryNameParams;
        
        private ValidateArchviedCountryExpectedValues mValidateArchviedCountryExpectedValues;
        
        private ValidateUnArchviedCountryExpectedValues mValidateUnArchviedCountryExpectedValues;
        
        private EnterSupplierDetailsParams mEnterSupplierDetailsParams;
        
        private EnterBusinessContactAddressParams mEnterBusinessContactAddressParams;
        
        private EnterPersonelContactAddressParams mEnterPersonelContactAddressParams;
        
        private ValidateAddCountryListExpectedValues mValidateAddCountryListExpectedValues;
        
        private ValidateSupplierExistsExpectedValues mValidateSupplierExistsExpectedValues;
        
        private ValidateSuppliersCountryExpectedValues mValidateSuppliersCountryExpectedValues;
        
        private EnterSuppliersCountryParams mEnterSuppliersCountryParams;
        
        private EnterSupplierNameParams mEnterSupplierNameParams;
        
        private ValidateThatCountryExistsExpectedValues mValidateThatCountryExistsExpectedValues;
        
        private ValidateCountriesTableExpectedValues mValidateCountriesTableExpectedValues;
        
        private AssertCountryAlpah2ValueExpectedValues mAssertCountryAlpah2ValueExpectedValues;
        
        private AssertCountryAlpha3ValueExpectedValues mAssertCountryAlpha3ValueExpectedValues;
        
        private AssertCountryNumeric3ValueExpectedValues mAssertCountryNumeric3ValueExpectedValues;
        
        private AssertDeletionMessageUsedOnSupplierContactExpectedValues mAssertDeletionMessageUsedOnSupplierContactExpectedValues;
        
        private AssertCountryNotArchivedINUseOnSupplierExpectedValues mAssertCountryNotArchivedINUseOnSupplierExpectedValues;
        
        private AssertCountryNotArchivedINUseOnSupplierContactExpectedValues mAssertCountryNotArchivedINUseOnSupplierContactExpectedValues;
        
        private AssertDeletionMessageUsedOnSupplierExpectedValues mAssertDeletionMessageUsedOnSupplierExpectedValues;
        
        private ValidateCountryIsNotArchivedExpectedValues mValidateCountryIsNotArchivedExpectedValues;
        
        private ValidateCountryIsArchivedExpectedValues mValidateCountryIsArchivedExpectedValues;
        
        private UICountriesWindowsInteWindow mUICountriesWindowsInteWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UICountryNewWindowsIntWindow mUICountryNewWindowsIntWindow;
        
        private UICountryAndorraWindowWindow mUICountryAndorraWindowWindow;
        
        private UISupplierWindowsInterWindow mUISupplierWindowsInterWindow;
        
        private UISupplierNewWindowsInWindow mUISupplierNewWindowsInWindow;
        
        private UISupplier__TestSuppliWindow mUISupplier__TestSuppliWindow;
        
        private UISupplierTestSupplierWindow mUISupplierTestSupplierWindow;
        
        private UISupplier__AutoTestSuWindow mUISupplier__AutoTestSuWindow;
        
        private UICountryBrazilWindowsWindow mUICountryBrazilWindowsWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchForCountry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class SearchForCountryParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'United Kingdom' in 'Country' text box
        /// </summary>
        public string UICountryEditText = "United Kingdom";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterCountryName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterCountryNameParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Chile' in 'Country*' combo box
        /// </summary>
        public string UICountryComboBoxSelectedItem = "Chile";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateArchviedCountry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateArchviedCountryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnArchviedCountry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateUnArchviedCountryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterSupplierDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterSupplierDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Auto Test Supplier 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
        /// </summary>
        public string UICtl00contentmainsuppEditText = "__Auto Test Supplier 1";
        
        /// <summary>
        /// Type 'Address Title 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit1Text = "Address Title 1";
        
        /// <summary>
        /// Type 'Line 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit2Text = "Line 1";
        
        /// <summary>
        /// Type 'Li 2' in 'ctl00$contentmain$supplierTabs$SDetailsTab$address...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit3Text = "Li 2";
        
        /// <summary>
        /// Type 'Lincoln' in 'ctl00$contentmain$supplierTabs$SDetailsTab$town' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit4Text = "Lincoln";
        
        /// <summary>
        /// Type 'Lincolnshire' in 'ctl00$contentmain$supplierTabs$SDetailsTab$county' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit5Text = "Lincolnshire";
        
        /// <summary>
        /// Type 'LN6 3JY' in 'ctl00$contentmain$supplierTabs$SDetailsTab$postcod...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit6Text = "LN6 3JY";
        
        /// <summary>
        /// Select 'Chile' in 'ctl00$contentmain$supplierTabs$SDetailsTab$country' combo box
        /// </summary>
        public string UICtl00contentmainsuppComboBoxSelectedItem = "Chile";
        
        /// <summary>
        /// Type '12345' in 'ctl00$contentmain$supplierTabs$SDetailsTab$switchb...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit7Text = "12345";
        
        /// <summary>
        /// Type '98765' in 'ctl00$contentmain$supplierTabs$SDetailsTab$fax' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit8poopText = "98765";
        
        /// <summary>
        /// Type '112' in 'ctl00$contentmain$supplierTabs$SDetailsTab$numempl...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit9Text = "112";
        
        /// <summary>
        /// Select 'January' in 'ctl00$contentmain$supplierTabs$SDetailsTab$financi...' combo box
        /// </summary>
        public string UICtl00contentmainsuppComboBox1SelectedItem = "January";
        
        /// <summary>
        /// Type '12000' in 'ctl00$contentmain$supplierTabs$SDetailsTab$turnove...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit10Text = "12000";
        
        /// <summary>
        /// Type 'Sup Code 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
        /// </summary>
        public string UICtl00contentmainsuppEdit11Text = "Sup Code 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterBusinessContactAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterBusinessContactAddressParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Business Add Title' in 'Address Title' text box
        /// </summary>
        public string UIAddressTitleEditText = "Business Add Title";
        
        /// <summary>
        /// Type '{Tab}' in 'Address Title' text box
        /// </summary>
        public string UIAddressTitleEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Business Ad Line 1' in 'Address Line 1' text box
        /// </summary>
        public string UIAddressLine1EditText = "Business Ad Line 1";
        
        /// <summary>
        /// Type 'Business Ad Line 2' in 'Address Line 2' text box
        /// </summary>
        public string UIAddressLine2EditText = "Business Ad Line 2";
        
        /// <summary>
        /// Type 'Lincoln' in 'Town' text box
        /// </summary>
        public string UITownEditText = "Lincoln";
        
        /// <summary>
        /// Type '1qa' in 'Post Code' text box
        /// </summary>
        public string UIPostCodeEditText = "1qa";
        
        /// <summary>
        /// Type '{LMenu}' in 'Post Code' text box
        /// </summary>
        public string UIPostCodeEditSendKeys = "{LMenu}";
        
        /// <summary>
        /// Type '1' in 'Application' menu bar
        /// </summary>
        public string UIApplicationMenuBarSendKeys = "1";
        
        /// <summary>
        /// Type '1qa aq' in 'Post Code' text box
        /// </summary>
        public string UIPostCodeEditText1 = "1qa aq";
        
        /// <summary>
        /// Select 'United Kingdom' in 'Country' combo box
        /// </summary>
        public string UICountryComboBoxSelectedItem = "United Kingdom";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterPersonelContactAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterPersonelContactAddressParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Personel Add Title' in 'Address Title' text box
        /// </summary>
        public string UIAddressTitleEdit1Text = "Personel Add Title";
        
        /// <summary>
        /// Type 'Personel Add Line 1' in 'Address Line 1' text box
        /// </summary>
        public string UIAddressLine1Edit1Text = "Personel Add Line 1";
        
        /// <summary>
        /// Type 'Personel Add Line 2' in 'Address Line 2' text box
        /// </summary>
        public string UIAddressLine2Edit1Text = "Personel Add Line 2";
        
        /// <summary>
        /// Type 'Lincoln' in 'Town' text box
        /// </summary>
        public string UITownEdit1Text = "Lincoln";
        
        /// <summary>
        /// Type '1QA 1AQ' in 'Post Code' text box
        /// </summary>
        public string UIPostCodeEdit1Text = "1QA 1AQ";
        
        /// <summary>
        /// Select 'United Kingdom' in 'Country' combo box
        /// </summary>
        public string UICountryComboBox1SelectedItem = "United Kingdom";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddCountryList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddCountryListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Country*' combo box's property 'InnerText' contains 'Chile'
        /// </summary>
        public string UICountryComboBox1InnerText = "Chile";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSupplierExists'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSupplierExistsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Unknown Name' custom control's property 'TagName' contains '___Auto Test Supplier 1'
        /// </summary>
        public string UIItemCustomTagName = "___Auto Test Supplier 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSuppliersCountry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateSuppliersCountryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00$contentmain$usrSupplierDetails$supplierTabs$...' combo box's property 'SelectedItem' equals 'Chile'
        /// </summary>
        public string UICtl00contentmainusrSComboBoxSelectedItem = "Chile";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterSuppliersCountry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterSuppliersCountryParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Chile' in 'ctl00$contentmain$supplierTabs$SDetailsTab$country' combo box
        /// </summary>
        public string UICtl00contentmainsuppComboBoxSelectedItem = "Chile";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterSupplierName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterSupplierNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Auto Test Supplier 1' in 'ctl00$contentmain$supplierTabs$SDetailsTab$supplie...' text box
        /// </summary>
        public string UICtl00contentmainsuppEditText = "__Auto Test Supplier 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateThatCountryExists'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateThatCountryExistsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Country*' combo box's property 'SelectedItem' equals 'Brazil'
        /// </summary>
        public string UICountryComboBoxSelectedItem = "Brazil";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCountriesTable'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateCountriesTableExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Unknown Name' custom control's property 'InnerText' contains 'Brazil'
        /// </summary>
        public string UIItemCustomInnerText = "Brazil";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCountryAlpah2Value'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCountryAlpah2ValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Alpha 2*' text box's property 'Text' equals 'BR'
        /// </summary>
        public string UIAlpha2EditText = "BR";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCountryAlpha3Value'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCountryAlpha3ValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00$contentmain$txtAlpha3' text box's property 'Text' equals 'BRA'
        /// </summary>
        public string UICtl00contentmaintxtAEditText = "BRA";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCountryNumeric3Value'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCountryNumeric3ValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00$contentmain$txtNumeric3' text box's property 'Text' equals '076'
        /// </summary>
        public string UICtl00contentmaintxtNEditText = "076";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDeletionMessageUsedOnSupplierContact'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertDeletionMessageUsedOnSupplierContactExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The selected country cannot be deleted as it has b...' label's property 'DisplayText' equals 'The selected country cannot be deleted as it has been used on one more suppliers'
        /// </summary>
        public string UITheselectedcountrycaTextDisplayText = "The selected country cannot be deleted as it has been used on one more suppliers";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCountryNotArchivedINUseOnSupplier'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCountryNotArchivedINUseOnSupplierExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The selected country cannot be archived as it has ...' label's property 'DisplayText' equals 'The selected country cannot be archived as it has been used on one more suppliers'
        /// </summary>
        public string UITheselectedcountrycaText1DisplayText = "The selected country cannot be archived as it has been used on one more suppliers" +
            "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCountryNotArchivedINUseOnSupplierContact'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCountryNotArchivedINUseOnSupplierContactExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The selected country cannot be archived as it has ...' label's property 'FriendlyName' equals 'The selected country cannot be archived as it has ...'
        /// </summary>
        public string UITheselectedcountrycaText1FriendlyName = "The selected country cannot be archived as it has ...";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDeletionMessageUsedOnSupplier'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertDeletionMessageUsedOnSupplierExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The selected country cannot be deleted as it has b...' label's property 'DisplayText' equals 'The selected country cannot be deleted as it has been used on one or more suppliers'
        /// </summary>
        public string UITheselectedcountrycaText2DisplayText = "The selected country cannot be deleted as it has been used on one or more supplie" +
            "rs";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCountryIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateCountryIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImage1Title = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCountryIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateCountryIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountriesWindowsInteWindow : BrowserWindow
    {
        
        public UICountriesWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Countries";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICountriesDocument UICountriesDocument
        {
            get
            {
                if ((this.mUICountriesDocument == null))
                {
                    this.mUICountriesDocument = new UICountriesDocument(this);
                }
                return this.mUICountriesDocument;
            }
        }
        
        public UICountriesDocument1 UICountriesDocument1
        {
            get
            {
                if ((this.mUICountriesDocument1 == null))
                {
                    this.mUICountriesDocument1 = new UICountriesDocument1(this);
                }
                return this.mUICountriesDocument1;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICountriesDocument mUICountriesDocument;
        
        private UICountriesDocument1 mUICountriesDocument1;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountriesDocument : HtmlDocument
    {
        
        public UICountriesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Countries";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/admincountries.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/admincountries.aspx";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsNewCountrPane UIPageOptionsNewCountrPane
        {
            get
            {
                if ((this.mUIPageOptionsNewCountrPane == null))
                {
                    this.mUIPageOptionsNewCountrPane = new UIPageOptionsNewCountrPane(this);
                }
                return this.mUIPageOptionsNewCountrPane;
            }
        }
        
        public HtmlEdit UICountryEdit
        {
            get
            {
                if ((this.mUICountryEdit == null))
                {
                    this.mUICountryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "gridCountries_Filter";
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = "Country";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=gridCountries_Filter title=Country on";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUICountryEdit.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUICountryEdit;
            }
        }
        
        public UIFilterGridgridCountrHyperlink UIFilterGridgridCountrHyperlink
        {
            get
            {
                if ((this.mUIFilterGridgridCountrHyperlink == null))
                {
                    this.mUIFilterGridgridCountrHyperlink = new UIFilterGridgridCountrHyperlink(this);
                }
                return this.mUIFilterGridgridCountrHyperlink;
            }
        }
        
        public UITbl_gridCountries_78Row UITbl_gridCountries_78Row
        {
            get
            {
                if ((this.mUITbl_gridCountries_78Row == null))
                {
                    this.mUITbl_gridCountries_78Row = new UITbl_gridCountries_78Row(this);
                }
                return this.mUITbl_gridCountries_78Row;
            }
        }
        
        public UITbl_gridCountries_22Row UITbl_gridCountries_22Row
        {
            get
            {
                if ((this.mUITbl_gridCountries_22Row == null))
                {
                    this.mUITbl_gridCountries_22Row = new UITbl_gridCountries_22Row(this);
                }
                return this.mUITbl_gridCountries_22Row;
            }
        }
        
        public UITbl_gridCountries_22Cell UITbl_gridCountries_22Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_22Cell == null))
                {
                    this.mUITbl_gridCountries_22Cell = new UITbl_gridCountries_22Cell(this);
                }
                return this.mUITbl_gridCountries_22Cell;
            }
        }
        
        public UITbl_gridCountriesTable UITbl_gridCountriesTable
        {
            get
            {
                if ((this.mUITbl_gridCountriesTable == null))
                {
                    this.mUITbl_gridCountriesTable = new UITbl_gridCountriesTable(this);
                }
                return this.mUITbl_gridCountriesTable;
            }
        }
        
        public UITbl_gridCountries_26Cell UITbl_gridCountries_26Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_26Cell == null))
                {
                    this.mUITbl_gridCountries_26Cell = new UITbl_gridCountries_26Cell(this);
                }
                return this.mUITbl_gridCountries_26Cell;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsNewCountrPane mUIPageOptionsNewCountrPane;
        
        private HtmlEdit mUICountryEdit;
        
        private UIFilterGridgridCountrHyperlink mUIFilterGridgridCountrHyperlink;
        
        private UITbl_gridCountries_78Row mUITbl_gridCountries_78Row;
        
        private UITbl_gridCountries_22Row mUITbl_gridCountries_22Row;
        
        private UITbl_gridCountries_22Cell mUITbl_gridCountries_22Cell;
        
        private UITbl_gridCountriesTable mUITbl_gridCountriesTable;
        
        private UITbl_gridCountries_26Cell mUITbl_gridCountries_26Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsNewCountrPane : HtmlDiv
    {
        
        public UIPageOptionsNewCountrPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nNew Country Help ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewCountryHyperlink
        {
            get
            {
                if ((this.mUINewCountryHyperlink == null))
                {
                    this.mUINewCountryHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewCountryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewCountryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewCountryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewCountryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Country";
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecountry.aspx";
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://testing.sel-expenses.com/shared/admin/aecountry.aspx";
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aecountry.aspx\"";
                    this.mUINewCountryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINewCountryHyperlink.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUINewCountryHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewCountryHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFilterGridgridCountrHyperlink : HtmlHyperlink
    {
        
        public UIFilterGridgridCountrHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gridCountries_FilterLink";
            this.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "filterGrid(\'gridCountries\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:filterGrid(\'gridCountries\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"BORDER-BOTTOM: 0px; BORDER-LEFT: ";
            this.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIFilterImage
        {
            get
            {
                if ((this.mUIFilterImage == null))
                {
                    this.mUIFilterImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Filter";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_filter.png";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/btn_filter.png";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "filterGrid(\'gridCountries\');";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:filterGrid(\'gridCountries\');";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "border=0 alt=Filter src=\"https://testing";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIFilterImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIFilterImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIFilterImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_78Row : HtmlRow
    {
        
        public UITbl_gridCountries_78Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridCountries_78";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "United Kingdom";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_78";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aecountry.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://testing.sel-expenses.com/shared/admin/aecountry.aspx?countryid=78";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"https://testing.sel-expens";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_22Row : HtmlRow
    {
        
        public UITbl_gridCountries_22Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridCountries_2282";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Afghanistan";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_2282";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCountry(2282);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCountry(2282);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_22Cell : HtmlCell
    {
        
        public UITbl_gridCountries_22Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_2286_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_2286_archiveStatus ";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(2286);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(2286);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountriesTable : HtmlTable
    {
        
        public UITbl_gridCountriesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCountries";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Country \r\nÅland Islands\r\nAlbania\r\nAlgeri";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCountries class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "21";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIÅlandIslandsCell
        {
            get
            {
                if ((this.mUIÅlandIslandsCell == null))
                {
                    this.mUIÅlandIslandsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIÅlandIslandsCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIÅlandIslandsCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIÅlandIslandsCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Åland Islands";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUIÅlandIslandsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUIÅlandIslandsCell.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIÅlandIslandsCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIÅlandIslandsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_26Cell : HtmlCell
    {
        
        public UITbl_gridCountries_26Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_2619_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_2619_archiveStatus ";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(2619);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(2619);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"https://testing.se";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(2619);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(2619);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"https://testing.sel-e";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIUnArchiveImage;
        
        private HtmlImage mUIArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountriesDocument1 : HtmlDocument
    {
        
        public UICountriesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Countries";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/admincountries.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/admincountries.aspx";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public UITbl_gridCountries_18Row UITbl_gridCountries_18Row
        {
            get
            {
                if ((this.mUITbl_gridCountries_18Row == null))
                {
                    this.mUITbl_gridCountries_18Row = new UITbl_gridCountries_18Row(this);
                }
                return this.mUITbl_gridCountries_18Row;
            }
        }
        
        public UITbl_gridCountriesTable1 UITbl_gridCountriesTable
        {
            get
            {
                if ((this.mUITbl_gridCountriesTable == null))
                {
                    this.mUITbl_gridCountriesTable = new UITbl_gridCountriesTable1(this);
                }
                return this.mUITbl_gridCountriesTable;
            }
        }
        
        public UITbl_gridCountriesTable11 UITbl_gridCountriesTable1
        {
            get
            {
                if ((this.mUITbl_gridCountriesTable1 == null))
                {
                    this.mUITbl_gridCountriesTable1 = new UITbl_gridCountriesTable11(this);
                }
                return this.mUITbl_gridCountriesTable1;
            }
        }
        
        public UITbl_gridCountriesTable2 UITbl_gridCountriesTable2
        {
            get
            {
                if ((this.mUITbl_gridCountriesTable2 == null))
                {
                    this.mUITbl_gridCountriesTable2 = new UITbl_gridCountriesTable2(this);
                }
                return this.mUITbl_gridCountriesTable2;
            }
        }
        
        public UITbl_gridCountries_1Row UITbl_gridCountries_1Row
        {
            get
            {
                if ((this.mUITbl_gridCountries_1Row == null))
                {
                    this.mUITbl_gridCountries_1Row = new UITbl_gridCountries_1Row(this);
                }
                return this.mUITbl_gridCountries_1Row;
            }
        }
        
        public UITbl_gridCountries_23Row UITbl_gridCountries_23Row
        {
            get
            {
                if ((this.mUITbl_gridCountries_23Row == null))
                {
                    this.mUITbl_gridCountries_23Row = new UITbl_gridCountries_23Row(this);
                }
                return this.mUITbl_gridCountries_23Row;
            }
        }
        
        public UITbl_gridCountries_1_Cell UITbl_gridCountries_1_Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_1_Cell == null))
                {
                    this.mUITbl_gridCountries_1_Cell = new UITbl_gridCountries_1_Cell(this);
                }
                return this.mUITbl_gridCountries_1_Cell;
            }
        }
        
        public UITbl_gridCountries_23Cell UITbl_gridCountries_23Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_23Cell == null))
                {
                    this.mUITbl_gridCountries_23Cell = new UITbl_gridCountries_23Cell(this);
                }
                return this.mUITbl_gridCountries_23Cell;
            }
        }
        
        public UITbl_gridCountriesTable3 UITbl_gridCountriesTable3
        {
            get
            {
                if ((this.mUITbl_gridCountriesTable3 == null))
                {
                    this.mUITbl_gridCountriesTable3 = new UITbl_gridCountriesTable3(this);
                }
                return this.mUITbl_gridCountriesTable3;
            }
        }
        
        public UITbl_gridCountries_37Cell UITbl_gridCountries_37Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_37Cell == null))
                {
                    this.mUITbl_gridCountries_37Cell = new UITbl_gridCountries_37Cell(this);
                }
                return this.mUITbl_gridCountries_37Cell;
            }
        }
        
        public UITbl_gridCountries_53Cell UITbl_gridCountries_53Cell
        {
            get
            {
                if ((this.mUITbl_gridCountries_53Cell == null))
                {
                    this.mUITbl_gridCountries_53Cell = new UITbl_gridCountries_53Cell(this);
                }
                return this.mUITbl_gridCountries_53Cell;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridCountries_18Row mUITbl_gridCountries_18Row;
        
        private UITbl_gridCountriesTable1 mUITbl_gridCountriesTable;
        
        private UITbl_gridCountriesTable11 mUITbl_gridCountriesTable1;
        
        private UITbl_gridCountriesTable2 mUITbl_gridCountriesTable2;
        
        private UITbl_gridCountries_1Row mUITbl_gridCountries_1Row;
        
        private UITbl_gridCountries_23Row mUITbl_gridCountries_23Row;
        
        private UITbl_gridCountries_1_Cell mUITbl_gridCountries_1_Cell;
        
        private UITbl_gridCountries_23Cell mUITbl_gridCountries_23Cell;
        
        private UITbl_gridCountriesTable3 mUITbl_gridCountriesTable3;
        
        private UITbl_gridCountries_37Cell mUITbl_gridCountries_37Cell;
        
        private UITbl_gridCountries_53Cell mUITbl_gridCountries_53Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_18Row : HtmlRow
    {
        
        public UITbl_gridCountries_18Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridCountries_18";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Brazil";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_18";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aecountry.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/admin/aecountry.aspx?countryid=18";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountriesTable1 : HtmlTable
    {
        
        public UITbl_gridCountriesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCountries";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Country \r\nBrazil\r\nUnited Kingdom";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCountries class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "TBODY";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountriesTable11 : HtmlTable
    {
        
        public UITbl_gridCountriesTable11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCountries";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Country \r\nUnited Kingdom";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCountries class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "TBODY";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountriesTable2 : HtmlTable
    {
        
        public UITbl_gridCountriesTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCountries";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Country \r\nBrazil\r\nChile\r\nUnited Kingdom";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCountries class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIChileCell
        {
            get
            {
                if ((this.mUIChileCell == null))
                {
                    this.mUIChileCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIChileCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIChileCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIChileCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Chile";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUIChileCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUIChileCell.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIChileCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIChileCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_1Row : HtmlRow
    {
        
        public UITbl_gridCountries_1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridCountries_1";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "United Kingdom";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCountry(1);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCountry(1);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_23Row : HtmlRow
    {
        
        public UITbl_gridCountries_23Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridCountries_23";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Chile";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_23";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCountry(23);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCountry(23);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_1_Cell : HtmlCell
    {
        
        public UITbl_gridCountries_1_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_1_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_1_archiveStatus cla";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(1);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(1);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(1);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(1);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        
        public HtmlImage UIArchiveImage1
        {
            get
            {
                if ((this.mUIArchiveImage1 == null))
                {
                    this.mUIArchiveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(1);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(1);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"https://fwtest.sel-ex";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage1.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage1;
            }
        }
        
        public HtmlImage UIUnArchiveImage1
        {
            get
            {
                if ((this.mUIUnArchiveImage1 == null))
                {
                    this.mUIUnArchiveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(1);";
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(1);";
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"https://fwtest.sel";
                    this.mUIUnArchiveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage1.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIUnArchiveImage1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        
        private HtmlImage mUIArchiveImage1;
        
        private HtmlImage mUIUnArchiveImage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_23Cell : HtmlCell
    {
        
        public UITbl_gridCountries_23Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_23_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_23_archiveStatus cl";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(23);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(23);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountriesTable3 : HtmlTable
    {
        
        public UITbl_gridCountriesTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCountries";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Country \r\nChile\r\nUnited Kingdom";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCountries class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "TBODY";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_37Cell : HtmlCell
    {
        
        public UITbl_gridCountries_37Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_37_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_37_archiveStatus cl";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(37);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(37);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(37);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(37);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"https://fwtest.sel";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        
        public HtmlImage UIArchiveImage1
        {
            get
            {
                if ((this.mUIArchiveImage1 == null))
                {
                    this.mUIArchiveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(37);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(37);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"https://fwtest.sel-ex";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage1.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIArchiveImage1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        
        private HtmlImage mUIArchiveImage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_gridCountries_53Cell : HtmlCell
    {
        
        public UITbl_gridCountries_53Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridCountries_53_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridCountries_53_archiveStatus cl";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(53);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(53);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"https://fwtest.sel";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Shell DocObject View";
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public UICountriesWindowsInteClient UICountriesWindowsInteClient
        {
            get
            {
                if ((this.mUICountriesWindowsInteClient == null))
                {
                    this.mUICountriesWindowsInteClient = new UICountriesWindowsInteClient(this);
                }
                return this.mUICountriesWindowsInteClient;
            }
        }
        #endregion
        
        #region Fields
        private UICountriesWindowsInteClient mUICountriesWindowsInteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountriesWindowsInteClient : WinClient
    {
        
        public UICountriesWindowsInteClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Countries");
            #endregion
        }
        
        #region Properties
        public WinPane UICountriesPane
        {
            get
            {
                if ((this.mUICountriesPane == null))
                {
                    this.mUICountriesPane = new WinPane(this);
                    #region Search Criteria
                    this.mUICountriesPane.SearchProperties[WinControl.PropertyNames.Name] = "Countries";
                    this.mUICountriesPane.WindowTitles.Add("Countries");
                    #endregion
                }
                return this.mUICountriesPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUICountriesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UITheselectedcountrycaWindow UITheselectedcountrycaWindow
        {
            get
            {
                if ((this.mUITheselectedcountrycaWindow == null))
                {
                    this.mUITheselectedcountrycaWindow = new UITheselectedcountrycaWindow(this);
                }
                return this.mUITheselectedcountrycaWindow;
            }
        }
        
        public UIMessagefromwebpageTitleBar UIMessagefromwebpageTitleBar
        {
            get
            {
                if ((this.mUIMessagefromwebpageTitleBar == null))
                {
                    this.mUIMessagefromwebpageTitleBar = new UIMessagefromwebpageTitleBar(this);
                }
                return this.mUIMessagefromwebpageTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UITheselectedcountrycaWindow mUITheselectedcountrycaWindow;
        
        private UIMessagefromwebpageTitleBar mUIMessagefromwebpageTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITheselectedcountrycaWindow : WinWindow
    {
        
        public UITheselectedcountrycaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UITheselectedcountrycaText
        {
            get
            {
                if ((this.mUITheselectedcountrycaText == null))
                {
                    this.mUITheselectedcountrycaText = new WinText(this);
                    #region Search Criteria
                    this.mUITheselectedcountrycaText.SearchProperties[WinText.PropertyNames.Name] = "The selected country cannot be deleted as it has been used on one more suppliers";
                    this.mUITheselectedcountrycaText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUITheselectedcountrycaText;
            }
        }
        
        public WinText UITheselectedcountrycaText1
        {
            get
            {
                if ((this.mUITheselectedcountrycaText1 == null))
                {
                    this.mUITheselectedcountrycaText1 = new WinText(this);
                    #region Search Criteria
                    this.mUITheselectedcountrycaText1.SearchProperties[WinText.PropertyNames.Name] = "The selected country cannot be archived as it has been used on one more suppliers" +
                        "";
                    this.mUITheselectedcountrycaText1.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUITheselectedcountrycaText1;
            }
        }
        
        public WinText UITheselectedcountrycaText2
        {
            get
            {
                if ((this.mUITheselectedcountrycaText2 == null))
                {
                    this.mUITheselectedcountrycaText2 = new WinText(this);
                    #region Search Criteria
                    this.mUITheselectedcountrycaText2.SearchProperties[WinText.PropertyNames.Name] = "The selected country cannot be deleted as it has been used on one or more supplie" +
                        "rs";
                    this.mUITheselectedcountrycaText2.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUITheselectedcountrycaText2;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUITheselectedcountrycaText;
        
        private WinText mUITheselectedcountrycaText1;
        
        private WinText mUITheselectedcountrycaText2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMessagefromwebpageTitleBar : WinTitleBar
    {
        
        public UIMessagefromwebpageTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryNewWindowsIntWindow : BrowserWindow
    {
        
        public UICountryNewWindowsIntWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Country: New";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Country: New");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICountryNewDocument UICountryNewDocument
        {
            get
            {
                if ((this.mUICountryNewDocument == null))
                {
                    this.mUICountryNewDocument = new UICountryNewDocument(this);
                }
                return this.mUICountryNewDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICountryNewDocument mUICountryNewDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryNewDocument : HtmlDocument
    {
        
        public UICountryNewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Country: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecountry.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aecountry.aspx";
            this.WindowTitles.Add("Country: New");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UICountryComboBox
        {
            get
            {
                if ((this.mUICountryComboBox == null))
                {
                    this.mUICountryComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbcountry";
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbcountry";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Country*";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "171";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbcountry class=fi";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUICountryComboBox.WindowTitles.Add("Country: New");
                    #endregion
                }
                return this.mUICountryComboBox;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdcButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdcButton == null))
                {
                    this.mUICtl00contentmaincmdcButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdcancel";
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdcancel";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdcButton.FilterProperties["Src"] = "https://testing.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaincmdcButton.WindowTitles.Add("Country: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmdcButton;
            }
        }
        
        public HtmlComboBox UICountryComboBox1
        {
            get
            {
                if ((this.mUICountryComboBox1 == null))
                {
                    this.mUICountryComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICountryComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbcountry";
                    this.mUICountryComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbcountry";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Country*";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "169";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbcountry class=fi";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUICountryComboBox1.WindowTitles.Add("Country: New");
                    #endregion
                }
                return this.mUICountryComboBox1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUICountryComboBox;
        
        private HtmlInputButton mUICtl00contentmaincmdcButton;
        
        private HtmlComboBox mUICountryComboBox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryAndorraWindowWindow : BrowserWindow
    {
        
        public UICountryAndorraWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Country: Andorra";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Country: Andorra");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICountryAndorraDocument UICountryAndorraDocument
        {
            get
            {
                if ((this.mUICountryAndorraDocument == null))
                {
                    this.mUICountryAndorraDocument = new UICountryAndorraDocument(this);
                }
                return this.mUICountryAndorraDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICountryAndorraDocument mUICountryAndorraDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryAndorraDocument : HtmlDocument
    {
        
        public UICountryAndorraDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Country: Andorra";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecountry.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aecountry.aspx?countryid=2291";
            this.WindowTitles.Add("Country: Andorra");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICtl00contentmaincmdoButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdoButton == null))
                {
                    this.mUICtl00contentmaincmdoButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdoButton.FilterProperties["Src"] = "https://testing.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdoButton.WindowTitles.Add("Country: Andorra");
                    #endregion
                }
                return this.mUICtl00contentmaincmdoButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICtl00contentmaincmdoButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierWindowsInterWindow : BrowserWindow
    {
        
        public UISupplierWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Supplier";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISupplierDocument UISupplierDocument
        {
            get
            {
                if ((this.mUISupplierDocument == null))
                {
                    this.mUISupplierDocument = new UISupplierDocument(this);
                }
                return this.mUISupplierDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISupplierDocument mUISupplierDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierDocument : HtmlDocument
    {
        
        public UISupplierDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Supplier";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/suppliers.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/suppliers.aspx";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewHyperlink
        {
            get
            {
                if ((this.mUINewHyperlink == null))
                {
                    this.mUINewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_hypNewSupplier";
                    this.mUINewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New";
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/supplier_details.aspx";
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=0";
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_hypSupplier class=s";
                    this.mUINewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUINewHyperlink.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUINewHyperlink;
            }
        }
        
        public UITbl_suppliergrid_10Row UITbl_suppliergrid_10Row
        {
            get
            {
                if ((this.mUITbl_suppliergrid_10Row == null))
                {
                    this.mUITbl_suppliergrid_10Row = new UITbl_suppliergrid_10Row(this);
                }
                return this.mUITbl_suppliergrid_10Row;
            }
        }
        
        public UITbl_suppliergridTable UITbl_suppliergridTable
        {
            get
            {
                if ((this.mUITbl_suppliergridTable == null))
                {
                    this.mUITbl_suppliergridTable = new UITbl_suppliergridTable(this);
                }
                return this.mUITbl_suppliergridTable;
            }
        }
        
        public UITbl_suppliergrid_21Row UITbl_suppliergrid_21Row
        {
            get
            {
                if ((this.mUITbl_suppliergrid_21Row == null))
                {
                    this.mUITbl_suppliergrid_21Row = new UITbl_suppliergrid_21Row(this);
                }
                return this.mUITbl_suppliergrid_21Row;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewHyperlink;
        
        private UITbl_suppliergrid_10Row mUITbl_suppliergrid_10Row;
        
        private UITbl_suppliergridTable mUITbl_suppliergridTable;
        
        private UITbl_suppliergrid_21Row mUITbl_suppliergrid_21Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_suppliergrid_10Row : HtmlRow
    {
        
        public UITbl_suppliergrid_10Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_suppliergrid_10";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "Test Supplier";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_suppliergrid_10";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "11";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "12";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/supplier_details.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=10";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_suppliergridTable : HtmlTable
    {
        
        public UITbl_suppliergridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_suppliergrid";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n__Auto Test Supplier 1\r\nA N Other";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_suppliergrid class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "12";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "TBODY";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_suppliergrid_21Row : HtmlRow
    {
        
        public UITbl_suppliergrid_21Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_suppliergrid_21";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Auto Test Supplier 1";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_suppliergrid_21";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/supplier_details.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=21";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierNewWindowsInWindow : BrowserWindow
    {
        
        public UISupplierNewWindowsInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Supplier: New";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Supplier: New");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISupplierNewDocument UISupplierNewDocument
        {
            get
            {
                if ((this.mUISupplierNewDocument == null))
                {
                    this.mUISupplierNewDocument = new UISupplierNewDocument(this);
                }
                return this.mUISupplierNewDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISupplierNewDocument mUISupplierNewDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierNewDocument : HtmlDocument
    {
        
        public UISupplierNewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Supplier: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/supplier_details.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=0";
            this.WindowTitles.Add("Supplier: New");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UICtl00contentmainusrSEdit
        {
            get
            {
                if ((this.mUICtl00contentmainusrSEdit == null))
                {
                    this.mUICtl00contentmainusrSEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_suppliername";
                    this.mUICtl00contentmainusrSEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$suppliername";
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmainusrSEdit.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainusrSEdit;
            }
        }
        
        public HtmlEdit UICtl00contentmainusrSEdit1
        {
            get
            {
                if ((this.mUICtl00contentmainusrSEdit1 == null))
                {
                    this.mUICtl00contentmainusrSEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_town";
                    this.mUICtl00contentmainusrSEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$town";
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmainusrSEdit1.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainusrSEdit1;
            }
        }
        
        public HtmlEdit UICtl00contentmainusrSEdit2
        {
            get
            {
                if ((this.mUICtl00contentmainusrSEdit2 == null))
                {
                    this.mUICtl00contentmainusrSEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_county";
                    this.mUICtl00contentmainusrSEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$county";
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUICtl00contentmainusrSEdit2.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainusrSEdit2;
            }
        }
        
        public HtmlEdit UICtl00contentmainusrSEdit3
        {
            get
            {
                if ((this.mUICtl00contentmainusrSEdit3 == null))
                {
                    this.mUICtl00contentmainusrSEdit3 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSEdit3.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_postcode";
                    this.mUICtl00contentmainusrSEdit3.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$postcode";
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSEdit3.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmainusrSEdit3.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainusrSEdit3;
            }
        }
        
        public HtmlComboBox UICtl00contentmainusrSComboBox
        {
            get
            {
                if ((this.mUICtl00contentmainusrSComboBox == null))
                {
                    this.mUICtl00contentmainusrSComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_country";
                    this.mUICtl00contentmainusrSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$country";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "237";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUICtl00contentmainusrSComboBox.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainusrSComboBox;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_usPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane == null))
                {
                    this.mUICtl00_contentmain_usPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_usPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab";
                    this.mUICtl00_contentmain_usPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Supplier Details\r\nSupplier Name*  *Statu";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
                    this.mUICtl00_contentmain_usPane.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00_contentmain_usPane;
            }
        }
        
        public HtmlInputButton UIUpdatesupplierdetailButton
        {
            get
            {
                if ((this.mUIUpdatesupplierdetailButton == null))
                {
                    this.mUIUpdatesupplierdetailButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIUpdatesupplierdetailButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_cmdSDOK";
                    this.mUIUpdatesupplierdetailButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$cmdSDOK";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUIUpdatesupplierdetailButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Title] = "Update supplier details";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "20";
                    this.mUIUpdatesupplierdetailButton.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUIUpdatesupplierdetailButton;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit == null))
                {
                    this.mUICtl00contentmainsuppEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_suppliername";
                    this.mUICtl00contentmainsuppEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$suppliername";
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmainsuppEdit.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit1
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit1 == null))
                {
                    this.mUICtl00contentmainsuppEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_addresstitle";
                    this.mUICtl00contentmainsuppEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$addresstitle";
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmainsuppEdit1.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit1;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit2
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit2 == null))
                {
                    this.mUICtl00contentmainsuppEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_address1";
                    this.mUICtl00contentmainsuppEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$address1";
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUICtl00contentmainsuppEdit2.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit2;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit3
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit3 == null))
                {
                    this.mUICtl00contentmainsuppEdit3 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit3.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_address2";
                    this.mUICtl00contentmainsuppEdit3.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$address2";
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit3.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    this.mUICtl00contentmainsuppEdit3.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit3;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit4
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit4 == null))
                {
                    this.mUICtl00contentmainsuppEdit4 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit4.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_town";
                    this.mUICtl00contentmainsuppEdit4.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$town";
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit4.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICtl00contentmainsuppEdit4.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit4;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit5
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit5 == null))
                {
                    this.mUICtl00contentmainsuppEdit5 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit5.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_county";
                    this.mUICtl00contentmainsuppEdit5.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$county";
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit5.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUICtl00contentmainsuppEdit5.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit5;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit6
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit6 == null))
                {
                    this.mUICtl00contentmainsuppEdit6 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit6.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_postcode";
                    this.mUICtl00contentmainsuppEdit6.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$postcode";
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit6.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUICtl00contentmainsuppEdit6.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit6;
            }
        }
        
        public HtmlComboBox UICtl00contentmainsuppComboBox
        {
            get
            {
                if ((this.mUICtl00contentmainsuppComboBox == null))
                {
                    this.mUICtl00contentmainsuppComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_country";
                    this.mUICtl00contentmainsuppComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$country";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "71";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUICtl00contentmainsuppComboBox.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppComboBox;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit7
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit7 == null))
                {
                    this.mUICtl00contentmainsuppEdit7 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit7.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_switchboard";
                    this.mUICtl00contentmainsuppEdit7.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$switchboard";
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit7.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUICtl00contentmainsuppEdit7.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit7;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit8poop
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit8poop == null))
                {
                    this.mUICtl00contentmainsuppEdit8poop = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit8poop.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_fax";
                    this.mUICtl00contentmainsuppEdit8poop.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$fax";
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit8poop.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUICtl00contentmainsuppEdit8poop.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit8poop;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit9
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit9 == null))
                {
                    this.mUICtl00contentmainsuppEdit9 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit9.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_numemployees";
                    this.mUICtl00contentmainsuppEdit9.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$numemployees";
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit9.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUICtl00contentmainsuppEdit9.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit9;
            }
        }
        
        public HtmlComboBox UICtl00contentmainsuppComboBox1
        {
            get
            {
                if ((this.mUICtl00contentmainsuppComboBox1 == null))
                {
                    this.mUICtl00contentmainsuppComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_financialye";
                    this.mUICtl00contentmainsuppComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$financialye";
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "12";
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUICtl00contentmainsuppComboBox1.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppComboBox1;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit10
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit10 == null))
                {
                    this.mUICtl00contentmainsuppEdit10 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit10.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_turnover";
                    this.mUICtl00contentmainsuppEdit10.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$turnover";
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit10.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUICtl00contentmainsuppEdit10.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit10;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit11
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit11 == null))
                {
                    this.mUICtl00contentmainsuppEdit11 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit11.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_suppliercode";
                    this.mUICtl00contentmainsuppEdit11.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$suppliercode";
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit11.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmainsuppEdit11.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit11;
            }
        }
        
        public HtmlEdit UICtl00contentmainsuppEdit12
        {
            get
            {
                if ((this.mUICtl00contentmainsuppEdit12 == null))
                {
                    this.mUICtl00contentmainsuppEdit12 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppEdit12.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_weburl";
                    this.mUICtl00contentmainsuppEdit12.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$weburl";
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppEdit12.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    this.mUICtl00contentmainsuppEdit12.WindowTitles.Add("Supplier: New");
                    #endregion
                }
                return this.mUICtl00contentmainsuppEdit12;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUICtl00contentmainusrSEdit;
        
        private HtmlEdit mUICtl00contentmainusrSEdit1;
        
        private HtmlEdit mUICtl00contentmainusrSEdit2;
        
        private HtmlEdit mUICtl00contentmainusrSEdit3;
        
        private HtmlComboBox mUICtl00contentmainusrSComboBox;
        
        private HtmlDiv mUICtl00_contentmain_usPane;
        
        private HtmlInputButton mUIUpdatesupplierdetailButton;
        
        private HtmlEdit mUICtl00contentmainsuppEdit;
        
        private HtmlEdit mUICtl00contentmainsuppEdit1;
        
        private HtmlEdit mUICtl00contentmainsuppEdit2;
        
        private HtmlEdit mUICtl00contentmainsuppEdit3;
        
        private HtmlEdit mUICtl00contentmainsuppEdit4;
        
        private HtmlEdit mUICtl00contentmainsuppEdit5;
        
        private HtmlEdit mUICtl00contentmainsuppEdit6;
        
        private HtmlComboBox mUICtl00contentmainsuppComboBox;
        
        private HtmlEdit mUICtl00contentmainsuppEdit7;
        
        private HtmlEdit mUICtl00contentmainsuppEdit8poop;
        
        private HtmlEdit mUICtl00contentmainsuppEdit9;
        
        private HtmlComboBox mUICtl00contentmainsuppComboBox1;
        
        private HtmlEdit mUICtl00contentmainsuppEdit10;
        
        private HtmlEdit mUICtl00contentmainsuppEdit11;
        
        private HtmlEdit mUICtl00contentmainsuppEdit12;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplier__TestSuppliWindow : BrowserWindow
    {
        
        public UISupplier__TestSuppliWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Supplier: __Test Supplier 1";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Supplier: __Test Supplier 1");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISupplier__TestSuppliDocument UISupplier__TestSuppliDocument
        {
            get
            {
                if ((this.mUISupplier__TestSuppliDocument == null))
                {
                    this.mUISupplier__TestSuppliDocument = new UISupplier__TestSuppliDocument(this);
                }
                return this.mUISupplier__TestSuppliDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISupplier__TestSuppliDocument mUISupplier__TestSuppliDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplier__TestSuppliDocument : HtmlDocument
    {
        
        public UISupplier__TestSuppliDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Supplier: __Test Supplier 1";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/supplier_details.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=21";
            this.WindowTitles.Add("Supplier: __Test Supplier 1");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContactDetailsPane
        {
            get
            {
                if ((this.mUIContactDetailsPane == null))
                {
                    this.mUIContactDetailsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContactDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_usrSupplierDetails_supplierTabs_SContactsTab";
                    this.mUIContactDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContactDetailsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Details";
                    this.mUIContactDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContactDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIContactDetailsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_usrSupplierDe";
                    this.mUIContactDetailsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
                    this.mUIContactDetailsPane.WindowTitles.Add("Supplier: __Test Supplier 1");
                    #endregion
                }
                return this.mUIContactDetailsPane;
            }
        }
        
        public HtmlHyperlink UINewContactHyperlink
        {
            get
            {
                if ((this.mUINewContactHyperlink == null))
                {
                    this.mUINewContactHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewContactHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_lnkNewContact";
                    this.mUINewContactHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewContactHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewContactHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Contact";
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "void(0);";
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:void(0);";
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_lnkNewContact class";
                    this.mUINewContactHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUINewContactHyperlink.WindowTitles.Add("Supplier: __Test Supplier 1");
                    #endregion
                }
                return this.mUINewContactHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContactDetailsPane;
        
        private HtmlHyperlink mUINewContactHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierTestSupplierWindow : BrowserWindow
    {
        
        public UISupplierTestSupplierWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Supplier: Test Supplier";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Supplier: Test Supplier");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISupplierTestSupplierDocument UISupplierTestSupplierDocument
        {
            get
            {
                if ((this.mUISupplierTestSupplierDocument == null))
                {
                    this.mUISupplierTestSupplierDocument = new UISupplierTestSupplierDocument(this);
                }
                return this.mUISupplierTestSupplierDocument;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISupplierTestSupplierDocument mUISupplierTestSupplierDocument;
        
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplierTestSupplierDocument : HtmlDocument
    {
        
        public UISupplierTestSupplierDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Supplier: Test Supplier";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/supplier_details.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=10";
            this.WindowTitles.Add("Supplier: Test Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIAddressTitleEdit
        {
            get
            {
                if ((this.mUIAddressTitleEdit == null))
                {
                    this.mUIAddressTitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbaddresstitle";
                    this.mUIAddressTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbaddresstitle";
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Title";
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressTitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "28";
                    this.mUIAddressTitleEdit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressTitleEdit;
            }
        }
        
        public HtmlEdit UIAddressLine1Edit
        {
            get
            {
                if ((this.mUIAddressLine1Edit == null))
                {
                    this.mUIAddressLine1Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressLine1Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbaddress1";
                    this.mUIAddressLine1Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbaddress1";
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Line 1";
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressLine1Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "30";
                    this.mUIAddressLine1Edit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressLine1Edit;
            }
        }
        
        public HtmlEdit UIAddressLine2Edit
        {
            get
            {
                if ((this.mUIAddressLine2Edit == null))
                {
                    this.mUIAddressLine2Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressLine2Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbaddress2";
                    this.mUIAddressLine2Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbaddress2";
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Line 2";
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressLine2Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "32";
                    this.mUIAddressLine2Edit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressLine2Edit;
            }
        }
        
        public UIPnlContactFormPane UIPnlContactFormPane
        {
            get
            {
                if ((this.mUIPnlContactFormPane == null))
                {
                    this.mUIPnlContactFormPane = new UIPnlContactFormPane(this);
                }
                return this.mUIPnlContactFormPane;
            }
        }
        
        public HtmlEdit UITownEdit
        {
            get
            {
                if ((this.mUITownEdit == null))
                {
                    this.mUITownEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITownEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbtown";
                    this.mUITownEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbtown";
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Town";
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUITownEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "33";
                    this.mUITownEdit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUITownEdit;
            }
        }
        
        public HtmlEdit UIPostCodeEdit
        {
            get
            {
                if ((this.mUIPostCodeEdit == null))
                {
                    this.mUIPostCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbpcode";
                    this.mUIPostCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbpcode";
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Post Code";
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIPostCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "34";
                    this.mUIPostCodeEdit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIPostCodeEdit;
            }
        }
        
        public HtmlEdit UITelephoneEdit
        {
            get
            {
                if ((this.mUITelephoneEdit == null))
                {
                    this.mUITelephoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITelephoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtbswitchboard";
                    this.mUITelephoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtbswitchboard";
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Telephone";
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUITelephoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "29";
                    this.mUITelephoneEdit.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUITelephoneEdit;
            }
        }
        
        public HtmlComboBox UICountryComboBox
        {
            get
            {
                if ((this.mUICountryComboBox == null))
                {
                    this.mUICountryComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_lstbcountry";
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$lstbcountry";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Country";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "237";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUICountryComboBox.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUICountryComboBox;
            }
        }
        
        public HtmlEdit UIAddressTitleEdit1
        {
            get
            {
                if ((this.mUIAddressTitleEdit1 == null))
                {
                    this.mUIAddressTitleEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressTitleEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtpaddresstitle";
                    this.mUIAddressTitleEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtpaddresstitle";
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Title";
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressTitleEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "35";
                    this.mUIAddressTitleEdit1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressTitleEdit1;
            }
        }
        
        public HtmlEdit UIAddressLine1Edit1
        {
            get
            {
                if ((this.mUIAddressLine1Edit1 == null))
                {
                    this.mUIAddressLine1Edit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressLine1Edit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtpaddress1";
                    this.mUIAddressLine1Edit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtpaddress1";
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Line 1";
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressLine1Edit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "37";
                    this.mUIAddressLine1Edit1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressLine1Edit1;
            }
        }
        
        public HtmlEdit UIAddressLine2Edit1
        {
            get
            {
                if ((this.mUIAddressLine2Edit1 == null))
                {
                    this.mUIAddressLine2Edit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressLine2Edit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtpaddress2";
                    this.mUIAddressLine2Edit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtpaddress2";
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Line 2";
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIAddressLine2Edit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "39";
                    this.mUIAddressLine2Edit1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIAddressLine2Edit1;
            }
        }
        
        public HtmlEdit UITownEdit1
        {
            get
            {
                if ((this.mUITownEdit1 == null))
                {
                    this.mUITownEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITownEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtptown";
                    this.mUITownEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtptown";
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Town";
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUITownEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "40";
                    this.mUITownEdit1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUITownEdit1;
            }
        }
        
        public HtmlEdit UIPostCodeEdit1
        {
            get
            {
                if ((this.mUIPostCodeEdit1 == null))
                {
                    this.mUIPostCodeEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostCodeEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_txtppcode";
                    this.mUIPostCodeEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$txtppcode";
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Post Code";
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUIPostCodeEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "41";
                    this.mUIPostCodeEdit1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIPostCodeEdit1;
            }
        }
        
        public HtmlComboBox UICountryComboBox1
        {
            get
            {
                if ((this.mUICountryComboBox1 == null))
                {
                    this.mUICountryComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICountryComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_lstpcountry";
                    this.mUICountryComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$lstpcountry";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Country";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "237";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICountryComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "8";
                    this.mUICountryComboBox1.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUICountryComboBox1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIAddressTitleEdit;
        
        private HtmlEdit mUIAddressLine1Edit;
        
        private HtmlEdit mUIAddressLine2Edit;
        
        private UIPnlContactFormPane mUIPnlContactFormPane;
        
        private HtmlEdit mUITownEdit;
        
        private HtmlEdit mUIPostCodeEdit;
        
        private HtmlEdit mUITelephoneEdit;
        
        private HtmlComboBox mUICountryComboBox;
        
        private HtmlEdit mUIAddressTitleEdit1;
        
        private HtmlEdit mUIAddressLine1Edit1;
        
        private HtmlEdit mUIAddressLine2Edit1;
        
        private HtmlEdit mUITownEdit1;
        
        private HtmlEdit mUIPostCodeEdit1;
        
        private HtmlComboBox mUICountryComboBox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPnlContactFormPane : HtmlDiv
    {
        
        public UIPnlContactFormPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "pnlContactForm";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Details\r\nContact Name*  * Positi";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "formpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"HEIGHT: 600px; OVERFLOW: auto\" id";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "53";
            this.WindowTitles.Add("Supplier: Test Supplier");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITownPane
        {
            get
            {
                if ((this.mUITownPane == null))
                {
                    this.mUITownPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITownPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUITownPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITownPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Town  ";
                    this.mUITownPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITownPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "twocolumn";
                    this.mUITownPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=twocolumn";
                    this.mUITownPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "10";
                    this.mUITownPane.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUITownPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITownPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "40965";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Supplier: Test Supplier");
            #endregion
        }
        
        #region Properties
        public WinMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new WinMenuBar(this);
                    #region Search Criteria
                    this.mUIApplicationMenuBar.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
                    this.mUIApplicationMenuBar.WindowTitles.Add("Supplier: Test Supplier");
                    #endregion
                }
                return this.mUIApplicationMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuBar mUIApplicationMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplier__AutoTestSuWindow : BrowserWindow
    {
        
        public UISupplier__AutoTestSuWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Supplier: __Auto Test Supplier 1";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISupplier__AutoTestSuDocument UISupplier__AutoTestSuDocument
        {
            get
            {
                if ((this.mUISupplier__AutoTestSuDocument == null))
                {
                    this.mUISupplier__AutoTestSuDocument = new UISupplier__AutoTestSuDocument(this);
                }
                return this.mUISupplier__AutoTestSuDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISupplier__AutoTestSuDocument mUISupplier__AutoTestSuDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISupplier__AutoTestSuDocument : HtmlDocument
    {
        
        public UISupplier__AutoTestSuDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Supplier: __Auto Test Supplier 1";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/supplier_details.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/supplier_details.aspx?sid=21";
            this.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UICtl00contentmainusrSComboBox
        {
            get
            {
                if ((this.mUICtl00contentmainusrSComboBox == null))
                {
                    this.mUICtl00contentmainusrSComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmainusrSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_country";
                    this.mUICtl00contentmainusrSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$country";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "237";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrSupplierDetails_";
                    this.mUICtl00contentmainusrSComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUICtl00contentmainusrSComboBox.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
                    #endregion
                }
                return this.mUICtl00contentmainusrSComboBox;
            }
        }
        
        public HtmlInputButton UIAbortandexitSupplierButton
        {
            get
            {
                if ((this.mUIAbortandexitSupplierButton == null))
                {
                    this.mUIAbortandexitSupplierButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAbortandexitSupplierButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_usrSupplierDetails_supplierTabs_SDetailsTab_cmdSDCancel";
                    this.mUIAbortandexitSupplierButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrSupplierDetails$supplierTabs$SDetailsTab$cmdSDCancel";
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUIAbortandexitSupplierButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.Title] = "Abort and exit Supplier details";
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIAbortandexitSupplierButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "21";
                    this.mUIAbortandexitSupplierButton.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
                    #endregion
                }
                return this.mUIAbortandexitSupplierButton;
            }
        }
        
        public HtmlComboBox UICtl00contentmainsuppComboBox
        {
            get
            {
                if ((this.mUICtl00contentmainsuppComboBox == null))
                {
                    this.mUICtl00contentmainsuppComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICtl00contentmainsuppComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_country";
                    this.mUICtl00contentmainsuppComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$country";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "237";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_supplierTabs_SDetai";
                    this.mUICtl00contentmainsuppComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUICtl00contentmainsuppComboBox.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
                    #endregion
                }
                return this.mUICtl00contentmainsuppComboBox;
            }
        }
        
        public HtmlInputButton UIUpdatesupplierdetailButton
        {
            get
            {
                if ((this.mUIUpdatesupplierdetailButton == null))
                {
                    this.mUIUpdatesupplierdetailButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIUpdatesupplierdetailButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_supplierTabs_SDetailsTab_cmdSDOK";
                    this.mUIUpdatesupplierdetailButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$supplierTabs$SDetailsTab$cmdSDOK";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUIUpdatesupplierdetailButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Title] = "Update supplier details";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIUpdatesupplierdetailButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "20";
                    this.mUIUpdatesupplierdetailButton.WindowTitles.Add("Supplier: __Auto Test Supplier 1");
                    #endregion
                }
                return this.mUIUpdatesupplierdetailButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUICtl00contentmainusrSComboBox;
        
        private HtmlInputButton mUIAbortandexitSupplierButton;
        
        private HtmlComboBox mUICtl00contentmainsuppComboBox;
        
        private HtmlInputButton mUIUpdatesupplierdetailButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryBrazilWindowsWindow : BrowserWindow
    {
        
        public UICountryBrazilWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Country: Brazil";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Country: Brazil");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICountryBrazilDocument UICountryBrazilDocument
        {
            get
            {
                if ((this.mUICountryBrazilDocument == null))
                {
                    this.mUICountryBrazilDocument = new UICountryBrazilDocument(this);
                }
                return this.mUICountryBrazilDocument;
            }
        }
        
        public UICountryBrazilDocument1 UICountryBrazilDocument1
        {
            get
            {
                if ((this.mUICountryBrazilDocument1 == null))
                {
                    this.mUICountryBrazilDocument1 = new UICountryBrazilDocument1(this);
                }
                return this.mUICountryBrazilDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UICountryBrazilDocument mUICountryBrazilDocument;
        
        private UICountryBrazilDocument1 mUICountryBrazilDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryBrazilDocument : HtmlDocument
    {
        
        public UICountryBrazilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Country: Brazil";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecountry.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aecountry.aspx?countryid=20";
            this.WindowTitles.Add("Country: Brazil");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UICountryComboBox
        {
            get
            {
                if ((this.mUICountryComboBox == null))
                {
                    this.mUICountryComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbcountry";
                    this.mUICountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbcountry";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Country*";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "239";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbcountry class=fi";
                    this.mUICountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUICountryComboBox.WindowTitles.Add("Country: Brazil");
                    #endregion
                }
                return this.mUICountryComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUICountryComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICountryBrazilDocument1 : HtmlDocument
    {
        
        public UICountryBrazilDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Country: Brazil";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecountry.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aecountry.aspx?countryid=19";
            this.WindowTitles.Add("Country: Brazil");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIAlpha2Edit
        {
            get
            {
                if ((this.mUIAlpha2Edit == null))
                {
                    this.mUIAlpha2Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAlpha2Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtCountryCode";
                    this.mUIAlpha2Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtCountryCode";
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Alpha 2*";
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtCountryCode clas";
                    this.mUIAlpha2Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIAlpha2Edit.WindowTitles.Add("Country: Brazil");
                    #endregion
                }
                return this.mUIAlpha2Edit;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtAEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtAEdit == null))
                {
                    this.mUICtl00contentmaintxtAEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtAEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtAlpha3";
                    this.mUICtl00contentmaintxtAEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtAlpha3";
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtAlpha3 class=fil";
                    this.mUICtl00contentmaintxtAEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaintxtAEdit.WindowTitles.Add("Country: Brazil");
                    #endregion
                }
                return this.mUICtl00contentmaintxtAEdit;
            }
        }
        
        public HtmlEdit UICtl00contentmaintxtNEdit
        {
            get
            {
                if ((this.mUICtl00contentmaintxtNEdit == null))
                {
                    this.mUICtl00contentmaintxtNEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICtl00contentmaintxtNEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtNumeric3";
                    this.mUICtl00contentmaintxtNEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtNumeric3";
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtNumeric3 class=f";
                    this.mUICtl00contentmaintxtNEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaintxtNEdit.WindowTitles.Add("Country: Brazil");
                    #endregion
                }
                return this.mUICtl00contentmaintxtNEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIAlpha2Edit;
        
        private HtmlEdit mUICtl00contentmaintxtAEdit;
        
        private HtmlEdit mUICtl00contentmaintxtNEdit;
        #endregion
    }
}
