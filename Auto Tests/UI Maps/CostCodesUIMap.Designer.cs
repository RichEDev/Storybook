// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.CostCodesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class CostCodesUIMap
    {
        
        /// <summary>
        /// ClickAddCostCodeLink
        /// </summary>
        public void ClickAddCostCodeLink()
        {
            #region Variable Declarations
            HtmlHyperlink addCostCodeHyperlink = this.CostCodesGridWindow.CostCodesGridDocument.SubMenuPane.AddCostCodeHyperlink;
            #endregion

            // Click 'Add Cost Code' link
            Mouse.Click(addCostCodeHyperlink, new Point(39, 7));
        }
        
        /// <summary>
        /// PressCancelButton
        /// </summary>
        public void PressCancelButton()
        {
            #region Variable Declarations
            HtmlInputButton cancelButton = this.CostCodeControlsWindow.CostCodeControlsDocument.CancelButton;
            #endregion

            // Click 'ctl00$contentmain$cmdcancel' button
            Mouse.Click(cancelButton, new Point(32, 22));
        }
        
        /// <summary>
        /// PressCloseOnModalMessage
        /// </summary>
        public void PressCloseOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage closeButton = this.CostCodeControlsWindow.CostCodeControlsDocument.CloseButton;
            #endregion

            // Click 'OK' image
            Mouse.Click(closeButton, new Point(28, 13));
        }
        
        /// <summary>
        /// PressSaveButton
        /// </summary>
        public void PressSaveButton()
        {
            #region Variable Declarations
            HtmlInputButton saveButton = this.CostCodeControlsWindow.CostCodeControlsDocument.SaveButton;
            #endregion

            // Click 'ctl00$contentmain$cmdok' button
            Mouse.Click(saveButton, new Point(25, 13));
        }
        
        /// <summary>
        /// ValidateModalMessage - Use 'ValidateModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateModalMessage()
        {
            #region Variable Declarations
            HtmlDiv modalMessage = this.CostCodeControlsWindow.CostCodeControlsDocument.ModalMessage;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a cost code'
            Assert.AreEqual(this.ValidateModalMessageExpectedValues.ModalMessageInnerText, modalMessage.InnerText);
        }
        
        #region Properties
        public virtual ValidateModalMessageExpectedValues ValidateModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateModalMessageExpectedValues == null))
                {
                    this.mValidateModalMessageExpectedValues = new ValidateModalMessageExpectedValues();
                }
                return this.mValidateModalMessageExpectedValues;
            }
        }
        
        public CostCodeControlsWindow CostCodeControlsWindow
        {
            get
            {
                if ((this.mCostCodeControlsWindow == null))
                {
                    this.mCostCodeControlsWindow = new CostCodeControlsWindow();
                }
                return this.mCostCodeControlsWindow;
            }
        }
        
        public CostCodesGridWindow CostCodesGridWindow
        {
            get
            {
                if ((this.mCostCodesGridWindow == null))
                {
                    this.mCostCodesGridWindow = new CostCodesGridWindow();
                }
                return this.mCostCodesGridWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateModalMessageExpectedValues mValidateModalMessageExpectedValues;
        
        private CostCodeControlsWindow mCostCodeControlsWindow;
        
        private CostCodesGridWindow mCostCodesGridWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a cost code'
        /// </summary>
        public string ModalMessageInnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a cost code";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CostCodeControlsWindow : BrowserWindow
    {
        
        public CostCodeControlsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public CostCodeControlsDocument CostCodeControlsDocument
        {
            get
            {
                if ((this.mCostCodeControlsDocument == null))
                {
                    this.mCostCodeControlsDocument = new CostCodeControlsDocument(this);
                }
                return this.mCostCodeControlsDocument;
            }
        }
        #endregion
        
        #region Fields
        private CostCodeControlsDocument mCostCodeControlsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CostCodeControlsDocument : HtmlDocument
    {
        
        public CostCodeControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecostcode.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecostcode.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit CostCodeTextBox
        {
            get
            {
                if ((this.mCostCodeTextBox == null))
                {
                    this.mCostCodeTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mCostCodeTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcostcode";
                    this.mCostCodeTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcostcode";
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Cost Code*";
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcostcode class=f";
                    this.mCostCodeTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mCostCodeTextBox;
            }
        }
        
        public HtmlTextArea DescriptionTextBox
        {
            get
            {
                if ((this.mDescriptionTextBox == null))
                {
                    this.mDescriptionTextBox = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtdescription";
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtdescription";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtdescription name";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mDescriptionTextBox;
            }
        }
        
        public HtmlEdit CostCodeOwnerTextBox
        {
            get
            {
                if ((this.mCostCodeOwnerTextBox == null))
                {
                    this.mCostCodeOwnerTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mCostCodeOwnerTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcostcodeowner";
                    this.mCostCodeOwnerTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcostcodeowner";
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Cost Code Owner";
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan ui-autocomplete-input";
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcostcodeowner cl";
                    this.mCostCodeOwnerTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mCostCodeOwnerTextBox;
            }
        }
        
        public HtmlInputButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mSaveButton.FilterProperties.Add(new PropertyExpression("Src", "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = "";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\'if (validateform(null) == false";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        
        public HtmlImage CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mCloseButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCloseButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mCloseButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mCloseButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mCloseButton.FilterProperties[HtmlImage.PropertyNames.Class] = "";
                    this.mCloseButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=SEL.MasterPopup.HideMasterPopup(";
                    this.mCloseButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        
        public HtmlDiv ModalMessage
        {
            get
            {
                if ((this.mModalMessage == null))
                {
                    this.mModalMessage = new HtmlDiv(this);
                    #region Search Criteria
                    this.mModalMessage.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mModalMessage.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_pnlMasterPopup class=errorModal style=\"POSITION: fixed; LEFT: 857px; Z-I" +
                        "NDEX: 10004; TOP: 420px\"";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mModalMessage;
            }
        }
        
        public HtmlInputButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdcancel";
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdcancel";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mCancelButton.FilterProperties.Add(new PropertyExpression("Src", "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = "";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmdcance";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mCostCodeTextBox;
        
        private HtmlTextArea mDescriptionTextBox;
        
        private HtmlEdit mCostCodeOwnerTextBox;
        
        private HtmlInputButton mSaveButton;
        
        private HtmlImage mCloseButton;
        
        private HtmlDiv mModalMessage;
        
        private HtmlInputButton mCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CostCodesGridWindow : BrowserWindow
    {
        
        public CostCodesGridWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public CostCodesGridDocument CostCodesGridDocument
        {
            get
            {
                if ((this.mCostCodesGridDocument == null))
                {
                    this.mCostCodesGridDocument = new CostCodesGridDocument(this);
                }
                return this.mCostCodesGridDocument;
            }
        }
        #endregion
        
        #region Fields
        private CostCodesGridDocument mCostCodesGridDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CostCodesGridDocument : HtmlDocument
    {
        
        public CostCodesGridDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/admincostcodes.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/admincostcodes.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public SubMenuPane SubMenuPane
        {
            get
            {
                if ((this.mSubMenuPane == null))
                {
                    this.mSubMenuPane = new SubMenuPane(this);
                }
                return this.mSubMenuPane;
            }
        }
        
        public HtmlTable CostCodesGrid
        {
            get
            {
                if ((this.mCostCodesGrid == null))
                {
                    this.mCostCodesGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mCostCodesGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridCostcodes";
                    this.mCostCodesGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Cost Code Cost Code Description\r\nTest_CC";
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridCostcodes class=cGrid";
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "7";
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mCostCodesGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mCostCodesGrid;
            }
        }
        #endregion
        
        #region Fields
        private SubMenuPane mSubMenuPane;
        
        private HtmlTable mCostCodesGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class SubMenuPane : HtmlDiv
    {
        
        public SubMenuPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nAdd Cost Code Filter Rule";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink AddCostCodeHyperlink
        {
            get
            {
                if ((this.mAddCostCodeHyperlink == null))
                {
                    this.mAddCostCodeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mAddCostCodeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mAddCostCodeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mAddCostCodeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mAddCostCodeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Cost Code";
                    this.mAddCostCodeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecostcode.aspx";
                    this.mAddCostCodeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mAddCostCodeHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecostcode.aspx", PropertyExpressionOperator.Contains));
                    this.mAddCostCodeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mAddCostCodeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aecostcode.aspx\"";
                    this.mAddCostCodeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAddCostCodeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mAddCostCodeHyperlink;
        #endregion
    }
}
