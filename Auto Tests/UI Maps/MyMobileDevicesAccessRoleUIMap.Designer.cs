// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.MyMobileDevicesAccessRoleUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class MyMobileDevicesAccessRoleUIMap
    {
        
        /// <summary>
        /// ValidateNoPermissionsPage - Use 'ValidateNoPermissionsPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNoPermissionsPage()
        {
            #region Variable Declarations
            HtmlDocument uIYoudonothavepermissiDocument = this.UIYoudonothavepermissiWindow.UIYoudonothavepermissiDocument;
            #endregion

            // Verify that 'You do not have permission to view this page' document's property 'InnerText' contains 'You do not have permission to view this page. This could be due to one of the following reasons:
            //You are you trying to edit someone else's account, or trying to access administrative features. Please check with your System Administrator
            //Your account may have been disabled, or it may be awaiting activation. Please check with your System Administrator
            //If you have verified your permissions with your System Administrator, but are still diverted to this screen, click here for further help
            //To return to the welcome page please Click Here.'
            StringAssert.Contains(uIYoudonothavepermissiDocument.InnerText, this.ValidateNoPermissionsPageExpectedValues.UIYoudonothavepermissiDocumentInnerText);
        }
        
        /// <summary>
        /// PressSaveAccessRole
        /// </summary>
        public void PressSaveAccessRole()
        {
            #region Variable Declarations
            HtmlImage uISaveImage = this.UIYoudonothavepermissiWindow.UIAccessRoleMyMobileDeDocument.UIMaindivPane.UISaveImage;
            #endregion

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(23, 18));
        }
        
        /// <summary>
        /// ValidatePermissionsToMobileDevicesPage - Use 'ValidatePermissionsToMobileDevicesPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePermissionsToMobileDevicesPage()
        {
            #region Variable Declarations
            HtmlDiv uIMyMobileDevicesPane = this.UIYoudonothavepermissiWindow.UIMyMobileDevicesDocument.UIMyMobileDevicesPane;
            #endregion

            // Verify that 'My Mobile Devices' pane's property 'InnerText' equals 'My Mobile Devices'
            Assert.AreEqual(this.ValidatePermissionsToMobileDevicesPageExpectedValues.UIMyMobileDevicesPaneInnerText, uIMyMobileDevicesPane.InnerText);
        }
        
        /// <summary>
        /// PressCancelSavingAccessRole
        /// </summary>
        public void PressCancelSavingAccessRole()
        {
            #region Variable Declarations
            HtmlImage uICancelImage = this.UIYoudonothavepermissiWindow.UIAccessRoleMyMobileDeDocument.UIMaindivPane.UICancelImage;
            #endregion

            // Click 'Cancel' image
            Mouse.Click(uICancelImage, new Point(39, 13));
        }
        
        #region Properties
        public virtual ValidateNoPermissionsPageExpectedValues ValidateNoPermissionsPageExpectedValues
        {
            get
            {
                if ((this.mValidateNoPermissionsPageExpectedValues == null))
                {
                    this.mValidateNoPermissionsPageExpectedValues = new ValidateNoPermissionsPageExpectedValues();
                }
                return this.mValidateNoPermissionsPageExpectedValues;
            }
        }
        
        public virtual ValidatePermissionsToMobileDevicesPageExpectedValues ValidatePermissionsToMobileDevicesPageExpectedValues
        {
            get
            {
                if ((this.mValidatePermissionsToMobileDevicesPageExpectedValues == null))
                {
                    this.mValidatePermissionsToMobileDevicesPageExpectedValues = new ValidatePermissionsToMobileDevicesPageExpectedValues();
                }
                return this.mValidatePermissionsToMobileDevicesPageExpectedValues;
            }
        }
        
        public UIYoudonothavepermissiWindow UIYoudonothavepermissiWindow
        {
            get
            {
                if ((this.mUIYoudonothavepermissiWindow == null))
                {
                    this.mUIYoudonothavepermissiWindow = new UIYoudonothavepermissiWindow();
                }
                return this.mUIYoudonothavepermissiWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateNoPermissionsPageExpectedValues mValidateNoPermissionsPageExpectedValues;
        
        private ValidatePermissionsToMobileDevicesPageExpectedValues mValidatePermissionsToMobileDevicesPageExpectedValues;
        
        private UIYoudonothavepermissiWindow mUIYoudonothavepermissiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNoPermissionsPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateNoPermissionsPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'You do not have permission to view this page' document's property 'InnerText' contains 'You do not have permission to view this page. This could be due to one of the following reasons:
        ///You are you trying to edit someone else's account, or trying to access administrative features. Please check with your System Administrator
        ///Your account may have been disabled, or it may be awaiting activation. Please check with your System Administrator
        ///If you have verified your permissions with your System Administrator, but are still diverted to this screen, click here for further help
        ///To return to the welcome page please Click Here.'
        /// </summary>
        public string UIYoudonothavepermissiDocumentInnerText = @"You do not have permission to view this page. This could be due to one of the following reasons:
You are you trying to edit someone else's account, or trying to access administrative features. Please check with your System Administrator
Your account may have been disabled, or it may be awaiting activation. Please check with your System Administrator
If you have verified your permissions with your System Administrator, but are still diverted to this screen, click here for further help
To return to the welcome page please Click Here.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePermissionsToMobileDevicesPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidatePermissionsToMobileDevicesPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'My Mobile Devices' pane's property 'InnerText' equals 'My Mobile Devices'
        /// </summary>
        public string UIMyMobileDevicesPaneInnerText = "My Mobile Devices";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIYoudonothavepermissiWindow : BrowserWindow
    {
        
        public UIYoudonothavepermissiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "You do not have permission to view this page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("You do not have permission to view this page");
            this.WindowTitles.Add("Access Roles");
            this.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public HtmlDocument UIYoudonothavepermissiDocument
        {
            get
            {
                if ((this.mUIYoudonothavepermissiDocument == null))
                {
                    this.mUIYoudonothavepermissiDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIYoudonothavepermissiDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
                    this.mUIYoudonothavepermissiDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIYoudonothavepermissiDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
                    this.mUIYoudonothavepermissiDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = "You do not have permission to view this page";
                    this.mUIYoudonothavepermissiDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/restricted.aspx";
                    this.mUIYoudonothavepermissiDocument.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/restricted.aspx?reason=Current%20access%" +
                        "20role%20does%20not%20permit%20you%20to%20view%20this%20page.";
                    this.mUIYoudonothavepermissiDocument.WindowTitles.Add("You do not have permission to view this page");
                    #endregion
                }
                return this.mUIYoudonothavepermissiDocument;
            }
        }
        
        public UIAccessRolesDocument UIAccessRolesDocument
        {
            get
            {
                if ((this.mUIAccessRolesDocument == null))
                {
                    this.mUIAccessRolesDocument = new UIAccessRolesDocument(this);
                }
                return this.mUIAccessRolesDocument;
            }
        }
        
        public UIAccessRoleMyMobileDeDocument UIAccessRoleMyMobileDeDocument
        {
            get
            {
                if ((this.mUIAccessRoleMyMobileDeDocument == null))
                {
                    this.mUIAccessRoleMyMobileDeDocument = new UIAccessRoleMyMobileDeDocument(this);
                }
                return this.mUIAccessRoleMyMobileDeDocument;
            }
        }
        
        public UIMyMobileDevicesDocument UIMyMobileDevicesDocument
        {
            get
            {
                if ((this.mUIMyMobileDevicesDocument == null))
                {
                    this.mUIMyMobileDevicesDocument = new UIMyMobileDevicesDocument(this);
                }
                return this.mUIMyMobileDevicesDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIYoudonothavepermissiDocument;
        
        private UIAccessRolesDocument mUIAccessRolesDocument;
        
        private UIAccessRoleMyMobileDeDocument mUIAccessRoleMyMobileDeDocument;
        
        private UIMyMobileDevicesDocument mUIMyMobileDevicesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRolesDocument : HtmlDocument
    {
        
        public UIAccessRolesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Roles";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accessRoles.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/admin/accessRoles.aspx";
            this.WindowTitles.Add("Access Roles");
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_accessRolesGridTable
        {
            get
            {
                if ((this.mUITbl_accessRolesGridTable == null))
                {
                    this.mUITbl_accessRolesGridTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_accessRolesGridTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_accessRolesGrid";
                    this.mUITbl_accessRolesGridTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Access Role Name Description\r\nAccess rol";
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_accessRolesGrid class=cGrid";
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "17";
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mUITbl_accessRolesGridTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mUITbl_accessRolesGridTable.WindowTitles.Add("Access Roles");
                    #endregion
                }
                return this.mUITbl_accessRolesGridTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_accessRolesGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAccessRoleMyMobileDeDocument : HtmlDocument
    {
        
        public UIAccessRoleMyMobileDeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Access Role: MyMobileDevicesClaimantAccessRole";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeAccessRole.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/admin/aeAccessRole.aspx?accessRoleID=103" +
                "0";
            this.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
            #endregion
        }
        
        #region Properties
        public HtmlTable UICtl00_contentmain_tcTable
        {
            get
            {
                if ((this.mUICtl00_contentmain_tcTable == null))
                {
                    this.mUICtl00_contentmain_tcTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_tcTable.SearchProperties[HtmlTable.PropertyNames.Id] = "ctl00_contentmain_tcElementAccess_tb2_tbl_2";
                    this.mUICtl00_contentmain_tcTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "ElementViewAddEditDelete\r\nExpenses\r\n Bas";
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tcElementAccess_tb2";
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "75";
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mUICtl00_contentmain_tcTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mUICtl00_contentmain_tcTable.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
                    #endregion
                }
                return this.mUICtl00_contentmain_tcTable;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUICtl00_contentmain_tcTable;
        
        private UIMaindivPane mUIMaindivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Role Name* *DescriptionReports AccessSel";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
            #endregion
        }
        
        #region Properties
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos1.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Save onclick=\"saveAccessRoleElemen";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "9";
                    this.mUISaveImage.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public HtmlImage UICancelImage
        {
            get
            {
                if ((this.mUICancelImage == null))
                {
                    this.mUICancelImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUICancelImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Cancel";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos1.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Cancel alt=Cancel src=\"/shared/ima";
                    this.mUICancelImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "10";
                    this.mUICancelImage.WindowTitles.Add("Access Role: MyMobileDevicesClaimantAccessRole");
                    #endregion
                }
                return this.mUICancelImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUISaveImage;
        
        private HtmlImage mUICancelImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMyMobileDevicesDocument : HtmlDocument
    {
        
        public UIMyMobileDevicesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Mobile Devices";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/information/MyMobileDevices.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/information/MyMobileDevices.aspx";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMyMobileDevicesPane
        {
            get
            {
                if ((this.mUIMyMobileDevicesPane == null))
                {
                    this.mUIMyMobileDevicesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMyMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIMyMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMyMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "My Mobile Devices";
                    this.mUIMyMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMyMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIMyMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIMyMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIMyMobileDevicesPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIMyMobileDevicesPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMyMobileDevicesPane;
        #endregion
    }
}
