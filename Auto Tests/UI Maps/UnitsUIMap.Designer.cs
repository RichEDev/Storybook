// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.UnitsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UnitsUIMap
    {
        
        /// <summary>
        /// NavigateToUnitsFromHomePage
        /// </summary>
        public void NavigateToUnitsFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIProductandServiceInfPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIProductandServiceInfPane;
            HtmlSpan uIUnitsPane = this.UIWelcometoframework20Window.UIProductConfigurationDocument.UIUnitsPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(44, 14));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(50, 15));

            // Click 'Product and Service Information' pane
            Mouse.Click(uIProductandServiceInfPane, new Point(63, 12));

            // Click 'Units' pane
            Mouse.Click(uIUnitsPane, new Point(34, 15));
        }
        
        /// <summary>
        /// AddUnitWithCancel - Use 'AddUnitWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddUnitWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIUnitDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitDescriptionEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(39, 9));

            // Type 'CodedUI Units' in 'Unit Description' text box
            uIUnitDescriptionEdit.Text = this.AddUnitWithCancelParams.UIUnitDescriptionEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(17, 16));
        }
        
        /// <summary>
        /// AddUnit - Use 'AddUnitParams' to pass parameters into this method.
        /// </summary>
        public void AddUnit()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uIUnitDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitDescriptionEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(47, 5));

            // Type 'CodedUI Unit' in 'Unit Description' text box
            uIUnitDescriptionEdit.Text = this.AddUnitParams.UIUnitDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(21, 10));
        }
        
        /// <summary>
        /// ValidateAddUnit - Use 'ValidateAddUnitExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddUnit()
        {
            #region Variable Declarations
            HtmlCell uICodedUIUnitCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Table.UICodedUIUnitCell;
            #endregion

            // Verify that 'CodedUI Unit' cell's property 'InnerText' equals 'CodedUI Unit'
            Assert.AreEqual(this.ValidateAddUnitExpectedValues.UICodedUIUnitCellInnerText, uICodedUIUnitCell.InnerText);
        }
        
        /// <summary>
        /// ValidateUnitDoesNotExist - Use 'ValidateUnitDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnitDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUIUnitCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Table.UICodedUIUnitCell;
            #endregion

            // Verify that 'CodedUI Unit' cell's property 'InnerText' is not equal to 'CodedUI Unit'
            Assert.AreNotEqual(this.ValidateUnitDoesNotExistExpectedValues.UICodedUIUnitCellInnerText, uICodedUIUnitCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddUnitWithDuplicateDetails - Use 'ValidateAddUnitWithDuplicateDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddUnitWithDuplicateDetails()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddUnitWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddUnitWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// EditUnitWithCancel - Use 'EditUnitWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditUnitWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row.UIEditImage;
            HtmlEdit uIUnitDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitDescriptionEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(14, 7));

            // Type 'CodedUI Unit EDITED' in 'Unit Description' text box
            uIUnitDescriptionEdit.Text = this.EditUnitWithCancelParams.UIUnitDescriptionEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(37, 11));
        }
        
        /// <summary>
        /// EditUnit - Use 'EditUnitParams' to pass parameters into this method.
        /// </summary>
        public void EditUnit()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row.UIEditImage;
            HtmlEdit uIUnitDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitDescriptionEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(7, 9));

            // Type 'CodedUI Unit EDITED' in 'Unit Description' text box
            uIUnitDescriptionEdit.Text = this.EditUnitParams.UIUnitDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(40, 11));
        }
        
        /// <summary>
        /// ValidateEditUnit - Use 'ValidateEditUnitExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditUnit()
        {
            #region Variable Declarations
            HtmlCell uICodedUIUnitEDITEDCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Table.UICodedUIUnitEDITEDCell;
            #endregion

            // Verify that 'CodedUI Unit EDITED' cell's property 'InnerText' equals 'CodedUI Unit EDITED'
            Assert.AreEqual(this.ValidateEditUnitExpectedValues.UICodedUIUnitEDITEDCellInnerText, uICodedUIUnitEDITEDCell.InnerText);
        }
        
        /// <summary>
        /// EditUnitResetValues - Use 'EditUnitResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditUnitResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row1.UIEditImage;
            HtmlEdit uIUnitDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitDescriptionEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 11));

            // Type 'CodedUI Unit' in 'Unit Description' text box
            uIUnitDescriptionEdit.Text = this.EditUnitResetValuesParams.UIUnitDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(35, 17));
        }
        
        /// <summary>
        /// ValidateUnitIsNotArchived - Use 'ValidateUnitIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnitIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateUnitIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ArchiveUnitWithCancel
        /// </summary>
        public void ArchiveUnitWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(11, 9));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveUnit
        /// </summary>
        public void ArchiveUnit()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(14, 8));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveUnitWithCancel
        /// </summary>
        public void UnArchiveUnitWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(10, 11));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveUnit
        /// </summary>
        public void UnArchiveUnit()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(13, 9));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// DeleteWithCancel
        /// </summary>
        public void DeleteWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 10));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteUnit
        /// </summary>
        public void DeleteUnit()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(9, 15));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// DeleteUnitWithCancel
        /// </summary>
        public void DeleteUnitWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 5));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateUnitsPageLayout - Use 'ValidateUnitsPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnitsPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIJamesLloyd111117SeptPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd111117SeptPane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uIUnitsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIUnitsPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd111117SeptPane.DisplayText, this.ValidateUnitsPageLayoutExpectedValues.UIJamesLloyd111117SeptPaneDisplayText);

            // Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIItemPaneClass, uIItemPane.Class);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'Units' pane's property 'DisplayText' equals 'Units'
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIUnitsPaneDisplayText, uIUnitsPane.DisplayText);

            // Verify that 'Base Definitions' pane's property 'Id' equals 'pagetitle'
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIBaseDefinitionsPaneId, uIBaseDefinitionsPane.Id);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Units '
            Assert.AreEqual(this.ValidateUnitsPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);
        }
        
        /// <summary>
        /// ValidateUnitIsArchived - Use 'ValidateUnitIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnitIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_6ac80b0f_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateUnitIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        #region Properties
        public virtual AddUnitWithCancelParams AddUnitWithCancelParams
        {
            get
            {
                if ((this.mAddUnitWithCancelParams == null))
                {
                    this.mAddUnitWithCancelParams = new AddUnitWithCancelParams();
                }
                return this.mAddUnitWithCancelParams;
            }
        }
        
        public virtual AddUnitParams AddUnitParams
        {
            get
            {
                if ((this.mAddUnitParams == null))
                {
                    this.mAddUnitParams = new AddUnitParams();
                }
                return this.mAddUnitParams;
            }
        }
        
        public virtual ValidateAddUnitExpectedValues ValidateAddUnitExpectedValues
        {
            get
            {
                if ((this.mValidateAddUnitExpectedValues == null))
                {
                    this.mValidateAddUnitExpectedValues = new ValidateAddUnitExpectedValues();
                }
                return this.mValidateAddUnitExpectedValues;
            }
        }
        
        public virtual ValidateUnitDoesNotExistExpectedValues ValidateUnitDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateUnitDoesNotExistExpectedValues == null))
                {
                    this.mValidateUnitDoesNotExistExpectedValues = new ValidateUnitDoesNotExistExpectedValues();
                }
                return this.mValidateUnitDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateAddUnitWithDuplicateDetailsExpectedValues ValidateAddUnitWithDuplicateDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAddUnitWithDuplicateDetailsExpectedValues == null))
                {
                    this.mValidateAddUnitWithDuplicateDetailsExpectedValues = new ValidateAddUnitWithDuplicateDetailsExpectedValues();
                }
                return this.mValidateAddUnitWithDuplicateDetailsExpectedValues;
            }
        }
        
        public virtual EditUnitWithCancelParams EditUnitWithCancelParams
        {
            get
            {
                if ((this.mEditUnitWithCancelParams == null))
                {
                    this.mEditUnitWithCancelParams = new EditUnitWithCancelParams();
                }
                return this.mEditUnitWithCancelParams;
            }
        }
        
        public virtual EditUnitParams EditUnitParams
        {
            get
            {
                if ((this.mEditUnitParams == null))
                {
                    this.mEditUnitParams = new EditUnitParams();
                }
                return this.mEditUnitParams;
            }
        }
        
        public virtual ValidateEditUnitExpectedValues ValidateEditUnitExpectedValues
        {
            get
            {
                if ((this.mValidateEditUnitExpectedValues == null))
                {
                    this.mValidateEditUnitExpectedValues = new ValidateEditUnitExpectedValues();
                }
                return this.mValidateEditUnitExpectedValues;
            }
        }
        
        public virtual EditUnitResetValuesParams EditUnitResetValuesParams
        {
            get
            {
                if ((this.mEditUnitResetValuesParams == null))
                {
                    this.mEditUnitResetValuesParams = new EditUnitResetValuesParams();
                }
                return this.mEditUnitResetValuesParams;
            }
        }
        
        public virtual ValidateUnitIsNotArchivedExpectedValues ValidateUnitIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateUnitIsNotArchivedExpectedValues == null))
                {
                    this.mValidateUnitIsNotArchivedExpectedValues = new ValidateUnitIsNotArchivedExpectedValues();
                }
                return this.mValidateUnitIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateUnitsPageLayoutExpectedValues ValidateUnitsPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateUnitsPageLayoutExpectedValues == null))
                {
                    this.mValidateUnitsPageLayoutExpectedValues = new ValidateUnitsPageLayoutExpectedValues();
                }
                return this.mValidateUnitsPageLayoutExpectedValues;
            }
        }
        
        public virtual ValidateUnitIsArchivedExpectedValues ValidateUnitIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateUnitIsArchivedExpectedValues == null))
                {
                    this.mValidateUnitIsArchivedExpectedValues = new ValidateUnitIsArchivedExpectedValues();
                }
                return this.mValidateUnitIsArchivedExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddUnitWithCancelParams mAddUnitWithCancelParams;
        
        private AddUnitParams mAddUnitParams;
        
        private ValidateAddUnitExpectedValues mValidateAddUnitExpectedValues;
        
        private ValidateUnitDoesNotExistExpectedValues mValidateUnitDoesNotExistExpectedValues;
        
        private ValidateAddUnitWithDuplicateDetailsExpectedValues mValidateAddUnitWithDuplicateDetailsExpectedValues;
        
        private EditUnitWithCancelParams mEditUnitWithCancelParams;
        
        private EditUnitParams mEditUnitParams;
        
        private ValidateEditUnitExpectedValues mValidateEditUnitExpectedValues;
        
        private EditUnitResetValuesParams mEditUnitResetValuesParams;
        
        private ValidateUnitIsNotArchivedExpectedValues mValidateUnitIsNotArchivedExpectedValues;
        
        private ValidateUnitsPageLayoutExpectedValues mValidateUnitsPageLayoutExpectedValues;
        
        private ValidateUnitIsArchivedExpectedValues mValidateUnitIsArchivedExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddUnitWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddUnitWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Units' in 'Unit Description' text box
        /// </summary>
        public string UIUnitDescriptionEditText = "CodedUI Units";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddUnit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddUnitParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Unit' in 'Unit Description' text box
        /// </summary>
        public string UIUnitDescriptionEditText = "CodedUI Unit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddUnit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddUnitExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Unit' cell's property 'InnerText' equals 'CodedUI Unit'
        /// </summary>
        public string UICodedUIUnitCellInnerText = "CodedUI Unit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnitDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateUnitDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Unit' cell's property 'InnerText' is not equal to 'CodedUI Unit'
        /// </summary>
        public string UICodedUIUnitCellInnerText = "CodedUI Unit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddUnitWithDuplicateDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddUnitWithDuplicateDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditUnitWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditUnitWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Unit EDITED' in 'Unit Description' text box
        /// </summary>
        public string UIUnitDescriptionEditText = "CodedUI Unit EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditUnit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditUnitParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Unit EDITED' in 'Unit Description' text box
        /// </summary>
        public string UIUnitDescriptionEditText = "CodedUI Unit EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditUnit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditUnitExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Unit EDITED' cell's property 'InnerText' equals 'CodedUI Unit EDITED'
        /// </summary>
        public string UICodedUIUnitEDITEDCellInnerText = "CodedUI Unit EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditUnitResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditUnitResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Unit' in 'Unit Description' text box
        /// </summary>
        public string UIUnitDescriptionEditText = "CodedUI Unit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnitIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateUnitIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnitsPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateUnitsPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd111117SeptPaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
        /// </summary>
        public string UIItemPaneClass = "clientlogo";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'Units' pane's property 'DisplayText' equals 'Units'
        /// </summary>
        public string UIUnitsPaneDisplayText = "Units";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'Id' equals 'pagetitle'
        /// </summary>
        public string UIBaseDefinitionsPaneId = "pagetitle";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Units '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Product Information : Units ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnitIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateUnitIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Product Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIProductConfigurationDocument UIProductConfigurationDocument
        {
            get
            {
                if ((this.mUIProductConfigurationDocument == null))
                {
                    this.mUIProductConfigurationDocument = new UIProductConfigurationDocument(this);
                }
                return this.mUIProductConfigurationDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIProductConfigurationDocument mUIProductConfigurationDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIProductandServiceInfPane
        {
            get
            {
                if ((this.mUIProductandServiceInfPane == null))
                {
                    this.mUIProductandServiceInfPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIProductandServiceInfPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIProductandServiceInfPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Product and Service Information";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIProductandServiceInfPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIProductandServiceInfPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIProductandServiceInfPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProductConfigurationDocument : HtmlDocument
    {
        
        public UIProductConfigurationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Product Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=productinfo";
            this.WindowTitles.Add("Product Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIUnitsPane
        {
            get
            {
                if ((this.mUIUnitsPane == null))
                {
                    this.mUIUnitsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIUnitsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel3";
                    this.mUIUnitsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Units";
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel3 class=menuitemtitle";
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
                    this.mUIUnitsPane.WindowTitles.Add("Product Configuration Options");
                    #endregion
                }
                return this.mUIUnitsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIUnitsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=118";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIUnitDescriptionEdit
        {
            get
            {
                if ((this.mUIUnitDescriptionEdit == null))
                {
                    this.mUIUnitDescriptionEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUnitDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_units_description";
                    this.mUIUnitDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_units_description";
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Unit Description";
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_units_desc";
                    this.mUIUnitDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIUnitDescriptionEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnitDescriptionEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "69";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_6ac80b0f_Table UITbl_bdGrid_6ac80b0f_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_6ac80b0f_Table == null))
                {
                    this.mUITbl_bdGrid_6ac80b0f_Table = new UITbl_bdGrid_6ac80b0f_Table(this);
                }
                return this.mUITbl_bdGrid_6ac80b0f_Table;
            }
        }
        
        public UIDivMasterPopupPane UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new UIDivMasterPopupPane(this);
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UITbl_bdGrid_6ac80b0f_Row UITbl_bdGrid_6ac80b0f_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_6ac80b0f_Row == null))
                {
                    this.mUITbl_bdGrid_6ac80b0f_Row = new UITbl_bdGrid_6ac80b0f_Row(this);
                }
                return this.mUITbl_bdGrid_6ac80b0f_Row;
            }
        }
        
        public UITbl_bdGrid_6ac80b0f_Row1 UITbl_bdGrid_6ac80b0f_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_6ac80b0f_Row1 == null))
                {
                    this.mUITbl_bdGrid_6ac80b0f_Row1 = new UITbl_bdGrid_6ac80b0f_Row1(this);
                }
                return this.mUITbl_bdGrid_6ac80b0f_Row1;
            }
        }
        
        public UITbl_bdGrid_6ac80b0f_Cell UITbl_bdGrid_6ac80b0f_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_6ac80b0f_Cell == null))
                {
                    this.mUITbl_bdGrid_6ac80b0f_Cell = new UITbl_bdGrid_6ac80b0f_Cell(this);
                }
                return this.mUITbl_bdGrid_6ac80b0f_Cell;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public HtmlDiv UIUnitsPane
        {
            get
            {
                if ((this.mUIUnitsPane == null))
                {
                    this.mUIUnitsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIUnitsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIUnitsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Units";
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIUnitsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIUnitsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnitsPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIUnitDescriptionEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_6ac80b0f_Table mUITbl_bdGrid_6ac80b0f_Table;
        
        private UIDivMasterPopupPane mUIDivMasterPopupPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UITbl_bdGrid_6ac80b0f_Row mUITbl_bdGrid_6ac80b0f_Row;
        
        private UITbl_bdGrid_6ac80b0f_Row1 mUITbl_bdGrid_6ac80b0f_Row1;
        
        private UITbl_bdGrid_6ac80b0f_Cell mUITbl_bdGrid_6ac80b0f_Cell;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private HtmlDiv mUIUnitsPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIMenudivPane mUIMenudivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6ac80b0f_Table : HtmlTable
    {
        
        public UITbl_bdGrid_6ac80b0f_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6eb7104a7a89";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Unit Description \r\nActuator\r\nAny Single ";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6e";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "21";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIUnitCell
        {
            get
            {
                if ((this.mUICodedUIUnitCell == null))
                {
                    this.mUICodedUIUnitCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIUnitCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIUnitCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIUnitCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Unit";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "5";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIUnitCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "20";
                    this.mUICodedUIUnitCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIUnitCell;
            }
        }
        
        public HtmlCell UICodedUIUnitEDITEDCell
        {
            get
            {
                if ((this.mUICodedUIUnitEDITEDCell == null))
                {
                    this.mUICodedUIUnitEDITEDCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIUnitEDITEDCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIUnitEDITEDCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIUnitEDITEDCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Unit EDITED";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "5";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUIUnitEDITEDCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "20";
                    this.mUICodedUIUnitEDITEDCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIUnitEDITEDCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIUnitCell;
        
        private HtmlCell mUICodedUIUnitEDITEDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDivMasterPopupPane : HtmlDiv
    {
        
        public UIDivMasterPopupPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIThisdefinitonalreadyPane
        {
            get
            {
                if ((this.mUIThisdefinitonalreadyPane == null))
                {
                    this.mUIThisdefinitonalreadyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIThisdefinitonalreadyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIThisdefinitonalreadyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "This definiton already exists and cannot";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModalBody";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=errorModalBody";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIThisdefinitonalreadyPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIThisdefinitonalreadyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIThisdefinitonalreadyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6ac80b0f_Row : HtmlRow
    {
        
        public UITbl_bdGrid_6ac80b0f_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6eb7104a7a89_CodedUI Unit";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Unit";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "5";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "6";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6ac80b0f_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_6ac80b0f_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6eb7104a7a89_CodedUI Unit EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Unit EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "5";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "6";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6ac80b0f_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_6ac80b0f_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6eb7104a7a89_CodedUI Unit_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6ac80b0f_9c1f_43ea_9aed_6";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "5";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "19";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 Base";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd111117SeptPane
        {
            get
            {
                if ((this.mUIJamesLloyd111117SeptPane == null))
                {
                    this.mUIJamesLloyd111117SeptPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 ";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd111117SeptPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd111117SeptPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd111117SeptPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
}
