// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.LicenceRenewalTypeUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class LicenceRenewalTypeUIMap
    {
        
        /// <summary>
        /// NavigateToLicenceRenewalTypesFromHomePage
        /// </summary>
        public void NavigateToLicenceRenewalTypesFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIProductandServiceInfPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIProductandServiceInfPane;
            HtmlSpan uILicenceRenewalTypesPane = this.UIWelcometoframework20Window.UIProductConfigurationDocument.UILicenceRenewalTypesPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(38, 16));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(42, 12));

            // Click 'Product and Service Information' pane
            Mouse.Click(uIProductandServiceInfPane, new Point(64, 16));

            // Click 'Licence Renewal Types' pane
            Mouse.Click(uILicenceRenewalTypesPane, new Point(64, 14));
        }
        
        /// <summary>
        /// ValidateLicenceRenewalPageLayout - Use 'ValidateLicenceRenewalPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceRenewalPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIJamesLloyd20SeptembePane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd20SeptembePane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIItemPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uICurrentDefinitionsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIMaindivPane.UICurrentDefinitionsPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uILicenceRenewalTypesPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypesPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd20SeptembePane.DisplayText, this.ValidateLicenceRenewalPageLayoutExpectedValues.UIJamesLloyd20SeptembePaneDisplayText);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Licence Renewal Types '
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UICurrentDefinitionsPaneInnerText, uICurrentDefinitionsPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'Licence Renewal Types' pane's property 'InnerText' equals 'Licence Renewal Types'
            Assert.AreEqual(this.ValidateLicenceRenewalPageLayoutExpectedValues.UILicenceRenewalTypesPaneInnerText, uILicenceRenewalTypesPane.InnerText);
        }
        
        /// <summary>
        /// AddLicenceRenewal - Use 'AddLicenceRenewalParams' to pass parameters into this method.
        /// </summary>
        public void AddLicenceRenewal()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uILicenceRenewalTypeEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypeEdit;
            HtmlImage uISaveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(40, 9));

            // Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
            uILicenceRenewalTypeEdit.Text = this.AddLicenceRenewalParams.UILicenceRenewalTypeEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(36, 22));
        }
        
        /// <summary>
        /// ValidateAddLicenceRenewal - Use 'ValidateAddLicenceRenewalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddLicenceRenewal()
        {
            #region Variable Declarations
            HtmlCell uICodedUILicenceRenewaCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Table.UICodedUILicenceRenewaCell;
            #endregion

            // Verify that 'CodedUI Licence Renewal' cell's property 'InnerText' equals 'CodedUI Licence Renewal'
            Assert.AreEqual(this.ValidateAddLicenceRenewalExpectedValues.UICodedUILicenceRenewaCellInnerText, uICodedUILicenceRenewaCell.InnerText);
        }
        
        /// <summary>
        /// ValidateLicenceRenewalDoesNotExist - Use 'ValidateLicenceRenewalDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceRenewalDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUILicenceRenewaCell = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Table.UICodedUILicenceRenewaCell;
            #endregion

            // Verify that 'CodedUI Licence Renewal' cell's property 'InnerText' is not equal to 'CodedUI Licence Renewal'
            Assert.AreNotEqual(this.ValidateLicenceRenewalDoesNotExistExpectedValues.UICodedUILicenceRenewaCellInnerText, uICodedUILicenceRenewaCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddDuplicateLicenceRenewal - Use 'ValidateAddDuplicateLicenceRenewalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateLicenceRenewal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateLicenceRenewalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateLicenceRenewalExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// EditLicenceRenewal - Use 'EditLicenceRenewalParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceRenewal()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Row.UIEditImage;
            HtmlEdit uILicenceRenewalTypeEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypeEdit;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 9));

            // Type 'CodedUI Licence Renewal EDITED' in 'Licence Renewal Type' text box
            uILicenceRenewalTypeEdit.Text = this.EditLicenceRenewalParams.UILicenceRenewalTypeEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(25, 16));
        }
        
        /// <summary>
        /// EditLicenceRenewalResetValues - Use 'EditLicenceRenewalResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceRenewalResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Row1.UIEditImage;
            HtmlEdit uILicenceRenewalTypeEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypeEdit;
            HtmlImage uISaveImage1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(13, 6));

            // Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
            uILicenceRenewalTypeEdit.Text = this.EditLicenceRenewalResetValuesParams.UILicenceRenewalTypeEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(38, 13));
        }
        
        /// <summary>
        /// EditLicenceRenewalWithCancel - Use 'EditLicenceRenewalWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceRenewalWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Row.UIEditImage;
            HtmlEdit uILicenceRenewalTypeEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypeEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(10, 11));

            // Type 'CodedUI Licence Renewal EDITED' in 'Licence Renewal Type' text box
            uILicenceRenewalTypeEdit.Text = this.EditLicenceRenewalWithCancelParams.UILicenceRenewalTypeEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(17, 25));
        }
        
        /// <summary>
        /// ArchiveLicenceRenewalWithCancel
        /// </summary>
        public void ArchiveLicenceRenewalWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(14, 12));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateLicenceRenewalIsNotArchived - Use 'ValidateLicenceRenewalIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceRenewalIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateLicenceRenewalIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ArchiveLicenceRenewal
        /// </summary>
        public void ArchiveLicenceRenewal()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(10, 15));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateLicenceRenewalIsArchived - Use 'ValidateLicenceRenewalIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceRenewalIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateLicenceRenewalIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveLicenceRenewalWithCancel
        /// </summary>
        public void UnArchiveLicenceRenewalWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(11, 7));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveLicenceRenewal
        /// </summary>
        public void UnArchiveLicenceRenewal()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Cell.UIUnArchiveImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(8, 12));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// DeleteLicenceRenewalWithCancel
        /// </summary>
        public void DeleteLicenceRenewalWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(15, 9));

            // Click 'Cancel' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteLicenceRenewal
        /// </summary>
        public void DeleteLicenceRenewal()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Row.UIDeleteImage;
            BrowserWindow uIWelcometoframework20Window = this.UIWelcometoframework20Window;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(15, 9));

            // Click 'Ok' button in the browser dialog window
            uIWelcometoframework20Window.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// AddLicenceRenewalWithCancel - Use 'AddLicenceRenewalWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddLicenceRenewalWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uILicenceRenewalTypeEdit = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UILicenceRenewalTypeEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(37, 13));

            // Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
            uILicenceRenewalTypeEdit.Text = this.AddLicenceRenewalWithCancelParams.UILicenceRenewalTypeEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(42, 3));
        }
        
        /// <summary>
        /// ValidateEditLicenceRenewal - Use 'ValidateEditLicenceRenewalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditLicenceRenewal()
        {
            #region Variable Declarations
            HtmlCell uICodedUILicenceRenewaCell1 = this.UIWelcometoframework20Window.UIBaseDefinitionsDocument.UITbl_bdGrid_6f291ba0_Table.UICodedUILicenceRenewaCell1;
            #endregion

            // Verify that 'CodedUI Licence Renewal EDITED' cell's property 'InnerText' equals 'CodedUI Licence Renewal EDITED'
            Assert.AreEqual(this.ValidateEditLicenceRenewalExpectedValues.UICodedUILicenceRenewaCell1InnerText, uICodedUILicenceRenewaCell1.InnerText);
        }
        
        #region Properties
        public virtual ValidateLicenceRenewalPageLayoutExpectedValues ValidateLicenceRenewalPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceRenewalPageLayoutExpectedValues == null))
                {
                    this.mValidateLicenceRenewalPageLayoutExpectedValues = new ValidateLicenceRenewalPageLayoutExpectedValues();
                }
                return this.mValidateLicenceRenewalPageLayoutExpectedValues;
            }
        }
        
        public virtual AddLicenceRenewalParams AddLicenceRenewalParams
        {
            get
            {
                if ((this.mAddLicenceRenewalParams == null))
                {
                    this.mAddLicenceRenewalParams = new AddLicenceRenewalParams();
                }
                return this.mAddLicenceRenewalParams;
            }
        }
        
        public virtual ValidateAddLicenceRenewalExpectedValues ValidateAddLicenceRenewalExpectedValues
        {
            get
            {
                if ((this.mValidateAddLicenceRenewalExpectedValues == null))
                {
                    this.mValidateAddLicenceRenewalExpectedValues = new ValidateAddLicenceRenewalExpectedValues();
                }
                return this.mValidateAddLicenceRenewalExpectedValues;
            }
        }
        
        public virtual ValidateLicenceRenewalDoesNotExistExpectedValues ValidateLicenceRenewalDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceRenewalDoesNotExistExpectedValues == null))
                {
                    this.mValidateLicenceRenewalDoesNotExistExpectedValues = new ValidateLicenceRenewalDoesNotExistExpectedValues();
                }
                return this.mValidateLicenceRenewalDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateLicenceRenewalExpectedValues ValidateAddDuplicateLicenceRenewalExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateLicenceRenewalExpectedValues == null))
                {
                    this.mValidateAddDuplicateLicenceRenewalExpectedValues = new ValidateAddDuplicateLicenceRenewalExpectedValues();
                }
                return this.mValidateAddDuplicateLicenceRenewalExpectedValues;
            }
        }
        
        public virtual EditLicenceRenewalParams EditLicenceRenewalParams
        {
            get
            {
                if ((this.mEditLicenceRenewalParams == null))
                {
                    this.mEditLicenceRenewalParams = new EditLicenceRenewalParams();
                }
                return this.mEditLicenceRenewalParams;
            }
        }
        
        public virtual EditLicenceRenewalResetValuesParams EditLicenceRenewalResetValuesParams
        {
            get
            {
                if ((this.mEditLicenceRenewalResetValuesParams == null))
                {
                    this.mEditLicenceRenewalResetValuesParams = new EditLicenceRenewalResetValuesParams();
                }
                return this.mEditLicenceRenewalResetValuesParams;
            }
        }
        
        public virtual EditLicenceRenewalWithCancelParams EditLicenceRenewalWithCancelParams
        {
            get
            {
                if ((this.mEditLicenceRenewalWithCancelParams == null))
                {
                    this.mEditLicenceRenewalWithCancelParams = new EditLicenceRenewalWithCancelParams();
                }
                return this.mEditLicenceRenewalWithCancelParams;
            }
        }
        
        public virtual ValidateLicenceRenewalIsNotArchivedExpectedValues ValidateLicenceRenewalIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceRenewalIsNotArchivedExpectedValues == null))
                {
                    this.mValidateLicenceRenewalIsNotArchivedExpectedValues = new ValidateLicenceRenewalIsNotArchivedExpectedValues();
                }
                return this.mValidateLicenceRenewalIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateLicenceRenewalIsArchivedExpectedValues ValidateLicenceRenewalIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceRenewalIsArchivedExpectedValues == null))
                {
                    this.mValidateLicenceRenewalIsArchivedExpectedValues = new ValidateLicenceRenewalIsArchivedExpectedValues();
                }
                return this.mValidateLicenceRenewalIsArchivedExpectedValues;
            }
        }
        
        public virtual AddLicenceRenewalWithCancelParams AddLicenceRenewalWithCancelParams
        {
            get
            {
                if ((this.mAddLicenceRenewalWithCancelParams == null))
                {
                    this.mAddLicenceRenewalWithCancelParams = new AddLicenceRenewalWithCancelParams();
                }
                return this.mAddLicenceRenewalWithCancelParams;
            }
        }
        
        public virtual ValidateEditLicenceRenewalExpectedValues ValidateEditLicenceRenewalExpectedValues
        {
            get
            {
                if ((this.mValidateEditLicenceRenewalExpectedValues == null))
                {
                    this.mValidateEditLicenceRenewalExpectedValues = new ValidateEditLicenceRenewalExpectedValues();
                }
                return this.mValidateEditLicenceRenewalExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        #endregion
        
        #region Fields
        private ValidateLicenceRenewalPageLayoutExpectedValues mValidateLicenceRenewalPageLayoutExpectedValues;
        
        private AddLicenceRenewalParams mAddLicenceRenewalParams;
        
        private ValidateAddLicenceRenewalExpectedValues mValidateAddLicenceRenewalExpectedValues;
        
        private ValidateLicenceRenewalDoesNotExistExpectedValues mValidateLicenceRenewalDoesNotExistExpectedValues;
        
        private ValidateAddDuplicateLicenceRenewalExpectedValues mValidateAddDuplicateLicenceRenewalExpectedValues;
        
        private EditLicenceRenewalParams mEditLicenceRenewalParams;
        
        private EditLicenceRenewalResetValuesParams mEditLicenceRenewalResetValuesParams;
        
        private EditLicenceRenewalWithCancelParams mEditLicenceRenewalWithCancelParams;
        
        private ValidateLicenceRenewalIsNotArchivedExpectedValues mValidateLicenceRenewalIsNotArchivedExpectedValues;
        
        private ValidateLicenceRenewalIsArchivedExpectedValues mValidateLicenceRenewalIsArchivedExpectedValues;
        
        private AddLicenceRenewalWithCancelParams mAddLicenceRenewalWithCancelParams;
        
        private ValidateEditLicenceRenewalExpectedValues mValidateEditLicenceRenewalExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceRenewalPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceRenewalPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd20SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Licence Renewal Types '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Product Information : Licence Renewal Types ";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
        /// </summary>
        public string UICurrentDefinitionsPaneInnerText = "Current Definitions";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'Licence Renewal Types' pane's property 'InnerText' equals 'Licence Renewal Types'
        /// </summary>
        public string UILicenceRenewalTypesPaneInnerText = "Licence Renewal Types";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddLicenceRenewal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddLicenceRenewalParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
        /// </summary>
        public string UILicenceRenewalTypeEditText = "CodedUI Licence Renewal";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddLicenceRenewal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddLicenceRenewalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Licence Renewal' cell's property 'InnerText' equals 'CodedUI Licence Renewal'
        /// </summary>
        public string UICodedUILicenceRenewaCellInnerText = "CodedUI Licence Renewal";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceRenewalDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceRenewalDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Licence Renewal' cell's property 'InnerText' is not equal to 'CodedUI Licence Renewal'
        /// </summary>
        public string UICodedUILicenceRenewaCellInnerText = "CodedUI Licence Renewal";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateLicenceRenewal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateLicenceRenewalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceRenewal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceRenewalParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Licence Renewal EDITED' in 'Licence Renewal Type' text box
        /// </summary>
        public string UILicenceRenewalTypeEditText = "CodedUI Licence Renewal EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceRenewalResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceRenewalResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
        /// </summary>
        public string UILicenceRenewalTypeEditText = "CodedUI Licence Renewal";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceRenewalWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceRenewalWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Licence Renewal EDITED' in 'Licence Renewal Type' text box
        /// </summary>
        public string UILicenceRenewalTypeEditText = "CodedUI Licence Renewal EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceRenewalIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceRenewalIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceRenewalIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceRenewalIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddLicenceRenewalWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddLicenceRenewalWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Licence Renewal' in 'Licence Renewal Type' text box
        /// </summary>
        public string UILicenceRenewalTypeEditText = "CodedUI Licence Renewal";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditLicenceRenewal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditLicenceRenewalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Licence Renewal EDITED' cell's property 'InnerText' equals 'CodedUI Licence Renewal EDITED'
        /// </summary>
        public string UICodedUILicenceRenewaCell1InnerText = "CodedUI Licence Renewal EDITED";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Product Configuration Options");
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIProductConfigurationDocument UIProductConfigurationDocument
        {
            get
            {
                if ((this.mUIProductConfigurationDocument == null))
                {
                    this.mUIProductConfigurationDocument = new UIProductConfigurationDocument(this);
                }
                return this.mUIProductConfigurationDocument;
            }
        }
        
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIProductConfigurationDocument mUIProductConfigurationDocument;
        
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIProductandServiceInfPane
        {
            get
            {
                if ((this.mUIProductandServiceInfPane == null))
                {
                    this.mUIProductandServiceInfPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIProductandServiceInfPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIProductandServiceInfPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Product and Service Information";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIProductandServiceInfPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIProductandServiceInfPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIProductandServiceInfPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIProductandServiceInfPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProductConfigurationDocument : HtmlDocument
    {
        
        public UIProductConfigurationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Product Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=productinfo";
            this.WindowTitles.Add("Product Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILicenceRenewalTypesPane
        {
            get
            {
                if ((this.mUILicenceRenewalTypesPane == null))
                {
                    this.mUILicenceRenewalTypesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILicenceRenewalTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUILicenceRenewalTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Licence Renewal Types";
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUILicenceRenewalTypesPane.WindowTitles.Add("Product Configuration Options");
                    #endregion
                }
                return this.mUILicenceRenewalTypesPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILicenceRenewalTypesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=115";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public HtmlDiv UILicenceRenewalTypesPane
        {
            get
            {
                if ((this.mUILicenceRenewalTypesPane == null))
                {
                    this.mUILicenceRenewalTypesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUILicenceRenewalTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUILicenceRenewalTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Licence Renewal Types";
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUILicenceRenewalTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUILicenceRenewalTypesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUILicenceRenewalTypesPane;
            }
        }
        
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UILicenceRenewalTypeEdit
        {
            get
            {
                if ((this.mUILicenceRenewalTypeEdit == null))
                {
                    this.mUILicenceRenewalTypeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILicenceRenewalTypeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlicenceRenewalTypes_description";
                    this.mUILicenceRenewalTypeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlicenceRenewalTypes_description";
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Licence Renewal Type";
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtlicenceRenewalTy";
                    this.mUILicenceRenewalTypeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUILicenceRenewalTypeEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUILicenceRenewalTypeEdit;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "10";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_6f291ba0_Table UITbl_bdGrid_6f291ba0_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_6f291ba0_Table == null))
                {
                    this.mUITbl_bdGrid_6f291ba0_Table = new UITbl_bdGrid_6f291ba0_Table(this);
                }
                return this.mUITbl_bdGrid_6f291ba0_Table;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UITbl_bdGrid_6f291ba0_Row UITbl_bdGrid_6f291ba0_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_6f291ba0_Row == null))
                {
                    this.mUITbl_bdGrid_6f291ba0_Row = new UITbl_bdGrid_6f291ba0_Row(this);
                }
                return this.mUITbl_bdGrid_6f291ba0_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "13";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_6f291ba0_Row1 UITbl_bdGrid_6f291ba0_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_6f291ba0_Row1 == null))
                {
                    this.mUITbl_bdGrid_6f291ba0_Row1 = new UITbl_bdGrid_6f291ba0_Row1(this);
                }
                return this.mUITbl_bdGrid_6f291ba0_Row1;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public UITbl_bdGrid_6f291ba0_Cell UITbl_bdGrid_6f291ba0_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_6f291ba0_Cell == null))
                {
                    this.mUITbl_bdGrid_6f291ba0_Cell = new UITbl_bdGrid_6f291ba0_Cell(this);
                }
                return this.mUITbl_bdGrid_6f291ba0_Cell;
            }
        }
        #endregion
        
        #region Fields
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private UIMaindivPane mUIMaindivPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private HtmlDiv mUILicenceRenewalTypesPane;
        
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUILicenceRenewalTypeEdit;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_6f291ba0_Table mUITbl_bdGrid_6f291ba0_Table;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UITbl_bdGrid_6f291ba0_Row mUITbl_bdGrid_6f291ba0_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_6f291ba0_Row1 mUITbl_bdGrid_6f291ba0_Row1;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private UITbl_bdGrid_6f291ba0_Cell mUITbl_bdGrid_6f291ba0_Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd20SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd20SeptembePane == null))
                {
                    this.mUIJamesLloyd20SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 ";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd20SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd20SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd20SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nLicence Renewal Typ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6f291ba0_Table : HtmlTable
    {
        
        public UITbl_bdGrid_6f291ba0_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_6f291ba0_d13e_43db_bbea_3afbceda0570";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Licence Renewal Type \r\nCodedUI Licence R";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_6f291ba0_d13e_43db_bbea_3a";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUILicenceRenewaCell
        {
            get
            {
                if ((this.mUICodedUILicenceRenewaCell == null))
                {
                    this.mUICodedUILicenceRenewaCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUILicenceRenewaCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUILicenceRenewaCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUILicenceRenewaCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Licence Renewal";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUILicenceRenewaCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUICodedUILicenceRenewaCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUILicenceRenewaCell;
            }
        }
        
        public HtmlCell UICodedUILicenceRenewaCell1
        {
            get
            {
                if ((this.mUICodedUILicenceRenewaCell1 == null))
                {
                    this.mUICodedUILicenceRenewaCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUILicenceRenewaCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUILicenceRenewaCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUILicenceRenewaCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Licence Renewal EDITED";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUICodedUILicenceRenewaCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUICodedUILicenceRenewaCell1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUILicenceRenewaCell1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUILicenceRenewaCell;
        
        private HtmlCell mUICodedUILicenceRenewaCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6f291ba0_Row : HtmlRow
    {
        
        public UITbl_bdGrid_6f291ba0_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_6f291ba0_d13e_43db_bbea_3afbceda0570_CodedUI Licence Renewal";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Licence Renewal";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6f291ba0_d13e_43db_bbea_3";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6f291ba0_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_6f291ba0_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_6f291ba0_d13e_43db_bbea_3afbceda0570_CodedUI Licence Renewal EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Licence Renewal EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6f291ba0_d13e_43db_bbea_3";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_6f291ba0_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_6f291ba0_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_6f291ba0_d13e_43db_bbea_3afbceda0570_CodedUI Licence Renewal_archiveSt" +
                "atus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_6f291ba0_d13e_43db_bbea_3";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
}
