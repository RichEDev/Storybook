// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.CustomEntityViewsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class CustomEntityViewsUIMap
    {
        
        /// <summary>
        /// AssertSelectedFilters - Use 'AssertSelectedFiltersExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSelectedFilters()
        {
            #region Variable Declarations
            HtmlSpan uISelectedFiltersAccouPane = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument3.UICtl00_contentmain_taPane.UISelectedFiltersAccouPane;
            #endregion

            // Verify that the 'InnerText' property of 'Selected Filters    Account Holder Nam' pane equals 'Selected Filters 
            // 
            //Account Holder Nam...EqualsValue 1Account Holder NameAccount Holder Nam...Does Not EqualValue 1Account Holder NameAccount Holder Nam...LikeValue 1Account Holder NameAccount Holder Nam...Contains Data-Account Holder NameAccount Holder Nam...Does Not Contain Data-Account Holder Name'
            Assert.AreEqual(this.AssertSelectedFiltersExpectedValues.UISelectedFiltersAccouPaneInnerText, uISelectedFiltersAccouPane.InnerText);
        }
        
        /// <summary>
        /// ClickAddAllListItemToSelectedPane
        /// </summary>
        public void ClickAddAllListItemToSelectedPane()
        {
            #region Variable Declarations
            HtmlImage uIStaticicons16plainnaImage = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument16.UISharedadminaecustomeHyperlink1.UIStaticicons16plainnaImage;
            #endregion

            // Click '/static/icons/16/plain/navigate_right2.png' image
            Mouse.Click(uIStaticicons16plainnaImage, new Point(12, 22));
        }
        
        /// <summary>
        /// ClickCancelDeleteViewLink
        /// </summary>
        public void ClickCancelDeleteViewLink()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(58, 8));
        }
        
        /// <summary>
        /// ClickClearSearchOptions
        /// </summary>
        public void ClickClearSearchOptions()
        {
            #region Variable Declarations
            HtmlSpan uIClearsearchoptionsPane = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UIClearsearchoptionsPane;
            #endregion

            // Click 'Clear search options' pane
            Mouse.Click(uIClearsearchoptionsPane, new Point(7, 7));
        }
        
        /// <summary>
        /// ClickColumnsTab
        /// </summary>
        public void ClickColumnsTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIColumnsHyperlink = this.UIGreenLightCustomEntiWindow18.UIGreenLightCustomEntiDocument.UIColumnsHyperlink;
            #endregion

            // Click 'Columns' link
            Mouse.Click(uIColumnsHyperlink, new Point(14, 11));
        }
        
        /// <summary>
        /// ClickConfirmDeleteViewLink
        /// </summary>
        public void ClickConfirmDeleteViewLink()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(51, 15));
        }
        
        /// <summary>
        /// ClickFiltersTab
        /// </summary>
        public void ClickFiltersTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIFiltersHyperlink = this.UIGreenLightCustomEntiWindow18.UIGreenLightCustomEntiDocument.UIFiltersHyperlink;
            #endregion

            // Click 'Filters' link
            Mouse.Click(uIFiltersHyperlink, new Point(32, 4));
        }
        
        /// <summary>
        /// Clickgreenlight
        /// </summary>
        public void Clickgreenlight()
        {
            #region Variable Declarations
            HtmlHyperlink uIGreenlightTextUDFHyperlink = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument6.UIGreenlightTextUDFCustom.UIGreenlightTextUDFHyperlink;
            HtmlDiv uICtl00_contentmain_taPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument6.UICtl00_contentmain_taPane;
            #endregion

            // Click 'Greenlight Text UDF' link
            Mouse.Click(uIGreenlightTextUDFHyperlink, new Point(89, 7));

            // Move 'Greenlight Text UDF' link to 'ctl00_contentmain_tabConViews_tabViewFields_tcFiel...' pane
            uICtl00_contentmain_taPane.EnsureClickable(new Point(128, 144));
            Mouse.StartDragging(uIGreenlightTextUDFHyperlink, new Point(89, 7));
            Mouse.StopDragging(uICtl00_contentmain_taPane, new Point(128, 144));
        }
        
        /// <summary>
        /// ClickIconTab
        /// </summary>
        public void ClickIconTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIIconHyperlink = this.UIGreenLightCustomEntiWindow18.UIGreenLightCustomEntiDocument.UIIconHyperlink;
            #endregion

            // Click 'Icon' link
            Mouse.Click(uIIconHyperlink, new Point(13, 15));
        }
        
        /// <summary>
        /// ClickLeftArrowOnIconTab
        /// </summary>
        public void ClickLeftArrowOnIconTab()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane1 = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UIItemPane1;
            #endregion

            // Click '<' pane
            Mouse.Click(uIItemPane1, new Point(51, 108));
        }
        
        /// <summary>
        /// ClickMagnifyingGlassOnSearchBox
        /// </summary>
        public void ClickMagnifyingGlassOnSearchBox()
        {
            #region Variable Declarations
            HtmlSpan uISearchPane = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UISearchPane;
            #endregion

            // Click 'Search' pane
            Mouse.Click(uISearchPane, new Point(6, 6));
        }
        
        /// <summary>
        /// ClickMoveColumnSelectionDown
        /// </summary>
        public void ClickMoveColumnSelectionDown()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectiondownImage = this.UIGreenLightOT1WindowsWindow.UIGreenLightOT1Document.UICtl00_contentmain_taPane.UIMoveselectiondownImage;
            #endregion

            // Click 'Move selection down' image
            Mouse.Click(uIMoveselectiondownImage, new Point(7, 7));
        }
        
        /// <summary>
        /// ClickMoveColumnSelectionRight
        /// </summary>
        public void ClickMoveColumnSelectionRight()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectiontoSelecImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIMoveselectiontoSelecImage;
            #endregion

            // Click 'Move selection to Selected Fields' image
            Mouse.Click(uIMoveselectiontoSelecImage, new Point(7, 9));
        }
        
        /// <summary>
        /// ClickMoveColumnSelectionUp
        /// </summary>
        public void ClickMoveColumnSelectionUp()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectionupImage = this.UIGreenLightOT1WindowsWindow.UIGreenLightOT1Document.UICtl00_contentmain_taPane.UIMoveselectionupImage;
            #endregion

            // Click 'Move selection up' image
            Mouse.Click(uIMoveselectionupImage, new Point(6, 7));
        }
        
        /// <summary>
        /// ClickMoveFilterSelectionDown
        /// </summary>
        public void ClickMoveFilterSelectionDown()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectiondownImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane1.UIMoveselectiondownImage;
            #endregion

            // Click 'Move selection down' image
            Mouse.Click(uIMoveselectiondownImage, new Point(11, 6));
        }
        
        /// <summary>
        /// ClickMoveFilterSelectionRight
        /// </summary>
        public void ClickMoveFilterSelectionRight()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectiontoSelecImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane1.UIMoveselectiontoSelecImage;
            #endregion

            // Click 'Move selection to Selected Filters' image
            Mouse.Click(uIMoveselectiontoSelecImage, new Point(7, 9));
        }
        
        /// <summary>
        /// ClickMoveFilterSelectionUp
        /// </summary>
        public void ClickMoveFilterSelectionUp()
        {
            #region Variable Declarations
            HtmlImage uIMoveselectionupImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane1.UIMoveselectionupImage;
            #endregion

            // Click 'Move selection up' image
            Mouse.Click(uIMoveselectionupImage, new Point(8, 9));
        }
        
        /// <summary>
        /// ClickNewViewLink
        /// </summary>
        public void ClickNewViewLink()
        {
            #region Variable Declarations
            HtmlHyperlink uINewViewHyperlink = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UINewViewPane.UINewViewHyperlink;
            #endregion

            // Click 'New View' link
            Mouse.Click(uINewViewHyperlink, new Point(30, 13));
        }
        
        /// <summary>
        /// ClickRemoveAllColumns
        /// </summary>
        public void ClickRemoveAllColumns()
        {
            #region Variable Declarations
            HtmlImage uIRemoveallImage = this.UIGreenLightCustomEntiWindow8.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIRemoveallImage;
            #endregion

            // Click 'Remove all' image
            Mouse.Click(uIRemoveallImage, new Point(7, 7));
        }
        
        /// <summary>
        /// ClickRemoveAllFilters
        /// </summary>
        public void ClickRemoveAllFilters()
        {
            #region Variable Declarations
            HtmlImage uIRemoveallImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane1.UIRemoveallImage;
            #endregion

            // Click 'Remove all' image
            Mouse.Click(uIRemoveallImage, new Point(3, 8));
        }
        
        /// <summary>
        /// ClickRemoveAllListItemsFromSelectedListFilter
        /// </summary>
        public void ClickRemoveAllListItemsFromSelectedListFilter()
        {
            #region Variable Declarations
            HtmlImage uIStaticicons16plainnaImage = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument16.UISharedadminaecustomeHyperlink.UIStaticicons16plainnaImage;
            #endregion

            // Click '/static/icons/16/plain/navigate_left2.png' image
            Mouse.Click(uIStaticicons16plainnaImage, new Point(19, 18));
        }
        
        /// <summary>
        /// ClickRemoveColumnSelection
        /// </summary>
        public void ClickRemoveColumnSelection()
        {
            #region Variable Declarations
            HtmlImage uIRemoveselectionImage = this.UIGreenLightCustomEntiWindow8.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIRemoveselectionImage;
            #endregion

            // Click 'Remove selection' image
            Mouse.Click(uIRemoveselectionImage, new Point(6, 6));
        }
        
        /// <summary>
        /// ClickRemoveFilterSelection
        /// </summary>
        public void ClickRemoveFilterSelection()
        {
            #region Variable Declarations
            HtmlImage uIRemoveselectionImage = this.UIGreenLightCustomEntiWindow14.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane1.UIRemoveselectionImage;
            #endregion

            // Click 'Remove selection' image
            Mouse.Click(uIRemoveselectionImage, new Point(6, 8));
        }
        
        /// <summary>
        /// ClickRightArrowOnIconTab
        /// </summary>
        public void ClickRightArrowOnIconTab()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UIItemPane;
            #endregion

            // Click '>' pane
            Mouse.Click(uIItemPane, new Point(39, 127));
        }
        
        /// <summary>
        /// ClickSaveOnListFilterModal
        /// </summary>
        public void ClickSaveOnListFilterModal()
        {
            #region Variable Declarations
            HtmlInputButton uISaveButton = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument10.UISaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(uISaveButton, new Point(15, 17));
        }
        
        /// <summary>
        /// ClickSaveOnViewModal
        /// </summary>
        public void ClickSaveOnViewModal()
        {
            #region Variable Declarations
            HtmlInputButton uISaveButton = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UISaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(uISaveButton, new Point(4, 11));
        }
        
        /// <summary>
        /// ClickSortingTab
        /// </summary>
        public void ClickSortingTab()
        {
            #region Variable Declarations
            HtmlHyperlink uISortingHyperlink = this.UIGreenLightCustomEntiWindow18.UIGreenLightCustomEntiDocument.UISortingHyperlink;
            #endregion

            // Click 'Sorting' link
            Mouse.Click(uISortingHyperlink, new Point(34, 10));
        }
        
        /// <summary>
        /// ClickVehicleEngineType
        /// </summary>
        public void ClickVehicleEngineType()
        {
            #region Variable Declarations
            HtmlHyperlink uIVehicleEngineTypeHyperlink = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument5.UIVehicleEngineTypeCustom.UIVehicleEngineTypeHyperlink;
            #endregion

            // Click 'Vehicle Engine Type' link
            Mouse.Click(uIVehicleEngineTypeHyperlink, new Point(40, 9));
        }
        
        /// <summary>
        /// ClickViewsLink
        /// </summary>
        public void ClickViewsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIViewsHyperlink = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UIViewsHyperlink;
            #endregion

            // Click 'Views' link
            Mouse.Click(uIViewsHyperlink, new Point(28, 6));
        }
        
        /// <summary>
        /// EnterSearchCriteriaOnListFilterModal - Use 'EnterSearchCriteriaOnListFilterModalParams' to pass parameters into this method.
        /// </summary>
        public void EnterSearchCriteriaOnListFilterModal()
        {
            #region Variable Declarations
            HtmlCustom uIStandardlistitem1Custom = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument15.UIDivFilterListPane.UIStandardlistitem1Custom;
            HtmlEdit uIItemEdit = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument15.UIDivFilterListPane.UIItemEdit;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'standard list item 1' custom control at (97, 21)
            Mouse.Hover(uIStandardlistitem1Custom, new Point(97, 21));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click text box
            Mouse.Click(uIItemEdit, new Point(49, 12));

            // Type 'standard list item 1' in text box
            uIItemEdit.Text = this.EnterSearchCriteriaOnListFilterModalParams.UIItemEditText;
        }
        
        /// <summary>
        /// FilterAttributes - Use 'FilterAttributesParams' to pass parameters into this method.
        /// </summary>
        public void FilterAttributes()
        {
            #region Variable Declarations
            HtmlEdit uIDisplayNameEdit = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UIDisplayNameEdit;
            #endregion

            // Type 'standard single text' in 'Display Name' text box
            uIDisplayNameEdit.Text = this.FilterAttributesParams.UIDisplayNameEditText;
        }
        
        /// <summary>
        /// MoveAttributesOutsideOfDropArea
        /// </summary>
        public void MoveAttributesOutsideOfDropArea()
        {
            #region Variable Declarations
            HtmlHyperlink uICurrencyAttributeHyperlink = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument19.UICurrencyAttributeCustom.UICurrencyAttributeHyperlink;
            HtmlDiv uICtl00_contentmain_moPane = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument19.UICtl00_contentmain_moPane;
            HtmlHyperlink uIDateHyperlink = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument19.UIDateCustom.UIDateHyperlink;
            HtmlHyperlink uIDecimalHyperlink = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument19.UIDecimalCustom.UIDecimalHyperlink;
            #endregion

            // Click 'Currency Attribute' link
            Mouse.Click(uICurrencyAttributeHyperlink, new Point(39, 9));

            // Move 'Currency Attribute' link to 'ctl00_contentmain_modview_backgroundElement' pane
            uICtl00_contentmain_moPane.EnsureClickable(new Point(429, 420));
            Mouse.StartDragging(uICurrencyAttributeHyperlink, new Point(39, 9));
            Mouse.StopDragging(uICtl00_contentmain_moPane, new Point(429, 420));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'ctl00_contentmain_modview_backgroundElement' pane at (433, 420)
            Mouse.Hover(uICtl00_contentmain_moPane, new Point(433, 420));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Date' link
            Mouse.Click(uIDateHyperlink, new Point(35, 10));

            // Move 'Date' link to 'ctl00_contentmain_modview_backgroundElement' pane
            uICtl00_contentmain_moPane.EnsureClickable(new Point(433, 457));
            Mouse.StartDragging(uIDateHyperlink, new Point(35, 9));
            Mouse.StopDragging(uICtl00_contentmain_moPane, new Point(433, 457));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'ctl00_contentmain_modview_backgroundElement' pane at (502, 463)
            Mouse.Hover(uICtl00_contentmain_moPane, new Point(502, 463));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Decimal' link
            Mouse.Click(uIDecimalHyperlink, new Point(32, 9));

            // Move 'Decimal' link to 'ctl00_contentmain_modview_backgroundElement' pane
            uICtl00_contentmain_moPane.EnsureClickable(new Point(430, 520));
            Mouse.StartDragging(uIDecimalHyperlink, new Point(37, 9));
            Mouse.StopDragging(uICtl00_contentmain_moPane, new Point(430, 520));
        }
        
        /// <summary>
        /// MoveAttributesOutsideOfDropAreaReplay
        /// </summary>
        public void MoveAttributesOutsideOfDropAreaReplay()
        {
            #region Variable Declarations
            HtmlHyperlink uICurrencyAttributeHyperlink = this.UIGreenLightSetupTestiWindow.UIGreenLightSetupTestiDocument.UICurrencyAttributeCustom.UICurrencyAttributeHyperlink;
            HtmlDiv uIItemPane = this.UIGreenLightSetupTestiWindow.UIGreenLightSetupTestiDocument.UICtl00_contentmain_pnPane.UIItemPane;
            #endregion

            // Move 'Currency Attribute' link to pane
            uIItemPane.EnsureClickable(new Point(308, 29));
            Mouse.StartDragging(uICurrencyAttributeHyperlink, new Point(64, 15));
            Mouse.StopDragging(uIItemPane, new Point(308, 29));
        }
        
        /// <summary>
        /// MoveListItemFromFieldsToSelectedFieldsInListFilterModal
        /// </summary>
        public void MoveListItemFromFieldsToSelectedFieldsInListFilterModal()
        {
            #region Variable Declarations
            HtmlCustom uIStandardlistitem4Custom = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument18.UIDivFilterListPane.UIStandardlistitem4Custom;
            HtmlCustom uIStandardlistitem2Custom = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument18.UIDivFilterListPane.UIStandardlistitem2Custom;
            HtmlCustom uIStandardlistitem1Custom = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument18.UIDivFilterListPane.UIStandardlistitem1Custom;
            HtmlCustom uIStandardlistitem1Custom1 = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument18.UIDivFilterListPane.UIStandardlistitem1Custom1;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'standard list item 4' custom control at (41, 3)
            Mouse.Hover(uIStandardlistitem4Custom, new Point(41, 3));

            // Mouse hover 'standard list item 2' custom control at (46, 13)
            Mouse.Hover(uIStandardlistitem2Custom, new Point(46, 13));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Move 'standard list item 1' custom control to 'standard list item 1' custom control
            uIStandardlistitem1Custom1.EnsureClickable(new Point(50, 12));
            Mouse.StartDragging(uIStandardlistitem1Custom, new Point(50, 12));
            Mouse.StopDragging(uIStandardlistitem1Custom1, new Point(50, 12));
        }
        
        /// <summary>
        /// PressCancelOnViewFilterModal
        /// </summary>
        public void PressCancelOnViewFilterModal()
        {
            #region Variable Declarations
            HtmlInputButton uICancelButton = this.UIGreenLightCustomEntiWindow12.UIGreenLightCustomEntiDocument.UICancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(uICancelButton, new Point(45, 20));
        }
        
        /// <summary>
        /// PressCancelOnViewModal
        /// </summary>
        public void PressCancelOnViewModal()
        {
            #region Variable Declarations
            HtmlInputButton uICancelButton = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UICancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(uICancelButton, new Point(39, 12));
        }
        
        /// <summary>
        /// PressCloseOnMessageModal
        /// </summary>
        public void PressCloseOnMessageModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(38, 18));
        }
        
        /// <summary>
        /// PressSaveOnViewFilterModal
        /// </summary>
        public void PressSaveOnViewFilterModal()
        {
            #region Variable Declarations
            HtmlInputButton uISaveButton = this.UIGreenLightCustomEntiWindow12.UIGreenLightCustomEntiDocument.UISaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(uISaveButton, new Point(37, 15));
        }
        
        /// <summary>
        /// PressSaveOnViewModal
        /// </summary>
        public void PressSaveOnViewModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_contentmain_moPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UICtl00_contentmain_moPane;
            HtmlInputButton uISaveButton1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UISaveButton1;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'ctl00_contentmain_modview_backgroundElement' pane at (503, 581)
            Mouse.Hover(uICtl00_contentmain_moPane, new Point(503, 581));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'save' button
            Mouse.Click(uISaveButton1, new Point(28, 21));
        }
        
        /// <summary>
        /// ValidateAddFormDropDownLabel - Use 'ValidateAddFormDropDownLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddFormDropDownLabel()
        {
            #region Variable Declarations
            HtmlLabel uIAddformLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIAddformLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Add form' label equals 'Add form'
            Assert.AreEqual(this.ValidateAddFormDropDownLabelExpectedValues.UIAddformLabelDisplayText, uIAddformLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateAllowApprovalTickBoxLabel - Use 'ValidateAllowApprovalTickBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAllowApprovalTickBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIAllowapprovalLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIAllowapprovalLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Allow approval' label equals 'Allow approval'
            Assert.AreEqual(this.ValidateAllowApprovalTickBoxLabelExpectedValues.UIAllowapprovalLabelDisplayText, uIAllowapprovalLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateAllowDeleteTickBoxLabel - Use 'ValidateAllowDeleteTickBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAllowDeleteTickBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIAllowdeleteLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIAllowdeleteLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Allow delete' label equals 'Allow delete'
            Assert.AreEqual(this.ValidateAllowDeleteTickBoxLabelExpectedValues.UIAllowdeleteLabelDisplayText, uIAllowdeleteLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateDate1TextBoxLabel - Use 'ValidateDate1TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDate1TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Date 1*'
            Assert.AreEqual(this.ValidateDate1TextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateDate2TextBoxLabel - Use 'ValidateDate2TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDate2TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uINumber2Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UINumber2Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Number 2*' label equals 'Date 2*'
            Assert.AreEqual(this.ValidateDate2TextBoxLabelExpectedValues.UINumber2LabelDisplayText, uINumber2Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateDescriptionLabel - Use 'ValidateDescriptionLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDescriptionLabel()
        {
            #region Variable Declarations
            HtmlLabel uIDescriptionLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIDescriptionLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Description' label equals 'Description'
            Assert.AreEqual(this.ValidateDescriptionLabelExpectedValues.UIDescriptionLabelDisplayText, uIDescriptionLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateEditFormDropDownLabel - Use 'ValidateEditFormDropDownLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditFormDropDownLabel()
        {
            #region Variable Declarations
            HtmlLabel uIEditformLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIEditformLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Edit form' label equals 'Edit form'
            Assert.AreEqual(this.ValidateEditFormDropDownLabelExpectedValues.UIEditformLabelDisplayText, uIEditformLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateFilterCriteriaDropdownLabel - Use 'ValidateFilterCriteriaDropdownLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFilterCriteriaDropdownLabel()
        {
            #region Variable Declarations
            HtmlLabel uIFiltercriteriaLabel = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UIFiltercriteriaLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Filter criteria*' label equals 'Filter criteria*'
            Assert.AreEqual(this.ValidateFilterCriteriaDropdownLabelExpectedValues.UIFiltercriteriaLabelDisplayText, uIFiltercriteriaLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateFiltersAvailableFieldsSectionHeader - Use 'ValidateFiltersAvailableFieldsSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFiltersAvailableFieldsSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uIAvailableFieldsPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_taPane1.UIAvailableFieldsPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Available Fields' pane equals 'Available Fields '
            Assert.AreEqual(this.ValidateFiltersAvailableFieldsSectionHeaderExpectedValues.UIAvailableFieldsPaneDisplayText, uIAvailableFieldsPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateFiltersSectionComment - Use 'ValidateFiltersSectionCommentExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFiltersSectionComment()
        {
            #region Variable Declarations
            HtmlDiv uIUsethiseditortocreatPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_taPane.UIUsethiseditortocreatPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Use this editor to create filters that w' pane equals 'Use this editor to create filters that will restrict the number of records returned for the view.'
            Assert.AreEqual(this.ValidateFiltersSectionCommentExpectedValues.UIUsethiseditortocreatPaneDisplayText, uIUsethiseditortocreatPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateFiltersSectionHeader - Use 'ValidateFiltersSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFiltersSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uIFiltersPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_taPane.UIFiltersPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Filters' pane equals 'Filters'
            Assert.AreEqual(this.ValidateFiltersSectionHeaderExpectedValues.UIFiltersPaneDisplayText, uIFiltersPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateFiltersSelectedFiltersSectionHeader - Use 'ValidateFiltersSelectedFiltersSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFiltersSelectedFiltersSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uISelectedFiltersPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_taPane1.UISelectedFiltersPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Selected Filters' pane equals 'Selected Filters '
            Assert.AreEqual(this.ValidateFiltersSelectedFiltersSectionHeaderExpectedValues.UISelectedFiltersPaneDisplayText, uISelectedFiltersPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateGeneralDetailsSectionHeader - Use 'ValidateGeneralDetailsSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateGeneralDetailsSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uIGeneralDetailsPane = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIGeneralDetailsPane;
            #endregion

            // Verify that the 'DisplayText' property of 'General Details' pane equals 'General Details'
            Assert.AreEqual(this.ValidateGeneralDetailsSectionHeaderExpectedValues.UIGeneralDetailsPaneDisplayText, uIGeneralDetailsPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateMenuDescriptionLabel - Use 'ValidateMenuDescriptionLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMenuDescriptionLabel()
        {
            #region Variable Declarations
            HtmlLabel uIMenuDescriptionLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIMenuDescriptionLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Menu Description' label equals 'Menu description'
            Assert.AreEqual(this.ValidateMenuDescriptionLabelExpectedValues.UIMenuDescriptionLabelDisplayText, uIMenuDescriptionLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateMenuDisplayOptionsSectionHeader - Use 'ValidateMenuDisplayOptionsSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMenuDisplayOptionsSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uIMenuDisplayOptionsPane = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIMenuDisplayOptionsPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Menu Display Options' pane equals 'Menu Display Options'
            Assert.AreEqual(this.ValidateMenuDisplayOptionsSectionHeaderExpectedValues.UIMenuDisplayOptionsPaneDisplayText, uIMenuDisplayOptionsPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateMenuDropDownLabel - Use 'ValidateMenuDropDownLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMenuDropDownLabel()
        {
            #region Variable Declarations
            HtmlLabel uIMenuLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIMenuLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'Menu' label equals 'Menu'
            Assert.AreEqual(this.ValidateMenuDropDownLabelExpectedValues.UIMenuLabelDisplayText, uIMenuLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateMessageModal - Use 'ValidateMessageModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMessageModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a name for this view.
            //Please select a Menu for the view.'
            Assert.AreEqual(this.ValidateMessageModalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateNewViewModalHeader - Use 'ValidateNewViewModalHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNewViewModalHeader()
        {
            #region Variable Declarations
            HtmlDiv uINewViewPane = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UINewViewPane;
            #endregion

            // Verify that the 'DisplayText' property of 'New View' pane equals 'New View'
            Assert.AreEqual(this.ValidateNewViewModalHeaderExpectedValues.UINewViewPaneDisplayText, uINewViewPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumber1TextBoxLabel - Use 'ValidateNumber1TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumber1TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number 1*'
            Assert.AreEqual(this.ValidateNumber1TextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumber2TextBoxLabel - Use 'ValidateNumber2TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumber2TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uINumber2Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UINumber2Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Number 2*' label equals 'Number 2*'
            Assert.AreEqual(this.ValidateNumber2TextBoxLabelExpectedValues.UINumber2LabelDisplayText, uINumber2Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumberOfDaysTextBoxLabel - Use 'ValidateNumberOfDaysTextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumberOfDaysTextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of days*'
            Assert.AreEqual(this.ValidateNumberOfDaysTextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumberOfMonthsTextBoxLabel - Use 'ValidateNumberOfMonthsTextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumberOfMonthsTextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of months*'
            Assert.AreEqual(this.ValidateNumberOfMonthsTextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumberOfWeeksTextBoxLabel - Use 'ValidateNumberOfWeeksTextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumberOfWeeksTextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of weeks*'
            Assert.AreEqual(this.ValidateNumberOfWeeksTextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateNumberOfYearsTextBoxLabel - Use 'ValidateNumberOfYearsTextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNumberOfYearsTextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of years*'
            Assert.AreEqual(this.ValidateNumberOfYearsTextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateOptionsSectionHeader - Use 'ValidateOptionsSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateOptionsSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uIOptionsPane = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UICtl00_contentmain_taPane.UIOptionsPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Options' pane equals 'Options'
            Assert.AreEqual(this.ValidateOptionsSectionHeaderExpectedValues.UIOptionsPaneDisplayText, uIOptionsPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateSelectedFiltersSectionHeader - Use 'ValidateSelectedFiltersSectionHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSelectedFiltersSectionHeader()
        {
            #region Variable Declarations
            HtmlDiv uISelectedFiltersPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_taPane1.UISelectedFiltersPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Selected Filters' pane equals 'Selected Filters '
            Assert.AreEqual(this.ValidateSelectedFiltersSectionHeaderExpectedValues.UISelectedFiltersPaneDisplayText, uISelectedFiltersPane.DisplayText);
        }
        
        /// <summary>
        /// ValidateSelectedIcon - Use 'ValidateSelectedIconExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSelectedIcon()
        {
            #region Variable Declarations
            HtmlImage uIStaticicons48plainwiImage = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UISelectedIconSpanPane.UIStaticicons48plainwiImage;
            #endregion

            // Verify that the 'FriendlyName' property of '/static/icons/48/plain/window_dialog.png' image equals '/static/icons/48/plain/window_dialog.png'
            Assert.AreEqual(this.ValidateSelectedIconExpectedValues.UIStaticicons48plainwiImageFriendlyName, uIStaticicons48plainwiImage.FriendlyName, "Selected Icons are not the same");
        }
        
        /// <summary>
        /// ValidateSelectedIconText - Use 'ValidateSelectedIconTextExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSelectedIconText()
        {
            #region Variable Declarations
            HtmlSpan uIWindow_dialogpngPane = this.UIGreenLightCustomEntiWindow17.UIGreenLightCustomEntiDocument.UIWindow_dialogpngPane;
            #endregion

            // Verify that the 'DisplayText' property of 'window_dialog.png' pane equals 'window_dialog.png'
            Assert.AreEqual(this.ValidateSelectedIconTextExpectedValues.UIWindow_dialogpngPaneDisplayText, uIWindow_dialogpngPane.DisplayText, "Selected Icon text is not matching the expected one");
        }
        
        /// <summary>
        /// ValidateSortingTabDisabled - Use 'ValidateSortingTabDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSortingTabDisabled()
        {
            #region Variable Declarations
            HtmlSpan uISortingPane = this.UIGreenLightCustomEntiWindow2.UIGreenLightCustomEntiDocument.UISortingPane;
            #endregion

            // Verify that the 'ControlDefinition' property of 'Sorting' pane equals 'id=ctl00_contentmain_tabConViews_tabViewSort_tab class=ajax__tab_disabled'
            Assert.AreEqual(this.ValidateSortingTabDisabledExpectedValues.UISortingPaneControlDefinition, uISortingPane.ControlDefinition);
        }
        
        /// <summary>
        /// ValidateSortingTabEnabled - Use 'ValidateSortingTabEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSortingTabEnabled()
        {
            #region Variable Declarations
            HtmlSpan uISortingPane = this.UIGreenLightCustomEntiWindow2.UIGreenLightCustomEntiDocument.UISortingPane;
            #endregion

            // Verify that the 'ControlDefinition' property of 'Sorting' pane equals 'id=ctl00_contentmain_tabConViews_tabViewSort_tab'
            Assert.AreEqual(this.ValidateSortingTabEnabledExpectedValues.UISortingPaneControlDefinition, uISortingPane.ControlDefinition);
        }
        
        /// <summary>
        /// ValidateTime1TextBoxLabel - Use 'ValidateTime1TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTime1TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Time 1*'
            Assert.AreEqual(this.ValidateTime1TextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateTime2TextBoxLabel - Use 'ValidateTime2TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTime2TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uINumber2Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UINumber2Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Number 2*' label equals 'Time 2*'
            Assert.AreEqual(this.ValidateTime2TextBoxLabelExpectedValues.UINumber2LabelDisplayText, uINumber2Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateValue1TextBoxLabel - Use 'ValidateValue1TextBoxLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateValue1TextBoxLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Value 1*'
            Assert.AreEqual(this.ValidateValue1TextBoxLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        /// <summary>
        /// ValidateViewNameLabel - Use 'ValidateViewNameLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateViewNameLabel()
        {
            #region Variable Declarations
            HtmlLabel uIViewnameLabel = this.UIGreenLightCustomEntiWindow3.UIGreenLightCustomEntiDocument.UIViewnameLabel;
            #endregion

            // Verify that the 'DisplayText' property of 'View name*' label equals 'View name*'
            Assert.AreEqual(this.ValidateViewNameLabelExpectedValues.UIViewnameLabelDisplayText, uIViewnameLabel.DisplayText);
        }
        
        /// <summary>
        /// ValidateYesNoDropDownLabel - Use 'ValidateYesNoDropDownLabelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateYesNoDropDownLabel()
        {
            #region Variable Declarations
            HtmlLabel uIValue1Label = this.UIGreenLightCustomEntiWindow16.UIGreenLightCustomEntiDocument20.UIValue1Label;
            #endregion

            // Verify that the 'DisplayText' property of 'Value 1*' label equals 'Yes or No*'
            Assert.AreEqual(this.ValidateYesNoDropDownLabelExpectedValues.UIValue1LabelDisplayText, uIValue1Label.DisplayText);
        }
        
        #region Properties
        public virtual AssertSelectedFiltersExpectedValues AssertSelectedFiltersExpectedValues
        {
            get
            {
                if ((this.mAssertSelectedFiltersExpectedValues == null))
                {
                    this.mAssertSelectedFiltersExpectedValues = new AssertSelectedFiltersExpectedValues();
                }
                return this.mAssertSelectedFiltersExpectedValues;
            }
        }
        
        public virtual EnterSearchCriteriaOnListFilterModalParams EnterSearchCriteriaOnListFilterModalParams
        {
            get
            {
                if ((this.mEnterSearchCriteriaOnListFilterModalParams == null))
                {
                    this.mEnterSearchCriteriaOnListFilterModalParams = new EnterSearchCriteriaOnListFilterModalParams();
                }
                return this.mEnterSearchCriteriaOnListFilterModalParams;
            }
        }
        
        public virtual FilterAttributesParams FilterAttributesParams
        {
            get
            {
                if ((this.mFilterAttributesParams == null))
                {
                    this.mFilterAttributesParams = new FilterAttributesParams();
                }
                return this.mFilterAttributesParams;
            }
        }
        
        public virtual ValidateAddFormDropDownLabelExpectedValues ValidateAddFormDropDownLabelExpectedValues
        {
            get
            {
                if ((this.mValidateAddFormDropDownLabelExpectedValues == null))
                {
                    this.mValidateAddFormDropDownLabelExpectedValues = new ValidateAddFormDropDownLabelExpectedValues();
                }
                return this.mValidateAddFormDropDownLabelExpectedValues;
            }
        }
        
        public virtual ValidateAllowApprovalTickBoxLabelExpectedValues ValidateAllowApprovalTickBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateAllowApprovalTickBoxLabelExpectedValues == null))
                {
                    this.mValidateAllowApprovalTickBoxLabelExpectedValues = new ValidateAllowApprovalTickBoxLabelExpectedValues();
                }
                return this.mValidateAllowApprovalTickBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateAllowDeleteTickBoxLabelExpectedValues ValidateAllowDeleteTickBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateAllowDeleteTickBoxLabelExpectedValues == null))
                {
                    this.mValidateAllowDeleteTickBoxLabelExpectedValues = new ValidateAllowDeleteTickBoxLabelExpectedValues();
                }
                return this.mValidateAllowDeleteTickBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateDate1TextBoxLabelExpectedValues ValidateDate1TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateDate1TextBoxLabelExpectedValues == null))
                {
                    this.mValidateDate1TextBoxLabelExpectedValues = new ValidateDate1TextBoxLabelExpectedValues();
                }
                return this.mValidateDate1TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateDate2TextBoxLabelExpectedValues ValidateDate2TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateDate2TextBoxLabelExpectedValues == null))
                {
                    this.mValidateDate2TextBoxLabelExpectedValues = new ValidateDate2TextBoxLabelExpectedValues();
                }
                return this.mValidateDate2TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateDescriptionLabelExpectedValues ValidateDescriptionLabelExpectedValues
        {
            get
            {
                if ((this.mValidateDescriptionLabelExpectedValues == null))
                {
                    this.mValidateDescriptionLabelExpectedValues = new ValidateDescriptionLabelExpectedValues();
                }
                return this.mValidateDescriptionLabelExpectedValues;
            }
        }
        
        public virtual ValidateEditFormDropDownLabelExpectedValues ValidateEditFormDropDownLabelExpectedValues
        {
            get
            {
                if ((this.mValidateEditFormDropDownLabelExpectedValues == null))
                {
                    this.mValidateEditFormDropDownLabelExpectedValues = new ValidateEditFormDropDownLabelExpectedValues();
                }
                return this.mValidateEditFormDropDownLabelExpectedValues;
            }
        }
        
        public virtual ValidateFilterCriteriaDropdownLabelExpectedValues ValidateFilterCriteriaDropdownLabelExpectedValues
        {
            get
            {
                if ((this.mValidateFilterCriteriaDropdownLabelExpectedValues == null))
                {
                    this.mValidateFilterCriteriaDropdownLabelExpectedValues = new ValidateFilterCriteriaDropdownLabelExpectedValues();
                }
                return this.mValidateFilterCriteriaDropdownLabelExpectedValues;
            }
        }
        
        public virtual ValidateFiltersAvailableFieldsSectionHeaderExpectedValues ValidateFiltersAvailableFieldsSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateFiltersAvailableFieldsSectionHeaderExpectedValues == null))
                {
                    this.mValidateFiltersAvailableFieldsSectionHeaderExpectedValues = new ValidateFiltersAvailableFieldsSectionHeaderExpectedValues();
                }
                return this.mValidateFiltersAvailableFieldsSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateFiltersSectionCommentExpectedValues ValidateFiltersSectionCommentExpectedValues
        {
            get
            {
                if ((this.mValidateFiltersSectionCommentExpectedValues == null))
                {
                    this.mValidateFiltersSectionCommentExpectedValues = new ValidateFiltersSectionCommentExpectedValues();
                }
                return this.mValidateFiltersSectionCommentExpectedValues;
            }
        }
        
        public virtual ValidateFiltersSectionHeaderExpectedValues ValidateFiltersSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateFiltersSectionHeaderExpectedValues == null))
                {
                    this.mValidateFiltersSectionHeaderExpectedValues = new ValidateFiltersSectionHeaderExpectedValues();
                }
                return this.mValidateFiltersSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateFiltersSelectedFiltersSectionHeaderExpectedValues ValidateFiltersSelectedFiltersSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateFiltersSelectedFiltersSectionHeaderExpectedValues == null))
                {
                    this.mValidateFiltersSelectedFiltersSectionHeaderExpectedValues = new ValidateFiltersSelectedFiltersSectionHeaderExpectedValues();
                }
                return this.mValidateFiltersSelectedFiltersSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateGeneralDetailsSectionHeaderExpectedValues ValidateGeneralDetailsSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateGeneralDetailsSectionHeaderExpectedValues == null))
                {
                    this.mValidateGeneralDetailsSectionHeaderExpectedValues = new ValidateGeneralDetailsSectionHeaderExpectedValues();
                }
                return this.mValidateGeneralDetailsSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateMenuDescriptionLabelExpectedValues ValidateMenuDescriptionLabelExpectedValues
        {
            get
            {
                if ((this.mValidateMenuDescriptionLabelExpectedValues == null))
                {
                    this.mValidateMenuDescriptionLabelExpectedValues = new ValidateMenuDescriptionLabelExpectedValues();
                }
                return this.mValidateMenuDescriptionLabelExpectedValues;
            }
        }
        
        public virtual ValidateMenuDisplayOptionsSectionHeaderExpectedValues ValidateMenuDisplayOptionsSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateMenuDisplayOptionsSectionHeaderExpectedValues == null))
                {
                    this.mValidateMenuDisplayOptionsSectionHeaderExpectedValues = new ValidateMenuDisplayOptionsSectionHeaderExpectedValues();
                }
                return this.mValidateMenuDisplayOptionsSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateMenuDropDownLabelExpectedValues ValidateMenuDropDownLabelExpectedValues
        {
            get
            {
                if ((this.mValidateMenuDropDownLabelExpectedValues == null))
                {
                    this.mValidateMenuDropDownLabelExpectedValues = new ValidateMenuDropDownLabelExpectedValues();
                }
                return this.mValidateMenuDropDownLabelExpectedValues;
            }
        }
        
        public virtual ValidateMessageModalExpectedValues ValidateMessageModalExpectedValues
        {
            get
            {
                if ((this.mValidateMessageModalExpectedValues == null))
                {
                    this.mValidateMessageModalExpectedValues = new ValidateMessageModalExpectedValues();
                }
                return this.mValidateMessageModalExpectedValues;
            }
        }
        
        public virtual ValidateNewViewModalHeaderExpectedValues ValidateNewViewModalHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateNewViewModalHeaderExpectedValues == null))
                {
                    this.mValidateNewViewModalHeaderExpectedValues = new ValidateNewViewModalHeaderExpectedValues();
                }
                return this.mValidateNewViewModalHeaderExpectedValues;
            }
        }
        
        public virtual ValidateNumber1TextBoxLabelExpectedValues ValidateNumber1TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumber1TextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumber1TextBoxLabelExpectedValues = new ValidateNumber1TextBoxLabelExpectedValues();
                }
                return this.mValidateNumber1TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateNumber2TextBoxLabelExpectedValues ValidateNumber2TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumber2TextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumber2TextBoxLabelExpectedValues = new ValidateNumber2TextBoxLabelExpectedValues();
                }
                return this.mValidateNumber2TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateNumberOfDaysTextBoxLabelExpectedValues ValidateNumberOfDaysTextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumberOfDaysTextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumberOfDaysTextBoxLabelExpectedValues = new ValidateNumberOfDaysTextBoxLabelExpectedValues();
                }
                return this.mValidateNumberOfDaysTextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateNumberOfMonthsTextBoxLabelExpectedValues ValidateNumberOfMonthsTextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumberOfMonthsTextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumberOfMonthsTextBoxLabelExpectedValues = new ValidateNumberOfMonthsTextBoxLabelExpectedValues();
                }
                return this.mValidateNumberOfMonthsTextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateNumberOfWeeksTextBoxLabelExpectedValues ValidateNumberOfWeeksTextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumberOfWeeksTextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumberOfWeeksTextBoxLabelExpectedValues = new ValidateNumberOfWeeksTextBoxLabelExpectedValues();
                }
                return this.mValidateNumberOfWeeksTextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateNumberOfYearsTextBoxLabelExpectedValues ValidateNumberOfYearsTextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateNumberOfYearsTextBoxLabelExpectedValues == null))
                {
                    this.mValidateNumberOfYearsTextBoxLabelExpectedValues = new ValidateNumberOfYearsTextBoxLabelExpectedValues();
                }
                return this.mValidateNumberOfYearsTextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateOptionsSectionHeaderExpectedValues ValidateOptionsSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateOptionsSectionHeaderExpectedValues == null))
                {
                    this.mValidateOptionsSectionHeaderExpectedValues = new ValidateOptionsSectionHeaderExpectedValues();
                }
                return this.mValidateOptionsSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateSelectedFiltersSectionHeaderExpectedValues ValidateSelectedFiltersSectionHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateSelectedFiltersSectionHeaderExpectedValues == null))
                {
                    this.mValidateSelectedFiltersSectionHeaderExpectedValues = new ValidateSelectedFiltersSectionHeaderExpectedValues();
                }
                return this.mValidateSelectedFiltersSectionHeaderExpectedValues;
            }
        }
        
        public virtual ValidateSelectedIconExpectedValues ValidateSelectedIconExpectedValues
        {
            get
            {
                if ((this.mValidateSelectedIconExpectedValues == null))
                {
                    this.mValidateSelectedIconExpectedValues = new ValidateSelectedIconExpectedValues();
                }
                return this.mValidateSelectedIconExpectedValues;
            }
        }
        
        public virtual ValidateSelectedIconTextExpectedValues ValidateSelectedIconTextExpectedValues
        {
            get
            {
                if ((this.mValidateSelectedIconTextExpectedValues == null))
                {
                    this.mValidateSelectedIconTextExpectedValues = new ValidateSelectedIconTextExpectedValues();
                }
                return this.mValidateSelectedIconTextExpectedValues;
            }
        }
        
        public virtual ValidateSortingTabDisabledExpectedValues ValidateSortingTabDisabledExpectedValues
        {
            get
            {
                if ((this.mValidateSortingTabDisabledExpectedValues == null))
                {
                    this.mValidateSortingTabDisabledExpectedValues = new ValidateSortingTabDisabledExpectedValues();
                }
                return this.mValidateSortingTabDisabledExpectedValues;
            }
        }
        
        public virtual ValidateSortingTabEnabledExpectedValues ValidateSortingTabEnabledExpectedValues
        {
            get
            {
                if ((this.mValidateSortingTabEnabledExpectedValues == null))
                {
                    this.mValidateSortingTabEnabledExpectedValues = new ValidateSortingTabEnabledExpectedValues();
                }
                return this.mValidateSortingTabEnabledExpectedValues;
            }
        }
        
        public virtual ValidateTime1TextBoxLabelExpectedValues ValidateTime1TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateTime1TextBoxLabelExpectedValues == null))
                {
                    this.mValidateTime1TextBoxLabelExpectedValues = new ValidateTime1TextBoxLabelExpectedValues();
                }
                return this.mValidateTime1TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateTime2TextBoxLabelExpectedValues ValidateTime2TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateTime2TextBoxLabelExpectedValues == null))
                {
                    this.mValidateTime2TextBoxLabelExpectedValues = new ValidateTime2TextBoxLabelExpectedValues();
                }
                return this.mValidateTime2TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateValue1TextBoxLabelExpectedValues ValidateValue1TextBoxLabelExpectedValues
        {
            get
            {
                if ((this.mValidateValue1TextBoxLabelExpectedValues == null))
                {
                    this.mValidateValue1TextBoxLabelExpectedValues = new ValidateValue1TextBoxLabelExpectedValues();
                }
                return this.mValidateValue1TextBoxLabelExpectedValues;
            }
        }
        
        public virtual ValidateViewNameLabelExpectedValues ValidateViewNameLabelExpectedValues
        {
            get
            {
                if ((this.mValidateViewNameLabelExpectedValues == null))
                {
                    this.mValidateViewNameLabelExpectedValues = new ValidateViewNameLabelExpectedValues();
                }
                return this.mValidateViewNameLabelExpectedValues;
            }
        }
        
        public virtual ValidateYesNoDropDownLabelExpectedValues ValidateYesNoDropDownLabelExpectedValues
        {
            get
            {
                if ((this.mValidateYesNoDropDownLabelExpectedValues == null))
                {
                    this.mValidateYesNoDropDownLabelExpectedValues = new ValidateYesNoDropDownLabelExpectedValues();
                }
                return this.mValidateYesNoDropDownLabelExpectedValues;
            }
        }
        
        public UIGreenLightCustomEntiWindow UIGreenLightCustomEntiWindow
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow == null))
                {
                    this.mUIGreenLightCustomEntiWindow = new UIGreenLightCustomEntiWindow();
                }
                return this.mUIGreenLightCustomEntiWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIGreenLightAdministrationViewsWindow UIGreenLightAdministrationViewsWindow
        {
            get
            {
                if ((this.mUIGreenLightAdministrationViewsWindow == null))
                {
                    this.mUIGreenLightAdministrationViewsWindow = new UIGreenLightAdministrationViewsWindow();
                }
                return this.mUIGreenLightAdministrationViewsWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow1 UIGreenLightCustomEntiWindow1
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow1 == null))
                {
                    this.mUIGreenLightCustomEntiWindow1 = new UIGreenLightCustomEntiWindow1();
                }
                return this.mUIGreenLightCustomEntiWindow1;
            }
        }
        
        public UIGreenLightCustomEntiWindow2 UIGreenLightCustomEntiWindow2
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow2 == null))
                {
                    this.mUIGreenLightCustomEntiWindow2 = new UIGreenLightCustomEntiWindow2();
                }
                return this.mUIGreenLightCustomEntiWindow2;
            }
        }
        
        public UIGreenLightCustomEntiWindow3 UIGreenLightCustomEntiWindow3
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow3 == null))
                {
                    this.mUIGreenLightCustomEntiWindow3 = new UIGreenLightCustomEntiWindow3();
                }
                return this.mUIGreenLightCustomEntiWindow3;
            }
        }
        
        public UIGreenLightCustomEntiWindow4 UIGreenLightCustomEntiWindow4
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow4 == null))
                {
                    this.mUIGreenLightCustomEntiWindow4 = new UIGreenLightCustomEntiWindow4();
                }
                return this.mUIGreenLightCustomEntiWindow4;
            }
        }
        
        public UIGreenLightCustomEntiWindow5 UIGreenLightCustomEntiWindow5
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow5 == null))
                {
                    this.mUIGreenLightCustomEntiWindow5 = new UIGreenLightCustomEntiWindow5();
                }
                return this.mUIGreenLightCustomEntiWindow5;
            }
        }
        
        public UIGreenLightCustomEntiWindow6 UIGreenLightCustomEntiWindow6
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow6 == null))
                {
                    this.mUIGreenLightCustomEntiWindow6 = new UIGreenLightCustomEntiWindow6();
                }
                return this.mUIGreenLightCustomEntiWindow6;
            }
        }
        
        public UIGreenLightCustomEntiWindow7 UIGreenLightCustomEntiWindow7
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow7 == null))
                {
                    this.mUIGreenLightCustomEntiWindow7 = new UIGreenLightCustomEntiWindow7();
                }
                return this.mUIGreenLightCustomEntiWindow7;
            }
        }
        
        public UIGreenLightCustomEntiWindow8 UIGreenLightCustomEntiWindow8
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow8 == null))
                {
                    this.mUIGreenLightCustomEntiWindow8 = new UIGreenLightCustomEntiWindow8();
                }
                return this.mUIGreenLightCustomEntiWindow8;
            }
        }
        
        public UIGreenLightOT1WindowsWindow UIGreenLightOT1WindowsWindow
        {
            get
            {
                if ((this.mUIGreenLightOT1WindowsWindow == null))
                {
                    this.mUIGreenLightOT1WindowsWindow = new UIGreenLightOT1WindowsWindow();
                }
                return this.mUIGreenLightOT1WindowsWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow9 UIGreenLightCustomEntiWindow9
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow9 == null))
                {
                    this.mUIGreenLightCustomEntiWindow9 = new UIGreenLightCustomEntiWindow9();
                }
                return this.mUIGreenLightCustomEntiWindow9;
            }
        }
        
        public UIGreenLightCustomEntiWindow10 UIGreenLightCustomEntiWindow10
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow10 == null))
                {
                    this.mUIGreenLightCustomEntiWindow10 = new UIGreenLightCustomEntiWindow10();
                }
                return this.mUIGreenLightCustomEntiWindow10;
            }
        }
        
        public UIGreenLightCustomEntiWindow11 UIGreenLightCustomEntiWindow11
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow11 == null))
                {
                    this.mUIGreenLightCustomEntiWindow11 = new UIGreenLightCustomEntiWindow11();
                }
                return this.mUIGreenLightCustomEntiWindow11;
            }
        }
        
        public UIGreenLightCustomEntiWindow12 UIGreenLightCustomEntiWindow12
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow12 == null))
                {
                    this.mUIGreenLightCustomEntiWindow12 = new UIGreenLightCustomEntiWindow12();
                }
                return this.mUIGreenLightCustomEntiWindow12;
            }
        }
        
        public UIGreenLightCustomEntiWindow13 UIGreenLightCustomEntiWindow13
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow13 == null))
                {
                    this.mUIGreenLightCustomEntiWindow13 = new UIGreenLightCustomEntiWindow13();
                }
                return this.mUIGreenLightCustomEntiWindow13;
            }
        }
        
        public UIGreenLightMyCEWindowWindow UIGreenLightMyCEWindowWindow
        {
            get
            {
                if ((this.mUIGreenLightMyCEWindowWindow == null))
                {
                    this.mUIGreenLightMyCEWindowWindow = new UIGreenLightMyCEWindowWindow();
                }
                return this.mUIGreenLightMyCEWindowWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow14 UIGreenLightCustomEntiWindow14
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow14 == null))
                {
                    this.mUIGreenLightCustomEntiWindow14 = new UIGreenLightCustomEntiWindow14();
                }
                return this.mUIGreenLightCustomEntiWindow14;
            }
        }
        
        public UIGreenLightCustomEntiWindow15 UIGreenLightCustomEntiWindow15
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow15 == null))
                {
                    this.mUIGreenLightCustomEntiWindow15 = new UIGreenLightCustomEntiWindow15();
                }
                return this.mUIGreenLightCustomEntiWindow15;
            }
        }
        
        public UIGreenLightCustomEntiWindow16 UIGreenLightCustomEntiWindow16
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow16 == null))
                {
                    this.mUIGreenLightCustomEntiWindow16 = new UIGreenLightCustomEntiWindow16();
                }
                return this.mUIGreenLightCustomEntiWindow16;
            }
        }
        
        public UIGreenLightgreenlightWindow UIGreenLightgreenlightWindow
        {
            get
            {
                if ((this.mUIGreenLightgreenlightWindow == null))
                {
                    this.mUIGreenLightgreenlightWindow = new UIGreenLightgreenlightWindow();
                }
                return this.mUIGreenLightgreenlightWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow17 UIGreenLightCustomEntiWindow17
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow17 == null))
                {
                    this.mUIGreenLightCustomEntiWindow17 = new UIGreenLightCustomEntiWindow17();
                }
                return this.mUIGreenLightCustomEntiWindow17;
            }
        }
        
        public UIGreenLightSetupTestiWindow UIGreenLightSetupTestiWindow
        {
            get
            {
                if ((this.mUIGreenLightSetupTestiWindow == null))
                {
                    this.mUIGreenLightSetupTestiWindow = new UIGreenLightSetupTestiWindow();
                }
                return this.mUIGreenLightSetupTestiWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow18 UIGreenLightCustomEntiWindow18
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow18 == null))
                {
                    this.mUIGreenLightCustomEntiWindow18 = new UIGreenLightCustomEntiWindow18();
                }
                return this.mUIGreenLightCustomEntiWindow18;
            }
        }
        #endregion
        
        #region Fields
        private AssertSelectedFiltersExpectedValues mAssertSelectedFiltersExpectedValues;
        
        private EnterSearchCriteriaOnListFilterModalParams mEnterSearchCriteriaOnListFilterModalParams;
        
        private FilterAttributesParams mFilterAttributesParams;
        
        private ValidateAddFormDropDownLabelExpectedValues mValidateAddFormDropDownLabelExpectedValues;
        
        private ValidateAllowApprovalTickBoxLabelExpectedValues mValidateAllowApprovalTickBoxLabelExpectedValues;
        
        private ValidateAllowDeleteTickBoxLabelExpectedValues mValidateAllowDeleteTickBoxLabelExpectedValues;
        
        private ValidateDate1TextBoxLabelExpectedValues mValidateDate1TextBoxLabelExpectedValues;
        
        private ValidateDate2TextBoxLabelExpectedValues mValidateDate2TextBoxLabelExpectedValues;
        
        private ValidateDescriptionLabelExpectedValues mValidateDescriptionLabelExpectedValues;
        
        private ValidateEditFormDropDownLabelExpectedValues mValidateEditFormDropDownLabelExpectedValues;
        
        private ValidateFilterCriteriaDropdownLabelExpectedValues mValidateFilterCriteriaDropdownLabelExpectedValues;
        
        private ValidateFiltersAvailableFieldsSectionHeaderExpectedValues mValidateFiltersAvailableFieldsSectionHeaderExpectedValues;
        
        private ValidateFiltersSectionCommentExpectedValues mValidateFiltersSectionCommentExpectedValues;
        
        private ValidateFiltersSectionHeaderExpectedValues mValidateFiltersSectionHeaderExpectedValues;
        
        private ValidateFiltersSelectedFiltersSectionHeaderExpectedValues mValidateFiltersSelectedFiltersSectionHeaderExpectedValues;
        
        private ValidateGeneralDetailsSectionHeaderExpectedValues mValidateGeneralDetailsSectionHeaderExpectedValues;
        
        private ValidateMenuDescriptionLabelExpectedValues mValidateMenuDescriptionLabelExpectedValues;
        
        private ValidateMenuDisplayOptionsSectionHeaderExpectedValues mValidateMenuDisplayOptionsSectionHeaderExpectedValues;
        
        private ValidateMenuDropDownLabelExpectedValues mValidateMenuDropDownLabelExpectedValues;
        
        private ValidateMessageModalExpectedValues mValidateMessageModalExpectedValues;
        
        private ValidateNewViewModalHeaderExpectedValues mValidateNewViewModalHeaderExpectedValues;
        
        private ValidateNumber1TextBoxLabelExpectedValues mValidateNumber1TextBoxLabelExpectedValues;
        
        private ValidateNumber2TextBoxLabelExpectedValues mValidateNumber2TextBoxLabelExpectedValues;
        
        private ValidateNumberOfDaysTextBoxLabelExpectedValues mValidateNumberOfDaysTextBoxLabelExpectedValues;
        
        private ValidateNumberOfMonthsTextBoxLabelExpectedValues mValidateNumberOfMonthsTextBoxLabelExpectedValues;
        
        private ValidateNumberOfWeeksTextBoxLabelExpectedValues mValidateNumberOfWeeksTextBoxLabelExpectedValues;
        
        private ValidateNumberOfYearsTextBoxLabelExpectedValues mValidateNumberOfYearsTextBoxLabelExpectedValues;
        
        private ValidateOptionsSectionHeaderExpectedValues mValidateOptionsSectionHeaderExpectedValues;
        
        private ValidateSelectedFiltersSectionHeaderExpectedValues mValidateSelectedFiltersSectionHeaderExpectedValues;
        
        private ValidateSelectedIconExpectedValues mValidateSelectedIconExpectedValues;
        
        private ValidateSelectedIconTextExpectedValues mValidateSelectedIconTextExpectedValues;
        
        private ValidateSortingTabDisabledExpectedValues mValidateSortingTabDisabledExpectedValues;
        
        private ValidateSortingTabEnabledExpectedValues mValidateSortingTabEnabledExpectedValues;
        
        private ValidateTime1TextBoxLabelExpectedValues mValidateTime1TextBoxLabelExpectedValues;
        
        private ValidateTime2TextBoxLabelExpectedValues mValidateTime2TextBoxLabelExpectedValues;
        
        private ValidateValue1TextBoxLabelExpectedValues mValidateValue1TextBoxLabelExpectedValues;
        
        private ValidateViewNameLabelExpectedValues mValidateViewNameLabelExpectedValues;
        
        private ValidateYesNoDropDownLabelExpectedValues mValidateYesNoDropDownLabelExpectedValues;
        
        private UIGreenLightCustomEntiWindow mUIGreenLightCustomEntiWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIGreenLightAdministrationViewsWindow mUIGreenLightAdministrationViewsWindow;
        
        private UIGreenLightCustomEntiWindow1 mUIGreenLightCustomEntiWindow1;
        
        private UIGreenLightCustomEntiWindow2 mUIGreenLightCustomEntiWindow2;
        
        private UIGreenLightCustomEntiWindow3 mUIGreenLightCustomEntiWindow3;
        
        private UIGreenLightCustomEntiWindow4 mUIGreenLightCustomEntiWindow4;
        
        private UIGreenLightCustomEntiWindow5 mUIGreenLightCustomEntiWindow5;
        
        private UIGreenLightCustomEntiWindow6 mUIGreenLightCustomEntiWindow6;
        
        private UIGreenLightCustomEntiWindow7 mUIGreenLightCustomEntiWindow7;
        
        private UIGreenLightCustomEntiWindow8 mUIGreenLightCustomEntiWindow8;
        
        private UIGreenLightOT1WindowsWindow mUIGreenLightOT1WindowsWindow;
        
        private UIGreenLightCustomEntiWindow9 mUIGreenLightCustomEntiWindow9;
        
        private UIGreenLightCustomEntiWindow10 mUIGreenLightCustomEntiWindow10;
        
        private UIGreenLightCustomEntiWindow11 mUIGreenLightCustomEntiWindow11;
        
        private UIGreenLightCustomEntiWindow12 mUIGreenLightCustomEntiWindow12;
        
        private UIGreenLightCustomEntiWindow13 mUIGreenLightCustomEntiWindow13;
        
        private UIGreenLightMyCEWindowWindow mUIGreenLightMyCEWindowWindow;
        
        private UIGreenLightCustomEntiWindow14 mUIGreenLightCustomEntiWindow14;
        
        private UIGreenLightCustomEntiWindow15 mUIGreenLightCustomEntiWindow15;
        
        private UIGreenLightCustomEntiWindow16 mUIGreenLightCustomEntiWindow16;
        
        private UIGreenLightgreenlightWindow mUIGreenLightgreenlightWindow;
        
        private UIGreenLightCustomEntiWindow17 mUIGreenLightCustomEntiWindow17;
        
        private UIGreenLightSetupTestiWindow mUIGreenLightSetupTestiWindow;
        
        private UIGreenLightCustomEntiWindow18 mUIGreenLightCustomEntiWindow18;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSelectedFilters'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertSelectedFiltersExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Selected Filters    Account Holder Nam' pane equals 'Selected Filters 
        /// 
        ///Account Holder Nam...EqualsValue 1Account Holder NameAccount Holder Nam...Does Not EqualValue 1Account Holder NameAccount Holder Nam...LikeValue 1Account Holder NameAccount Holder Nam...Contains Data-Account Holder NameAccount Holder Nam...Does Not Contain Data-Account Holder Name'
        /// </summary>
        public string UISelectedFiltersAccouPaneInnerText = @"Selected Filters 
 
Account Holder Nam...EqualsValue 1Account Holder NameAccount Holder Nam...Does Not EqualValue 1Account Holder NameAccount Holder Nam...LikeValue 1Account Holder NameAccount Holder Nam...Contains Data-Account Holder NameAccount Holder Nam...Does Not Contain Data-Account Holder Name";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterSearchCriteriaOnListFilterModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class EnterSearchCriteriaOnListFilterModalParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'standard list item 1' in text box
        /// </summary>
        public string UIItemEditText = "standard list item 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FilterAttributes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class FilterAttributesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'standard single text' in 'Display Name' text box
        /// </summary>
        public string UIDisplayNameEditText = "standard single text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddFormDropDownLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateAddFormDropDownLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Add form' label equals 'Add form'
        /// </summary>
        public string UIAddformLabelDisplayText = "Add form";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAllowApprovalTickBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateAllowApprovalTickBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Allow approval' label equals 'Allow approval'
        /// </summary>
        public string UIAllowapprovalLabelDisplayText = "Allow approval";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAllowDeleteTickBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateAllowDeleteTickBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Allow delete' label equals 'Allow delete'
        /// </summary>
        public string UIAllowdeleteLabelDisplayText = "Allow delete";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDate1TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateDate1TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Date 1*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Date 1*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDate2TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateDate2TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Number 2*' label equals 'Date 2*'
        /// </summary>
        public string UINumber2LabelDisplayText = "Date 2*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDescriptionLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateDescriptionLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Description' label equals 'Description'
        /// </summary>
        public string UIDescriptionLabelDisplayText = "Description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditFormDropDownLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateEditFormDropDownLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Edit form' label equals 'Edit form'
        /// </summary>
        public string UIEditformLabelDisplayText = "Edit form";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFilterCriteriaDropdownLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateFilterCriteriaDropdownLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Filter criteria*' label equals 'Filter criteria*'
        /// </summary>
        public string UIFiltercriteriaLabelDisplayText = "Filter criteria*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFiltersAvailableFieldsSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateFiltersAvailableFieldsSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Available Fields' pane equals 'Available Fields '
        /// </summary>
        public string UIAvailableFieldsPaneDisplayText = "Available Fields ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFiltersSectionComment'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateFiltersSectionCommentExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Use this editor to create filters that w' pane equals 'Use this editor to create filters that will restrict the number of records returned for the view.'
        /// </summary>
        public string UIUsethiseditortocreatPaneDisplayText = "Use this editor to create filters that will restrict the number of records return" +
            "ed for the view.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFiltersSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateFiltersSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Filters' pane equals 'Filters'
        /// </summary>
        public string UIFiltersPaneDisplayText = "Filters";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFiltersSelectedFiltersSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateFiltersSelectedFiltersSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Selected Filters' pane equals 'Selected Filters '
        /// </summary>
        public string UISelectedFiltersPaneDisplayText = "Selected Filters ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateGeneralDetailsSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateGeneralDetailsSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'General Details' pane equals 'General Details'
        /// </summary>
        public string UIGeneralDetailsPaneDisplayText = "General Details";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMenuDescriptionLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMenuDescriptionLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Menu Description' label equals 'Menu description'
        /// </summary>
        public string UIMenuDescriptionLabelDisplayText = "Menu description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMenuDisplayOptionsSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMenuDisplayOptionsSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Menu Display Options' pane equals 'Menu Display Options'
        /// </summary>
        public string UIMenuDisplayOptionsPaneDisplayText = "Menu Display Options";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMenuDropDownLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMenuDropDownLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Menu' label equals 'Menu'
        /// </summary>
        public string UIMenuLabelDisplayText = "Menu";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMessageModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMessageModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a name for this view.
        ///Please select a Menu for the view.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a name for this view.\r\nPlease select a Me" +
            "nu for the view.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNewViewModalHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNewViewModalHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'New View' pane equals 'New View'
        /// </summary>
        public string UINewViewPaneDisplayText = "New View";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumber1TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumber1TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number 1*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Number 1*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumber2TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumber2TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Number 2*' label equals 'Number 2*'
        /// </summary>
        public string UINumber2LabelDisplayText = "Number 2*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumberOfDaysTextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumberOfDaysTextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of days*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Number of days*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumberOfMonthsTextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumberOfMonthsTextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of months*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Number of months*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumberOfWeeksTextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumberOfWeeksTextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of weeks*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Number of weeks*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNumberOfYearsTextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateNumberOfYearsTextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Number of years*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Number of years*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateOptionsSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateOptionsSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Options' pane equals 'Options'
        /// </summary>
        public string UIOptionsPaneDisplayText = "Options";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSelectedFiltersSectionHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSelectedFiltersSectionHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Selected Filters' pane equals 'Selected Filters '
        /// </summary>
        public string UISelectedFiltersPaneDisplayText = "Selected Filters ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSelectedIcon'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSelectedIconExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of '/static/icons/48/plain/window_dialog.png' image equals '/static/icons/48/plain/window_dialog.png'
        /// </summary>
        public string UIStaticicons48plainwiImageFriendlyName = "/static/icons/48/plain/window_dialog.png";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSelectedIconText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSelectedIconTextExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'window_dialog.png' pane equals 'window_dialog.png'
        /// </summary>
        public string UIWindow_dialogpngPaneDisplayText = "window_dialog.png";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSortingTabDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSortingTabDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'Sorting' pane equals 'id=ctl00_contentmain_tabConViews_tabViewSort_tab class=ajax__tab_disabled'
        /// </summary>
        public string UISortingPaneControlDefinition = "id=ctl00_contentmain_tabConViews_tabViewSort_tab class=ajax__tab_disabled";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSortingTabEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSortingTabEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'Sorting' pane equals 'id=ctl00_contentmain_tabConViews_tabViewSort_tab'
        /// </summary>
        public string UISortingPaneControlDefinition = "id=ctl00_contentmain_tabConViews_tabViewSort_tab";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTime1TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateTime1TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Time 1*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Time 1*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTime2TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateTime2TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Number 2*' label equals 'Time 2*'
        /// </summary>
        public string UINumber2LabelDisplayText = "Time 2*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateValue1TextBoxLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateValue1TextBoxLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Value 1*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Value 1*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateViewNameLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateViewNameLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'View name*' label equals 'View name*'
        /// </summary>
        public string UIViewnameLabelDisplayText = "View name*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateYesNoDropDownLabel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateYesNoDropDownLabelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Value 1*' label equals 'Yes or No*'
        /// </summary>
        public string UIValue1LabelDisplayText = "Yes or No*";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        
        public UIGreenLightCustomEntiDocument1 UIGreenLightCustomEntiDocument1
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument1 == null))
                {
                    this.mUIGreenLightCustomEntiDocument1 = new UIGreenLightCustomEntiDocument1(this);
                }
                return this.mUIGreenLightCustomEntiDocument1;
            }
        }
        
        public UIGreenLightCustomEntiDocument2 UIGreenLightCustomEntiDocument2
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument2 == null))
                {
                    this.mUIGreenLightCustomEntiDocument2 = new UIGreenLightCustomEntiDocument2(this);
                }
                return this.mUIGreenLightCustomEntiDocument2;
            }
        }
        
        public UIGreenLightCustomEntiDocument3 UIGreenLightCustomEntiDocument3
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument3 == null))
                {
                    this.mUIGreenLightCustomEntiDocument3 = new UIGreenLightCustomEntiDocument3(this);
                }
                return this.mUIGreenLightCustomEntiDocument3;
            }
        }
        
        public UIGreenLightCustomEntiDocument4 UIGreenLightCustomEntiDocument4
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument4 == null))
                {
                    this.mUIGreenLightCustomEntiDocument4 = new UIGreenLightCustomEntiDocument4(this);
                }
                return this.mUIGreenLightCustomEntiDocument4;
            }
        }
        
        public UIGreenLightCustomEntiDocument5 UIGreenLightCustomEntiDocument5
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument5 == null))
                {
                    this.mUIGreenLightCustomEntiDocument5 = new UIGreenLightCustomEntiDocument5(this);
                }
                return this.mUIGreenLightCustomEntiDocument5;
            }
        }
        
        public UIGreenLightCustomEntiDocument6 UIGreenLightCustomEntiDocument6
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument6 == null))
                {
                    this.mUIGreenLightCustomEntiDocument6 = new UIGreenLightCustomEntiDocument6(this);
                }
                return this.mUIGreenLightCustomEntiDocument6;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument mUIGreenLightCustomEntiDocument;
        
        private UIGreenLightCustomEntiDocument1 mUIGreenLightCustomEntiDocument1;
        
        private UIGreenLightCustomEntiDocument2 mUIGreenLightCustomEntiDocument2;
        
        private UIGreenLightCustomEntiDocument3 mUIGreenLightCustomEntiDocument3;
        
        private UIGreenLightCustomEntiDocument4 mUIGreenLightCustomEntiDocument4;
        
        private UIGreenLightCustomEntiDocument5 mUIGreenLightCustomEntiDocument5;
        
        private UIGreenLightCustomEntiDocument6 mUIGreenLightCustomEntiDocument6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveView";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveView";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveView class=b";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "78";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "222";
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "111";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCloseView";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCloseView";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCloseView class=";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "79";
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_moPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_moPane == null))
                {
                    this.mUICtl00_contentmain_moPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_modview_backgroundElement";
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalBackground";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 9995; POSITION: fixed; W";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "217";
                    #endregion
                }
                return this.mUICtl00_contentmain_moPane;
            }
        }
        
        public HtmlInputButton UISaveButton1
        {
            get
            {
                if ((this.mUISaveButton1 == null))
                {
                    this.mUISaveButton1 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton1.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveView";
                    this.mUISaveButton1.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveView";
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-POSITION: left top\" id";
                    this.mUISaveButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "78";
                    #endregion
                }
                return this.mUISaveButton1;
            }
        }
        
        public HtmlSpan UIColumnsPane
        {
            get
            {
                if ((this.mUIColumnsPane == null))
                {
                    this.mUIColumnsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIColumnsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewFields";
                    this.mUIColumnsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIColumnsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Columns";
                    this.mUIColumnsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIColumnsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIColumnsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConViews_t";
                    this.mUIColumnsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "281";
                    #endregion
                }
                return this.mUIColumnsPane;
            }
        }
        
        public HtmlSpan UIFiltersPane
        {
            get
            {
                if ((this.mUIFiltersPane == null))
                {
                    this.mUIFiltersPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewFilters";
                    this.mUIFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Filters";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConViews_t";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "285";
                    #endregion
                }
                return this.mUIFiltersPane;
            }
        }
        
        public HtmlSpan UISortingPane
        {
            get
            {
                if ((this.mUISortingPane == null))
                {
                    this.mUISortingPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewSort";
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sorting";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConViews_t";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "289";
                    #endregion
                }
                return this.mUISortingPane;
            }
        }
        
        public HtmlHyperlink UIViewsHyperlink
        {
            get
            {
                if ((this.mUIViewsHyperlink == null))
                {
                    this.mUIViewsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIViewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkViews";
                    this.mUIViewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIViewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIViewsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Views";
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'Views\');";
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'Views\');";
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "selectedPage";
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnk class=selectedPage tabIndex=0 hre";
                    this.mUIViewsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUIViewsHyperlink;
            }
        }
        
        public UINewViewPane UINewViewPane
        {
            get
            {
                if ((this.mUINewViewPane == null))
                {
                    this.mUINewViewPane = new UINewViewPane(this);
                }
                return this.mUINewViewPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISaveButton;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlInputButton mUICancelButton;
        
        private HtmlDiv mUICtl00_contentmain_moPane;
        
        private HtmlInputButton mUISaveButton1;
        
        private HtmlSpan mUIColumnsPane;
        
        private HtmlSpan mUIFiltersPane;
        
        private HtmlSpan mUISortingPane;
        
        private HtmlHyperlink mUIViewsHyperlink;
        
        private UINewViewPane mUINewViewPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UINewViewPane : HtmlDiv
    {
        
        public UINewViewPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "pgOptViews";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New View ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pgOptViews className";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewViewHyperlink
        {
            get
            {
                if ((this.mUINewViewHyperlink == null))
                {
                    this.mUINewViewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewViewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewViewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewViewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewViewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New View";
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.CustomEntityAdministration.Views.Add();";
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.CustomEntityAdministration.Views.Add();";
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUINewViewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUINewViewHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewViewHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument1 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_body";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details\r\nView name** \r\nDescripti";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_body";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_body cl";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "149";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument2 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_gridViewsTable
        {
            get
            {
                if ((this.mUITbl_gridViewsTable == null))
                {
                    this.mUITbl_gridViewsTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridViewsTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridViews";
                    this.mUITbl_gridViewsTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "View Name Description\r\nView 1This is Vie";
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridViews class=datatbl";
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUITbl_gridViewsTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUITbl_gridViewsTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_gridViewsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument3 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_body";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General DetailsView name** DescriptionTh";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_body";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_body cl";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "149";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument4 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public UICtl00_contentmain_taPane1 UICtl00_contentmain_taPane1
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane1 == null))
                {
                    this.mUICtl00_contentmain_taPane1 = new UICtl00_contentmain_taPane1(this);
                }
                return this.mUICtl00_contentmain_taPane1;
            }
        }
        
        public HtmlLabel UIFiltercriteriaLabel
        {
            get
            {
                if ((this.mUIFiltercriteriaLabel == null))
                {
                    this.mUIFiltercriteriaLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIFiltercriteriaLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_lblCriteriaFilter";
                    this.mUIFiltercriteriaLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIFiltercriteriaLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_ddlFilter";
                    this.mUIFiltercriteriaLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Filter criteria*";
                    this.mUIFiltercriteriaLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIFiltercriteriaLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblCriteriaFilter c";
                    this.mUIFiltercriteriaLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "59";
                    #endregion
                }
                return this.mUIFiltercriteriaLabel;
            }
        }
        
        public HtmlLabel UIValue1Label
        {
            get
            {
                if ((this.mUIValue1Label == null))
                {
                    this.mUIValue1Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_lblFilterValue1";
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_txtFilterCriteria1";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Value 1*";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblFilterValue1 cla";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "60";
                    #endregion
                }
                return this.mUIValue1Label;
            }
        }
        
        public HtmlLabel UITime2Label
        {
            get
            {
                if ((this.mUITime2Label == null))
                {
                    this.mUITime2Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITime2Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_lblFilterValue2";
                    this.mUITime2Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITime2Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "txtFilterCriteria2";
                    this.mUITime2Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Time 2*";
                    this.mUITime2Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITime2Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblFilterValue2 cla";
                    this.mUITime2Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "61";
                    #endregion
                }
                return this.mUITime2Label;
            }
        }
        
        public HtmlLabel UIDate1Label
        {
            get
            {
                if ((this.mUIDate1Label == null))
                {
                    this.mUIDate1Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDate1Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_lblFilterValue1";
                    this.mUIDate1Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDate1Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIDate1Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Date 1*";
                    this.mUIDate1Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIDate1Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblFilterValue1 cla";
                    this.mUIDate1Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "60";
                    #endregion
                }
                return this.mUIDate1Label;
            }
        }
        
        public HtmlLabel UIDate2Label
        {
            get
            {
                if ((this.mUIDate2Label == null))
                {
                    this.mUIDate2Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDate2Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_lblFilterValue2";
                    this.mUIDate2Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDate2Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "txtFilterCriteria2";
                    this.mUIDate2Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Date 2*";
                    this.mUIDate2Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIDate2Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblFilterValue2 cla";
                    this.mUIDate2Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "61";
                    #endregion
                }
                return this.mUIDate2Label;
            }
        }
        
        public HtmlEdit UIDisplayNameEdit
        {
            get
            {
                if ((this.mUIDisplayNameEdit == null))
                {
                    this.mUIDisplayNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "gridAttributes_Filter";
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDisplayNameEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = "Display Name";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=gridAttributes_Filter title=\"Display ";
                    this.mUIDisplayNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    #endregion
                }
                return this.mUIDisplayNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane mUICtl00_contentmain_taPane;
        
        private UICtl00_contentmain_taPane1 mUICtl00_contentmain_taPane1;
        
        private HtmlLabel mUIFiltercriteriaLabel;
        
        private HtmlLabel mUIValue1Label;
        
        private HtmlLabel mUITime2Label;
        
        private HtmlLabel mUIDate1Label;
        
        private HtmlLabel mUIDate2Label;
        
        private HtmlEdit mUIDisplayNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Filters\r\nUse this editor to create filte";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible\" id=ctl00_con";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "173";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIFiltersPane
        {
            get
            {
                if ((this.mUIFiltersPane == null))
                {
                    this.mUIFiltersPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Filters";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIFiltersPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIFiltersPane;
            }
        }
        
        public HtmlDiv UIUsethiseditortocreatPane
        {
            get
            {
                if ((this.mUIUsethiseditortocreatPane == null))
                {
                    this.mUIUsethiseditortocreatPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIUsethiseditortocreatPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIUsethiseditortocreatPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUsethiseditortocreatPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Use this editor to create filters that w";
                    this.mUIUsethiseditortocreatPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUsethiseditortocreatPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "onecolumnpanel";
                    this.mUIUsethiseditortocreatPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=onecolumnpanel";
                    this.mUIUsethiseditortocreatPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIUsethiseditortocreatPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIFiltersPane;
        
        private HtmlDiv mUIUsethiseditortocreatPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane1 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "177";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAvailableFieldsPane
        {
            get
            {
                if ((this.mUIAvailableFieldsPane == null))
                {
                    this.mUIAvailableFieldsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAvailableFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAvailableFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields ";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIAvailableFieldsPane;
            }
        }
        
        public HtmlDiv UISelectedFiltersPane
        {
            get
            {
                if ((this.mUISelectedFiltersPane == null))
                {
                    this.mUISelectedFiltersPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISelectedFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISelectedFiltersPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISelectedFiltersPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Selected Filters ";
                    this.mUISelectedFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISelectedFiltersPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUISelectedFiltersPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUISelectedFiltersPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUISelectedFiltersPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAvailableFieldsPane;
        
        private HtmlDiv mUISelectedFiltersPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument5 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIN1RelationshiptoBaseCustom
        {
            get
            {
                if ((this.mUIN1RelationshiptoBaseCustom == null))
                {
                    this.mUIN1RelationshiptoBaseCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIN1RelationshiptoBaseCustom.SearchProperties["Id"] = "kad9900a9-3c43-4dd1-9826-bfca1f9ea5ce";
                    this.mUIN1RelationshiptoBaseCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIN1RelationshiptoBaseCustom.SearchProperties["TagName"] = "LI";
                    this.mUIN1RelationshiptoBaseCustom.FilterProperties["Class"] = "jstree-closed";
                    this.mUIN1RelationshiptoBaseCustom.FilterProperties["ControlDefinition"] = "id=kad9900a9-3c43-4dd1-9826-bfca1f9ea5ce";
                    this.mUIN1RelationshiptoBaseCustom.FilterProperties["InnerText"] = "  N : 1 Relationship to Base Table";
                    this.mUIN1RelationshiptoBaseCustom.FilterProperties["TagInstance"] = "37";
                    #endregion
                }
                return this.mUIN1RelationshiptoBaseCustom;
            }
        }
        
        public HtmlCustom UIUserDefinedFieldsCustom
        {
            get
            {
                if ((this.mUIUserDefinedFieldsCustom == null))
                {
                    this.mUIUserDefinedFieldsCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIUserDefinedFieldsCustom.SearchProperties["Id"] = "kad9900a9-3c43-4dd1-9826-bfca1f9ea5ce_g972ac42d-6646-4efc-9323-35c2c9f95b62";
                    this.mUIUserDefinedFieldsCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIUserDefinedFieldsCustom.SearchProperties["TagName"] = "LI";
                    this.mUIUserDefinedFieldsCustom.FilterProperties["Class"] = "jstree-closed";
                    this.mUIUserDefinedFieldsCustom.FilterProperties["ControlDefinition"] = "id=kad9900a9-3c43-4dd1-9826-bfca1f9ea5ce";
                    this.mUIUserDefinedFieldsCustom.FilterProperties["InnerText"] = "  User Defined Fields";
                    this.mUIUserDefinedFieldsCustom.FilterProperties["TagInstance"] = "38";
                    #endregion
                }
                return this.mUIUserDefinedFieldsCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIN1RelationshiptoBaseCustom;
        
        private HtmlCustom mUIUserDefinedFieldsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument6 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGreenlightTextUDFCustom UIGreenlightTextUDFCustom
        {
            get
            {
                if ((this.mUIGreenlightTextUDFCustom == null))
                {
                    this.mUIGreenlightTextUDFCustom = new UIGreenlightTextUDFCustom(this);
                }
                return this.mUIGreenlightTextUDFCustom;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcDrop";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Standard Single Text  Multiline Text  ";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-1 jstree-default";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: url(http://loca";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "172";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenlightTextUDFCustom mUIGreenlightTextUDFCustom;
        
        private HtmlDiv mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenlightTextUDFCustom : HtmlCustom
    {
        
        public UIGreenlightTextUDFCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "k88233966-53b0-444b-9c54-fd469b8f0466_g972ac42d-6646-4efc-9323-35c2c9f95b62_ndf9b" +
                "f468-1021-4263-a0f7-986625078bee";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=k88233966-53b0-444b-9c54-fd469b8f0466";
            this.FilterProperties["InnerText"] = "  Greenlight Text UDF ";
            this.FilterProperties["TagInstance"] = "89";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGreenlightTextUDFHyperlink
        {
            get
            {
                if ((this.mUIGreenlightTextUDFHyperlink == null))
                {
                    this.mUIGreenlightTextUDFHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Greenlight Text UDF ";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIGreenlightTextUDFHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGreenlightTextUDFHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightAdministrationViewsWindow : BrowserWindow
    {
        
        public UIGreenLightAdministrationViewsWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightAdministrationViewsDocument UIGreenLightAdministrationViewsDocument
        {
            get
            {
                if ((this.mUIGreenLightAdministrationViewsDocument == null))
                {
                    this.mUIGreenLightAdministrationViewsDocument = new UIGreenLightAdministrationViewsDocument(this);
                }
                return this.mUIGreenLightAdministrationViewsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightAdministrationViewsDocument mUIGreenLightAdministrationViewsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightAdministrationViewsDocument : HtmlDocument
    {
        
        public UIGreenLightAdministrationViewsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UITbl_gridViewsTable UITbl_gridViewsTable
        {
            get
            {
                if ((this.mUITbl_gridViewsTable == null))
                {
                    this.mUITbl_gridViewsTable = new UITbl_gridViewsTable(this);
                }
                return this.mUITbl_gridViewsTable;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridViewsTable mUITbl_gridViewsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITbl_gridViewsTable : HtmlTable
    {
        
        public UITbl_gridViewsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridViews";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "View Name Description\r\nThere are current";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridViews class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "3";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIViewNameHyperlink
        {
            get
            {
                if ((this.mUIViewNameHyperlink == null))
                {
                    this.mUIViewNameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIViewNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIViewNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIViewNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIViewNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "View Name ";
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridViews\',\'view_name\',0);";
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridViews\',\'view_name\',0);";
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIViewNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIViewNameHyperlink;
            }
        }
        
        public HtmlHyperlink UIDescriptionHyperlink
        {
            get
            {
                if ((this.mUIDescriptionHyperlink == null))
                {
                    this.mUIDescriptionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDescriptionHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Description", PropertyExpressionOperator.Contains));
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridViews\',\'description\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridViews\',\'description\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIDescriptionHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIViewNameHyperlink;
        
        private HtmlHyperlink mUIDescriptionHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow1 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument7 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument7(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument7 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument7 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISortingPane
        {
            get
            {
                if ((this.mUISortingPane == null))
                {
                    this.mUISortingPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewSort";
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sorting";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConViews_t";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "291";
                    #endregion
                }
                return this.mUISortingPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISortingPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow2 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument8 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument8(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument8 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument8 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISortingPane
        {
            get
            {
                if ((this.mUISortingPane == null))
                {
                    this.mUISortingPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewSort_tab";
                    this.mUISortingPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sorting";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_active";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUISortingPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "288";
                    #endregion
                }
                return this.mUISortingPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISortingPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow3 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument9 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument9(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument9 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument9 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UINewViewPane
        {
            get
            {
                if ((this.mUINewViewPane == null))
                {
                    this.mUINewViewPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUINewViewPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divViewHeader";
                    this.mUINewViewPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewViewPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New View";
                    this.mUINewViewPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewViewPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUINewViewPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divViewHeader class=sectiontitle";
                    this.mUINewViewPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "146";
                    #endregion
                }
                return this.mUINewViewPane;
            }
        }
        
        public HtmlLabel UIViewnameLabel
        {
            get
            {
                if ((this.mUIViewnameLabel == null))
                {
                    this.mUIViewnameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIViewnameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewName";
                    this.mUIViewnameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIViewnameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_txtviewname";
                    this.mUIViewnameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "View name*";
                    this.mUIViewnameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIViewnameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIViewnameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "49";
                    #endregion
                }
                return this.mUIViewnameLabel;
            }
        }
        
        public HtmlLabel UIDescriptionLabel
        {
            get
            {
                if ((this.mUIDescriptionLabel == null))
                {
                    this.mUIDescriptionLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewDescription";
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_txtviewdescription";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Description";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "50";
                    #endregion
                }
                return this.mUIDescriptionLabel;
            }
        }
        
        public HtmlLabel UIMenuLabel
        {
            get
            {
                if ((this.mUIMenuLabel == null))
                {
                    this.mUIMenuLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIMenuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewMenu";
                    this.mUIMenuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIMenuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_cmbmenu";
                    this.mUIMenuLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Menu";
                    this.mUIMenuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIMenuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIMenuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "51";
                    #endregion
                }
                return this.mUIMenuLabel;
            }
        }
        
        public HtmlLabel UIMenuDescriptionLabel
        {
            get
            {
                if ((this.mUIMenuDescriptionLabel == null))
                {
                    this.mUIMenuDescriptionLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIMenuDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewMenuDescription";
                    this.mUIMenuDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIMenuDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_txtViewMenuDescription";
                    this.mUIMenuDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Menu Description";
                    this.mUIMenuDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIMenuDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIMenuDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "52";
                    #endregion
                }
                return this.mUIMenuDescriptionLabel;
            }
        }
        
        public HtmlLabel UIAddformLabel
        {
            get
            {
                if ((this.mUIAddformLabel == null))
                {
                    this.mUIAddformLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIAddformLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewAddForm";
                    this.mUIAddformLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIAddformLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_cmbviewaddform";
                    this.mUIAddformLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Add form";
                    this.mUIAddformLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIAddformLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIAddformLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "53";
                    #endregion
                }
                return this.mUIAddformLabel;
            }
        }
        
        public HtmlLabel UIEditformLabel
        {
            get
            {
                if ((this.mUIEditformLabel == null))
                {
                    this.mUIEditformLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIEditformLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewEditForm";
                    this.mUIEditformLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIEditformLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_cmbvieweditform";
                    this.mUIEditformLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Edit form";
                    this.mUIEditformLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIEditformLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIEditformLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "54";
                    #endregion
                }
                return this.mUIEditformLabel;
            }
        }
        
        public HtmlLabel UIAllowdeleteLabel
        {
            get
            {
                if ((this.mUIAllowdeleteLabel == null))
                {
                    this.mUIAllowdeleteLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIAllowdeleteLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewAllowDelete";
                    this.mUIAllowdeleteLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIAllowdeleteLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_chkviewallowdelete";
                    this.mUIAllowdeleteLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Allow delete";
                    this.mUIAllowdeleteLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIAllowdeleteLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIAllowdeleteLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "55";
                    #endregion
                }
                return this.mUIAllowdeleteLabel;
            }
        }
        
        public HtmlLabel UIAllowapprovalLabel
        {
            get
            {
                if ((this.mUIAllowapprovalLabel == null))
                {
                    this.mUIAllowapprovalLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIAllowapprovalLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_lblViewAllowApproval";
                    this.mUIAllowapprovalLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIAllowapprovalLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_chkviewallowapproval";
                    this.mUIAllowapprovalLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Allow approval";
                    this.mUIAllowapprovalLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIAllowapprovalLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIAllowapprovalLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "56";
                    #endregion
                }
                return this.mUIAllowapprovalLabel;
            }
        }
        
        public UICtl00_contentmain_taPane2 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane2(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUINewViewPane;
        
        private HtmlLabel mUIViewnameLabel;
        
        private HtmlLabel mUIDescriptionLabel;
        
        private HtmlLabel mUIMenuLabel;
        
        private HtmlLabel mUIMenuDescriptionLabel;
        
        private HtmlLabel mUIAddformLabel;
        
        private HtmlLabel mUIEditformLabel;
        
        private HtmlLabel mUIAllowdeleteLabel;
        
        private HtmlLabel mUIAllowapprovalLabel;
        
        private UICtl00_contentmain_taPane2 mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane2 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details\r\nView name** \r\nDescripti";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible\" id=ctl00_con";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "150";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIGeneralDetailsPane
        {
            get
            {
                if ((this.mUIGeneralDetailsPane == null))
                {
                    this.mUIGeneralDetailsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIGeneralDetailsPane;
            }
        }
        
        public HtmlDiv UIMenuDisplayOptionsPane
        {
            get
            {
                if ((this.mUIMenuDisplayOptionsPane == null))
                {
                    this.mUIMenuDisplayOptionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMenuDisplayOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMenuDisplayOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMenuDisplayOptionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Menu Display Options";
                    this.mUIMenuDisplayOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMenuDisplayOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIMenuDisplayOptionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIMenuDisplayOptionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mUIMenuDisplayOptionsPane;
            }
        }
        
        public HtmlDiv UIOptionsPane
        {
            get
            {
                if ((this.mUIOptionsPane == null))
                {
                    this.mUIOptionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOptionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Options";
                    this.mUIOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIOptionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIOptionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mUIOptionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIGeneralDetailsPane;
        
        private HtmlDiv mUIMenuDisplayOptionsPane;
        
        private HtmlDiv mUIOptionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow4 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument10 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument10(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument10 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument10 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "/shared/admin/aecustomentity.aspx?entityid=";
            #endregion
        }
        
        #region Properties
        public UIStandardSingleTextCustom UIStandardSingleTextCustom
        {
            get
            {
                if ((this.mUIStandardSingleTextCustom == null))
                {
                    this.mUIStandardSingleTextCustom = new UIStandardSingleTextCustom(this);
                }
                return this.mUIStandardSingleTextCustom;
            }
        }
        
        public HtmlDiv UITherearenocolumnsselPane
        {
            get
            {
                if ((this.mUITherearenocolumnsselPane == null))
                {
                    this.mUITherearenocolumnsselPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITherearenocolumnsselPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcDrop";
                    this.mUITherearenocolumnsselPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITherearenocolumnsselPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "There are no columns selected.";
                    this.mUITherearenocolumnsselPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITherearenocolumnsselPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-1 jstree-default jstree-focused";
                    this.mUITherearenocolumnsselPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"HEIGHT: 280px\" id=ctl00_contentma";
                    this.mUITherearenocolumnsselPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "172";
                    #endregion
                }
                return this.mUITherearenocolumnsselPane;
            }
        }
        
        public UIWideSingleTextEDITEDCustom UIWideSingleTextEDITEDCustom
        {
            get
            {
                if ((this.mUIWideSingleTextEDITEDCustom == null))
                {
                    this.mUIWideSingleTextEDITEDCustom = new UIWideSingleTextEDITEDCustom(this);
                }
                return this.mUIWideSingleTextEDITEDCustom;
            }
        }
        
        public UIWideListCustom UIWideListCustom
        {
            get
            {
                if ((this.mUIWideListCustom == null))
                {
                    this.mUIWideListCustom = new UIWideListCustom(this);
                }
                return this.mUIWideListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardSingleTextCustom mUIStandardSingleTextCustom;
        
        private HtmlDiv mUITherearenocolumnsselPane;
        
        private UIWideSingleTextEDITEDCustom mUIWideSingleTextEDITEDCustom;
        
        private UIWideListCustom mUIWideListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStandardSingleTextCustom : HtmlCustom
    {
        
        public UIStandardSingleTextCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n09bd1339-01dc-478d-ab7f-7886c319f020";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n09bd1339-01dc-478d-ab7f-7886c319f020";
            this.FilterProperties["InnerText"] = "  Standard Single Text";
            this.FilterProperties["TagInstance"] = "30";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIStandardSingleTextHyperlink
        {
            get
            {
                if ((this.mUIStandardSingleTextHyperlink == null))
                {
                    this.mUIStandardSingleTextHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Standard Single Text";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIStandardSingleTextHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIStandardSingleTextHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWideSingleTextEDITEDCustom : HtmlCustom
    {
        
        public UIWideSingleTextEDITEDCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n4ec4aac4-0687-4b97-8cdd-6fbbb53b9441";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n4ec4aac4-0687-4b97-8cdd-6fbbb53b9441";
            this.FilterProperties["InnerText"] = "  Wide Single Text EDITED";
            this.FilterProperties["TagInstance"] = "37";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIWideSingleTextEDITEDHyperlink
        {
            get
            {
                if ((this.mUIWideSingleTextEDITEDHyperlink == null))
                {
                    this.mUIWideSingleTextEDITEDHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWideSingleTextEDITEDHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Wide Single Text EDITED";
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIWideSingleTextEDITEDHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIWideSingleTextEDITEDHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIWideSingleTextEDITEDHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWideListCustom : HtmlCustom
    {
        
        public UIWideListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n5768845f-da01-4649-9a0e-fc54102cbb9f";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n5768845f-da01-4649-9a0e-fc54102cbb9f";
            this.FilterProperties["InnerText"] = "  Wide List";
            this.FilterProperties["TagInstance"] = "34";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIWideListHyperlink
        {
            get
            {
                if ((this.mUIWideListHyperlink == null))
                {
                    this.mUIWideListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWideListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIWideListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWideListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWideListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Wide List";
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIWideListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIWideListHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIWideListHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow5 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow5()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument11 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument11(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument11 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument11 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcTree";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Created By  Created On  Currency Attri";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-0 jstree-default";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"HEIGHT: 280px\" id=ctl00_contentma";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "169";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_taPane1
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane1 == null))
                {
                    this.mUICtl00_contentmain_taPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcDrop";
                    this.mUICtl00_contentmain_taPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Standard Single Text  Multiline Text  ";
                    this.mUICtl00_contentmain_taPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-1 jstree-default";
                    this.mUICtl00_contentmain_taPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"HEIGHT: 280px\" id=ctl00_contentma";
                    this.mUICtl00_contentmain_taPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "172";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        
        private HtmlDiv mUICtl00_contentmain_taPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow6 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow6()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument12 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument12(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument12 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument12 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAttributesAndFieldsPane
        {
            get
            {
                if ((this.mUIAttributesAndFieldsPane == null))
                {
                    this.mUIAttributesAndFieldsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAttributesAndFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcTree";
                    this.mUIAttributesAndFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAttributesAndFieldsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Created By  Created On  Currency Attri";
                    this.mUIAttributesAndFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAttributesAndFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-0 jstree-default";
                    this.mUIAttributesAndFieldsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUIAttributesAndFieldsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "169";
                    #endregion
                }
                return this.mUIAttributesAndFieldsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAttributesAndFieldsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow7 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow7()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument13 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument13(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument13 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument13 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDateCustom UIDateCustom
        {
            get
            {
                if ((this.mUIDateCustom == null))
                {
                    this.mUIDateCustom = new UIDateCustom(this);
                }
                return this.mUIDateCustom;
            }
        }
        
        public HtmlCustom UIDateEDITEDCustom
        {
            get
            {
                if ((this.mUIDateEDITEDCustom == null))
                {
                    this.mUIDateEDITEDCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIDateEDITEDCustom.SearchProperties["Id"] = "n3e8323d4-3bee-4848-964f-368bd8458aab";
                    this.mUIDateEDITEDCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIDateEDITEDCustom.SearchProperties["TagName"] = "LI";
                    this.mUIDateEDITEDCustom.FilterProperties["Class"] = "jstree-leaf";
                    this.mUIDateEDITEDCustom.FilterProperties["ControlDefinition"] = "id=n3e8323d4-3bee-4848-964f-368bd8458aab";
                    this.mUIDateEDITEDCustom.FilterProperties["InnerText"] = "  Date EDITED";
                    this.mUIDateEDITEDCustom.FilterProperties["TagInstance"] = "6";
                    #endregion
                }
                return this.mUIDateEDITEDCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDateCustom mUIDateCustom;
        
        private HtmlCustom mUIDateEDITEDCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDateCustom : HtmlCustom
    {
        
        public UIDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "copy_nd199568f-c5bc-4b01-8863-bccfda39e66d";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf jstree-last";
            this.FilterProperties["ControlDefinition"] = "id=copy_nd199568f-c5bc-4b01-8863-bccfda3";
            this.FilterProperties["InnerText"] = "  Date";
            this.FilterProperties["TagInstance"] = "56";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDateHyperlink
        {
            get
            {
                if ((this.mUIDateHyperlink == null))
                {
                    this.mUIDateHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Date";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDateHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\" uns";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIDateHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDateHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow8 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow8()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument14 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument14(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument14 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument14 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=6731", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane3 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane3(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane3 mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane3 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "166";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIRemoveselectionImage
        {
            get
            {
                if ((this.mUIRemoveselectionImage == null))
                {
                    this.mUIRemoveselectionImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Remove selection";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/Static/icons/16/plain/navigate_left.png";
                    this.mUIRemoveselectionImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/Static/icons/16/plain/navigate_left.png", PropertyExpressionOperator.Contains));
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIRemoveselectionImage;
            }
        }
        
        public HtmlImage UIRemoveallImage
        {
            get
            {
                if ((this.mUIRemoveallImage == null))
                {
                    this.mUIRemoveallImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Remove all";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/Static/icons/16/plain/navigate_left2.png";
                    this.mUIRemoveallImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/Static/icons/16/plain/navigate_left2.png", PropertyExpressionOperator.Contains));
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIRemoveallImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIRemoveselectionImage;
        
        private HtmlImage mUIRemoveallImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightOT1WindowsWindow : BrowserWindow
    {
        
        public UIGreenLightOT1WindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightOT1Document UIGreenLightOT1Document
        {
            get
            {
                if ((this.mUIGreenLightOT1Document == null))
                {
                    this.mUIGreenLightOT1Document = new UIGreenLightOT1Document(this);
                }
                return this.mUIGreenLightOT1Document;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightOT1Document mUIGreenLightOT1Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightOT1Document : HtmlDocument
    {
        
        public UIGreenLightOT1Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane4 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane4(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane4 mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane4 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "166";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIMoveselectionupImage
        {
            get
            {
                if ((this.mUIMoveselectionupImage == null))
                {
                    this.mUIMoveselectionupImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection up";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_open.png";
                    this.mUIMoveselectionupImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_open.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"POSITION: absolute; BORDER-RIGHT-";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUIMoveselectionupImage;
            }
        }
        
        public HtmlImage UIMoveselectiondownImage
        {
            get
            {
                if ((this.mUIMoveselectiondownImage == null))
                {
                    this.mUIMoveselectiondownImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection down";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_close.png";
                    this.mUIMoveselectiondownImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_close.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"POSITION: absolute; BORDER-RIGHT-";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mUIMoveselectiondownImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIMoveselectionupImage;
        
        private HtmlImage mUIMoveselectiondownImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow9 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow9()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument15 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument15(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument15 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument15 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITherearenofiltersselPane
        {
            get
            {
                if ((this.mUITherearenofiltersselPane == null))
                {
                    this.mUITherearenofiltersselPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITherearenofiltersselPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_tcDrop";
                    this.mUITherearenofiltersselPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "There are no filters selected.";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv treediv-filters jstree jstree-3 jstree-default";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "183";
                    #endregion
                }
                return this.mUITherearenofiltersselPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITherearenofiltersselPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow10 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow10()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument16 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument16(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument16 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument16 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIStandardSingleTextCustom1 UIStandardSingleTextCustom
        {
            get
            {
                if ((this.mUIStandardSingleTextCustom == null))
                {
                    this.mUIStandardSingleTextCustom = new UIStandardSingleTextCustom1(this);
                }
                return this.mUIStandardSingleTextCustom;
            }
        }
        
        public HtmlDiv UITherearenofiltersselPane
        {
            get
            {
                if ((this.mUITherearenofiltersselPane == null))
                {
                    this.mUITherearenofiltersselPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITherearenofiltersselPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_tcDrop";
                    this.mUITherearenofiltersselPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "There are no filters selected.";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv treediv-filters jstree jstree-3 jstree-default";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUITherearenofiltersselPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "183";
                    #endregion
                }
                return this.mUITherearenofiltersselPane;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardSingleTextCustom1 mUIStandardSingleTextCustom;
        
        private HtmlDiv mUITherearenofiltersselPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStandardSingleTextCustom1 : HtmlCustom
    {
        
        public UIStandardSingleTextCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "naeb7d37b-b993-448c-a80b-5e5d68c3cf44";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=naeb7d37b-b993-448c-a80b-5e5d68c3cf44";
            this.FilterProperties["InnerText"] = "  Standard Single Text";
            this.FilterProperties["TagInstance"] = "86";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIStandardSingleTextHyperlink
        {
            get
            {
                if ((this.mUIStandardSingleTextHyperlink == null))
                {
                    this.mUIStandardSingleTextHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIStandardSingleTextHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Standard Single Text";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "jstree-clicked";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" class=jstree";
                    this.mUIStandardSingleTextHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIStandardSingleTextHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIStandardSingleTextHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow11 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument17 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument17(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument17 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument17 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_tcTree";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Created By  Created On  Currency Attri";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-2 jstree-default jstree-focused";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "180";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow12 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow12()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument18 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument18(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument18 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument18 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=4322", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_btnFilterSave";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$tabConViews$tabViewFilters$tcFilters$btnFilterSave";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnViewFilterSave c";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "78";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlDiv UICtl00_mdlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_mdlMasterPopupPane == null))
                {
                    this.mUICtl00_mdlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_mdlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_mdlMasterPopup_backgroundElement";
                    this.mUICtl00_mdlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_mdlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICtl00_mdlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_mdlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalMasterBackground";
                    this.mUICtl00_mdlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 12002; POSITION: fixed; ";
                    this.mUICtl00_mdlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "246";
                    #endregion
                }
                return this.mUICtl00_mdlMasterPopupPane;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_btnFilterClose";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$tabConViews$tabViewFilters$tcFilters$btnFilterClose";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnViewFilterClose ";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "79";
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISaveButton;
        
        private HtmlDiv mUICtl00_mdlMasterPopupPane;
        
        private HtmlInputButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow13 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow13()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument19 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument19(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument19 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument19 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=4364", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane5 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane5(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public HtmlImage UIEditfilterinformatioImage
        {
            get
            {
                if ((this.mUIEditfilterinformatioImage == null))
                {
                    this.mUIEditfilterinformatioImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditfilterinformatioImage.SearchProperties[HtmlImage.PropertyNames.Id] = "edit_img_copy_n32abd5d6-fb15-4840-9d28-5cd69b973649";
                    this.mUIEditfilterinformatioImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditfilterinformatioImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/Plain/edit.png";
                    this.mUIEditfilterinformatioImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = null;
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.Href] = "#";
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=edit_img_copy_n32abd5d6-fb15-4840-9d2";
                    this.mUIEditfilterinformatioImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "107";
                    #endregion
                }
                return this.mUIEditfilterinformatioImage;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane5 mUICtl00_contentmain_taPane;
        
        private HtmlImage mUIEditfilterinformatioImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane5 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_tcDrop";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Standard Single Te...EqualsValue 1Standa";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv treediv-filters jstree jstree-3 jstree-default";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "183";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.FilterProperties["Class"] = "jstree-no-dots";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=jstree-no-dots sizset=\"0\" sizcache";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightMyCEWindowWindow : BrowserWindow
    {
        
        public UIGreenLightMyCEWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightMyCEDocument UIGreenLightMyCEDocument
        {
            get
            {
                if ((this.mUIGreenLightMyCEDocument == null))
                {
                    this.mUIGreenLightMyCEDocument = new UIGreenLightMyCEDocument(this);
                }
                return this.mUIGreenLightMyCEDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightMyCEDocument mUIGreenLightMyCEDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightMyCEDocument : HtmlDocument
    {
        
        public UIGreenLightMyCEDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=6314", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane6 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane6(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane6 mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane6 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcTree";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  age  Created By  Created On  currency\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-0 jstree-default";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "169";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow14 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow14()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument20 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument20(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument20 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument20 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=4654", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane7 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane7(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public UICtl00_contentmain_taPane11 UICtl00_contentmain_taPane1
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane1 == null))
                {
                    this.mUICtl00_contentmain_taPane1 = new UICtl00_contentmain_taPane11(this);
                }
                return this.mUICtl00_contentmain_taPane1;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane7 mUICtl00_contentmain_taPane;
        
        private UICtl00_contentmain_taPane11 mUICtl00_contentmain_taPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane7 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "166";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIMoveselectiontoSelecImage
        {
            get
            {
                if ((this.mUIMoveselectiontoSelecImage == null))
                {
                    this.mUIMoveselectiontoSelecImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection to Selected Fields";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_right.png";
                    this.mUIMoveselectiontoSelecImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_right.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIMoveselectiontoSelecImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIMoveselectiontoSelecImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane11 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "177";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIMoveselectiontoSelecImage
        {
            get
            {
                if ((this.mUIMoveselectiontoSelecImage == null))
                {
                    this.mUIMoveselectiontoSelecImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectiontoSelecImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection to Selected Filters";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_right.png";
                    this.mUIMoveselectiontoSelecImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_right.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIMoveselectiontoSelecImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIMoveselectiontoSelecImage;
            }
        }
        
        public HtmlImage UIMoveselectionupImage
        {
            get
            {
                if ((this.mUIMoveselectionupImage == null))
                {
                    this.mUIMoveselectionupImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectionupImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection up";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_open.png";
                    this.mUIMoveselectionupImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_open.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"POSITION: absolute; BORDER-RIGHT-";
                    this.mUIMoveselectionupImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUIMoveselectionupImage;
            }
        }
        
        public HtmlImage UIMoveselectiondownImage
        {
            get
            {
                if ((this.mUIMoveselectiondownImage == null))
                {
                    this.mUIMoveselectiondownImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveselectiondownImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move selection down";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_close.png";
                    this.mUIMoveselectiondownImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_close.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"POSITION: absolute; BORDER-RIGHT-";
                    this.mUIMoveselectiondownImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mUIMoveselectiondownImage;
            }
        }
        
        public HtmlImage UIRemoveselectionImage
        {
            get
            {
                if ((this.mUIRemoveselectionImage == null))
                {
                    this.mUIRemoveselectionImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIRemoveselectionImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Remove selection";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_left.png";
                    this.mUIRemoveselectionImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_left.png", PropertyExpressionOperator.Contains));
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIRemoveselectionImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIRemoveselectionImage;
            }
        }
        
        public HtmlImage UIRemoveallImage
        {
            get
            {
                if ((this.mUIRemoveallImage == null))
                {
                    this.mUIRemoveallImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIRemoveallImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Remove all";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_left2.png";
                    this.mUIRemoveallImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/static/icons/16/plain/navigate_left2.png", PropertyExpressionOperator.Contains));
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.Class] = "btn";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUIRemoveallImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIRemoveallImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIMoveselectiontoSelecImage;
        
        private HtmlImage mUIMoveselectionupImage;
        
        private HtmlImage mUIMoveselectiondownImage;
        
        private HtmlImage mUIRemoveselectionImage;
        
        private HtmlImage mUIRemoveallImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow15 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow15()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight: ", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument21 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument21(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument21 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument21 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=7212", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFields_tcFields_tcTree";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  Created By  Created On  Currency Attri";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv jstree jstree-0 jstree-default jstree-focused";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "169";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow16 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow16()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument22 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument22(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        
        public UIGreenLightCustomEntiDocument110 UIGreenLightCustomEntiDocument1
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument1 == null))
                {
                    this.mUIGreenLightCustomEntiDocument1 = new UIGreenLightCustomEntiDocument110(this);
                }
                return this.mUIGreenLightCustomEntiDocument1;
            }
        }
        
        public UIGreenLightCustomEntiDocument23 UIGreenLightCustomEntiDocument2
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument2 == null))
                {
                    this.mUIGreenLightCustomEntiDocument2 = new UIGreenLightCustomEntiDocument23(this);
                }
                return this.mUIGreenLightCustomEntiDocument2;
            }
        }
        
        public UIGreenLightCustomEntiDocument31 UIGreenLightCustomEntiDocument3
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument3 == null))
                {
                    this.mUIGreenLightCustomEntiDocument3 = new UIGreenLightCustomEntiDocument31(this);
                }
                return this.mUIGreenLightCustomEntiDocument3;
            }
        }
        
        public UIGreenLightCustomEntiDocument41 UIGreenLightCustomEntiDocument4
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument4 == null))
                {
                    this.mUIGreenLightCustomEntiDocument4 = new UIGreenLightCustomEntiDocument41(this);
                }
                return this.mUIGreenLightCustomEntiDocument4;
            }
        }
        
        public UIGreenLightCustomEntiDocument51 UIGreenLightCustomEntiDocument5
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument5 == null))
                {
                    this.mUIGreenLightCustomEntiDocument5 = new UIGreenLightCustomEntiDocument51(this);
                }
                return this.mUIGreenLightCustomEntiDocument5;
            }
        }
        
        public UIGreenLightCustomEntiDocument61 UIGreenLightCustomEntiDocument6
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument6 == null))
                {
                    this.mUIGreenLightCustomEntiDocument6 = new UIGreenLightCustomEntiDocument61(this);
                }
                return this.mUIGreenLightCustomEntiDocument6;
            }
        }
        
        public UIGreenLightCustomEntiDocument71 UIGreenLightCustomEntiDocument7
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument7 == null))
                {
                    this.mUIGreenLightCustomEntiDocument7 = new UIGreenLightCustomEntiDocument71(this);
                }
                return this.mUIGreenLightCustomEntiDocument7;
            }
        }
        
        public UIGreenLightCustomEntiDocument81 UIGreenLightCustomEntiDocument8
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument8 == null))
                {
                    this.mUIGreenLightCustomEntiDocument8 = new UIGreenLightCustomEntiDocument81(this);
                }
                return this.mUIGreenLightCustomEntiDocument8;
            }
        }
        
        public UIGreenLightCustomEntiDocument91 UIGreenLightCustomEntiDocument9
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument9 == null))
                {
                    this.mUIGreenLightCustomEntiDocument9 = new UIGreenLightCustomEntiDocument91(this);
                }
                return this.mUIGreenLightCustomEntiDocument9;
            }
        }
        
        public UIGreenLightCustomEntiDocument101 UIGreenLightCustomEntiDocument10
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument10 == null))
                {
                    this.mUIGreenLightCustomEntiDocument10 = new UIGreenLightCustomEntiDocument101(this);
                }
                return this.mUIGreenLightCustomEntiDocument10;
            }
        }
        
        public UIGreenLightCustomEntiDocument111 UIGreenLightCustomEntiDocument11
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument11 == null))
                {
                    this.mUIGreenLightCustomEntiDocument11 = new UIGreenLightCustomEntiDocument111(this);
                }
                return this.mUIGreenLightCustomEntiDocument11;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIGreenLightCustomEntiDocument121 UIGreenLightCustomEntiDocument12
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument12 == null))
                {
                    this.mUIGreenLightCustomEntiDocument12 = new UIGreenLightCustomEntiDocument121(this);
                }
                return this.mUIGreenLightCustomEntiDocument12;
            }
        }
        
        public UIGreenLightCustomEntiDocument131 UIGreenLightCustomEntiDocument13
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument13 == null))
                {
                    this.mUIGreenLightCustomEntiDocument13 = new UIGreenLightCustomEntiDocument131(this);
                }
                return this.mUIGreenLightCustomEntiDocument13;
            }
        }
        
        public UIGreenLightCustomEntiDocument141 UIGreenLightCustomEntiDocument14
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument14 == null))
                {
                    this.mUIGreenLightCustomEntiDocument14 = new UIGreenLightCustomEntiDocument141(this);
                }
                return this.mUIGreenLightCustomEntiDocument14;
            }
        }
        
        public UIGreenLightCustomEntiDocument151 UIGreenLightCustomEntiDocument15
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument15 == null))
                {
                    this.mUIGreenLightCustomEntiDocument15 = new UIGreenLightCustomEntiDocument151(this);
                }
                return this.mUIGreenLightCustomEntiDocument15;
            }
        }
        
        public UIGreenLightCustomEntiDocument161 UIGreenLightCustomEntiDocument16
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument16 == null))
                {
                    this.mUIGreenLightCustomEntiDocument16 = new UIGreenLightCustomEntiDocument161(this);
                }
                return this.mUIGreenLightCustomEntiDocument16;
            }
        }
        
        public UIGreenLightCustomEntiDocument171 UIGreenLightCustomEntiDocument17
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument17 == null))
                {
                    this.mUIGreenLightCustomEntiDocument17 = new UIGreenLightCustomEntiDocument171(this);
                }
                return this.mUIGreenLightCustomEntiDocument17;
            }
        }
        
        public UIGreenLightCustomEntiDocument181 UIGreenLightCustomEntiDocument18
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument18 == null))
                {
                    this.mUIGreenLightCustomEntiDocument18 = new UIGreenLightCustomEntiDocument181(this);
                }
                return this.mUIGreenLightCustomEntiDocument18;
            }
        }
        
        public UIGreenLightCustomEntiDocument191 UIGreenLightCustomEntiDocument19
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument19 == null))
                {
                    this.mUIGreenLightCustomEntiDocument19 = new UIGreenLightCustomEntiDocument191(this);
                }
                return this.mUIGreenLightCustomEntiDocument19;
            }
        }
        
        public UIGreenLightCustomEntiDocument201 UIGreenLightCustomEntiDocument20
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument20 == null))
                {
                    this.mUIGreenLightCustomEntiDocument20 = new UIGreenLightCustomEntiDocument201(this);
                }
                return this.mUIGreenLightCustomEntiDocument20;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument22 mUIGreenLightCustomEntiDocument;
        
        private UIGreenLightCustomEntiDocument110 mUIGreenLightCustomEntiDocument1;
        
        private UIGreenLightCustomEntiDocument23 mUIGreenLightCustomEntiDocument2;
        
        private UIGreenLightCustomEntiDocument31 mUIGreenLightCustomEntiDocument3;
        
        private UIGreenLightCustomEntiDocument41 mUIGreenLightCustomEntiDocument4;
        
        private UIGreenLightCustomEntiDocument51 mUIGreenLightCustomEntiDocument5;
        
        private UIGreenLightCustomEntiDocument61 mUIGreenLightCustomEntiDocument6;
        
        private UIGreenLightCustomEntiDocument71 mUIGreenLightCustomEntiDocument7;
        
        private UIGreenLightCustomEntiDocument81 mUIGreenLightCustomEntiDocument8;
        
        private UIGreenLightCustomEntiDocument91 mUIGreenLightCustomEntiDocument9;
        
        private UIGreenLightCustomEntiDocument101 mUIGreenLightCustomEntiDocument10;
        
        private UIGreenLightCustomEntiDocument111 mUIGreenLightCustomEntiDocument11;
        
        private UIItemWindow mUIItemWindow;
        
        private UIGreenLightCustomEntiDocument121 mUIGreenLightCustomEntiDocument12;
        
        private UIGreenLightCustomEntiDocument131 mUIGreenLightCustomEntiDocument13;
        
        private UIGreenLightCustomEntiDocument141 mUIGreenLightCustomEntiDocument14;
        
        private UIGreenLightCustomEntiDocument151 mUIGreenLightCustomEntiDocument15;
        
        private UIGreenLightCustomEntiDocument161 mUIGreenLightCustomEntiDocument16;
        
        private UIGreenLightCustomEntiDocument171 mUIGreenLightCustomEntiDocument17;
        
        private UIGreenLightCustomEntiDocument181 mUIGreenLightCustomEntiDocument18;
        
        private UIGreenLightCustomEntiDocument191 mUIGreenLightCustomEntiDocument19;
        
        private UIGreenLightCustomEntiDocument201 mUIGreenLightCustomEntiDocument20;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument22 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7395", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGreenlightTextUDFCustom1 UIGreenlightTextUDFCustom
        {
            get
            {
                if ((this.mUIGreenlightTextUDFCustom == null))
                {
                    this.mUIGreenlightTextUDFCustom = new UIGreenlightTextUDFCustom1(this);
                }
                return this.mUIGreenlightTextUDFCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenlightTextUDFCustom1 mUIGreenlightTextUDFCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenlightTextUDFCustom1 : HtmlCustom
    {
        
        public UIGreenlightTextUDFCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "k3e000d4f-d4d3-4b58-a701-454cdeedf60e_g972ac42d-6646-4efc-9323-35c2c9f95b62_n0ed8" +
                "c15d-19dc-4f6d-b6d0-e9440095b086";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=k3e000d4f-d4d3-4b58-a701-454cdeedf60e";
            this.FilterProperties["InnerText"] = "  Greenlight Text UDF";
            this.FilterProperties["TagInstance"] = "26";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGreenlightTextUDFHyperlink
        {
            get
            {
                if ((this.mUIGreenlightTextUDFHyperlink == null))
                {
                    this.mUIGreenlightTextUDFHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGreenlightTextUDFHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Greenlight Text UDF";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "jstree-clicked";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" class=jstree";
                    this.mUIGreenlightTextUDFHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIGreenlightTextUDFHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGreenlightTextUDFHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument110 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIK6b8681cceb73465b95eCustom UIK6b8681cceb73465b95eCustom
        {
            get
            {
                if ((this.mUIK6b8681cceb73465b95eCustom == null))
                {
                    this.mUIK6b8681cceb73465b95eCustom = new UIK6b8681cceb73465b95eCustom(this);
                }
                return this.mUIK6b8681cceb73465b95eCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIK6b8681cceb73465b95eCustom mUIK6b8681cceb73465b95eCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIK6b8681cceb73465b95eCustom : HtmlCustom
    {
        
        public UIK6b8681cceb73465b95eCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "k6b8681cc-eb73-465b-95ec-66589d241500";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-closed";
            this.FilterProperties["ControlDefinition"] = "id=k6b8681cc-eb73-465b-95ec-66589d241500";
            this.FilterProperties["InnerText"] = "  N : 1 Relationship Attribute to Custom";
            this.FilterProperties["TagInstance"] = "91";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIN1RelationshipAttribHyperlink
        {
            get
            {
                if ((this.mUIN1RelationshipAttribHyperlink == null))
                {
                    this.mUIN1RelationshipAttribHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIN1RelationshipAttribHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIN1RelationshipAttribHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIN1RelationshipAttribHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIN1RelationshipAttribHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " N : 1 Relationship Attribute to Custom Entity";
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIN1RelationshipAttribHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIN1RelationshipAttribHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIN1RelationshipAttribHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument23 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIAccountHolderNameCustom UIAccountHolderNameCustom
        {
            get
            {
                if ((this.mUIAccountHolderNameCustom == null))
                {
                    this.mUIAccountHolderNameCustom = new UIAccountHolderNameCustom(this);
                }
                return this.mUIAccountHolderNameCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAccountHolderNameCustom mUIAccountHolderNameCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAccountHolderNameCustom : HtmlCustom
    {
        
        public UIAccountHolderNameCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["InnerText"] = "  Account Holder Name";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAccountHolderNameHyperlink
        {
            get
            {
                if ((this.mUIAccountHolderNameHyperlink == null))
                {
                    this.mUIAccountHolderNameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAccountHolderNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAccountHolderNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAccountHolderNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAccountHolderNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Account Holder Name";
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "jstree-clicked";
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" class=jstree";
                    this.mUIAccountHolderNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIAccountHolderNameHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAccountHolderNameHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument31 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7467", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_taPane8 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane8(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_taPane8 mUICtl00_contentmain_taPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_taPane8 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields \r\n \r\n  Created By  Crea";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 882px; HEIGHT: 310px\" id=c";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "177";
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISelectedFiltersAccouPane
        {
            get
            {
                if ((this.mUISelectedFiltersAccouPane == null))
                {
                    this.mUISelectedFiltersAccouPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISelectedFiltersAccouPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISelectedFiltersAccouPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISelectedFiltersAccouPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Selected Filters \r\n \r\nAccount Holder Nam";
                    this.mUISelectedFiltersAccouPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISelectedFiltersAccouPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISelectedFiltersAccouPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 602px; DISPLAY: inline-blo";
                    this.mUISelectedFiltersAccouPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUISelectedFiltersAccouPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISelectedFiltersAccouPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument41 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIK22b15c9cc50a4cd68b5Custom UIK22b15c9cc50a4cd68b5Custom
        {
            get
            {
                if ((this.mUIK22b15c9cc50a4cd68b5Custom == null))
                {
                    this.mUIK22b15c9cc50a4cd68b5Custom = new UIK22b15c9cc50a4cd68b5Custom(this);
                }
                return this.mUIK22b15c9cc50a4cd68b5Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIK22b15c9cc50a4cd68b5Custom mUIK22b15c9cc50a4cd68b5Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIK22b15c9cc50a4cd68b5Custom : HtmlCustom
    {
        
        public UIK22b15c9cc50a4cd68b5Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "k22b15c9c-c50a-4cd6-8b5f-2149e442bd41";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-closed";
            this.FilterProperties["ControlDefinition"] = "id=k22b15c9c-c50a-4cd6-8b5f-2149e442bd41";
            this.FilterProperties["InnerText"] = "  n:1 to cars  Approved  Date Car create";
            this.FilterProperties["TagInstance"] = "96";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIN1tocarsHyperlink
        {
            get
            {
                if ((this.mUIN1tocarsHyperlink == null))
                {
                    this.mUIN1tocarsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIN1tocarsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIN1tocarsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIN1tocarsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIN1tocarsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " n:1 to cars";
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIN1tocarsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIN1tocarsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIN1tocarsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument51 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIVehicleEngineTypeCustom UIVehicleEngineTypeCustom
        {
            get
            {
                if ((this.mUIVehicleEngineTypeCustom == null))
                {
                    this.mUIVehicleEngineTypeCustom = new UIVehicleEngineTypeCustom(this);
                }
                return this.mUIVehicleEngineTypeCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVehicleEngineTypeCustom mUIVehicleEngineTypeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVehicleEngineTypeCustom : HtmlCustom
    {
        
        public UIVehicleEngineTypeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "k00b2b81b-d86b-4a5f-8bf6-14fc7e17b7ee_n24172542-3e15-4fca-b4f5-d7ffef9eed4e";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=k00b2b81b-d86b-4a5f-8bf6-14fc7e17b7ee";
            this.FilterProperties["InnerText"] = "  Vehicle Engine Type";
            this.FilterProperties["TagInstance"] = "117";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIVehicleEngineTypeHyperlink
        {
            get
            {
                if ((this.mUIVehicleEngineTypeHyperlink == null))
                {
                    this.mUIVehicleEngineTypeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIVehicleEngineTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIVehicleEngineTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIVehicleEngineTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIVehicleEngineTypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Vehicle Engine Type";
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "jstree-clicked";
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" class=jstree";
                    this.mUIVehicleEngineTypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIVehicleEngineTypeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIVehicleEngineTypeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument61 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument61(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnViewFilterSave";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnViewFilterSave";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-POSITION: left top\" id";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "80";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument71 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument71(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPetrolDieselLPG0SelePane UIPetrolDieselLPG0SelePane
        {
            get
            {
                if ((this.mUIPetrolDieselLPG0SelePane == null))
                {
                    this.mUIPetrolDieselLPG0SelePane = new UIPetrolDieselLPG0SelePane(this);
                }
                return this.mUIPetrolDieselLPG0SelePane;
            }
        }
        #endregion
        
        #region Fields
        private UIPetrolDieselLPG0SelePane mUIPetrolDieselLPG0SelePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPetrolDieselLPG0SelePane : HtmlDiv
    {
        
        public UIPetrolDieselLPG0SelePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nPetrol\r\nDiesel\r\nLPG\r\n0 Selected\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPetrolDieselLPGPane
        {
            get
            {
                if ((this.mUIPetrolDieselLPGPane == null))
                {
                    this.mUIPetrolDieselLPGPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPetrolDieselLPGPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPetrolDieselLPGPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPetrolDieselLPGPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\nPetrol\r\nDiesel\r\nLPG";
                    this.mUIPetrolDieselLPGPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPetrolDieselLPGPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "available";
                    this.mUIPetrolDieselLPGPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 295px; HEIGHT: 300px\" clas";
                    this.mUIPetrolDieselLPGPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIPetrolDieselLPGPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPetrolDieselLPGPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument81 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument81(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPetrolDieselLPG0SelePane1 UIPetrolDieselLPG0SelePane
        {
            get
            {
                if ((this.mUIPetrolDieselLPG0SelePane == null))
                {
                    this.mUIPetrolDieselLPG0SelePane = new UIPetrolDieselLPG0SelePane1(this);
                }
                return this.mUIPetrolDieselLPG0SelePane;
            }
        }
        #endregion
        
        #region Fields
        private UIPetrolDieselLPG0SelePane1 mUIPetrolDieselLPG0SelePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPetrolDieselLPG0SelePane1 : HtmlDiv
    {
        
        public UIPetrolDieselLPG0SelePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nPetrol\r\nDiesel\r\nLPG\r\n0 Selected\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPetrolCustom
        {
            get
            {
                if ((this.mUIPetrolCustom == null))
                {
                    this.mUIPetrolCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPetrolCustom.SearchProperties["Id"] = null;
                    this.mUIPetrolCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPetrolCustom.SearchProperties["TagName"] = "LI";
                    this.mUIPetrolCustom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIPetrolCustom.FilterProperties["ControlDefinition"] = "class=\"ui-state-default ui-element ui-dr";
                    this.mUIPetrolCustom.FilterProperties["InnerText"] = "Petrol";
                    this.mUIPetrolCustom.FilterProperties["TagInstance"] = "2";
                    #endregion
                }
                return this.mUIPetrolCustom;
            }
        }
        
        public HtmlCustom UIPetrolCustom1
        {
            get
            {
                if ((this.mUIPetrolCustom1 == null))
                {
                    this.mUIPetrolCustom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPetrolCustom1.SearchProperties["Id"] = null;
                    this.mUIPetrolCustom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPetrolCustom1.SearchProperties["TagName"] = "LI";
                    this.mUIPetrolCustom1.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable ui-state-hover ui-draggable-dragging ui-" +
                        "sortable-helper";
                    this.mUIPetrolCustom1.FilterProperties["ControlDefinition"] = "style=\"Z-INDEX: 1000; POSITION: absolute";
                    this.mUIPetrolCustom1.FilterProperties["InnerText"] = "Petrol";
                    this.mUIPetrolCustom1.FilterProperties["TagInstance"] = "8";
                    #endregion
                }
                return this.mUIPetrolCustom1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPetrolCustom;
        
        private HtmlCustom mUIPetrolCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument91 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument91(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=178069", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDieselLPGPetrol0SelePane UIDieselLPGPetrol0SelePane
        {
            get
            {
                if ((this.mUIDieselLPGPetrol0SelePane == null))
                {
                    this.mUIDieselLPGPetrol0SelePane = new UIDieselLPGPetrol0SelePane(this);
                }
                return this.mUIDieselLPGPetrol0SelePane;
            }
        }
        #endregion
        
        #region Fields
        private UIDieselLPGPetrol0SelePane mUIDieselLPGPetrol0SelePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDieselLPGPetrol0SelePane : HtmlDiv
    {
        
        public UIDieselLPGPetrol0SelePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nDiesel\r\nLPG\r\nPetrol\r\n0 Selected\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIDieselCustom
        {
            get
            {
                if ((this.mUIDieselCustom == null))
                {
                    this.mUIDieselCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIDieselCustom.SearchProperties["Id"] = null;
                    this.mUIDieselCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIDieselCustom.SearchProperties["TagName"] = "LI";
                    this.mUIDieselCustom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIDieselCustom.FilterProperties["ControlDefinition"] = "style=\"DISPLAY: list-item\" class=\"ui-sta";
                    this.mUIDieselCustom.FilterProperties["InnerText"] = "Diesel";
                    this.mUIDieselCustom.FilterProperties["TagInstance"] = "2";
                    #endregion
                }
                return this.mUIDieselCustom;
            }
        }
        
        public HtmlHyperlink UISharedadminaecustomeHyperlink
        {
            get
            {
                if ((this.mUISharedadminaecustomeHyperlink == null))
                {
                    this.mUISharedadminaecustomeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISharedadminaecustomeHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "action";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=action tabIndex=0 href=\"#\"  jQuery";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUISharedadminaecustomeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIDieselCustom;
        
        private HtmlHyperlink mUISharedadminaecustomeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument101 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument101(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_btnFilterSave";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$tabConViews$tabViewFilters$tcFilters$btnFilterSave";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-POSITION: left top\" id";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "80";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument111 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICurrencyAttributeCustom UICurrencyAttributeCustom
        {
            get
            {
                if ((this.mUICurrencyAttributeCustom == null))
                {
                    this.mUICurrencyAttributeCustom = new UICurrencyAttributeCustom(this);
                }
                return this.mUICurrencyAttributeCustom;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_moPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_moPane == null))
                {
                    this.mUICtl00_contentmain_moPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_modview_backgroundElement";
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalBackground";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 9995; POSITION: fixed; W";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "224";
                    #endregion
                }
                return this.mUICtl00_contentmain_moPane;
            }
        }
        
        public UIDateCustom1 UIDateCustom
        {
            get
            {
                if ((this.mUIDateCustom == null))
                {
                    this.mUIDateCustom = new UIDateCustom1(this);
                }
                return this.mUIDateCustom;
            }
        }
        
        public UIDecimalCustom UIDecimalCustom
        {
            get
            {
                if ((this.mUIDecimalCustom == null))
                {
                    this.mUIDecimalCustom = new UIDecimalCustom(this);
                }
                return this.mUIDecimalCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICurrencyAttributeCustom mUICurrencyAttributeCustom;
        
        private HtmlDiv mUICtl00_contentmain_moPane;
        
        private UIDateCustom1 mUIDateCustom;
        
        private UIDecimalCustom mUIDecimalCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICurrencyAttributeCustom : HtmlCustom
    {
        
        public UICurrencyAttributeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n5f5969f0-15fe-44d7-964f-829dc0b9f130";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n5f5969f0-15fe-44d7-964f-829dc0b9f130";
            this.FilterProperties["InnerText"] = "  Currency Attribute";
            this.FilterProperties["TagInstance"] = "43";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICurrencyAttributeHyperlink
        {
            get
            {
                if ((this.mUICurrencyAttributeHyperlink == null))
                {
                    this.mUICurrencyAttributeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Currency Attribute";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\" uns";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUICurrencyAttributeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICurrencyAttributeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDateCustom1 : HtmlCustom
    {
        
        public UIDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n8ea0e08e-d0b0-4aee-bb67-a888495d58bf";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n8ea0e08e-d0b0-4aee-bb67-a888495d58bf";
            this.FilterProperties["InnerText"] = "  Date";
            this.FilterProperties["TagInstance"] = "45";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDateHyperlink
        {
            get
            {
                if ((this.mUIDateHyperlink == null))
                {
                    this.mUIDateHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Date";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\" uns";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIDateHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDateHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDecimalCustom : HtmlCustom
    {
        
        public UIDecimalCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n846f98eb-29a0-46b0-b5cb-737bbb910222";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n846f98eb-29a0-46b0-b5cb-737bbb910222";
            this.FilterProperties["InnerText"] = "  Decimal";
            this.FilterProperties["TagInstance"] = "49";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDecimalHyperlink
        {
            get
            {
                if ((this.mUIDecimalHyperlink == null))
                {
                    this.mUIDecimalHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Decimal";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIDecimalHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDecimalHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "40965";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            #endregion
        }
        
        #region Properties
        public WinMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new WinMenuBar(this);
                    #region Search Criteria
                    this.mUIApplicationMenuBar.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
                    #endregion
                }
                return this.mUIApplicationMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuBar mUIApplicationMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument121 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument121(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDivFilterListPane UIDivFilterListPane
        {
            get
            {
                if ((this.mUIDivFilterListPane == null))
                {
                    this.mUIDivFilterListPane = new UIDivFilterListPane(this);
                }
                return this.mUIDivFilterListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFilterListPane mUIDivFilterListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFilterListPane : HtmlDiv
    {
        
        public UIDivFilterListPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nstandard list item 3\r\nstandard list ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIStandardlistitem2Custom
        {
            get
            {
                if ((this.mUIStandardlistitem2Custom == null))
                {
                    this.mUIStandardlistitem2Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem2Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem2Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem2Custom.FilterProperties["ControlDefinition"] = "style=\"DISPLAY: list-item\" class=\"ui-sta";
                    this.mUIStandardlistitem2Custom.FilterProperties["InnerText"] = "standard list item 2";
                    this.mUIStandardlistitem2Custom.FilterProperties["TagInstance"] = "8";
                    #endregion
                }
                return this.mUIStandardlistitem2Custom;
            }
        }
        
        public HtmlHyperlink UISharedadminaecustomeHyperlink
        {
            get
            {
                if ((this.mUISharedadminaecustomeHyperlink == null))
                {
                    this.mUISharedadminaecustomeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISharedadminaecustomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://chronos4.sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7319#" +
                        "";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "action";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=action href=\"#\" jQuery171000149030";
                    this.mUISharedadminaecustomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mUISharedadminaecustomeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIStandardlistitem2Custom;
        
        private HtmlHyperlink mUISharedadminaecustomeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument131 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument131(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDivFilterListPane1 UIDivFilterListPane
        {
            get
            {
                if ((this.mUIDivFilterListPane == null))
                {
                    this.mUIDivFilterListPane = new UIDivFilterListPane1(this);
                }
                return this.mUIDivFilterListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFilterListPane1 mUIDivFilterListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFilterListPane1 : HtmlDiv
    {
        
        public UIDivFilterListPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nstandard list item 6\r\n5 Selected\r\nst";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIISelectedListItemFilterPane
        {
            get
            {
                if ((this.mUIISelectedListItemFilterPane == null))
                {
                    this.mUIISelectedListItemFilterPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIISelectedListItemFilterPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIISelectedListItemFilterPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIISelectedListItemFilterPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "5 Selected\r\nstandard list item 1\r\nstanda";
                    this.mUIISelectedListItemFilterPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIISelectedListItemFilterPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "selected";
                    this.mUIISelectedListItemFilterPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 295px; HEIGHT: 300px\" clas";
                    this.mUIISelectedListItemFilterPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUIISelectedListItemFilterPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIISelectedListItemFilterPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument141 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument141(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7353", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIControlSelectedFilters
        {
            get
            {
                if ((this.mUIControlSelectedFilters == null))
                {
                    this.mUIControlSelectedFilters = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIControlSelectedFilters.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_tcDrop";
                    this.mUIControlSelectedFilters.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIControlSelectedFilters.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Standard ListEqualsstandard list item...";
                    this.mUIControlSelectedFilters.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIControlSelectedFilters.FilterProperties[HtmlDiv.PropertyNames.Class] = "treediv treediv-filters jstree jstree-3 jstree-default jstree-focused";
                    this.mUIControlSelectedFilters.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-IMAGE: none; HEIGHT: 2";
                    this.mUIControlSelectedFilters.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "183";
                    #endregion
                }
                return this.mUIControlSelectedFilters;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIControlSelectedFilters;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument151 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument151(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDivFilterListPane2 UIDivFilterListPane
        {
            get
            {
                if ((this.mUIDivFilterListPane == null))
                {
                    this.mUIDivFilterListPane = new UIDivFilterListPane2(this);
                }
                return this.mUIDivFilterListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFilterListPane2 mUIDivFilterListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFilterListPane2 : HtmlDiv
    {
        
        public UIDivFilterListPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "standard list item 1standard list item 2";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIStandardlistitem1Custom
        {
            get
            {
                if ((this.mUIStandardlistitem1Custom == null))
                {
                    this.mUIStandardlistitem1Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem1Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem1Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem1Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem1Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem1Custom.FilterProperties["ControlDefinition"] = "style=\"DISPLAY: list-item\" class=\"ui-sta";
                    this.mUIStandardlistitem1Custom.FilterProperties["InnerText"] = "standard list item 1";
                    this.mUIStandardlistitem1Custom.FilterProperties["TagInstance"] = "2";
                    #endregion
                }
                return this.mUIStandardlistitem1Custom;
            }
        }
        
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search empty ui-widget-content ui-corner-all";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search empty ui-widget-content ui";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIStandardlistitem1Custom;
        
        private HtmlEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument161 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument161(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISharedadminaecustomeHyperlink UISharedadminaecustomeHyperlink
        {
            get
            {
                if ((this.mUISharedadminaecustomeHyperlink == null))
                {
                    this.mUISharedadminaecustomeHyperlink = new UISharedadminaecustomeHyperlink(this);
                }
                return this.mUISharedadminaecustomeHyperlink;
            }
        }
        
        public UISharedadminaecustomeHyperlink1 UISharedadminaecustomeHyperlink1
        {
            get
            {
                if ((this.mUISharedadminaecustomeHyperlink1 == null))
                {
                    this.mUISharedadminaecustomeHyperlink1 = new UISharedadminaecustomeHyperlink1(this);
                }
                return this.mUISharedadminaecustomeHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private UISharedadminaecustomeHyperlink mUISharedadminaecustomeHyperlink;
        
        private UISharedadminaecustomeHyperlink1 mUISharedadminaecustomeHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISharedadminaecustomeHyperlink : HtmlHyperlink
    {
        
        public UISharedadminaecustomeHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "multiSelectRemoveAll";
            this.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7389#", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "remove-all";
            this.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=multiSelectRemoveAll class=remove-all";
            this.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "187";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIStaticicons16plainnaImage
        {
            get
            {
                if ((this.mUIStaticicons16plainnaImage == null))
                {
                    this.mUIStaticicons16plainnaImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_left2.png";
                    this.mUIStaticicons16plainnaImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/static/icons/16/plain/navigate_left2.png", PropertyExpressionOperator.Contains));
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIStaticicons16plainnaImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "src=\"/static/icons/16/plain/navigate_lef";
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIStaticicons16plainnaImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIStaticicons16plainnaImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISharedadminaecustomeHyperlink1 : HtmlHyperlink
    {
        
        public UISharedadminaecustomeHyperlink1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "multiSelectAddAll";
            this.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "add-all";
            this.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=multiSelectAddAll class=add-all href=";
            this.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "186";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIStaticicons16plainnaImage
        {
            get
            {
                if ((this.mUIStaticicons16plainnaImage == null))
                {
                    this.mUIStaticicons16plainnaImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIStaticicons16plainnaImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/16/plain/navigate_right2.png";
                    this.mUIStaticicons16plainnaImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/static/icons/16/plain/navigate_right2.png", PropertyExpressionOperator.Contains));
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIStaticicons16plainnaImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "src=\"/static/icons/16/plain/navigate_rig";
                    this.mUIStaticicons16plainnaImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIStaticicons16plainnaImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIStaticicons16plainnaImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument171 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument171(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDivFilterListPane3 UIDivFilterListPane
        {
            get
            {
                if ((this.mUIDivFilterListPane == null))
                {
                    this.mUIDivFilterListPane = new UIDivFilterListPane3(this);
                }
                return this.mUIDivFilterListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFilterListPane3 mUIDivFilterListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFilterListPane3 : HtmlDiv
    {
        
        public UIDivFilterListPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "standard list item 2standard list item 3";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIStandardlistitem2Custom
        {
            get
            {
                if ((this.mUIStandardlistitem2Custom == null))
                {
                    this.mUIStandardlistitem2Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem2Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem2Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem2Custom.FilterProperties["ControlDefinition"] = "style=\"DISPLAY: list-item\" class=\"ui-sta";
                    this.mUIStandardlistitem2Custom.FilterProperties["InnerText"] = "standard list item 2";
                    this.mUIStandardlistitem2Custom.FilterProperties["TagInstance"] = "2";
                    #endregion
                }
                return this.mUIStandardlistitem2Custom;
            }
        }
        
        public HtmlCustom UIStandardlistitem2Custom1
        {
            get
            {
                if ((this.mUIStandardlistitem2Custom1 == null))
                {
                    this.mUIStandardlistitem2Custom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem2Custom1.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem2Custom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem2Custom1.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem2Custom1.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable ui-state-hover ui-draggable-dragging ui-" +
                        "sortable-helper";
                    this.mUIStandardlistitem2Custom1.FilterProperties["ControlDefinition"] = "style=\"Z-INDEX: 1000; POSITION: absolute";
                    this.mUIStandardlistitem2Custom1.FilterProperties["InnerText"] = "standard list item 2";
                    this.mUIStandardlistitem2Custom1.FilterProperties["TagInstance"] = "11";
                    #endregion
                }
                return this.mUIStandardlistitem2Custom1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIStandardlistitem2Custom;
        
        private HtmlCustom mUIStandardlistitem2Custom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument181 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument181(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=7427", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDivFilterListPane4 UIDivFilterListPane
        {
            get
            {
                if ((this.mUIDivFilterListPane == null))
                {
                    this.mUIDivFilterListPane = new UIDivFilterListPane4(this);
                }
                return this.mUIDivFilterListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFilterListPane4 mUIDivFilterListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFilterListPane4 : HtmlDiv
    {
        
        public UIDivFilterListPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFilterList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nstandard list item 1\r\nstandard list ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"WIDTH: 400px; HEIGHT: 300px\" id=d";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIStandardlistitem4Custom
        {
            get
            {
                if ((this.mUIStandardlistitem4Custom == null))
                {
                    this.mUIStandardlistitem4Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem4Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem4Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem4Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem4Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem4Custom.FilterProperties["ControlDefinition"] = "class=\"ui-state-default ui-element ui-dr";
                    this.mUIStandardlistitem4Custom.FilterProperties["InnerText"] = "standard list item 4";
                    this.mUIStandardlistitem4Custom.FilterProperties["TagInstance"] = "5";
                    #endregion
                }
                return this.mUIStandardlistitem4Custom;
            }
        }
        
        public HtmlCustom UIStandardlistitem2Custom
        {
            get
            {
                if ((this.mUIStandardlistitem2Custom == null))
                {
                    this.mUIStandardlistitem2Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem2Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem2Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem2Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem2Custom.FilterProperties["ControlDefinition"] = "class=\"ui-state-default ui-element ui-dr";
                    this.mUIStandardlistitem2Custom.FilterProperties["InnerText"] = "standard list item 2";
                    this.mUIStandardlistitem2Custom.FilterProperties["TagInstance"] = "3";
                    #endregion
                }
                return this.mUIStandardlistitem2Custom;
            }
        }
        
        public HtmlCustom UIStandardlistitem1Custom
        {
            get
            {
                if ((this.mUIStandardlistitem1Custom == null))
                {
                    this.mUIStandardlistitem1Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem1Custom.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem1Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem1Custom.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem1Custom.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable";
                    this.mUIStandardlistitem1Custom.FilterProperties["ControlDefinition"] = "class=\"ui-state-default ui-element ui-dr";
                    this.mUIStandardlistitem1Custom.FilterProperties["InnerText"] = "standard list item 1";
                    this.mUIStandardlistitem1Custom.FilterProperties["TagInstance"] = "2";
                    #endregion
                }
                return this.mUIStandardlistitem1Custom;
            }
        }
        
        public HtmlCustom UIStandardlistitem1Custom1
        {
            get
            {
                if ((this.mUIStandardlistitem1Custom1 == null))
                {
                    this.mUIStandardlistitem1Custom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIStandardlistitem1Custom1.SearchProperties["Id"] = null;
                    this.mUIStandardlistitem1Custom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIStandardlistitem1Custom1.SearchProperties["TagName"] = "LI";
                    this.mUIStandardlistitem1Custom1.FilterProperties["Class"] = "ui-state-default ui-element ui-draggable ui-state-hover ui-draggable-dragging";
                    this.mUIStandardlistitem1Custom1.FilterProperties["ControlDefinition"] = "style=\"POSITION: absolute; WIDTH: 285px;";
                    this.mUIStandardlistitem1Custom1.FilterProperties["InnerText"] = "standard list item 1";
                    this.mUIStandardlistitem1Custom1.FilterProperties["TagInstance"] = "9";
                    #endregion
                }
                return this.mUIStandardlistitem1Custom1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIStandardlistitem4Custom;
        
        private HtmlCustom mUIStandardlistitem2Custom;
        
        private HtmlCustom mUIStandardlistitem1Custom;
        
        private HtmlCustom mUIStandardlistitem1Custom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument191 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument191(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=7650", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICurrencyAttributeCustom1 UICurrencyAttributeCustom
        {
            get
            {
                if ((this.mUICurrencyAttributeCustom == null))
                {
                    this.mUICurrencyAttributeCustom = new UICurrencyAttributeCustom1(this);
                }
                return this.mUICurrencyAttributeCustom;
            }
        }
        
        public HtmlDiv UICtl00_contentmain_moPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_moPane == null))
                {
                    this.mUICtl00_contentmain_moPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_modview_backgroundElement";
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalBackground";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 9995; POSITION: fixed; W";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "224";
                    #endregion
                }
                return this.mUICtl00_contentmain_moPane;
            }
        }
        
        public UIDateCustom2 UIDateCustom
        {
            get
            {
                if ((this.mUIDateCustom == null))
                {
                    this.mUIDateCustom = new UIDateCustom2(this);
                }
                return this.mUIDateCustom;
            }
        }
        
        public UIDecimalCustom1 UIDecimalCustom
        {
            get
            {
                if ((this.mUIDecimalCustom == null))
                {
                    this.mUIDecimalCustom = new UIDecimalCustom1(this);
                }
                return this.mUIDecimalCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICurrencyAttributeCustom1 mUICurrencyAttributeCustom;
        
        private HtmlDiv mUICtl00_contentmain_moPane;
        
        private UIDateCustom2 mUIDateCustom;
        
        private UIDecimalCustom1 mUIDecimalCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICurrencyAttributeCustom1 : HtmlCustom
    {
        
        public UICurrencyAttributeCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n4500c907-15f0-4682-b119-67cb930f0895";
            this.FilterProperties["InnerText"] = "  Currency Attribute";
            this.FilterProperties["TagInstance"] = "43";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICurrencyAttributeHyperlink
        {
            get
            {
                if ((this.mUICurrencyAttributeHyperlink == null))
                {
                    this.mUICurrencyAttributeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Currency Attribute";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\"  un";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUICurrencyAttributeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICurrencyAttributeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDateCustom2 : HtmlCustom
    {
        
        public UIDateCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n85327c64-5d2f-4a8e-9adf-61d873405b14";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n85327c64-5d2f-4a8e-9adf-61d873405b14";
            this.FilterProperties["InnerText"] = "  Date";
            this.FilterProperties["TagInstance"] = "45";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDateHyperlink
        {
            get
            {
                if ((this.mUIDateHyperlink == null))
                {
                    this.mUIDateHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDateHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Date";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\"  un";
                    this.mUIDateHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIDateHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDateHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDecimalCustom1 : HtmlCustom
    {
        
        public UIDecimalCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "nd4c78202-384e-4d1e-ac55-b00d3db27105";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=nd4c78202-384e-4d1e-ac55-b00d3db27105";
            this.FilterProperties["InnerText"] = "  Decimal";
            this.FilterProperties["TagInstance"] = "49";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDecimalHyperlink
        {
            get
            {
                if ((this.mUIDecimalHyperlink == null))
                {
                    this.mUIDecimalHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDecimalHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Decimal";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"MozUserSelect: none\" href=\"#\"  un";
                    this.mUIDecimalHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIDecimalHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDecimalHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument201 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument201(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlLabel UIValue1Label
        {
            get
            {
                if ((this.mUIValue1Label == null))
                {
                    this.mUIValue1Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_lblFilterValue1";
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIValue1Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_cmbFilterCriteria1";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Value 1*";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUIValue1Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "63";
                    #endregion
                }
                return this.mUIValue1Label;
            }
        }
        
        public HtmlLabel UINumber2Label
        {
            get
            {
                if ((this.mUINumber2Label == null))
                {
                    this.mUINumber2Label = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUINumber2Label.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_lblFilterValue2";
                    this.mUINumber2Label.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINumber2Label.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConViews_tabViewFilters_tcFilters_txtFilterCriteria2";
                    this.mUINumber2Label.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Number 2*";
                    this.mUINumber2Label.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUINumber2Label.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUINumber2Label.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "64";
                    #endregion
                }
                return this.mUINumber2Label;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUIValue1Label;
        
        private HtmlLabel mUINumber2Label;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightgreenlightWindow : BrowserWindow
    {
        
        public UIGreenLightgreenlightWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightgreenlightDocument UIGreenLightgreenlightDocument
        {
            get
            {
                if ((this.mUIGreenLightgreenlightDocument == null))
                {
                    this.mUIGreenLightgreenlightDocument = new UIGreenLightgreenlightDocument(this);
                }
                return this.mUIGreenLightgreenlightDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightgreenlightDocument mUIGreenLightgreenlightDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightgreenlightDocument : HtmlDocument
    {
        
        public UIGreenLightgreenlightDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIViewNameAsterisk
        {
            get
            {
                if ((this.mUIViewNameAsterisk == null))
                {
                    this.mUIViewNameAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIViewNameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewGeneralDetails_reqviewname";
                    this.mUIViewNameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIViewNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIViewNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIViewNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIViewNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIViewNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "284";
                    #endregion
                }
                return this.mUIViewNameAsterisk;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIViewNameAsterisk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow17 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow17()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument24 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument24(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument24 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument24 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=13815", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIIconPane
        {
            get
            {
                if ((this.mUIIconPane == null))
                {
                    this.mUIIconPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIIconPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewIcon";
                    this.mUIIconPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIconPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Icon";
                    this.mUIIconPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIconPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIIconPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConViews_t";
                    this.mUIIconPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "300";
                    #endregion
                }
                return this.mUIIconPane;
            }
        }
        
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "iconResultsRight";
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ">";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "active";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FONT-SIZE: 28pt\" id=iconResultsRi";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "350";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlSpan UIItemPane1
        {
            get
            {
                if ((this.mUIItemPane1 == null))
                {
                    this.mUIItemPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "iconResultsLeft";
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "<";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "active";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FONT-SIZE: 28pt\" id=iconResultsLe";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "349";
                    #endregion
                }
                return this.mUIItemPane1;
            }
        }
        
        public HtmlEdit UITxtViewCustomIconSeaEdit
        {
            get
            {
                if ((this.mUITxtViewCustomIconSeaEdit == null))
                {
                    this.mUITxtViewCustomIconSeaEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtViewCustomIconSeaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabConViews_tabViewIcon_txtViewCustomIconSearch";
                    this.mUITxtViewCustomIconSeaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabConViews$tabViewIcon$txtViewCustomIconSearch";
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "searchBox";
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConViews_tabView";
                    this.mUITxtViewCustomIconSeaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "67";
                    #endregion
                }
                return this.mUITxtViewCustomIconSeaEdit;
            }
        }
        
        public HtmlSpan UISearchPane
        {
            get
            {
                if ((this.mUISearchPane == null))
                {
                    this.mUISearchPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISearchPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "iconSearchButton";
                    this.mUISearchPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISearchPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUISearchPane.FilterProperties[HtmlDiv.PropertyNames.Title] = "Search";
                    this.mUISearchPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-icon-search searchButton";
                    this.mUISearchPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=iconSearchButton class=\"ui-icon-searc";
                    this.mUISearchPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "348";
                    #endregion
                }
                return this.mUISearchPane;
            }
        }
        
        public HtmlSpan UIClearsearchoptionsPane
        {
            get
            {
                if ((this.mUIClearsearchoptionsPane == null))
                {
                    this.mUIClearsearchoptionsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIClearsearchoptionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "iconSearchRemoveButton";
                    this.mUIClearsearchoptionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIClearsearchoptionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIClearsearchoptionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = "Clear search options";
                    this.mUIClearsearchoptionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-icon-close searchButton";
                    this.mUIClearsearchoptionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FILTER:  ; ZOOM: 1; DISPLAY: inli";
                    this.mUIClearsearchoptionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "347";
                    #endregion
                }
                return this.mUIClearsearchoptionsPane;
            }
        }
        
        public UISelectedIconSpanPane UISelectedIconSpanPane
        {
            get
            {
                if ((this.mUISelectedIconSpanPane == null))
                {
                    this.mUISelectedIconSpanPane = new UISelectedIconSpanPane(this);
                }
                return this.mUISelectedIconSpanPane;
            }
        }
        
        public HtmlSpan UIWindow_dialogpngPane
        {
            get
            {
                if ((this.mUIWindow_dialogpngPane == null))
                {
                    this.mUIWindow_dialogpngPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIWindow_dialogpngPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "selectedIconName";
                    this.mUIWindow_dialogpngPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIWindow_dialogpngPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "window_dialog.png";
                    this.mUIWindow_dialogpngPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIWindow_dialogpngPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIWindow_dialogpngPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=selectedIconName";
                    this.mUIWindow_dialogpngPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "345";
                    #endregion
                }
                return this.mUIWindow_dialogpngPane;
            }
        }
        
        public HtmlSpan UIViewIconResultsPane
        {
            get
            {
                if ((this.mUIViewIconResultsPane == null))
                {
                    this.mUIViewIconResultsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIViewIconResultsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "viewIconResults";
                    this.mUIViewIconResultsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIViewIconResultsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIViewIconResultsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIViewIconResultsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIViewIconResultsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"FILTER:  ; MARGIN-TOP: 15px; ZOOM";
                    this.mUIViewIconResultsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "351";
                    #endregion
                }
                return this.mUIViewIconResultsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIIconPane;
        
        private HtmlSpan mUIItemPane;
        
        private HtmlSpan mUIItemPane1;
        
        private HtmlEdit mUITxtViewCustomIconSeaEdit;
        
        private HtmlSpan mUISearchPane;
        
        private HtmlSpan mUIClearsearchoptionsPane;
        
        private UISelectedIconSpanPane mUISelectedIconSpanPane;
        
        private HtmlSpan mUIWindow_dialogpngPane;
        
        private HtmlSpan mUIViewIconResultsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISelectedIconSpanPane : HtmlSpan
    {
        
        public UISelectedIconSpanPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "selectedIconSpan";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=selectedIconSpan";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "342";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIStaticicons48plainwiImage
        {
            get
            {
                if ((this.mUIStaticicons48plainwiImage == null))
                {
                    this.mUIStaticicons48plainwiImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIStaticicons48plainwiImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIStaticicons48plainwiImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIStaticicons48plainwiImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIStaticicons48plainwiImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/static/icons/48/plain/window_dialog.png";
                    this.mUIStaticicons48plainwiImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/static/icons/48/plain/window_dialog.png", PropertyExpressionOperator.Contains));
                    this.mUIStaticicons48plainwiImage.FilterProperties[HtmlImage.PropertyNames.Class] = "selectedIcon";
                    this.mUIStaticicons48plainwiImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=selectedIcon src=\"/static/icons/48";
                    this.mUIStaticicons48plainwiImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIStaticicons48plainwiImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIStaticicons48plainwiImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightSetupTestiWindow : BrowserWindow
    {
        
        public UIGreenLightSetupTestiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLigh", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightSetupTestiDocument UIGreenLightSetupTestiDocument
        {
            get
            {
                if ((this.mUIGreenLightSetupTestiDocument == null))
                {
                    this.mUIGreenLightSetupTestiDocument = new UIGreenLightSetupTestiDocument(this);
                }
                return this.mUIGreenLightSetupTestiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightSetupTestiDocument mUIGreenLightSetupTestiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightSetupTestiDocument : HtmlDocument
    {
        
        public UIGreenLightSetupTestiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICurrencyAttributeCustom2 UICurrencyAttributeCustom
        {
            get
            {
                if ((this.mUICurrencyAttributeCustom == null))
                {
                    this.mUICurrencyAttributeCustom = new UICurrencyAttributeCustom2(this);
                }
                return this.mUICurrencyAttributeCustom;
            }
        }
        
        public UICtl00_contentmain_pnPane UICtl00_contentmain_pnPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_pnPane == null))
                {
                    this.mUICtl00_contentmain_pnPane = new UICtl00_contentmain_pnPane(this);
                }
                return this.mUICtl00_contentmain_pnPane;
            }
        }
        #endregion
        
        #region Fields
        private UICurrencyAttributeCustom2 mUICurrencyAttributeCustom;
        
        private UICtl00_contentmain_pnPane mUICtl00_contentmain_pnPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICurrencyAttributeCustom2 : HtmlCustom
    {
        
        public UICurrencyAttributeCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "n6665e9f8-bf83-4579-8dff-896a834af1c3";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "LI";
            this.FilterProperties["Class"] = "jstree-leaf";
            this.FilterProperties["ControlDefinition"] = "id=n6665e9f8-bf83-4579-8dff-896a834af1c3";
            this.FilterProperties["InnerText"] = "  Currency Attribute";
            this.FilterProperties["TagInstance"] = "5";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICurrencyAttributeHyperlink
        {
            get
            {
                if ((this.mUICurrencyAttributeHyperlink == null))
                {
                    this.mUICurrencyAttributeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICurrencyAttributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Currency Attribute";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUICurrencyAttributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUICurrencyAttributeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICurrencyAttributeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_contentmain_pnPane : HtmlDiv
    {
        
        public UICtl00_contentmain_pnPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnlview";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "View: Setup Testing 1\r\n  \r\nGeneral Detai";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpopup formpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10000; POSITION: fixed; ";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "183";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "formbuttons";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=formbuttons sizcache06712578694421";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "53";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiWindow18 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow18()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument25 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument25(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument25 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGreenLightCustomEntiDocument25 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=61667", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIColumnsHyperlink
        {
            get
            {
                if ((this.mUIColumnsHyperlink == null))
                {
                    this.mUIColumnsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIColumnsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewFields";
                    this.mUIColumnsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIColumnsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIColumnsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Columns";
                    this.mUIColumnsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIColumnsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIColumnsHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=61667#", PropertyExpressionOperator.Contains));
                    this.mUIColumnsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIColumnsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUIColumnsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "218";
                    #endregion
                }
                return this.mUIColumnsHyperlink;
            }
        }
        
        public HtmlHyperlink UIFiltersHyperlink
        {
            get
            {
                if ((this.mUIFiltersHyperlink == null))
                {
                    this.mUIFiltersHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFiltersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewFilters";
                    this.mUIFiltersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFiltersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFiltersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Filters";
                    this.mUIFiltersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIFiltersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIFiltersHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=61667#", PropertyExpressionOperator.Contains));
                    this.mUIFiltersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFiltersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUIFiltersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "219";
                    #endregion
                }
                return this.mUIFiltersHyperlink;
            }
        }
        
        public HtmlHyperlink UIIconHyperlink
        {
            get
            {
                if ((this.mUIIconHyperlink == null))
                {
                    this.mUIIconHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIIconHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewIcon";
                    this.mUIIconHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIIconHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIIconHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Icon";
                    this.mUIIconHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIIconHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIIconHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=61667#", PropertyExpressionOperator.Contains));
                    this.mUIIconHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIIconHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUIIconHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "220";
                    #endregion
                }
                return this.mUIIconHyperlink;
            }
        }
        
        public HtmlHyperlink UISortingHyperlink
        {
            get
            {
                if ((this.mUISortingHyperlink == null))
                {
                    this.mUISortingHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISortingHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConViews_tabViewSort";
                    this.mUISortingHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISortingHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISortingHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sorting";
                    this.mUISortingHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUISortingHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUISortingHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=61667#", PropertyExpressionOperator.Contains));
                    this.mUISortingHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISortingHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUISortingHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "221";
                    #endregion
                }
                return this.mUISortingHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIColumnsHyperlink;
        
        private HtmlHyperlink mUIFiltersHyperlink;
        
        private HtmlHyperlink mUIIconHyperlink;
        
        private HtmlHyperlink mUISortingHyperlink;
        #endregion
    }
}
