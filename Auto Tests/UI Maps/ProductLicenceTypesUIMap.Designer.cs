// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ProductLicenceTypesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ProductLicenceTypesUIMap
    {
        
        /// <summary>
        /// AddLicenceTypeWithCancel - Use 'AddLicenceTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddLicenceTypeWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uILicenceTypeDescriptiEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILicenceTypeDescriptiEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(61, 9));

            // Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
            uILicenceTypeDescriptiEdit.Text = this.AddLicenceTypeWithCancelParams.UILicenceTypeDescriptiEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(17, 16));
        }
        
        /// <summary>
        /// AddLicenceType - Use 'AddLicenceTypeParams' to pass parameters into this method.
        /// </summary>
        public void AddLicenceType()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uILicenceTypeDescriptiEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILicenceTypeDescriptiEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(65, 7));

            // Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
            uILicenceTypeDescriptiEdit.Text = this.AddLicenceTypeParams.UILicenceTypeDescriptiEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(23, 19));
        }
        
        /// <summary>
        /// ValidateAddLicenceType - Use 'ValidateAddLicenceTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddLicenceType()
        {
            #region Variable Declarations
            HtmlCell uI__CodedUIProductLiceCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Table.UI__CodedUIProductLiceCell;
            #endregion

            // Verify that '__CodedUI Product Licence Type' cell's property 'InnerText' equals '__CodedUI Product Licence Type'
            Assert.AreEqual(this.ValidateAddLicenceTypeExpectedValues.UI__CodedUIProductLiceCellInnerText, uI__CodedUIProductLiceCell.InnerText);
        }
        
        /// <summary>
        /// ValidateLicenceTypeDoesNotExist - Use 'ValidateLicenceTypeDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceTypeDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uI__CodedUIProductLiceCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Table.UI__CodedUIProductLiceCell;
            #endregion

            // Verify that '__CodedUI Product Licence Type' cell's property 'InnerText' is not equal to '__CodedUI Product Licence Type'
            Assert.AreNotEqual(this.ValidateLicenceTypeDoesNotExistExpectedValues.UI__CodedUIProductLiceCellInnerText, uI__CodedUIProductLiceCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddDuplicateLicenceType - Use 'ValidateAddDuplicateLicenceTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateLicenceType()
        {
            #region Variable Declarations
            HtmlDiv uIThisdefinitonalreadyPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIDivMasterPopupPane.UIThisdefinitonalreadyPane;
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'This definiton already exists and cannot' pane's property 'InnerText' equals 'This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateLicenceTypeExpectedValues.UIThisdefinitonalreadyPaneInnerText, uIThisdefinitonalreadyPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateLicenceTypeExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// EditLicenceTypeWithCancel - Use 'EditLicenceTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Row.UIEditImage;
            HtmlEdit uILicenceTypeDescriptiEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILicenceTypeDescriptiEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(7, 7));

            // Type '__CodedUI Product Licence Type EDITED' in 'Licence Type Description *' text box
            uILicenceTypeDescriptiEdit.Text = this.EditLicenceTypeWithCancelParams.UILicenceTypeDescriptiEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(25, 23));
        }
        
        /// <summary>
        /// EditLicenceType - Use 'EditLicenceTypeParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceType()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Row.UIEditImage;
            HtmlEdit uILicenceTypeDescriptiEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILicenceTypeDescriptiEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(10, 0));

            // Type '__CodedUI Product Licence Type EDITED' in 'Licence Type Description *' text box
            uILicenceTypeDescriptiEdit.Text = this.EditLicenceTypeParams.UILicenceTypeDescriptiEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(18, 12));
        }
        
        /// <summary>
        /// ValidateEditLicenceType - Use 'ValidateEditLicenceTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditLicenceType()
        {
            #region Variable Declarations
            HtmlCell uI__CodedUIProductLiceCell1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Table.UI__CodedUIProductLiceCell1;
            #endregion

            // Verify that '__CodedUI Product Licence Type EDITED' cell's property 'InnerText' equals '__CodedUI Product Licence Type EDITED'
            Assert.AreEqual(this.ValidateEditLicenceTypeExpectedValues.UI__CodedUIProductLiceCell1InnerText, uI__CodedUIProductLiceCell1.InnerText);
        }
        
        /// <summary>
        /// EditLicenceTypeResetValues - Use 'EditLicenceTypeResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditLicenceTypeResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Row1.UIEditImage;
            HtmlEdit uILicenceTypeDescriptiEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILicenceTypeDescriptiEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 9));

            // Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
            uILicenceTypeDescriptiEdit.Text = this.EditLicenceTypeResetValuesParams.UILicenceTypeDescriptiEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(36, 10));
        }
        
        /// <summary>
        /// DeleteLicenceTypeWithCancel
        /// </summary>
        public void DeleteLicenceTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 9));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteLicenceType
        /// </summary>
        public void DeleteLicenceType()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(10, 11));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ArchiveLicenceTypeWithCancel
        /// </summary>
        public void ArchiveLicenceTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(7, 10));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveLicenceType
        /// </summary>
        public void ArchiveLicenceType()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(11, 9));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveLicenceTypeWithCancel
        /// </summary>
        public void UnArchiveLicenceTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(14, 7));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveLicenceType
        /// </summary>
        public void UnArchiveLicenceType()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(6, 9));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateLicenceTypeIsNotArchived - Use 'ValidateLicenceTypeIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceTypeIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateLicenceTypeIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateLicenceTypeIsArchived - Use 'ValidateLicenceTypeIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceTypeIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_b9f161fc_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateLicenceTypeIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateLicenceTypePageLayout - Use 'ValidateLicenceTypePageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateLicenceTypePageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIProductLicenceTypesPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIProductLicenceTypesPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIMrJamesLloydActiveSuPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIMrJamesLloydActiveSuPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            #endregion

            // Verify that 'Product Licence Types' pane's property 'DisplayText' equals 'Product Licence Types'
            Assert.AreEqual(this.ValidateLicenceTypePageLayoutExpectedValues.UIProductLicenceTypesPaneDisplayText, uIProductLicenceTypesPane.DisplayText);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'DisplayText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Product Licence Types '
            Assert.AreEqual(this.ValidateLicenceTypePageLayoutExpectedValues.UIAboutSwitchSubAccounPaneDisplayText, uIAboutSwitchSubAccounPane.DisplayText);

            // Verify that 'Page Options Add Definition' pane's property 'DisplayText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateLicenceTypePageLayoutExpectedValues.UIPageOptionsAddDefiniPaneDisplayText, uIPageOptionsAddDefiniPane.DisplayText);

            // Verify that 'Mr James Lloyd | Active Sub Account: Fra' pane's property 'DisplayText' contains 'James Lloyd | Active Sub Account: Framework Development | 12 October 2010 '
            StringAssert.Contains(uIMrJamesLloydActiveSuPane.DisplayText, this.ValidateLicenceTypePageLayoutExpectedValues.UIMrJamesLloydActiveSuPaneDisplayText);

            // Verify that 'Base Definitions' pane's property 'DisplayText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateLicenceTypePageLayoutExpectedValues.UIBaseDefinitionsPaneDisplayText, uIBaseDefinitionsPane.DisplayText);
        }
        
        /// <summary>
        /// CancelDuplicateMessage
        /// </summary>
        public void CancelDuplicateMessage()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument1.UIOKImage;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument1.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(21, 14));

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(30, 18));
        }
        
        #region Properties
        public virtual AddLicenceTypeWithCancelParams AddLicenceTypeWithCancelParams
        {
            get
            {
                if ((this.mAddLicenceTypeWithCancelParams == null))
                {
                    this.mAddLicenceTypeWithCancelParams = new AddLicenceTypeWithCancelParams();
                }
                return this.mAddLicenceTypeWithCancelParams;
            }
        }
        
        public virtual AddLicenceTypeParams AddLicenceTypeParams
        {
            get
            {
                if ((this.mAddLicenceTypeParams == null))
                {
                    this.mAddLicenceTypeParams = new AddLicenceTypeParams();
                }
                return this.mAddLicenceTypeParams;
            }
        }
        
        public virtual ValidateAddLicenceTypeExpectedValues ValidateAddLicenceTypeExpectedValues
        {
            get
            {
                if ((this.mValidateAddLicenceTypeExpectedValues == null))
                {
                    this.mValidateAddLicenceTypeExpectedValues = new ValidateAddLicenceTypeExpectedValues();
                }
                return this.mValidateAddLicenceTypeExpectedValues;
            }
        }
        
        public virtual ValidateLicenceTypeDoesNotExistExpectedValues ValidateLicenceTypeDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceTypeDoesNotExistExpectedValues == null))
                {
                    this.mValidateLicenceTypeDoesNotExistExpectedValues = new ValidateLicenceTypeDoesNotExistExpectedValues();
                }
                return this.mValidateLicenceTypeDoesNotExistExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateLicenceTypeExpectedValues ValidateAddDuplicateLicenceTypeExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateLicenceTypeExpectedValues == null))
                {
                    this.mValidateAddDuplicateLicenceTypeExpectedValues = new ValidateAddDuplicateLicenceTypeExpectedValues();
                }
                return this.mValidateAddDuplicateLicenceTypeExpectedValues;
            }
        }
        
        public virtual EditLicenceTypeWithCancelParams EditLicenceTypeWithCancelParams
        {
            get
            {
                if ((this.mEditLicenceTypeWithCancelParams == null))
                {
                    this.mEditLicenceTypeWithCancelParams = new EditLicenceTypeWithCancelParams();
                }
                return this.mEditLicenceTypeWithCancelParams;
            }
        }
        
        public virtual EditLicenceTypeParams EditLicenceTypeParams
        {
            get
            {
                if ((this.mEditLicenceTypeParams == null))
                {
                    this.mEditLicenceTypeParams = new EditLicenceTypeParams();
                }
                return this.mEditLicenceTypeParams;
            }
        }
        
        public virtual ValidateEditLicenceTypeExpectedValues ValidateEditLicenceTypeExpectedValues
        {
            get
            {
                if ((this.mValidateEditLicenceTypeExpectedValues == null))
                {
                    this.mValidateEditLicenceTypeExpectedValues = new ValidateEditLicenceTypeExpectedValues();
                }
                return this.mValidateEditLicenceTypeExpectedValues;
            }
        }
        
        public virtual EditLicenceTypeResetValuesParams EditLicenceTypeResetValuesParams
        {
            get
            {
                if ((this.mEditLicenceTypeResetValuesParams == null))
                {
                    this.mEditLicenceTypeResetValuesParams = new EditLicenceTypeResetValuesParams();
                }
                return this.mEditLicenceTypeResetValuesParams;
            }
        }
        
        public virtual ValidateLicenceTypeIsNotArchivedExpectedValues ValidateLicenceTypeIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceTypeIsNotArchivedExpectedValues == null))
                {
                    this.mValidateLicenceTypeIsNotArchivedExpectedValues = new ValidateLicenceTypeIsNotArchivedExpectedValues();
                }
                return this.mValidateLicenceTypeIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateLicenceTypeIsArchivedExpectedValues ValidateLicenceTypeIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceTypeIsArchivedExpectedValues == null))
                {
                    this.mValidateLicenceTypeIsArchivedExpectedValues = new ValidateLicenceTypeIsArchivedExpectedValues();
                }
                return this.mValidateLicenceTypeIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateLicenceTypePageLayoutExpectedValues ValidateLicenceTypePageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateLicenceTypePageLayoutExpectedValues == null))
                {
                    this.mValidateLicenceTypePageLayoutExpectedValues = new ValidateLicenceTypePageLayoutExpectedValues();
                }
                return this.mValidateLicenceTypePageLayoutExpectedValues;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddLicenceTypeWithCancelParams mAddLicenceTypeWithCancelParams;
        
        private AddLicenceTypeParams mAddLicenceTypeParams;
        
        private ValidateAddLicenceTypeExpectedValues mValidateAddLicenceTypeExpectedValues;
        
        private ValidateLicenceTypeDoesNotExistExpectedValues mValidateLicenceTypeDoesNotExistExpectedValues;
        
        private ValidateAddDuplicateLicenceTypeExpectedValues mValidateAddDuplicateLicenceTypeExpectedValues;
        
        private EditLicenceTypeWithCancelParams mEditLicenceTypeWithCancelParams;
        
        private EditLicenceTypeParams mEditLicenceTypeParams;
        
        private ValidateEditLicenceTypeExpectedValues mValidateEditLicenceTypeExpectedValues;
        
        private EditLicenceTypeResetValuesParams mEditLicenceTypeResetValuesParams;
        
        private ValidateLicenceTypeIsNotArchivedExpectedValues mValidateLicenceTypeIsNotArchivedExpectedValues;
        
        private ValidateLicenceTypeIsArchivedExpectedValues mValidateLicenceTypeIsArchivedExpectedValues;
        
        private ValidateLicenceTypePageLayoutExpectedValues mValidateLicenceTypePageLayoutExpectedValues;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddLicenceTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddLicenceTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
        /// </summary>
        public string UILicenceTypeDescriptiEditText = "__CodedUI Product Licence Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddLicenceType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddLicenceTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
        /// </summary>
        public string UILicenceTypeDescriptiEditText = "__CodedUI Product Licence Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddLicenceType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddLicenceTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__CodedUI Product Licence Type' cell's property 'InnerText' equals '__CodedUI Product Licence Type'
        /// </summary>
        public string UI__CodedUIProductLiceCellInnerText = "__CodedUI Product Licence Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceTypeDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceTypeDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__CodedUI Product Licence Type' cell's property 'InnerText' is not equal to '__CodedUI Product Licence Type'
        /// </summary>
        public string UI__CodedUIProductLiceCellInnerText = "__CodedUI Product Licence Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateLicenceType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateLicenceTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'This definiton already exists and cannot' pane's property 'InnerText' equals 'This definiton already exists and cannot be added'
        /// </summary>
        public string UIThisdefinitonalreadyPaneInnerText = "This definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__CodedUI Product Licence Type EDITED' in 'Licence Type Description *' text box
        /// </summary>
        public string UILicenceTypeDescriptiEditText = "__CodedUI Product Licence Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__CodedUI Product Licence Type EDITED' in 'Licence Type Description *' text box
        /// </summary>
        public string UILicenceTypeDescriptiEditText = "__CodedUI Product Licence Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditLicenceType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditLicenceTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__CodedUI Product Licence Type EDITED' cell's property 'InnerText' equals '__CodedUI Product Licence Type EDITED'
        /// </summary>
        public string UI__CodedUIProductLiceCell1InnerText = "__CodedUI Product Licence Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditLicenceTypeResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditLicenceTypeResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__CodedUI Product Licence Type' in 'Licence Type Description *' text box
        /// </summary>
        public string UILicenceTypeDescriptiEditText = "__CodedUI Product Licence Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceTypeIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceTypeIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceTypeIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceTypeIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateLicenceTypePageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateLicenceTypePageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Product Licence Types' pane's property 'DisplayText' equals 'Product Licence Types'
        /// </summary>
        public string UIProductLicenceTypesPaneDisplayText = "Product Licence Types";
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'DisplayText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Product Information : Product Licence Types '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneDisplayText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Product Information : Product Licence Types ";
        
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'DisplayText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneDisplayText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'Mr James Lloyd | Active Sub Account: Fra' pane's property 'DisplayText' contains 'James Lloyd | Active Sub Account: Framework Development | 12 October 2010 '
        /// </summary>
        public string UIMrJamesLloydActiveSuPaneDisplayText = "James Lloyd | Active Sub Account: Framework Development | 12 October 2010 ";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'DisplayText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneDisplayText = "Base Definitions";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        
        public UIBaseDefinitionsDocument1 UIBaseDefinitionsDocument1
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument1 == null))
                {
                    this.mUIBaseDefinitionsDocument1 = new UIBaseDefinitionsDocument1(this);
                }
                return this.mUIBaseDefinitionsDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        
        private UIBaseDefinitionsDocument1 mUIBaseDefinitionsDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=136";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UILicenceTypeDescriptiEdit
        {
            get
            {
                if ((this.mUILicenceTypeDescriptiEdit == null))
                {
                    this.mUILicenceTypeDescriptiEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILicenceTypeDescriptiEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_licencetypes_description";
                    this.mUILicenceTypeDescriptiEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_licencetypes_description";
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Licence Type Description *";
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_licencetyp";
                    this.mUILicenceTypeDescriptiEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUILicenceTypeDescriptiEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUILicenceTypeDescriptiEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "17";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_b9f161fc_Table UITbl_bdGrid_b9f161fc_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_b9f161fc_Table == null))
                {
                    this.mUITbl_bdGrid_b9f161fc_Table = new UITbl_bdGrid_b9f161fc_Table(this);
                }
                return this.mUITbl_bdGrid_b9f161fc_Table;
            }
        }
        
        public UIDivMasterPopupPane UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new UIDivMasterPopupPane(this);
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UITbl_bdGrid_b9f161fc_Row UITbl_bdGrid_b9f161fc_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_b9f161fc_Row == null))
                {
                    this.mUITbl_bdGrid_b9f161fc_Row = new UITbl_bdGrid_b9f161fc_Row(this);
                }
                return this.mUITbl_bdGrid_b9f161fc_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "20";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_b9f161fc_Row1 UITbl_bdGrid_b9f161fc_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_b9f161fc_Row1 == null))
                {
                    this.mUITbl_bdGrid_b9f161fc_Row1 = new UITbl_bdGrid_b9f161fc_Row1(this);
                }
                return this.mUITbl_bdGrid_b9f161fc_Row1;
            }
        }
        
        public UITbl_bdGrid_b9f161fc_Cell UITbl_bdGrid_b9f161fc_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_b9f161fc_Cell == null))
                {
                    this.mUITbl_bdGrid_b9f161fc_Cell = new UITbl_bdGrid_b9f161fc_Cell(this);
                }
                return this.mUITbl_bdGrid_b9f161fc_Cell;
            }
        }
        
        public HtmlDiv UIProductLicenceTypesPane
        {
            get
            {
                if ((this.mUIProductLicenceTypesPane == null))
                {
                    this.mUIProductLicenceTypesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIProductLicenceTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIProductLicenceTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIProductLicenceTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Product Licence Types";
                    this.mUIProductLicenceTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIProductLicenceTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIProductLicenceTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIProductLicenceTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIProductLicenceTypesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIProductLicenceTypesPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUILicenceTypeDescriptiEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_b9f161fc_Table mUITbl_bdGrid_b9f161fc_Table;
        
        private UIDivMasterPopupPane mUIDivMasterPopupPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UITbl_bdGrid_b9f161fc_Row mUITbl_bdGrid_b9f161fc_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_b9f161fc_Row1 mUITbl_bdGrid_b9f161fc_Row1;
        
        private UITbl_bdGrid_b9f161fc_Cell mUITbl_bdGrid_b9f161fc_Cell;
        
        private HtmlDiv mUIProductLicenceTypesPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_b9f161fc_Table : HtmlTable
    {
        
        public UITbl_bdGrid_b9f161fc_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_b9f161fc_1888_435d_bf23_10ba0069de53";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Licence Type Description \r\n__CodedUI Pro";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_b9f161fc_1888_435d_bf23_10";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UI__CodedUIProductLiceCell
        {
            get
            {
                if ((this.mUI__CodedUIProductLiceCell == null))
                {
                    this.mUI__CodedUIProductLiceCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__CodedUIProductLiceCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__CodedUIProductLiceCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__CodedUIProductLiceCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__CodedUI Product Licence Type";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__CodedUIProductLiceCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUI__CodedUIProductLiceCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUI__CodedUIProductLiceCell;
            }
        }
        
        public HtmlCell UI__CodedUIProductLiceCell1
        {
            get
            {
                if ((this.mUI__CodedUIProductLiceCell1 == null))
                {
                    this.mUI__CodedUIProductLiceCell1 = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__CodedUIProductLiceCell1.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__CodedUIProductLiceCell1.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__CodedUIProductLiceCell1.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__CodedUI Product Licence Type EDITED";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__CodedUIProductLiceCell1.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUI__CodedUIProductLiceCell1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUI__CodedUIProductLiceCell1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUI__CodedUIProductLiceCell;
        
        private HtmlCell mUI__CodedUIProductLiceCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDivMasterPopupPane : HtmlDiv
    {
        
        public UIDivMasterPopupPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIThisdefinitonalreadyPane
        {
            get
            {
                if ((this.mUIThisdefinitonalreadyPane == null))
                {
                    this.mUIThisdefinitonalreadyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIThisdefinitonalreadyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIThisdefinitonalreadyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "This definiton already exists and cannot";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModalBody";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=errorModalBody";
                    this.mUIThisdefinitonalreadyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIThisdefinitonalreadyPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIThisdefinitonalreadyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIThisdefinitonalreadyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_b9f161fc_Row : HtmlRow
    {
        
        public UITbl_bdGrid_b9f161fc_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_b9f161fc_1888_435d_bf23_10ba0069de53___CodedUI Product Licence Type";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__CodedUI Product Licence Type";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_b9f161fc_1888_435d_bf23_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "baseDefObject.editDefinition(9);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(9);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"http://fwtest.sel-expenses";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "baseDefObject.deleteDefinition(9);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:baseDefObject.deleteDefinition(9);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"http://fwtest.sel-expens";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_b9f161fc_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_b9f161fc_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_b9f161fc_1888_435d_bf23_10ba0069de53___CodedUI Product Licence Type ED" +
                "ITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__CodedUI Product Licence Type EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_b9f161fc_1888_435d_bf23_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "baseDefObject.editDefinition(9);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(9);";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"http://fwtest.sel-expenses";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_b9f161fc_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_b9f161fc_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_b9f161fc_1888_435d_bf23_10ba0069de53___CodedUI Product Licence Type_ar" +
                "chiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_b9f161fc_1888_435d_bf23_1";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "baseDefObject.archiveDefinition(10);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:baseDefObject.archiveDefinition(10);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"http://fwtest.sel-exp";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "baseDefObject.archiveDefinition(10);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:baseDefObject.archiveDefinition(10);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"http://fwtest.sel-";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr James Lloyd | Active Sub Account: Fra";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMrJamesLloydActiveSuPane
        {
            get
            {
                if ((this.mUIMrJamesLloydActiveSuPane == null))
                {
                    this.mUIMrJamesLloydActiveSuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMrJamesLloydActiveSuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMrJamesLloydActiveSuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMrJamesLloydActiveSuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mr James Lloyd | Active Sub Account: Fra";
                    this.mUIMrJamesLloydActiveSuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMrJamesLloydActiveSuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIMrJamesLloydActiveSuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIMrJamesLloydActiveSuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIMrJamesLloydActiveSuPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIMrJamesLloydActiveSuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMrJamesLloydActiveSuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument1 : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=136";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIOKImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIOKImage;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        #endregion
    }
}
