// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ColoursUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class ColoursUIMap
    {
        
        /// <summary>
        /// PressCancel
        /// </summary>
        public void PressCancel()
        {
            #region Variable Declarations
            HtmlInputButton uICancelButton = this.UIColoursWindowsInternWindow.UIColoursDocument.UICancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(uICancelButton, new Point(49, 18));
        }
        
        /// <summary>
        /// PressCancelToStopRestoringDefaults
        /// </summary>
        public void PressCancelToStopRestoringDefaults()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(52, 14));
        }
        
        /// <summary>
        /// PressCloseInvalidColoursModal
        /// </summary>
        public void PressCloseInvalidColoursModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIColoursWindowsInternWindow.UIColoursDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(23, 18));
        }
        
        /// <summary>
        /// PressOKToRestoreDefaults
        /// </summary>
        public void PressOKToRestoreDefaults()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(28, 14));
        }
        
        /// <summary>
        /// PressRestoreDefault
        /// </summary>
        public void PressRestoreDefault()
        {
            #region Variable Declarations
            HtmlInputButton uIRestoredefaultsButton = this.UIColoursWindowsInternWindow.UIColoursDocument.UIRestoredefaultsButton;
            #endregion

            // Click 'restore defaults' button
            Mouse.Click(uIRestoredefaultsButton, new Point(78, 16));
        }
        
        /// <summary>
        /// PressSave
        /// </summary>
        public void PressSave()
        {
            #region Variable Declarations
            HtmlInputButton uISaveButton = this.UIColoursWindowsInternWindow.UIColoursDocument.UISaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(uISaveButton, new Point(33, 23));
        }
        
        /// <summary>
        /// ValidateInvalidColoursModal - Use 'ValidateInvalidColoursModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateInvalidColoursModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UIColoursWindowsInternWindow.UIColoursDocument.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //The value you have entered for the menu bar background colour appears to be incorrect.
            //The value you have entered for the menu bar foreground colour appears to be incorrect.
            //The value you have entered for the title bar background colour appears to be incorrect.
            //The value you have entered for the title bar foreground colour appears to be incorrect.
            //The value you have entered for the field background colour appears to be incorrect.
            //The value you have entered for the field text colour appears to be incorrect.
            //The value you have entered for the row background colour appears to be incorrect.
            //The value you have entered for the row foreground colour appears to be incorrect.
            //The value you have entered for the alternate row background colour appears to be incorrect.
            //The value you have entered for the alternate row foreground colour appears to be incorrect.
            //The value you have entered for the hover colour appears to be incorrect.
            //The value you have entered for the page option colour appears to be incorrect.
            //The value you have entered for the GreenLight Field colour appears to be incorrect.
            //The value you have entered for the GreenLight Section Text colour appears to be incorrect.
            //The value you have entered for the GreenLight Section Background colour appears to be incorrect.
            //The value you have entered for the GreenLight Section Underline colour appears to be incorrect.'
            Assert.AreEqual(this.ValidateInvalidColoursModalExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateRestoreDefaultsMessage - Use 'ValidateRestoreDefaultsMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateRestoreDefaultsMessage()
        {
            #region Variable Declarations
            WinText uIThiswillrestoreallofText = this.UIMessagefromwebpageWindow.UIThiswillrestoreallofWindow.UIThiswillrestoreallofText;
            #endregion

            // Verify that the 'DisplayText' property of 'This will restore all of the colours back to their...' label equals 'This will restore all of the colours back to their default values.
            //Are you sure you want to do this?'
            Assert.AreEqual(this.ValidateRestoreDefaultsMessageExpectedValues.UIThiswillrestoreallofTextDisplayText, uIThiswillrestoreallofText.DisplayText);
        }
        
        #region Properties
        public virtual ValidateInvalidColoursModalExpectedValues ValidateInvalidColoursModalExpectedValues
        {
            get
            {
                if ((this.mValidateInvalidColoursModalExpectedValues == null))
                {
                    this.mValidateInvalidColoursModalExpectedValues = new ValidateInvalidColoursModalExpectedValues();
                }
                return this.mValidateInvalidColoursModalExpectedValues;
            }
        }
        
        public virtual ValidateRestoreDefaultsMessageExpectedValues ValidateRestoreDefaultsMessageExpectedValues
        {
            get
            {
                if ((this.mValidateRestoreDefaultsMessageExpectedValues == null))
                {
                    this.mValidateRestoreDefaultsMessageExpectedValues = new ValidateRestoreDefaultsMessageExpectedValues();
                }
                return this.mValidateRestoreDefaultsMessageExpectedValues;
            }
        }
        
        public UIColoursWindowsInternWindow UIColoursWindowsInternWindow
        {
            get
            {
                if ((this.mUIColoursWindowsInternWindow == null))
                {
                    this.mUIColoursWindowsInternWindow = new UIColoursWindowsInternWindow();
                }
                return this.mUIColoursWindowsInternWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIColoursWindowsInternWindow1 UIColoursWindowsInternWindow1
        {
            get
            {
                if ((this.mUIColoursWindowsInternWindow1 == null))
                {
                    this.mUIColoursWindowsInternWindow1 = new UIColoursWindowsInternWindow1();
                }
                return this.mUIColoursWindowsInternWindow1;
            }
        }
        #endregion
        
        #region Fields
        private ValidateInvalidColoursModalExpectedValues mValidateInvalidColoursModalExpectedValues;
        
        private ValidateRestoreDefaultsMessageExpectedValues mValidateRestoreDefaultsMessageExpectedValues;
        
        private UIColoursWindowsInternWindow mUIColoursWindowsInternWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIColoursWindowsInternWindow1 mUIColoursWindowsInternWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateInvalidColoursModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateInvalidColoursModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///The value you have entered for the menu bar background colour appears to be incorrect.
        ///The value you have entered for the menu bar foreground colour appears to be incorrect.
        ///The value you have entered for the title bar background colour appears to be incorrect.
        ///The value you have entered for the title bar foreground colour appears to be incorrect.
        ///The value you have entered for the field background colour appears to be incorrect.
        ///The value you have entered for the field text colour appears to be incorrect.
        ///The value you have entered for the row background colour appears to be incorrect.
        ///The value you have entered for the row foreground colour appears to be incorrect.
        ///The value you have entered for the alternate row background colour appears to be incorrect.
        ///The value you have entered for the alternate row foreground colour appears to be incorrect.
        ///The value you have entered for the hover colour appears to be incorrect.
        ///The value you have entered for the page option colour appears to be incorrect.
        ///The value you have entered for the GreenLight Field colour appears to be incorrect.
        ///The value you have entered for the GreenLight Section Text colour appears to be incorrect.
        ///The value you have entered for the GreenLight Section Background colour appears to be incorrect.
        ///The value you have entered for the GreenLight Section Underline colour appears to be incorrect.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = @"Message from Expenses


The value you have entered for the menu bar background colour appears to be incorrect.
The value you have entered for the menu bar foreground colour appears to be incorrect.
The value you have entered for the title bar background colour appears to be incorrect.
The value you have entered for the title bar foreground colour appears to be incorrect.
The value you have entered for the field background colour appears to be incorrect.
The value you have entered for the field text colour appears to be incorrect.
The value you have entered for the row background colour appears to be incorrect.
The value you have entered for the row foreground colour appears to be incorrect.
The value you have entered for the alternate row background colour appears to be incorrect.
The value you have entered for the alternate row foreground colour appears to be incorrect.
The value you have entered for the hover colour appears to be incorrect.
The value you have entered for the page option colour appears to be incorrect.
The value you have entered for the GreenLight Field colour appears to be incorrect.
The value you have entered for the GreenLight Section Text colour appears to be incorrect.
The value you have entered for the GreenLight Section Background colour appears to be incorrect.
The value you have entered for the GreenLight Section Underline colour appears to be incorrect.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateRestoreDefaultsMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateRestoreDefaultsMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'This will restore all of the colours back to their...' label equals 'This will restore all of the colours back to their default values.
        ///Are you sure you want to do this?'
        /// </summary>
        public string UIThiswillrestoreallofTextDisplayText = "This will restore all of the colours back to their default values.\nAre you sure y" +
            "ou want to do this?";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIColoursWindowsInternWindow : BrowserWindow
    {
        
        public UIColoursWindowsInternWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Colours", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIColoursDocument UIColoursDocument
        {
            get
            {
                if ((this.mUIColoursDocument == null))
                {
                    this.mUIColoursDocument = new UIColoursDocument(this);
                }
                return this.mUIColoursDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIColoursDocument mUIColoursDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIColoursDocument : HtmlDocument
    {
        
        public UIColoursDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Colours";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/colours.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos8.sel-expenses.com/shared/admin/colours.aspx";
            this.WindowTitles.Add("Colours");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIMenuBarBackgroundColourEdit
        {
            get
            {
                if ((this.mUIMenuBarBackgroundColourEdit == null))
                {
                    this.mUIMenuBarBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMenuBarBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmenubg";
                    this.mUIMenuBarBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmenubg";
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmenubg value=4A6";
                    this.mUIMenuBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIMenuBarBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIMenuBarBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UIMenuBarTextColourEdit
        {
            get
            {
                if ((this.mUIMenuBarTextColourEdit == null))
                {
                    this.mUIMenuBarTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMenuBarTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmenutext";
                    this.mUIMenuBarTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmenutext";
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Text Colour";
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmenutext value=E";
                    this.mUIMenuBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIMenuBarTextColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIMenuBarTextColourEdit;
            }
        }
        
        public HtmlEdit UITitleBarBackgroundColourEdit
        {
            get
            {
                if ((this.mUITitleBarBackgroundColourEdit == null))
                {
                    this.mUITitleBarBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleBarBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txttitlebg";
                    this.mUITitleBarBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txttitlebg";
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txttitlebg value=4A";
                    this.mUITitleBarBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUITitleBarBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITitleBarBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UITitleBarTextColourEdit
        {
            get
            {
                if ((this.mUITitleBarTextColourEdit == null))
                {
                    this.mUITitleBarTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleBarTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txttitletext";
                    this.mUITitleBarTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txttitletext";
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Text Colour";
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txttitletext value=";
                    this.mUITitleBarTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUITitleBarTextColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITitleBarTextColourEdit;
            }
        }
        
        public HtmlEdit UIFieldLabelBackgroundColourEdit
        {
            get
            {
                if ((this.mUIFieldLabelBackgroundColourEdit == null))
                {
                    this.mUIFieldLabelBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFieldLabelBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtfieldbg";
                    this.mUIFieldLabelBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtfieldbg";
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtfieldbg value=4A";
                    this.mUIFieldLabelBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUIFieldLabelBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIFieldLabelBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UIFieldLabelTextColourEdit
        {
            get
            {
                if ((this.mUIFieldLabelTextColourEdit == null))
                {
                    this.mUIFieldLabelTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFieldLabelTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtfieldtext";
                    this.mUIFieldLabelTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtfieldtext";
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Text Colour";
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtfieldtext value=";
                    this.mUIFieldLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUIFieldLabelTextColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIFieldLabelTextColourEdit;
            }
        }
        
        public HtmlEdit UITableRowBackgroundColourEdit
        {
            get
            {
                if ((this.mUITableRowBackgroundColourEdit == null))
                {
                    this.mUITableRowBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITableRowBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txttablerow";
                    this.mUITableRowBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txttablerow";
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txttablerow value=F";
                    this.mUITableRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    this.mUITableRowBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITableRowBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UITableRowForegroundColourEdit
        {
            get
            {
                if ((this.mUITableRowForegroundColourEdit == null))
                {
                    this.mUITableRowForegroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITableRowForegroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtRowFGColour";
                    this.mUITableRowForegroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtRowFGColour";
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Foreground Colour";
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtRowFGColour valu";
                    this.mUITableRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "19";
                    this.mUITableRowForegroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITableRowForegroundColourEdit;
            }
        }
        
        public HtmlEdit UITableAlternateRowBackgroundColourEdit
        {
            get
            {
                if ((this.mUITableAlternateRowBackgroundColourEdit == null))
                {
                    this.mUITableAlternateRowBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITableAlternateRowBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtalternatetablerow";
                    this.mUITableAlternateRowBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtalternatetablerow";
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtalternatetablero";
                    this.mUITableAlternateRowBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "21";
                    this.mUITableAlternateRowBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITableAlternateRowBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UITableAlternateRowForegroundColourEdit
        {
            get
            {
                if ((this.mUITableAlternateRowForegroundColourEdit == null))
                {
                    this.mUITableAlternateRowForegroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITableAlternateRowForegroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtAltRowFGColour";
                    this.mUITableAlternateRowForegroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtAltRowFGColour";
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Foreground Colour";
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtAltRowFGColour v";
                    this.mUITableAlternateRowForegroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "23";
                    this.mUITableAlternateRowForegroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUITableAlternateRowForegroundColourEdit;
            }
        }
        
        public HtmlEdit UIHoverBackgroundColourEdit
        {
            get
            {
                if ((this.mUIHoverBackgroundColourEdit == null))
                {
                    this.mUIHoverBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIHoverBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txthoverbg";
                    this.mUIHoverBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txthoverbg";
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txthoverbg value=00";
                    this.mUIHoverBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "25";
                    this.mUIHoverBackgroundColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIHoverBackgroundColourEdit;
            }
        }
        
        public HtmlEdit UIHoverPageOptionEdit
        {
            get
            {
                if ((this.mUIHoverPageOptionEdit == null))
                {
                    this.mUIHoverPageOptionEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIHoverPageOptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtPageOptionColour";
                    this.mUIHoverPageOptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtPageOptionColour";
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Page Option";
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtPageOptionColour";
                    this.mUIHoverPageOptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "27";
                    this.mUIHoverPageOptionEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIHoverPageOptionEdit;
            }
        }
        
        public HtmlEdit UIGreenlightLabelTextColourEdit
        {
            get
            {
                if ((this.mUIGreenlightLabelTextColourEdit == null))
                {
                    this.mUIGreenlightLabelTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGreenlightLabelTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtGreenLightField";
                    this.mUIGreenlightLabelTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtGreenLightField";
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Label Text Colour";
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtGreenLightField ";
                    this.mUIGreenlightLabelTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "29";
                    this.mUIGreenlightLabelTextColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIGreenlightLabelTextColourEdit;
            }
        }
        
        public HtmlEdit UIGreenlightSectionTextColourEdit
        {
            get
            {
                if ((this.mUIGreenlightSectionTextColourEdit == null))
                {
                    this.mUIGreenlightSectionTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGreenlightSectionTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtGreenLightSectionText";
                    this.mUIGreenlightSectionTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtGreenLightSectionText";
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Section Text Colour";
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtGreenLightSectio";
                    this.mUIGreenlightSectionTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "31";
                    this.mUIGreenlightSectionTextColourEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIGreenlightSectionTextColourEdit;
            }
        }
        
        public HtmlEdit UIGreenlightSectionUnderlineColoEdit
        {
            get
            {
                if ((this.mUIGreenlightSectionUnderlineColoEdit == null))
                {
                    this.mUIGreenlightSectionUnderlineColoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGreenlightSectionUnderlineColoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtGreenLightSectionUnderline";
                    this.mUIGreenlightSectionUnderlineColoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtGreenLightSectionUnderline";
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Section Underline Colour";
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtGreenLightSectio";
                    this.mUIGreenlightSectionUnderlineColoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "35";
                    this.mUIGreenlightSectionUnderlineColoEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIGreenlightSectionUnderlineColoEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSave";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSave";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSave class=butto";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "37";
                    this.mUISaveButton.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancel";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancel class=but";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "39";
                    this.mUICancelButton.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        
        public HtmlInputButton UIRestoredefaultsButton
        {
            get
            {
                if ((this.mUIRestoredefaultsButton == null))
                {
                    this.mUIRestoredefaultsButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIRestoredefaultsButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdrestore";
                    this.mUIRestoredefaultsButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdrestore";
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "restore defaults";
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmdrestore class=bu";
                    this.mUIRestoredefaultsButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "38";
                    this.mUIRestoredefaultsButton.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIRestoredefaultsButton;
            }
        }
        
        public HtmlSpan MenuBarBackgroundColourAsterisk
        {
            get
            {
                if ((this.mMenuBarBackgroundColourAsterisk == null))
                {
                    this.mMenuBarBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mMenuBarBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator8";
                    this.mMenuBarBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mMenuBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mMenuBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mMenuBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mMenuBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mMenuBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    this.mMenuBarBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mMenuBarBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan MenuBarTextColourAsterisk
        {
            get
            {
                if ((this.mMenuBarTextColourAsterisk == null))
                {
                    this.mMenuBarTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mMenuBarTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator7";
                    this.mMenuBarTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mMenuBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mMenuBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mMenuBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mMenuBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mMenuBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
                    this.mMenuBarTextColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mMenuBarTextColourAsterisk;
            }
        }
        
        public HtmlSpan TitleBarBackgroundColourAsterisk
        {
            get
            {
                if ((this.mTitleBarBackgroundColourAsterisk == null))
                {
                    this.mTitleBarBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTitleBarBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator9";
                    this.mTitleBarBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTitleBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTitleBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTitleBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTitleBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTitleBarBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mTitleBarBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTitleBarBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan TitleBarTextColourAsterisk
        {
            get
            {
                if ((this.mTitleBarTextColourAsterisk == null))
                {
                    this.mTitleBarTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTitleBarTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator6";
                    this.mTitleBarTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTitleBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTitleBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTitleBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTitleBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTitleBarTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mTitleBarTextColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTitleBarTextColourAsterisk;
            }
        }
        
        public HtmlSpan FieldLabelBackgroundColourAsterisk
        {
            get
            {
                if ((this.mFieldLabelBackgroundColourAsterisk == null))
                {
                    this.mFieldLabelBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mFieldLabelBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator5";
                    this.mFieldLabelBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mFieldLabelBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mFieldLabelBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mFieldLabelBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mFieldLabelBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mFieldLabelBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "34";
                    this.mFieldLabelBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mFieldLabelBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan FieldLabelTextColourAsterisk
        {
            get
            {
                if ((this.mFieldLabelTextColourAsterisk == null))
                {
                    this.mFieldLabelTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mFieldLabelTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator4";
                    this.mFieldLabelTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mFieldLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mFieldLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mFieldLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mFieldLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mFieldLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "40";
                    this.mFieldLabelTextColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mFieldLabelTextColourAsterisk;
            }
        }
        
        public HtmlSpan TableRowBackgroundColourAsterisk
        {
            get
            {
                if ((this.mTableRowBackgroundColourAsterisk == null))
                {
                    this.mTableRowBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTableRowBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator3";
                    this.mTableRowBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTableRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTableRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTableRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTableRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTableRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
                    this.mTableRowBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTableRowBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan TableRowForegroundColourAsterisk
        {
            get
            {
                if ((this.mTableRowForegroundColourAsterisk == null))
                {
                    this.mTableRowForegroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTableRowForegroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_revRowFG";
                    this.mTableRowForegroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTableRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTableRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTableRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTableRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTableRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "53";
                    this.mTableRowForegroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTableRowForegroundColourAsterisk;
            }
        }
        
        public HtmlSpan TableAlternateRowBackgroundColourAsterisk
        {
            get
            {
                if ((this.mTableAlternateRowBackgroundColourAsterisk == null))
                {
                    this.mTableAlternateRowBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTableAlternateRowBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator1";
                    this.mTableAlternateRowBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTableAlternateRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTableAlternateRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTableAlternateRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTableAlternateRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTableAlternateRowBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "60";
                    this.mTableAlternateRowBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTableAlternateRowBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan TableAlternateRowForegroundColourAsterisk
        {
            get
            {
                if ((this.mTableAlternateRowForegroundColourAsterisk == null))
                {
                    this.mTableAlternateRowForegroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTableAlternateRowForegroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_revAltRowFG";
                    this.mTableAlternateRowForegroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTableAlternateRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTableAlternateRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTableAlternateRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTableAlternateRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mTableAlternateRowForegroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "66";
                    this.mTableAlternateRowForegroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mTableAlternateRowForegroundColourAsterisk;
            }
        }
        
        public HtmlSpan HoverColourBackgroundColourAsterisk
        {
            get
            {
                if ((this.mHoverColourBackgroundColourAsterisk == null))
                {
                    this.mHoverColourBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mHoverColourBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator2";
                    this.mHoverColourBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mHoverColourBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mHoverColourBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mHoverColourBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mHoverColourBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mHoverColourBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "73";
                    this.mHoverColourBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mHoverColourBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan HoverColourPageOptionAsterisk
        {
            get
            {
                if ((this.mHoverColourPageOptionAsterisk == null))
                {
                    this.mHoverColourPageOptionAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mHoverColourPageOptionAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_revPageOptionColour";
                    this.mHoverColourPageOptionAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mHoverColourPageOptionAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mHoverColourPageOptionAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mHoverColourPageOptionAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mHoverColourPageOptionAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mHoverColourPageOptionAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "79";
                    this.mHoverColourPageOptionAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mHoverColourPageOptionAsterisk;
            }
        }
        
        public HtmlSpan GreenlightLabelTextColourAsterisk
        {
            get
            {
                if ((this.mGreenlightLabelTextColourAsterisk == null))
                {
                    this.mGreenlightLabelTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mGreenlightLabelTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator10";
                    this.mGreenlightLabelTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mGreenlightLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mGreenlightLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mGreenlightLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mGreenlightLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mGreenlightLabelTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "86";
                    this.mGreenlightLabelTextColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mGreenlightLabelTextColourAsterisk;
            }
        }
        
        public HtmlSpan GreenlightSectionTextColourAsterisk
        {
            get
            {
                if ((this.mGreenlightSectionTextColourAsterisk == null))
                {
                    this.mGreenlightSectionTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mGreenlightSectionTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator11";
                    this.mGreenlightSectionTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mGreenlightSectionTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mGreenlightSectionTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mGreenlightSectionTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mGreenlightSectionTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mGreenlightSectionTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "92";
                    this.mGreenlightSectionTextColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mGreenlightSectionTextColourAsterisk;
            }
        }
        
        public HtmlSpan GreenlightSectionBackgroundColourAsterisk
        {
            get
            {
                if ((this.mGreenlightSectionBackgroundColourAsterisk == null))
                {
                    this.mGreenlightSectionBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mGreenlightSectionBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator12";
                    this.mGreenlightSectionBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mGreenlightSectionBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mGreenlightSectionBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mGreenlightSectionBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mGreenlightSectionBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mGreenlightSectionBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "98";
                    this.mGreenlightSectionBackgroundColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mGreenlightSectionBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan GreenlightSectionUnderlineColourAsterisk
        {
            get
            {
                if ((this.mGreenlightSectionUnderlineColourAsterisk == null))
                {
                    this.mGreenlightSectionUnderlineColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mGreenlightSectionUnderlineColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegularExpressionValidator13";
                    this.mGreenlightSectionUnderlineColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mGreenlightSectionUnderlineColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mGreenlightSectionUnderlineColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mGreenlightSectionUnderlineColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mGreenlightSectionUnderlineColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mGreenlightSectionUnderlineColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "104";
                    this.mGreenlightSectionUnderlineColourAsterisk.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mGreenlightSectionUnderlineColourAsterisk;
            }
        }
        
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe value you";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIDivMasterPopupPane.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos8.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIOKImage.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlEdit UIGreenlightSectionBackgroundColEdit
        {
            get
            {
                if ((this.mUIGreenlightSectionBackgroundColEdit == null))
                {
                    this.mUIGreenlightSectionBackgroundColEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGreenlightSectionBackgroundColEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtGreenLightSectionBackground";
                    this.mUIGreenlightSectionBackgroundColEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtGreenLightSectionBackground";
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Section Background Colour";
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtGreenLightSectio";
                    this.mUIGreenlightSectionBackgroundColEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "33";
                    this.mUIGreenlightSectionBackgroundColEdit.WindowTitles.Add("Colours");
                    #endregion
                }
                return this.mUIGreenlightSectionBackgroundColEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIMenuBarBackgroundColourEdit;
        
        private HtmlEdit mUIMenuBarTextColourEdit;
        
        private HtmlEdit mUITitleBarBackgroundColourEdit;
        
        private HtmlEdit mUITitleBarTextColourEdit;
        
        private HtmlEdit mUIFieldLabelBackgroundColourEdit;
        
        private HtmlEdit mUIFieldLabelTextColourEdit;
        
        private HtmlEdit mUITableRowBackgroundColourEdit;
        
        private HtmlEdit mUITableRowForegroundColourEdit;
        
        private HtmlEdit mUITableAlternateRowBackgroundColourEdit;
        
        private HtmlEdit mUITableAlternateRowForegroundColourEdit;
        
        private HtmlEdit mUIHoverBackgroundColourEdit;
        
        private HtmlEdit mUIHoverPageOptionEdit;
        
        private HtmlEdit mUIGreenlightLabelTextColourEdit;
        
        private HtmlEdit mUIGreenlightSectionTextColourEdit;
        
        private HtmlEdit mUIGreenlightSectionUnderlineColoEdit;
        
        private HtmlInputButton mUISaveButton;
        
        private HtmlInputButton mUICancelButton;
        
        private HtmlInputButton mUIRestoredefaultsButton;
        
        private HtmlSpan mMenuBarBackgroundColourAsterisk;
        
        private HtmlSpan mMenuBarTextColourAsterisk;
        
        private HtmlSpan mTitleBarBackgroundColourAsterisk;
        
        private HtmlSpan mTitleBarTextColourAsterisk;
        
        private HtmlSpan mFieldLabelBackgroundColourAsterisk;
        
        private HtmlSpan mFieldLabelTextColourAsterisk;
        
        private HtmlSpan mTableRowBackgroundColourAsterisk;
        
        private HtmlSpan mTableRowForegroundColourAsterisk;
        
        private HtmlSpan mTableAlternateRowBackgroundColourAsterisk;
        
        private HtmlSpan mTableAlternateRowForegroundColourAsterisk;
        
        private HtmlSpan mHoverColourBackgroundColourAsterisk;
        
        private HtmlSpan mHoverColourPageOptionAsterisk;
        
        private HtmlSpan mGreenlightLabelTextColourAsterisk;
        
        private HtmlSpan mGreenlightSectionTextColourAsterisk;
        
        private HtmlSpan mGreenlightSectionBackgroundColourAsterisk;
        
        private HtmlSpan mGreenlightSectionUnderlineColourAsterisk;
        
        private HtmlDiv mUIDivMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlEdit mUIGreenlightSectionBackgroundColEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIThiswillrestoreallofWindow UIThiswillrestoreallofWindow
        {
            get
            {
                if ((this.mUIThiswillrestoreallofWindow == null))
                {
                    this.mUIThiswillrestoreallofWindow = new UIThiswillrestoreallofWindow(this);
                }
                return this.mUIThiswillrestoreallofWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        
        private UICancelWindow mUICancelWindow;
        
        private UIThiswillrestoreallofWindow mUIThiswillrestoreallofWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIThiswillrestoreallofWindow : WinWindow
    {
        
        public UIThiswillrestoreallofWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UIThiswillrestoreallofText
        {
            get
            {
                if ((this.mUIThiswillrestoreallofText == null))
                {
                    this.mUIThiswillrestoreallofText = new WinText(this);
                    #region Search Criteria
                    this.mUIThiswillrestoreallofText.SearchProperties[WinText.PropertyNames.Name] = "This will restore all of the colours back to their default values.Are you sure yo" +
                        "u want to do this?";
                    this.mUIThiswillrestoreallofText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIThiswillrestoreallofText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThiswillrestoreallofText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIColoursWindowsInternWindow1 : BrowserWindow
    {
        
        public UIColoursWindowsInternWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Colours";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIColoursDocument1 UIColoursDocument
        {
            get
            {
                if ((this.mUIColoursDocument == null))
                {
                    this.mUIColoursDocument = new UIColoursDocument1(this);
                }
                return this.mUIColoursDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIColoursDocument1 mUIColoursDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIColoursDocument1 : HtmlDocument
    {
        
        public UIColoursDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Colours";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/colours.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/colours.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit TooltipTextColourEdit
        {
            get
            {
                if ((this.mTooltipTextColourEdit == null))
                {
                    this.mTooltipTextColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTooltipTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtTooltipTextColour";
                    this.mTooltipTextColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtTooltipTextColour";
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Text Colour";
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtTooltipTextColou";
                    this.mTooltipTextColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "31";
                    #endregion
                }
                return this.mTooltipTextColourEdit;
            }
        }
        
        public HtmlEdit TooltipBackgroundColourEdit
        {
            get
            {
                if ((this.mTooltipBackgroundColourEdit == null))
                {
                    this.mTooltipBackgroundColourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTooltipBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtTooltipbg";
                    this.mTooltipBackgroundColourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtTooltipbg";
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Background Colour";
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtTooltipbg value=";
                    this.mTooltipBackgroundColourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "29";
                    #endregion
                }
                return this.mTooltipBackgroundColourEdit;
            }
        }
        
        public HtmlSpan TooltipBackgroundColourAsterisk
        {
            get
            {
                if ((this.mTooltipBackgroundColourAsterisk == null))
                {
                    this.mTooltipBackgroundColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTooltipBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegExTooltipbg";
                    this.mTooltipBackgroundColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTooltipBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTooltipBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTooltipBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTooltipBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = @"id=ctl00_contentmain_RegExTooltipbg style=""COLOR: red; DISPLAY: inline"" controltovalidate=""ctl00_contentmain_txtTooltipbg"" display=""Dynamic"" validationGroup=""vgMain"" errormessage=""Please enter a valid value for Tooltip Colour Background Colour."" validationexpression=""^[0-9a-fA-F]{6}$"" isvalid=""false""";
                    this.mTooltipBackgroundColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "86";
                    #endregion
                }
                return this.mTooltipBackgroundColourAsterisk;
            }
        }
        
        public HtmlSpan TooltipTextColourAsterisk
        {
            get
            {
                if ((this.mTooltipTextColourAsterisk == null))
                {
                    this.mTooltipTextColourAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mTooltipTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_RegExTooltipTextColour";
                    this.mTooltipTextColourAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTooltipTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mTooltipTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTooltipTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mTooltipTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = @"id=ctl00_contentmain_RegExTooltipTextColour style=""COLOR: red; DISPLAY: inline"" controltovalidate=""ctl00_contentmain_txtTooltipTextColour"" display=""Dynamic"" validationGroup=""vgMain"" errormessage=""Please enter a valid value for Tooltip Colour Text Colour."" validationexpression=""^[0-9a-fA-F]{6}$"" isvalid=""false""";
                    this.mTooltipTextColourAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "92";
                    #endregion
                }
                return this.mTooltipTextColourAsterisk;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mTooltipTextColourEdit;
        
        private HtmlEdit mTooltipBackgroundColourEdit;
        
        private HtmlSpan mTooltipBackgroundColourAsterisk;
        
        private HtmlSpan mTooltipTextColourAsterisk;
        #endregion
    }
}
