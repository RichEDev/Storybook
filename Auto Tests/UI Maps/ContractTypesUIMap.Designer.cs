// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ContractTypesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ContractTypesUIMap
    {
        
        /// <summary>
        /// NavigateToContractTypesFromHomePage
        /// </summary>
        public void NavigateToContractTypesFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uIContractTypesPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UIContractTypesPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(62, 12));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(63, 11));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(65, 15));

            // Click 'Contract Types' pane
            Mouse.Click(uIContractTypesPane, new Point(76, 17));
        }
        
        /// <summary>
        /// AddContractType - Use 'AddContractTypeParams' to pass parameters into this method.
        /// </summary>
        public void AddContractType()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(38, 11));

            // Type 'CodedUI Contract Type' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.AddContractTypeParams.UIContractTypeDescriptEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(28, 18));
        }
        
        /// <summary>
        /// ValidateAddContractType - Use 'ValidateAddContractTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractType()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractTypeCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Table.UICodedUIContractTypeCell;
            #endregion

            // Verify that 'CodedUI Contract Type' cell's property 'InnerText' equals 'CodedUI Contract Type'
            Assert.AreEqual(this.ValidateAddContractTypeExpectedValues.UICodedUIContractTypeCellInnerText, uICodedUIContractTypeCell.InnerText);
        }
        
        /// <summary>
        /// ValidateAddContractTypeWithCancel - Use 'ValidateAddContractTypeWithCancelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractTypeCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Table.UICodedUIContractTypeCell;
            #endregion

            // Verify that 'CodedUI Contract Type' cell's property 'InnerText' is not equal to 'CodedUI Contract Type'
            Assert.AreNotEqual(this.ValidateAddContractTypeWithCancelExpectedValues.UICodedUIContractTypeCellInnerText, uICodedUIContractTypeCell.InnerText);
        }
        
        /// <summary>
        /// DeleteContractTypeWithCancel
        /// </summary>
        public void DeleteContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(11, 8));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteContractType
        /// </summary>
        public void DeleteContractType()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(9, 6));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// AddContractTypeWithCancel - Use 'AddContractTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(33, 6));

            // Type 'CodedUI Contract Type' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.AddContractTypeWithCancelParams.UIContractTypeDescriptEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(32, 14));
        }
        
        /// <summary>
        /// EditContractTypeWithCancel - Use 'EditContractTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Row.UIEditImage;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(13, 5));

            // Type 'CodedUI Contract Type EDITED' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.EditContractTypeWithCancelParams.UIContractTypeDescriptEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(20, 17));
        }
        
        /// <summary>
        /// EditContractType - Use 'EditContractTypeParams' to pass parameters into this method.
        /// </summary>
        public void EditContractType()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Row.UIEditImage;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(12, 5));

            // Type 'CodedUI Contract Type EDITED' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.EditContractTypeParams.UIContractTypeDescriptEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(17, 7));
        }
        
        /// <summary>
        /// ValidateEditContractType - Use 'ValidateEditContractTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditContractType()
        {
            #region Variable Declarations
            HtmlCell uICodedUIContractTypeECell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Table.UICodedUIContractTypeECell;
            #endregion

            // Verify that 'CodedUI Contract Type EDITED' cell's property 'InnerText' equals 'CodedUI Contract Type EDITED'
            Assert.AreEqual(this.ValidateEditContractTypeExpectedValues.UICodedUIContractTypeECellInnerText, uICodedUIContractTypeECell.InnerText);
        }
        
        /// <summary>
        /// EditContractTypeResetValues - Use 'EditContractTypeResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditContractTypeResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Row1.UIEditImage;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(13, 7));

            // Type 'CodedUI Contract Type' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.EditContractTypeResetValuesParams.UIContractTypeDescriptEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(32, 20));
        }
        
        /// <summary>
        /// ArchiveContractTypeWithCancel
        /// </summary>
        public void ArchiveContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(7, 8));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveContractType
        /// </summary>
        public void ArchiveContractType()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(7, 8));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateContractTypeIsArchived - Use 'ValidateContractTypeIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractTypeIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateContractTypeIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateContractTypeIsNotArchived - Use 'ValidateContractTypeIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractTypeIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateContractTypeIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveContractType
        /// </summary>
        public void UnArchiveContractType()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(13, 7));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveContractTypeWithCancel
        /// </summary>
        public void UnArchiveContractTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_53418d93_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(13, 6));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ValidateContractTypesPageLayout - Use 'ValidateContractTypesPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateContractTypesPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIContractTypesPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypesPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uIJamesLloyd111117SeptPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd111117SeptPane;
            HtmlDiv uICompanyPolicyHelpSupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UICompanyPolicyHelpSupPane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneInnerText, uIPageOptionsAddDefiniPane.InnerText);

            // Verify that 'Contract Types' pane's property 'InnerText' equals 'Contract Types'
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UIContractTypesPaneInnerText, uIContractTypesPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd111117SeptPane.DisplayText.ToLower(), this.ValidateContractTypesPageLayoutExpectedValues.UIJamesLloyd111117SeptPaneDisplayText.ToLower());

            // Verify that 'Company Policy  |  Help & Support  | Swi' pane's property 'InnerText' equals 'Company Policy  |  Help & Support  | Switch Sub Account |  Exit Home Page : Administration Menu : Base Information : Contract Information : Contract Types '
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UICompanyPolicyHelpSupPaneInnerText, uICompanyPolicyHelpSupPane.InnerText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
            Assert.AreEqual(this.ValidateContractTypesPageLayoutExpectedValues.UIItemPaneClass, uIItemPane.Class);
        }
        
        /// <summary>
        /// AddContractTypeWithDuplicateDetails - Use 'AddContractTypeWithDuplicateDetailsParams' to pass parameters into this method.
        /// </summary>
        public void AddContractTypeWithDuplicateDetails()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uIContractTypeDescriptEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIContractTypeDescriptEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(50, 9));

            // Type 'CodedUI Contract Type' in 'Contract Type Description' text box
            uIContractTypeDescriptEdit.Text = this.AddContractTypeWithDuplicateDetailsParams.UIContractTypeDescriptEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(30, 14));
        }
        
        /// <summary>
        /// ValidateAddContractTypeWithDuplicateDetails - Use 'ValidateAddContractTypeWithDuplicateDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddContractTypeWithDuplicateDetails()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddContractTypeWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddContractTypeWithDuplicateDetailsExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        #region Properties
        public virtual AddContractTypeParams AddContractTypeParams
        {
            get
            {
                if ((this.mAddContractTypeParams == null))
                {
                    this.mAddContractTypeParams = new AddContractTypeParams();
                }
                return this.mAddContractTypeParams;
            }
        }
        
        public virtual ValidateAddContractTypeExpectedValues ValidateAddContractTypeExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractTypeExpectedValues == null))
                {
                    this.mValidateAddContractTypeExpectedValues = new ValidateAddContractTypeExpectedValues();
                }
                return this.mValidateAddContractTypeExpectedValues;
            }
        }
        
        public virtual ValidateAddContractTypeWithCancelExpectedValues ValidateAddContractTypeWithCancelExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractTypeWithCancelExpectedValues == null))
                {
                    this.mValidateAddContractTypeWithCancelExpectedValues = new ValidateAddContractTypeWithCancelExpectedValues();
                }
                return this.mValidateAddContractTypeWithCancelExpectedValues;
            }
        }
        
        public virtual AddContractTypeWithCancelParams AddContractTypeWithCancelParams
        {
            get
            {
                if ((this.mAddContractTypeWithCancelParams == null))
                {
                    this.mAddContractTypeWithCancelParams = new AddContractTypeWithCancelParams();
                }
                return this.mAddContractTypeWithCancelParams;
            }
        }
        
        public virtual EditContractTypeWithCancelParams EditContractTypeWithCancelParams
        {
            get
            {
                if ((this.mEditContractTypeWithCancelParams == null))
                {
                    this.mEditContractTypeWithCancelParams = new EditContractTypeWithCancelParams();
                }
                return this.mEditContractTypeWithCancelParams;
            }
        }
        
        public virtual EditContractTypeParams EditContractTypeParams
        {
            get
            {
                if ((this.mEditContractTypeParams == null))
                {
                    this.mEditContractTypeParams = new EditContractTypeParams();
                }
                return this.mEditContractTypeParams;
            }
        }
        
        public virtual ValidateEditContractTypeExpectedValues ValidateEditContractTypeExpectedValues
        {
            get
            {
                if ((this.mValidateEditContractTypeExpectedValues == null))
                {
                    this.mValidateEditContractTypeExpectedValues = new ValidateEditContractTypeExpectedValues();
                }
                return this.mValidateEditContractTypeExpectedValues;
            }
        }
        
        public virtual EditContractTypeResetValuesParams EditContractTypeResetValuesParams
        {
            get
            {
                if ((this.mEditContractTypeResetValuesParams == null))
                {
                    this.mEditContractTypeResetValuesParams = new EditContractTypeResetValuesParams();
                }
                return this.mEditContractTypeResetValuesParams;
            }
        }
        
        public virtual ValidateContractTypeIsArchivedExpectedValues ValidateContractTypeIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractTypeIsArchivedExpectedValues == null))
                {
                    this.mValidateContractTypeIsArchivedExpectedValues = new ValidateContractTypeIsArchivedExpectedValues();
                }
                return this.mValidateContractTypeIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateContractTypeIsNotArchivedExpectedValues ValidateContractTypeIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateContractTypeIsNotArchivedExpectedValues == null))
                {
                    this.mValidateContractTypeIsNotArchivedExpectedValues = new ValidateContractTypeIsNotArchivedExpectedValues();
                }
                return this.mValidateContractTypeIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateContractTypesPageLayoutExpectedValues ValidateContractTypesPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateContractTypesPageLayoutExpectedValues == null))
                {
                    this.mValidateContractTypesPageLayoutExpectedValues = new ValidateContractTypesPageLayoutExpectedValues();
                }
                return this.mValidateContractTypesPageLayoutExpectedValues;
            }
        }
        
        public virtual AddContractTypeWithDuplicateDetailsParams AddContractTypeWithDuplicateDetailsParams
        {
            get
            {
                if ((this.mAddContractTypeWithDuplicateDetailsParams == null))
                {
                    this.mAddContractTypeWithDuplicateDetailsParams = new AddContractTypeWithDuplicateDetailsParams();
                }
                return this.mAddContractTypeWithDuplicateDetailsParams;
            }
        }
        
        public virtual ValidateAddContractTypeWithDuplicateDetailsExpectedValues ValidateAddContractTypeWithDuplicateDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAddContractTypeWithDuplicateDetailsExpectedValues == null))
                {
                    this.mValidateAddContractTypeWithDuplicateDetailsExpectedValues = new ValidateAddContractTypeWithDuplicateDetailsExpectedValues();
                }
                return this.mValidateAddContractTypeWithDuplicateDetailsExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddContractTypeParams mAddContractTypeParams;
        
        private ValidateAddContractTypeExpectedValues mValidateAddContractTypeExpectedValues;
        
        private ValidateAddContractTypeWithCancelExpectedValues mValidateAddContractTypeWithCancelExpectedValues;
        
        private AddContractTypeWithCancelParams mAddContractTypeWithCancelParams;
        
        private EditContractTypeWithCancelParams mEditContractTypeWithCancelParams;
        
        private EditContractTypeParams mEditContractTypeParams;
        
        private ValidateEditContractTypeExpectedValues mValidateEditContractTypeExpectedValues;
        
        private EditContractTypeResetValuesParams mEditContractTypeResetValuesParams;
        
        private ValidateContractTypeIsArchivedExpectedValues mValidateContractTypeIsArchivedExpectedValues;
        
        private ValidateContractTypeIsNotArchivedExpectedValues mValidateContractTypeIsNotArchivedExpectedValues;
        
        private ValidateContractTypesPageLayoutExpectedValues mValidateContractTypesPageLayoutExpectedValues;
        
        private AddContractTypeWithDuplicateDetailsParams mAddContractTypeWithDuplicateDetailsParams;
        
        private ValidateAddContractTypeWithDuplicateDetailsExpectedValues mValidateAddContractTypeWithDuplicateDetailsExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Type' cell's property 'InnerText' equals 'CodedUI Contract Type'
        /// </summary>
        public string UICodedUIContractTypeCellInnerText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractTypeWithCancelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Type' cell's property 'InnerText' is not equal to 'CodedUI Contract Type'
        /// </summary>
        public string UICodedUIContractTypeCellInnerText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type EDITED' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type EDITED' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditContractType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditContractTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Contract Type EDITED' cell's property 'InnerText' equals 'CodedUI Contract Type EDITED'
        /// </summary>
        public string UICodedUIContractTypeECellInnerText = "CodedUI Contract Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditContractTypeResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditContractTypeResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractTypeIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractTypeIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractTypeIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractTypeIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateContractTypesPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateContractTypesPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'InnerText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneInnerText = "Page Options\r\nAdd Definition \r\nHelp ";
        
        /// <summary>
        /// Verify that 'Contract Types' pane's property 'InnerText' equals 'Contract Types'
        /// </summary>
        public string UIContractTypesPaneInnerText = "Contract Types";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'James Lloyd1111 | 17 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd111117SeptPaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'Company Policy  |  Help & Support  | Swi' pane's property 'InnerText' equals 'Company Policy  |  Help & Support  | Switch Sub Account |  Exit Home Page : Administration Menu : Base Information : Contract Information : Contract Types '
        /// </summary>
        public string UICompanyPolicyHelpSupPaneInnerText = "Switch Sub Account |  Exit Home Page : Admin" +
            "istration Menu : Base Information : Contract Information : Contract Types ";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Class' equals 'clientlogo'
        /// </summary>
        public string UIItemPaneClass = "clientlogo";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContractTypeWithDuplicateDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddContractTypeWithDuplicateDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Contract Type' in 'Contract Type Description' text box
        /// </summary>
        public string UIContractTypeDescriptEditText = "CodedUI Contract Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddContractTypeWithDuplicateDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddContractTypeWithDuplicateDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractTypesPane
        {
            get
            {
                if ((this.mUIContractTypesPane == null))
                {
                    this.mUIContractTypesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIContractTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Types";
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
                    this.mUIContractTypesPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUIContractTypesPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractTypesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=110";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UIContractTypeDescriptEdit
        {
            get
            {
                if ((this.mUIContractTypeDescriptEdit == null))
                {
                    this.mUIContractTypeDescriptEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractTypeDescriptEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_contracttype_contractTypeDescription";
                    this.mUIContractTypeDescriptEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_contracttype_contractTypeDescription";
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Type Description";
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_contractty";
                    this.mUIContractTypeDescriptEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIContractTypeDescriptEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractTypeDescriptEdit;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "43";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_53418d93_Table UITbl_bdGrid_53418d93_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_53418d93_Table == null))
                {
                    this.mUITbl_bdGrid_53418d93_Table = new UITbl_bdGrid_53418d93_Table(this);
                }
                return this.mUITbl_bdGrid_53418d93_Table;
            }
        }
        
        public UITbl_bdGrid_53418d93_Row UITbl_bdGrid_53418d93_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_53418d93_Row == null))
                {
                    this.mUITbl_bdGrid_53418d93_Row = new UITbl_bdGrid_53418d93_Row(this);
                }
                return this.mUITbl_bdGrid_53418d93_Row;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "46";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_53418d93_Row1 UITbl_bdGrid_53418d93_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_53418d93_Row1 == null))
                {
                    this.mUITbl_bdGrid_53418d93_Row1 = new UITbl_bdGrid_53418d93_Row1(this);
                }
                return this.mUITbl_bdGrid_53418d93_Row1;
            }
        }
        
        public UITbl_bdGrid_53418d93_Cell UITbl_bdGrid_53418d93_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_53418d93_Cell == null))
                {
                    this.mUITbl_bdGrid_53418d93_Cell = new UITbl_bdGrid_53418d93_Cell(this);
                }
                return this.mUITbl_bdGrid_53418d93_Cell;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public HtmlDiv UIContractTypesPane
        {
            get
            {
                if ((this.mUIContractTypesPane == null))
                {
                    this.mUIContractTypesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIContractTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUIContractTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Types";
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUIContractTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIContractTypesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIContractTypesPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUIContractTypeDescriptEdit;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_53418d93_Table mUITbl_bdGrid_53418d93_Table;
        
        private UITbl_bdGrid_53418d93_Row mUITbl_bdGrid_53418d93_Row;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_53418d93_Row1 mUITbl_bdGrid_53418d93_Row1;
        
        private UITbl_bdGrid_53418d93_Cell mUITbl_bdGrid_53418d93_Cell;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private HtmlDiv mUIContractTypesPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_53418d93_Table : HtmlTable
    {
        
        public UITbl_bdGrid_53418d93_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_53418d93_5c7b_4b14_b222_1f6bcbe59840";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Contract Type Description \r\nAnnual Renew";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_53418d93_5c7b_4b14_b222_1f";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "14";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUIContractTypeCell
        {
            get
            {
                if ((this.mUICodedUIContractTypeCell == null))
                {
                    this.mUICodedUIContractTypeCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractTypeCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractTypeCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractTypeCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Type";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUIContractTypeCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUICodedUIContractTypeCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractTypeCell;
            }
        }
        
        public HtmlCell UICodedUIContractTypeECell
        {
            get
            {
                if ((this.mUICodedUIContractTypeECell == null))
                {
                    this.mUICodedUIContractTypeECell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUIContractTypeECell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUIContractTypeECell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUIContractTypeECell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Contract Type EDITED";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUIContractTypeECell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUICodedUIContractTypeECell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUIContractTypeECell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUIContractTypeCell;
        
        private HtmlCell mUICodedUIContractTypeECell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_53418d93_Row : HtmlRow
    {
        
        public UITbl_bdGrid_53418d93_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_53418d93_5c7b_4b14_b222_1f6bcbe59840_CodedUI Contract Type";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Type";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_53418d93_5c7b_4b14_b222_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_53418d93_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_53418d93_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_53418d93_5c7b_4b14_b222_1f6bcbe59840_CodedUI Contract Type EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Contract Type EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_53418d93_5c7b_4b14_b222_1";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_53418d93_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_53418d93_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_53418d93_5c7b_4b14_b222_1f6bcbe59840_CodedUI Contract Type_archiveStat" +
                "us";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_53418d93_5c7b_4b14_b222_1";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 Base";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd111117SeptPane
        {
            get
            {
                if ((this.mUIJamesLloyd111117SeptPane == null))
                {
                    this.mUIJamesLloyd111117SeptPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd111117SeptPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd1111 | 17 September 2010 ";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd111117SeptPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd111117SeptPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd111117SeptPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd111117SeptPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy  |  Help & Support  | Swi";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICompanyPolicyHelpSupPane
        {
            get
            {
                if ((this.mUICompanyPolicyHelpSupPane == null))
                {
                    this.mUICompanyPolicyHelpSupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICompanyPolicyHelpSupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Company Policy  |  Help & Support  | Swi";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUICompanyPolicyHelpSupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUICompanyPolicyHelpSupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICompanyPolicyHelpSupPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICompanyPolicyHelpSupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
}
