// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.AddressesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class AddressesUIMap
    {
        
        /// <summary>
        /// EnterAddressDetails - Use 'EnterAddressDetailsParams' to pass parameters into this method.
        /// </summary>
        public void EnterAddressDetails()
        {
            #region Variable Declarations
            HtmlEdit uINameEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UINameEdit;
            HtmlEdit uIAddressCodeEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIAddressCodeEdit;
            HtmlTextArea uICommentEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICommentEdit;
            HtmlEdit uICountryEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICountryEdit;
            HtmlCustom uIUnitedKingdomCustom = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICtl00_contentmain_auCustom.UIUnitedKingdomCustom;
            HtmlEdit uIPostcodeEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIPostcodeEdit;
            #endregion

            // Type '__Automated Address' in 'Name*' text box
            uINameEdit.Text = this.EnterAddressDetailsParams.UINameEditText;

            // Type '123' in 'Address Code' text box
            uIAddressCodeEdit.Text = this.EnterAddressDetailsParams.UIAddressCodeEditText;

            // Type 'Automatically generated address - do not edit' in 'Comment' text box
            uICommentEdit.Text = this.EnterAddressDetailsParams.UICommentEditText;

            // Type 'united' in 'Country' text box
            uICountryEdit.Text = this.EnterAddressDetailsParams.UICountryEditText;

            // Click 'United Kingdom' custom control
            Mouse.Click(uIUnitedKingdomCustom, new Point(40, 12));

            // Type 'ln6 3jy' in 'Postcode' text box
            uIPostcodeEdit.Text = this.EnterAddressDetailsParams.UIPostcodeEditText;

            // Type '{Tab}' in 'Postcode' text box
            Keyboard.SendKeys(uIPostcodeEdit, this.EnterAddressDetailsParams.UIPostcodeEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ValidateAddAddressDetails - Use 'ValidateAddAddressDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddAddressDetails()
        {
            #region Variable Declarations
            HtmlEdit uINameEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UINameEdit;
            HtmlEdit uIAddressCodeEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIAddressCodeEdit;
            HtmlTextArea uICommentEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICommentEdit;
            HtmlEdit uIParentaddressEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIParentaddressEdit;
            HtmlEdit uICountryEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICountryEdit;
            HtmlEdit uIPostcodeEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIPostcodeEdit;
            HtmlEdit uIAddressline1Edit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIAddressline1Edit;
            HtmlEdit uIAddressline2Edit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIAddressline2Edit;
            HtmlEdit uICityEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICityEdit;
            HtmlEdit uICountyEdit = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICountyEdit;
            #endregion

            // Verify that 'Name*' text box's property 'Text' equals '__Automated Address'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UINameEditText, uINameEdit.Text);

            // Verify that 'Address Code' text box's property 'Text' equals '123'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UIAddressCodeEditText, uIAddressCodeEdit.Text);

            // Verify that 'Comment' text box's property 'Text' equals 'Automatically generated address - do not edit'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UICommentEditText, uICommentEdit.Text);

            // Verify that 'Parent address' text box's property 'Text' equals ''
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UIParentaddressEditText, uIParentaddressEdit.Text);

            // Verify that 'Country' text box's property 'Text' equals 'United Kingdom'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UICountryEditText, uICountryEdit.Text);

            // Verify that 'Postcode' text box's property 'Text' equals 'LN6 3JY'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UIPostcodeEditText, uIPostcodeEdit.Text);

            // Verify that 'Address line 1' text box's property 'Text' equals 'Low Moor Road'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UIAddressline1EditText, uIAddressline1Edit.Text);

            // Verify that 'Address line 2' text box's property 'Text' equals ''
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UIAddressline2EditText, uIAddressline2Edit.Text);

            // Verify that 'City' text box's property 'Text' equals 'Lincoln'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UICityEditText, uICityEdit.Text);

            // Verify that 'County' text box's property 'Text' equals 'Lincolnshire'
            Assert.AreEqual(this.ValidateAddAddressDetailsExpectedValues.UICountyEditText, uICountyEdit.Text);
        }
        
        /// <summary>
        /// ClickAddressSaveButton
        /// </summary>
        public void ClickAddressSaveButton()
        {
            #region Variable Declarations
            HtmlImage uISaveImage = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UIMaindivPane.UISaveImage;
            #endregion

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(23, 18));
        }
        
        /// <summary>
        /// EnterEditedAddressDetails - Use 'EnterEditedAddressDetailsParams' to pass parameters into this method.
        /// </summary>
        public void EnterEditedAddressDetails()
        {
            #region Variable Declarations
            HtmlEdit uINameEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UINameEdit;
            HtmlTextArea uICommentEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UICommentEdit;
            HtmlEdit uIAddressCodeEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIAddressCodeEdit;
            HtmlEdit uIPostcodeEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIPostcodeEdit;
            #endregion

            // Type '__Automated Address EDITED' in 'Name*' text box
            uINameEdit.Text = this.EnterEditedAddressDetailsParams.UINameEditText;

            // Type 'Automatically generated address - EDITED' in 'Comment' text box
            uICommentEdit.Text = this.EnterEditedAddressDetailsParams.UICommentEditText;

            // Type '456' in 'Address Code' text box
            uIAddressCodeEdit.Text = this.EnterEditedAddressDetailsParams.UIAddressCodeEditText;

            // Type 'HD2 1YF' in 'Postcode' text box
            uIPostcodeEdit.Text = this.EnterEditedAddressDetailsParams.UIPostcodeEditText;

            // Type '{Tab}' in 'Postcode' text box
            Keyboard.SendKeys(uIPostcodeEdit, this.EnterEditedAddressDetailsParams.UIPostcodeEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ValidateAddEditAddressDetails - Use 'ValidateAddEditAddressDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddEditAddressDetails()
        {
            #region Variable Declarations
            HtmlEdit uINameEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UINameEdit;
            HtmlEdit uIAddressCodeEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIAddressCodeEdit;
            HtmlTextArea uICommentEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UICommentEdit;
            HtmlEdit uICountryEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UICountryEdit;
            HtmlEdit uIPostcodeEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIPostcodeEdit;
            HtmlEdit uIAddressline1Edit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIAddressline1Edit;
            HtmlEdit uIAddressline2Edit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UIAddressline2Edit;
            HtmlEdit uICityEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UICityEdit;
            HtmlEdit uICountyEdit = this.UIAddress__AutomatedAdWindow.UIAddress__AutomatedAdDocument.UICountyEdit;
            #endregion

            // Verify that 'Name*' text box's property 'Text' equals '__Automated Address EDITED'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UINameEditText, uINameEdit.Text);

            // Verify that 'Address Code' text box's property 'Text' equals '456'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UIAddressCodeEditText, uIAddressCodeEdit.Text);

            // Verify that 'Comment' text box's property 'Text' equals 'Automatically generated address - EDITED'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UICommentEditText, uICommentEdit.Text);

            // Verify that 'Country' text box's property 'Text' equals 'United Kingdom'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UICountryEditText, uICountryEdit.Text);

            // Verify that 'Postcode' text box's property 'Text' equals 'HD2 1YF'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UIPostcodeEditText, uIPostcodeEdit.Text);

            // Verify that 'Address line 1' text box's property 'Text' equals 'Red Doles Lane'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UIAddressline1EditText, uIAddressline1Edit.Text);

            // Verify that 'Address line 2' text box's property 'Text' equals ''
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UIAddressline2EditText, uIAddressline2Edit.Text);

            // Verify that 'City' text box's property 'Text' equals 'Huddersfield'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UICityEditText, uICityEdit.Text);

            // Verify that 'County' text box's property 'Text' equals 'West Yorkshire'
            Assert.AreEqual(this.ValidateAddEditAddressDetailsExpectedValues.UICountyEditText, uICountyEdit.Text);
        }
        
        /// <summary>
        /// ValidateAddAddress - Use 'ValidateAddAddressExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddAddress()
        {
            #region Variable Declarations
            HtmlRow uITbl_gridLocations_44Row = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Row;
            #endregion

            // Verify that 'tbl_gridLocations_44012' row's property 'InnerText' equals '__Automated AddressLow Moor RoadLN6 3JY123'
            Assert.AreEqual(this.ValidateAddAddressExpectedValues.UITbl_gridLocations_44RowInnerText, uITbl_gridLocations_44Row.InnerText);
        }
        
        /// <summary>
        /// ArchiveAddress
        /// </summary>
        public void ArchiveAddress()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Cell.UIArchiveImage;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(15, 11));
        }
        
        /// <summary>
        /// ValidateAddressIsArchived - Use 'ValidateAddressIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddressIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateAddressIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// UnArchiveAddress
        /// </summary>
        public void UnArchiveAddress()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Cell.UIUnArchiveImage;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(10, 14));
        }
        
        /// <summary>
        /// ValidateAddressIsNotArchived - Use 'ValidateAddressIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddressIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage1 = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Cell.UIArchiveImage1;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateAddressIsNotArchivedExpectedValues.UIArchiveImage1Title, uIArchiveImage1.Title);
        }
        
        /// <summary>
        /// ClickEditAddress
        /// </summary>
        public void ClickEditAddress()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIAddress__AutomatedAdWindow1.UIAddressesDocument.UITbl_gridLocations_44Row.UIEditImage;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(10, 11));
        }
        
        /// <summary>
        /// ClickAddAddressLink
        /// </summary>
        public void ClickAddAddressLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddAddressHyperlink = this.UIAddressesWindowsInteWindow5.UIAddressesDocument.UIAddAddressHyperlink;
            #endregion

            // Click 'Add Address' link
            Mouse.Click(uIAddAddressHyperlink, new Point(60, 7));
        }
        
        /// <summary>
        /// ClickNewAddressLink
        /// </summary>
        public void ClickNewAddressLink()
        {
            #region Variable Declarations
            HtmlHyperlink uINewAddressHyperlink = this.UIAddressSearchWindowsWindow.UIAddressSearchDocument.UIPageOptionsNewAddresPane.UINewAddressHyperlink;
            #endregion

            // Click 'New Address' link
            Mouse.Click(uINewAddressHyperlink, new Point(46, 9));
        }
        
        /// <summary>
        /// SearchForAddress - Use 'SearchForAddressParams' to pass parameters into this method.
        /// </summary>
        public void SearchForAddress()
        {
            #region Variable Declarations
            HtmlEdit uIAddressCodeEdit = this.UIAddressSearchWindowsWindow.UIAddressSearchDocument.UIAddressCodeEdit;
            HtmlEdit uINameEdit = this.UIAddressSearchWindowsWindow.UIAddressSearchDocument.UINameEdit;
            HtmlInputButton uICtl00contentmaincmdoButton = this.UIAddressSearchWindowsWindow.UIAddressSearchDocument.UICtl00contentmaincmdoButton;
            #endregion

            // Click 'Address Code' text box
            Mouse.Click(uIAddressCodeEdit, new Point(25, 19));

            // Type '__Auto' in 'Name' text box
            uINameEdit.Text = this.SearchForAddressParams.UINameEditText;

            // Click 'ctl00$contentmain$cmdok' button
            Mouse.Click(uICtl00contentmaincmdoButton, new Point(15, 19));
        }
        
        /// <summary>
        /// ValidateEditAddress - Use 'ValidateEditAddressExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditAddress()
        {
            #region Variable Declarations
            HtmlRow uITbl_gridLocations_44Row = this.UIAddressesWindowsInteWindow1.UIAddressesDocument.UITbl_gridLocations_44Row;
            #endregion

            // Verify that 'tbl_gridLocations_44012' row's property 'InnerText' equals '__Automated Address EDITEDRed Doles LaneHD2 1YF456'
            Assert.AreEqual(this.ValidateEditAddressExpectedValues.UITbl_gridLocations_44RowInnerText, uITbl_gridLocations_44Row.InnerText);
        }
        
        /// <summary>
        /// ValidateAddDuplicateAddress - Use 'ValidateAddDuplicateAddressExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateAddress()
        {
            #region Variable Declarations
            WinText uITheaddressyouhaveentText = this.UIMessagefromwebpageWindow.UITheaddressyouhaveentWindow.UITheaddressyouhaveentText;
            #endregion

            // Verify that 'The address you have entered already exists' label's property 'DisplayText' equals 'The address you have entered already exists'
            Assert.AreEqual(this.ValidateAddDuplicateAddressExpectedValues.UITheaddressyouhaveentTextDisplayText, uITheaddressyouhaveentText.DisplayText);
        }
        
        /// <summary>
        /// UndoAddDuplicateAddress
        /// </summary>
        public void UndoAddDuplicateAddress()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            HtmlInputButton uICtl00contentmaincmdcButton = this.UIAddressNewWindowsIntWindow.UIAddressNewDocument.UICtl00contentmaincmdcButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(25, 16));

            // Click 'ctl00$contentmain$cmdcancel' button
            Mouse.Click(uICtl00contentmaincmdcButton, new Point(21, 20));
        }
        
        /// <summary>
        /// EnterParentAddress - Use 'EnterParentAddressParams' to pass parameters into this method.
        /// </summary>
        public void EnterParentAddress()
        {
            #region Variable Declarations
            HtmlEdit uIParentaddressEdit = this.UIAddress__AutomatedAdWindow2.UIAddress__AutomatedAdDocument.UIParentaddressEdit;
            #endregion

            // Type '__Automated Parent Address' in 'Parent address' text box
            uIParentaddressEdit.Text = this.EnterParentAddressParams.UIParentaddressEditText;
        }
        
        /// <summary>
        /// ValidateParentAddress - Use 'ValidateParentAddressExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateParentAddress()
        {
            #region Variable Declarations
            HtmlEdit uIParentaddressEdit = this.UIAddress__AutomatedAdWindow2.UIAddress__AutomatedAdDocument.UIParentaddressEdit;
            #endregion

            // Verify that 'Parent address' text box's property 'Text' equals '__Automated Parent Address'
            Assert.AreEqual(this.ValidateParentAddressExpectedValues.UIParentaddressEditText, uIParentaddressEdit.Text);
        }
        
        /// <summary>
        /// DeleteParentAddress
        /// </summary>
       /* public void DeleteParentAddress()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIAddressesWindowsInteWindow2.UIAddressesDocument.UITbl_gridLocations_44Row.UIDeleteImage;
            BrowserWindow uIAddressesWindowsInteWindow3 = this.UIAddressesWindowsInteWindow3;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(8, 9));

            // Click 'Ok' button in the browser dialog window
            uIAddressesWindowsInteWindow3.PerformDialogAction(BrowserDialogAction.Ok);
        }*/
        
        /// <summary>
        /// DeleteAddress
        /// </summary>
        public void DeleteAddress()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIAddressesWindowsInteWindow2.UIAddressesDocument.UITbl_gridLocations_44Row1.UIDeleteImage;
            BrowserWindow uIAddressesWindowsInteWindow4 = this.UIAddressesWindowsInteWindow4;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(5, 8));

            // Click 'Ok' button in the browser dialog window
            uIAddressesWindowsInteWindow4.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateAddressDoesNotExist - Use 'ValidateAddressDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddressDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uI__AutomatedAddressCell = this.UIAddressesWindowsInteWindow2.UIAddressesDocument.UITbl_gridLocationsTable.UI__AutomatedAddressCell;
            #endregion

            // Verify that '__Automated Address' cell's property 'InnerText' is not equal to '__Automated Address'
            Assert.AreNotEqual(this.ValidateAddressDoesNotExistExpectedValues.UI__AutomatedAddressCellInnerText, uI__AutomatedAddressCell.InnerText);
        }
        
        /// <summary>
        /// ClickSearchButton
        /// </summary>
        public void ClickSearchButton()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmaincmdoButton = this.UIAddressSearchWindowsWindow.UIAddressSearchDocument1.UICtl00contentmaincmdoButton;
            #endregion

            // Click 'ctl00$contentmain$cmdok' button
            Mouse.Click(uICtl00contentmaincmdoButton, new Point(19, 18));
        }
        
        /// <summary>
        /// DeleteAddress2
        /// </summary>
        public void DeleteParentAddress()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIAddressesWindowsInteWindow6.UIAddressesDocument.UITbl_gridLocations_42Row.UIDeleteImage;
            BrowserWindow uIAddressesWindowsInteWindow7 = this.UIAddressesWindowsInteWindow7;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(2, 6));

            // Click 'Ok' button in the browser dialog window
            uIAddressesWindowsInteWindow7.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        #region Properties
        public virtual EnterAddressDetailsParams EnterAddressDetailsParams
        {
            get
            {
                if ((this.mEnterAddressDetailsParams == null))
                {
                    this.mEnterAddressDetailsParams = new EnterAddressDetailsParams();
                }
                return this.mEnterAddressDetailsParams;
            }
        }
        
        public virtual ValidateAddAddressDetailsExpectedValues ValidateAddAddressDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAddAddressDetailsExpectedValues == null))
                {
                    this.mValidateAddAddressDetailsExpectedValues = new ValidateAddAddressDetailsExpectedValues();
                }
                return this.mValidateAddAddressDetailsExpectedValues;
            }
        }
        
        public virtual EnterEditedAddressDetailsParams EnterEditedAddressDetailsParams
        {
            get
            {
                if ((this.mEnterEditedAddressDetailsParams == null))
                {
                    this.mEnterEditedAddressDetailsParams = new EnterEditedAddressDetailsParams();
                }
                return this.mEnterEditedAddressDetailsParams;
            }
        }
        
        public virtual ValidateAddEditAddressDetailsExpectedValues ValidateAddEditAddressDetailsExpectedValues
        {
            get
            {
                if ((this.mValidateAddEditAddressDetailsExpectedValues == null))
                {
                    this.mValidateAddEditAddressDetailsExpectedValues = new ValidateAddEditAddressDetailsExpectedValues();
                }
                return this.mValidateAddEditAddressDetailsExpectedValues;
            }
        }
        
        public virtual ValidateAddAddressExpectedValues ValidateAddAddressExpectedValues
        {
            get
            {
                if ((this.mValidateAddAddressExpectedValues == null))
                {
                    this.mValidateAddAddressExpectedValues = new ValidateAddAddressExpectedValues();
                }
                return this.mValidateAddAddressExpectedValues;
            }
        }
        
        public virtual ValidateAddressIsArchivedExpectedValues ValidateAddressIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateAddressIsArchivedExpectedValues == null))
                {
                    this.mValidateAddressIsArchivedExpectedValues = new ValidateAddressIsArchivedExpectedValues();
                }
                return this.mValidateAddressIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateAddressIsNotArchivedExpectedValues ValidateAddressIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateAddressIsNotArchivedExpectedValues == null))
                {
                    this.mValidateAddressIsNotArchivedExpectedValues = new ValidateAddressIsNotArchivedExpectedValues();
                }
                return this.mValidateAddressIsNotArchivedExpectedValues;
            }
        }
        
        public virtual SearchForAddressParams SearchForAddressParams
        {
            get
            {
                if ((this.mSearchForAddressParams == null))
                {
                    this.mSearchForAddressParams = new SearchForAddressParams();
                }
                return this.mSearchForAddressParams;
            }
        }
        
        public virtual ValidateEditAddressExpectedValues ValidateEditAddressExpectedValues
        {
            get
            {
                if ((this.mValidateEditAddressExpectedValues == null))
                {
                    this.mValidateEditAddressExpectedValues = new ValidateEditAddressExpectedValues();
                }
                return this.mValidateEditAddressExpectedValues;
            }
        }
        
        public virtual ValidateAddDuplicateAddressExpectedValues ValidateAddDuplicateAddressExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateAddressExpectedValues == null))
                {
                    this.mValidateAddDuplicateAddressExpectedValues = new ValidateAddDuplicateAddressExpectedValues();
                }
                return this.mValidateAddDuplicateAddressExpectedValues;
            }
        }
        
        public virtual EnterParentAddressParams EnterParentAddressParams
        {
            get
            {
                if ((this.mEnterParentAddressParams == null))
                {
                    this.mEnterParentAddressParams = new EnterParentAddressParams();
                }
                return this.mEnterParentAddressParams;
            }
        }
        
        public virtual ValidateParentAddressExpectedValues ValidateParentAddressExpectedValues
        {
            get
            {
                if ((this.mValidateParentAddressExpectedValues == null))
                {
                    this.mValidateParentAddressExpectedValues = new ValidateParentAddressExpectedValues();
                }
                return this.mValidateParentAddressExpectedValues;
            }
        }
        
        public virtual ValidateAddressDoesNotExistExpectedValues ValidateAddressDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateAddressDoesNotExistExpectedValues == null))
                {
                    this.mValidateAddressDoesNotExistExpectedValues = new ValidateAddressDoesNotExistExpectedValues();
                }
                return this.mValidateAddressDoesNotExistExpectedValues;
            }
        }
        
        public UIAddressNewWindowsIntWindow UIAddressNewWindowsIntWindow
        {
            get
            {
                if ((this.mUIAddressNewWindowsIntWindow == null))
                {
                    this.mUIAddressNewWindowsIntWindow = new UIAddressNewWindowsIntWindow();
                }
                return this.mUIAddressNewWindowsIntWindow;
            }
        }
        
        public UIAddress__AutomatedAdWindow UIAddress__AutomatedAdWindow
        {
            get
            {
                if ((this.mUIAddress__AutomatedAdWindow == null))
                {
                    this.mUIAddress__AutomatedAdWindow = new UIAddress__AutomatedAdWindow();
                }
                return this.mUIAddress__AutomatedAdWindow;
            }
        }
        
        public UIAddress__AutomatedAdWindow1 UIAddress__AutomatedAdWindow1
        {
            get
            {
                if ((this.mUIAddress__AutomatedAdWindow1 == null))
                {
                    this.mUIAddress__AutomatedAdWindow1 = new UIAddress__AutomatedAdWindow1();
                }
                return this.mUIAddress__AutomatedAdWindow1;
            }
        }
        
        public UIAddressSearchWindowsWindow UIAddressSearchWindowsWindow
        {
            get
            {
                if ((this.mUIAddressSearchWindowsWindow == null))
                {
                    this.mUIAddressSearchWindowsWindow = new UIAddressSearchWindowsWindow();
                }
                return this.mUIAddressSearchWindowsWindow;
            }
        }
        
        public UIAddressesWindowsInteWindow UIAddressesWindowsInteWindow
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow == null))
                {
                    this.mUIAddressesWindowsInteWindow = new UIAddressesWindowsInteWindow();
                }
                return this.mUIAddressesWindowsInteWindow;
            }
        }
        
        public UIAddressesWindowsInteWindow1 UIAddressesWindowsInteWindow1
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow1 == null))
                {
                    this.mUIAddressesWindowsInteWindow1 = new UIAddressesWindowsInteWindow1();
                }
                return this.mUIAddressesWindowsInteWindow1;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIAddress__AutomatedAdWindow2 UIAddress__AutomatedAdWindow2
        {
            get
            {
                if ((this.mUIAddress__AutomatedAdWindow2 == null))
                {
                    this.mUIAddress__AutomatedAdWindow2 = new UIAddress__AutomatedAdWindow2();
                }
                return this.mUIAddress__AutomatedAdWindow2;
            }
        }
        
        public UIAddressesWindowsInteWindow2 UIAddressesWindowsInteWindow2
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow2 == null))
                {
                    this.mUIAddressesWindowsInteWindow2 = new UIAddressesWindowsInteWindow2();
                }
                return this.mUIAddressesWindowsInteWindow2;
            }
        }
        
        public UIAddressesWindowsInteWindow3 UIAddressesWindowsInteWindow3
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow3 == null))
                {
                    this.mUIAddressesWindowsInteWindow3 = new UIAddressesWindowsInteWindow3();
                }
                return this.mUIAddressesWindowsInteWindow3;
            }
        }
        
        public UIAddressesWindowsInteWindow4 UIAddressesWindowsInteWindow4
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow4 == null))
                {
                    this.mUIAddressesWindowsInteWindow4 = new UIAddressesWindowsInteWindow4();
                }
                return this.mUIAddressesWindowsInteWindow4;
            }
        }
        
        public UIAddressesWindowsInteWindow5 UIAddressesWindowsInteWindow5
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow5 == null))
                {
                    this.mUIAddressesWindowsInteWindow5 = new UIAddressesWindowsInteWindow5();
                }
                return this.mUIAddressesWindowsInteWindow5;
            }
        }
        
        public UIAddressesWindowsInteWindow6 UIAddressesWindowsInteWindow6
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow6 == null))
                {
                    this.mUIAddressesWindowsInteWindow6 = new UIAddressesWindowsInteWindow6();
                }
                return this.mUIAddressesWindowsInteWindow6;
            }
        }
        
        public UIAddressesWindowsInteWindow7 UIAddressesWindowsInteWindow7
        {
            get
            {
                if ((this.mUIAddressesWindowsInteWindow7 == null))
                {
                    this.mUIAddressesWindowsInteWindow7 = new UIAddressesWindowsInteWindow7();
                }
                return this.mUIAddressesWindowsInteWindow7;
            }
        }
        #endregion
        
        #region Fields
        private EnterAddressDetailsParams mEnterAddressDetailsParams;
        
        private ValidateAddAddressDetailsExpectedValues mValidateAddAddressDetailsExpectedValues;
        
        private EnterEditedAddressDetailsParams mEnterEditedAddressDetailsParams;
        
        private ValidateAddEditAddressDetailsExpectedValues mValidateAddEditAddressDetailsExpectedValues;
        
        private ValidateAddAddressExpectedValues mValidateAddAddressExpectedValues;
        
        private ValidateAddressIsArchivedExpectedValues mValidateAddressIsArchivedExpectedValues;
        
        private ValidateAddressIsNotArchivedExpectedValues mValidateAddressIsNotArchivedExpectedValues;
        
        private SearchForAddressParams mSearchForAddressParams;
        
        private ValidateEditAddressExpectedValues mValidateEditAddressExpectedValues;
        
        private ValidateAddDuplicateAddressExpectedValues mValidateAddDuplicateAddressExpectedValues;
        
        private EnterParentAddressParams mEnterParentAddressParams;
        
        private ValidateParentAddressExpectedValues mValidateParentAddressExpectedValues;
        
        private ValidateAddressDoesNotExistExpectedValues mValidateAddressDoesNotExistExpectedValues;
        
        private UIAddressNewWindowsIntWindow mUIAddressNewWindowsIntWindow;
        
        private UIAddress__AutomatedAdWindow mUIAddress__AutomatedAdWindow;
        
        private UIAddress__AutomatedAdWindow1 mUIAddress__AutomatedAdWindow1;
        
        private UIAddressSearchWindowsWindow mUIAddressSearchWindowsWindow;
        
        private UIAddressesWindowsInteWindow mUIAddressesWindowsInteWindow;
        
        private UIAddressesWindowsInteWindow1 mUIAddressesWindowsInteWindow1;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIAddress__AutomatedAdWindow2 mUIAddress__AutomatedAdWindow2;
        
        private UIAddressesWindowsInteWindow2 mUIAddressesWindowsInteWindow2;
        
        private UIAddressesWindowsInteWindow3 mUIAddressesWindowsInteWindow3;
        
        private UIAddressesWindowsInteWindow4 mUIAddressesWindowsInteWindow4;
        
        private UIAddressesWindowsInteWindow5 mUIAddressesWindowsInteWindow5;
        
        private UIAddressesWindowsInteWindow6 mUIAddressesWindowsInteWindow6;
        
        private UIAddressesWindowsInteWindow7 mUIAddressesWindowsInteWindow7;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterAddressDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class EnterAddressDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Automated Address' in 'Name*' text box
        /// </summary>
        public string UINameEditText = "__Automated Address";
        
        /// <summary>
        /// Type '123' in 'Address Code' text box
        /// </summary>
        public string UIAddressCodeEditText = "123";
        
        /// <summary>
        /// Type 'Automatically generated address - do not edit' in 'Comment' text box
        /// </summary>
        public string UICommentEditText = "Automatically generated address - do not edit";
        
        /// <summary>
        /// Type 'united' in 'Country' text box
        /// </summary>
        public string UICountryEditText = "united";
        
        /// <summary>
        /// Type 'ln6 3jy' in 'Postcode' text box
        /// </summary>
        public string UIPostcodeEditText = "ln6 3jy";
        
        /// <summary>
        /// Type '{Tab}' in 'Postcode' text box
        /// </summary>
        public string UIPostcodeEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddAddressDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddAddressDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Name*' text box's property 'Text' equals '__Automated Address'
        /// </summary>
        public string UINameEditText = "__Automated Address";
        
        /// <summary>
        /// Verify that 'Address Code' text box's property 'Text' equals '123'
        /// </summary>
        public string UIAddressCodeEditText = "123";
        
        /// <summary>
        /// Verify that 'Comment' text box's property 'Text' equals 'Automatically generated address - do not edit'
        /// </summary>
        public string UICommentEditText = "Automatically generated address - do not edit";
        
        /// <summary>
        /// Verify that 'Parent address' text box's property 'Text' equals ''
        /// </summary>
        public string UIParentaddressEditText = "";
        
        /// <summary>
        /// Verify that 'Country' text box's property 'Text' equals 'United Kingdom'
        /// </summary>
        public string UICountryEditText = "United Kingdom";
        
        /// <summary>
        /// Verify that 'Postcode' text box's property 'Text' equals 'LN6 3JY'
        /// </summary>
        public string UIPostcodeEditText = "LN6 3JY";
        
        /// <summary>
        /// Verify that 'Address line 1' text box's property 'Text' equals 'Low Moor Road'
        /// </summary>
        public string UIAddressline1EditText = "Low Moor Road";
        
        /// <summary>
        /// Verify that 'Address line 2' text box's property 'Text' equals ''
        /// </summary>
        public string UIAddressline2EditText = "";
        
        /// <summary>
        /// Verify that 'City' text box's property 'Text' equals 'Lincoln'
        /// </summary>
        public string UICityEditText = "Lincoln";
        
        /// <summary>
        /// Verify that 'County' text box's property 'Text' equals 'Lincolnshire'
        /// </summary>
        public string UICountyEditText = "Lincolnshire";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterEditedAddressDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class EnterEditedAddressDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Automated Address EDITED' in 'Name*' text box
        /// </summary>
        public string UINameEditText = "__Automated Address EDITED";
        
        /// <summary>
        /// Type 'Automatically generated address - EDITED' in 'Comment' text box
        /// </summary>
        public string UICommentEditText = "Automatically generated address - EDITED";
        
        /// <summary>
        /// Type '456' in 'Address Code' text box
        /// </summary>
        public string UIAddressCodeEditText = "456";
        
        /// <summary>
        /// Type 'HD2 1YF' in 'Postcode' text box
        /// </summary>
        public string UIPostcodeEditText = "HD2 1YF";
        
        /// <summary>
        /// Type '{Tab}' in 'Postcode' text box
        /// </summary>
        public string UIPostcodeEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddEditAddressDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddEditAddressDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Name*' text box's property 'Text' equals '__Automated Address EDITED'
        /// </summary>
        public string UINameEditText = "__Automated Address EDITED";
        
        /// <summary>
        /// Verify that 'Address Code' text box's property 'Text' equals '456'
        /// </summary>
        public string UIAddressCodeEditText = "456";
        
        /// <summary>
        /// Verify that 'Comment' text box's property 'Text' equals 'Automatically generated address - EDITED'
        /// </summary>
        public string UICommentEditText = "Automatically generated address - EDITED";
        
        /// <summary>
        /// Verify that 'Country' text box's property 'Text' equals 'United Kingdom'
        /// </summary>
        public string UICountryEditText = "United Kingdom";
        
        /// <summary>
        /// Verify that 'Postcode' text box's property 'Text' equals 'HD2 1YF'
        /// </summary>
        public string UIPostcodeEditText = "HD2 1YF";
        
        /// <summary>
        /// Verify that 'Address line 1' text box's property 'Text' equals 'Red Doles Lane'
        /// </summary>
        public string UIAddressline1EditText = "Red Doles Lane";
        
        /// <summary>
        /// Verify that 'Address line 2' text box's property 'Text' equals ''
        /// </summary>
        public string UIAddressline2EditText = "";
        
        /// <summary>
        /// Verify that 'City' text box's property 'Text' equals 'Huddersfield'
        /// </summary>
        public string UICityEditText = "Huddersfield";
        
        /// <summary>
        /// Verify that 'County' text box's property 'Text' equals 'West Yorkshire'
        /// </summary>
        public string UICountyEditText = "West Yorkshire";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddAddressExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'tbl_gridLocations_44012' row's property 'InnerText' equals '__Automated AddressLow Moor RoadLN6 3JY123'
        /// </summary>
        public string UITbl_gridLocations_44RowInnerText = "__Automated AddressLow Moor RoadLN6 3JY123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddressIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddressIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddressIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddressIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImage1Title = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchForAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SearchForAddressParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Auto' in 'Name' text box
        /// </summary>
        public string UINameEditText = "__Auto";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateEditAddressExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'tbl_gridLocations_44012' row's property 'InnerText' equals '__Automated Address EDITEDRed Doles LaneHD2 1YF456'
        /// </summary>
        public string UITbl_gridLocations_44RowInnerText = "__Automated Address EDITEDRed Doles LaneHD2 1YF456";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddDuplicateAddressExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'The address you have entered already exists' label's property 'DisplayText' equals 'The address you have entered already exists'
        /// </summary>
        public string UITheaddressyouhaveentTextDisplayText = "The address you have entered already exists";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterParentAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class EnterParentAddressParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Automated Parent Address' in 'Parent address' text box
        /// </summary>
        public string UIParentaddressEditText = "__Automated Parent Address";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateParentAddress'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateParentAddressExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Parent address' text box's property 'Text' equals '__Automated Parent Address'
        /// </summary>
        public string UIParentaddressEditText = "__Automated Parent Address";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddressDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ValidateAddressDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '__Automated Address' cell's property 'InnerText' is not equal to '__Automated Address'
        /// </summary>
        public string UI__AutomatedAddressCellInnerText = "__Automated Address";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressNewWindowsIntWindow : BrowserWindow
    {
        
        public UIAddressNewWindowsIntWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Address: New";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Address: New");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressNewDocument UIAddressNewDocument
        {
            get
            {
                if ((this.mUIAddressNewDocument == null))
                {
                    this.mUIAddressNewDocument = new UIAddressNewDocument(this);
                }
                return this.mUIAddressNewDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressNewDocument mUIAddressNewDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressNewDocument : HtmlDocument
    {
        
        public UIAddressNewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Address: New";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aelocation.aspx";
            this.WindowTitles.Add("Address: New");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlocation";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlocation";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name*";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtlocation class=f";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUINameEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlEdit UIAddressCodeEdit
        {
            get
            {
                if ((this.mUIAddressCodeEdit == null))
                {
                    this.mUIAddressCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcode";
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcode";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Code";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcode class=fills";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIAddressCodeEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIAddressCodeEdit;
            }
        }
        
        public HtmlTextArea UICommentEdit
        {
            get
            {
                if ((this.mUICommentEdit == null))
                {
                    this.mUICommentEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUICommentEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcomment";
                    this.mUICommentEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcomment";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Comment";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcomment class=fi";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUICommentEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUICommentEdit;
            }
        }
        
        public HtmlEdit UICountryEdit
        {
            get
            {
                if ((this.mUICountryEdit == null))
                {
                    this.mUICountryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcountry";
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcountry";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Country";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcountry class=fi";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICountryEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUICountryEdit;
            }
        }
        
        public UICtl00_contentmain_auCustom UICtl00_contentmain_auCustom
        {
            get
            {
                if ((this.mUICtl00_contentmain_auCustom == null))
                {
                    this.mUICtl00_contentmain_auCustom = new UICtl00_contentmain_auCustom(this);
                }
                return this.mUICtl00_contentmain_auCustom;
            }
        }
        
        public HtmlEdit UIPostcodeEdit
        {
            get
            {
                if ((this.mUIPostcodeEdit == null))
                {
                    this.mUIPostcodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtpostcode";
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtpostcode";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Postcode";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onblur=getAddress(); id=ctl00_contentmai";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUIPostcodeEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIPostcodeEdit;
            }
        }
        
        public HtmlEdit UIParentaddressEdit
        {
            get
            {
                if ((this.mUIParentaddressEdit == null))
                {
                    this.mUIParentaddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIParentaddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtparentcompany";
                    this.mUIParentaddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtparentcompany";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Parent address";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtparentcompany cl";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUIParentaddressEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIParentaddressEdit;
            }
        }
        
        public HtmlEdit UIAddressline1Edit
        {
            get
            {
                if ((this.mUIAddressline1Edit == null))
                {
                    this.mUIAddressline1Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressline1Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtaddressline1";
                    this.mUIAddressline1Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtaddressline1";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address line 1";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtaddressline1 cla";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUIAddressline1Edit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIAddressline1Edit;
            }
        }
        
        public HtmlEdit UIAddressline2Edit
        {
            get
            {
                if ((this.mUIAddressline2Edit == null))
                {
                    this.mUIAddressline2Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressline2Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtaddressline2";
                    this.mUIAddressline2Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtaddressline2";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address line 2";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtaddressline2 cla";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUIAddressline2Edit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIAddressline2Edit;
            }
        }
        
        public HtmlEdit UICityEdit
        {
            get
            {
                if ((this.mUICityEdit == null))
                {
                    this.mUICityEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcity";
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcity";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "City";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcity class=fills";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUICityEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUICityEdit;
            }
        }
        
        public HtmlEdit UICountyEdit
        {
            get
            {
                if ((this.mUICountyEdit == null))
                {
                    this.mUICountyEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountyEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcounty";
                    this.mUICountyEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcounty";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "County";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcounty class=fil";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    this.mUICountyEdit.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUICountyEdit;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdcButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdcButton == null))
                {
                    this.mUICtl00contentmaincmdcButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdcancel";
                    this.mUICtl00contentmaincmdcButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdcancel";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdcButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdcButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "18";
                    this.mUICtl00contentmaincmdcButton.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUICtl00contentmaincmdcButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlEdit mUIAddressCodeEdit;
        
        private HtmlTextArea mUICommentEdit;
        
        private HtmlEdit mUICountryEdit;
        
        private UICtl00_contentmain_auCustom mUICtl00_contentmain_auCustom;
        
        private HtmlEdit mUIPostcodeEdit;
        
        private HtmlEdit mUIParentaddressEdit;
        
        private HtmlEdit mUIAddressline1Edit;
        
        private HtmlEdit mUIAddressline2Edit;
        
        private HtmlEdit mUICityEdit;
        
        private HtmlEdit mUICountyEdit;
        
        private UIMaindivPane mUIMaindivPane;
        
        private HtmlInputButton mUICtl00contentmaincmdcButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICtl00_contentmain_auCustom : HtmlCustom
    {
        
        public UICtl00_contentmain_auCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "ctl00_contentmain_autocompcountry_completionListElem";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "style=\"Z-INDEX: 1000; BORDER-BOTTOM: but";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Address: New");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIUnitedKingdomCustom
        {
            get
            {
                if ((this.mUIUnitedKingdomCustom == null))
                {
                    this.mUIUnitedKingdomCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIUnitedKingdomCustom.SearchProperties["Id"] = null;
                    this.mUIUnitedKingdomCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIUnitedKingdomCustom.SearchProperties["TagName"] = "LI";
                    this.mUIUnitedKingdomCustom.FilterProperties["Class"] = null;
                    this.mUIUnitedKingdomCustom.FilterProperties["ControlDefinition"] = "style=\"TEXT-ALIGN: left; PADDING-BOTTOM:";
                    this.mUIUnitedKingdomCustom.FilterProperties["InnerText"] = "United Kingdom";
                    this.mUIUnitedKingdomCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIUnitedKingdomCustom.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUIUnitedKingdomCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIUnitedKingdomCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details\r\nName*  *Address Code   ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
            this.WindowTitles.Add("Address: New");
            #endregion
        }
        
        #region Properties
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "currentAction=\'OK\';saveLocation();";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:currentAction=\'OK\';saveLocation();";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Save src=\"../images/buttons/btn_save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "8";
                    this.mUISaveImage.WindowTitles.Add("Address: New");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUISaveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddress__AutomatedAdWindow : BrowserWindow
    {
        
        public UIAddress__AutomatedAdWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Address: __Automated Address";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Address: __Automated Address");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddress__AutomatedAdDocument UIAddress__AutomatedAdDocument
        {
            get
            {
                if ((this.mUIAddress__AutomatedAdDocument == null))
                {
                    this.mUIAddress__AutomatedAdDocument = new UIAddress__AutomatedAdDocument(this);
                }
                return this.mUIAddress__AutomatedAdDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddress__AutomatedAdDocument mUIAddress__AutomatedAdDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddress__AutomatedAdDocument : HtmlDocument
    {
        
        public UIAddress__AutomatedAdDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Address: __Automated Address";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/aelocation.aspx?companyid=44012";
            this.WindowTitles.Add("Address: __Automated Address");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlocation";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlocation";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name*";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtlocation class=f";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUINameEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlTextArea UICommentEdit
        {
            get
            {
                if ((this.mUICommentEdit == null))
                {
                    this.mUICommentEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUICommentEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcomment";
                    this.mUICommentEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcomment";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Comment";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcomment class=fi";
                    this.mUICommentEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUICommentEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUICommentEdit;
            }
        }
        
        public HtmlEdit UIAddressCodeEdit
        {
            get
            {
                if ((this.mUIAddressCodeEdit == null))
                {
                    this.mUIAddressCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcode";
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcode";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Code";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcode class=fills";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIAddressCodeEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUIAddressCodeEdit;
            }
        }
        
        public HtmlEdit UIPostcodeEdit
        {
            get
            {
                if ((this.mUIPostcodeEdit == null))
                {
                    this.mUIPostcodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtpostcode";
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtpostcode";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Postcode";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onblur=getAddress(); id=ctl00_contentmai";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUIPostcodeEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUIPostcodeEdit;
            }
        }
        
        public HtmlEdit UICountryEdit
        {
            get
            {
                if ((this.mUICountryEdit == null))
                {
                    this.mUICountryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcountry";
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcountry";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Country";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcountry class=fi";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUICountryEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUICountryEdit;
            }
        }
        
        public HtmlEdit UIAddressline1Edit
        {
            get
            {
                if ((this.mUIAddressline1Edit == null))
                {
                    this.mUIAddressline1Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressline1Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtaddressline1";
                    this.mUIAddressline1Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtaddressline1";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address line 1";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtaddressline1 cla";
                    this.mUIAddressline1Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUIAddressline1Edit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUIAddressline1Edit;
            }
        }
        
        public HtmlEdit UIAddressline2Edit
        {
            get
            {
                if ((this.mUIAddressline2Edit == null))
                {
                    this.mUIAddressline2Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressline2Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtaddressline2";
                    this.mUIAddressline2Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtaddressline2";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address line 2";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtaddressline2 cla";
                    this.mUIAddressline2Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUIAddressline2Edit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUIAddressline2Edit;
            }
        }
        
        public HtmlEdit UICityEdit
        {
            get
            {
                if ((this.mUICityEdit == null))
                {
                    this.mUICityEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcity";
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcity";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "City";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcity class=fills";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUICityEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUICityEdit;
            }
        }
        
        public HtmlEdit UICountyEdit
        {
            get
            {
                if ((this.mUICountyEdit == null))
                {
                    this.mUICountyEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountyEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcounty";
                    this.mUICountyEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcounty";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "County";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcounty class=fil";
                    this.mUICountyEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    this.mUICountyEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUICountyEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlTextArea mUICommentEdit;
        
        private HtmlEdit mUIAddressCodeEdit;
        
        private HtmlEdit mUIPostcodeEdit;
        
        private HtmlEdit mUICountryEdit;
        
        private HtmlEdit mUIAddressline1Edit;
        
        private HtmlEdit mUIAddressline2Edit;
        
        private HtmlEdit mUICityEdit;
        
        private HtmlEdit mUICountyEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddress__AutomatedAdWindow1 : BrowserWindow
    {
        
        public UIAddress__AutomatedAdWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Address: __Automated Address";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Address: __Automated Address");
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument : HtmlDocument
    {
        
        public UIAddressesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/adminlocations.aspx?";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public UITbl_gridLocations_44Row UITbl_gridLocations_44Row
        {
            get
            {
                if ((this.mUITbl_gridLocations_44Row == null))
                {
                    this.mUITbl_gridLocations_44Row = new UITbl_gridLocations_44Row(this);
                }
                return this.mUITbl_gridLocations_44Row;
            }
        }
        
        public UITbl_gridLocations_44Cell UITbl_gridLocations_44Cell
        {
            get
            {
                if ((this.mUITbl_gridLocations_44Cell == null))
                {
                    this.mUITbl_gridLocations_44Cell = new UITbl_gridLocations_44Cell(this);
                }
                return this.mUITbl_gridLocations_44Cell;
            }
        }
        
        public HtmlHyperlink UIAddAddressHyperlink
        {
            get
            {
                if ((this.mUIAddAddressHyperlink == null))
                {
                    this.mUIAddAddressHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_hlAddAddress";
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Address";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://fwtest.sel-expenses.com/shared/admin/aelocation.aspx";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_hlAddAddress class=";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddAddressHyperlink.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIAddAddressHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridLocations_44Row mUITbl_gridLocations_44Row;
        
        private UITbl_gridLocations_44Cell mUITbl_gridLocations_44Cell;
        
        private HtmlHyperlink mUIAddAddressHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocations_44Row : HtmlRow
    {
        
        public UITbl_gridLocations_44Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridLocations_44012";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Automated AddressLow Moor RoadLN6 3JY1";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_44012";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/shared/admin/aelocation.aspx";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Href] = "http://fwtest.sel-expenses.com/shared/admin/aelocation.aspx?companyid=44012";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocations_44Cell : HtmlCell
    {
        
        public UITbl_gridLocations_44Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_gridLocations_44012_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_44012_archiveStatus";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(44012);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(44012);";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/folder_into.gif";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(44012);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(44012);";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"http://fwtest.sel-";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        
        public HtmlImage UIArchiveImage1
        {
            get
            {
                if ((this.mUIArchiveImage1 == null))
                {
                    this.mUIArchiveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "http://fwtest.sel-expenses.com/shared/images/icons/folder_lock.gif";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "changeArchiveStatus(44012);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:changeArchiveStatus(44012);";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"http://fwtest.sel-exp";
                    this.mUIArchiveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage1.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIArchiveImage1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        
        private HtmlImage mUIArchiveImage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressSearchWindowsWindow : BrowserWindow
    {
        
        public UIAddressSearchWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Address Search";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Address Search");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressSearchDocument UIAddressSearchDocument
        {
            get
            {
                if ((this.mUIAddressSearchDocument == null))
                {
                    this.mUIAddressSearchDocument = new UIAddressSearchDocument(this);
                }
                return this.mUIAddressSearchDocument;
            }
        }
        
        public UIAddressSearchDocument1 UIAddressSearchDocument1
        {
            get
            {
                if ((this.mUIAddressSearchDocument1 == null))
                {
                    this.mUIAddressSearchDocument1 = new UIAddressSearchDocument1(this);
                }
                return this.mUIAddressSearchDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressSearchDocument mUIAddressSearchDocument;
        
        private UIAddressSearchDocument1 mUIAddressSearchDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressSearchDocument : HtmlDocument
    {
        
        public UIAddressSearchDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Address Search";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/locationsearch.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/locationsearch.aspx";
            this.WindowTitles.Add("Address Search");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsNewAddresPane UIPageOptionsNewAddresPane
        {
            get
            {
                if ((this.mUIPageOptionsNewAddresPane == null))
                {
                    this.mUIPageOptionsNewAddresPane = new UIPageOptionsNewAddresPane(this);
                }
                return this.mUIPageOptionsNewAddresPane;
            }
        }
        
        public HtmlEdit UIAddressCodeEdit
        {
            get
            {
                if ((this.mUIAddressCodeEdit == null))
                {
                    this.mUIAddressCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcode";
                    this.mUIAddressCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcode";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Address Code";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcode class=fills";
                    this.mUIAddressCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIAddressCodeEdit.WindowTitles.Add("Address Search");
                    #endregion
                }
                return this.mUIAddressCodeEdit;
            }
        }
        
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtname";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtname";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtname class=fills";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUINameEdit.WindowTitles.Add("Address Search");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdoButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdoButton == null))
                {
                    this.mUICtl00contentmaincmdoButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdoButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/pagebutton_search.gif";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "14";
                    this.mUICtl00contentmaincmdoButton.WindowTitles.Add("Address Search");
                    #endregion
                }
                return this.mUICtl00contentmaincmdoButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsNewAddresPane mUIPageOptionsNewAddresPane;
        
        private HtmlEdit mUIAddressCodeEdit;
        
        private HtmlEdit mUINameEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdoButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIPageOptionsNewAddresPane : HtmlDiv
    {
        
        public UIPageOptionsNewAddresPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nNew Address ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Address Search");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewAddressHyperlink
        {
            get
            {
                if ((this.mUINewAddressHyperlink == null))
                {
                    this.mUINewAddressHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Address";
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://fwtest.sel-expenses.com/shared/admin/aelocation.aspx";
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aelocation.aspx\"";
                    this.mUINewAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINewAddressHyperlink.WindowTitles.Add("Address Search");
                    #endregion
                }
                return this.mUINewAddressHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewAddressHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressSearchDocument1 : HtmlDocument
    {
        
        public UIAddressSearchDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Address Search";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/locationsearch.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/locationsearch.aspx";
            this.WindowTitles.Add("Address Search");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICtl00contentmaincmdoButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdoButton == null))
                {
                    this.mUICtl00contentmaincmdoButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mUICtl00contentmaincmdoButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdok";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdoButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/pagebutton_search.gif";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "14";
                    this.mUICtl00contentmaincmdoButton.WindowTitles.Add("Address Search");
                    #endregion
                }
                return this.mUICtl00contentmaincmdoButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICtl00contentmaincmdoButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument1 UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument1(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument1 mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument1 : HtmlDocument
    {
        
        public UIAddressesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/adminlocations.aspx?name=__Auto&";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public UITbl_gridLocationsTable UITbl_gridLocationsTable
        {
            get
            {
                if ((this.mUITbl_gridLocationsTable == null))
                {
                    this.mUITbl_gridLocationsTable = new UITbl_gridLocationsTable(this);
                }
                return this.mUITbl_gridLocationsTable;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridLocationsTable mUITbl_gridLocationsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocationsTable : HtmlTable
    {
        
        public UITbl_gridLocationsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridLocations";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Company Name Address Line 1PostcodeCompa";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridLocations class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlCell UI__AutomatedAddressCell
        {
            get
            {
                if ((this.mUI__AutomatedAddressCell == null))
                {
                    this.mUI__AutomatedAddressCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__Automated Address";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUI__AutomatedAddressCell.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUI__AutomatedAddressCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUI__AutomatedAddressCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow1 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument2 UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument2(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument2 mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument2 : HtmlDocument
    {
        
        public UIAddressesDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/adminlocations.aspx?name=__auto&";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlRow UITbl_gridLocations_44Row
        {
            get
            {
                if ((this.mUITbl_gridLocations_44Row == null))
                {
                    this.mUITbl_gridLocations_44Row = new HtmlRow(this);
                    #region Search Criteria
                    this.mUITbl_gridLocations_44Row.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridLocations_44012";
                    this.mUITbl_gridLocations_44Row.SearchProperties[HtmlRow.PropertyNames.Name] = null;
                    this.mUITbl_gridLocations_44Row.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Automated Address EDITEDRed Doles Lane";
                    this.mUITbl_gridLocations_44Row.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_44012";
                    this.mUITbl_gridLocations_44Row.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
                    this.mUITbl_gridLocations_44Row.FilterProperties[HtmlRow.PropertyNames.Class] = null;
                    this.mUITbl_gridLocations_44Row.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
                    this.mUITbl_gridLocations_44Row.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUITbl_gridLocations_44Row;
            }
        }
        #endregion
        
        #region Fields
        private HtmlRow mUITbl_gridLocations_44Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UITheaddressyouhaveentWindow UITheaddressyouhaveentWindow
        {
            get
            {
                if ((this.mUITheaddressyouhaveentWindow == null))
                {
                    this.mUITheaddressyouhaveentWindow = new UITheaddressyouhaveentWindow(this);
                }
                return this.mUITheaddressyouhaveentWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITheaddressyouhaveentWindow mUITheaddressyouhaveentWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITheaddressyouhaveentWindow : WinWindow
    {
        
        public UITheaddressyouhaveentWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UITheaddressyouhaveentText
        {
            get
            {
                if ((this.mUITheaddressyouhaveentText == null))
                {
                    this.mUITheaddressyouhaveentText = new WinText(this);
                    #region Search Criteria
                    this.mUITheaddressyouhaveentText.SearchProperties[WinText.PropertyNames.Name] = "The address you have entered already exists";
                    this.mUITheaddressyouhaveentText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUITheaddressyouhaveentText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUITheaddressyouhaveentText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddress__AutomatedAdWindow2 : BrowserWindow
    {
        
        public UIAddress__AutomatedAdWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Address: __Automated Address";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Address: __Automated Address");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddress__AutomatedAdDocument1 UIAddress__AutomatedAdDocument
        {
            get
            {
                if ((this.mUIAddress__AutomatedAdDocument == null))
                {
                    this.mUIAddress__AutomatedAdDocument = new UIAddress__AutomatedAdDocument1(this);
                }
                return this.mUIAddress__AutomatedAdDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddress__AutomatedAdDocument1 mUIAddress__AutomatedAdDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddress__AutomatedAdDocument1 : HtmlDocument
    {
        
        public UIAddress__AutomatedAdDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Address: __Automated Address";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/aelocation.aspx?companyid=44013";
            this.WindowTitles.Add("Address: __Automated Address");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIParentaddressEdit
        {
            get
            {
                if ((this.mUIParentaddressEdit == null))
                {
                    this.mUIParentaddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIParentaddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtparentcompany";
                    this.mUIParentaddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtparentcompany";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Parent address";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtparentcompany cl";
                    this.mUIParentaddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUIParentaddressEdit.WindowTitles.Add("Address: __Automated Address");
                    #endregion
                }
                return this.mUIParentaddressEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIParentaddressEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow2 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument3 UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument3(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument3 mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument3 : HtmlDocument
    {
        
        public UIAddressesDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/adminlocations.aspx?";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public UITbl_gridLocations_44Row1 UITbl_gridLocations_44Row
        {
            get
            {
                if ((this.mUITbl_gridLocations_44Row == null))
                {
                    this.mUITbl_gridLocations_44Row = new UITbl_gridLocations_44Row1(this);
                }
                return this.mUITbl_gridLocations_44Row;
            }
        }
        
        public UITbl_gridLocations_44Row11 UITbl_gridLocations_44Row1
        {
            get
            {
                if ((this.mUITbl_gridLocations_44Row1 == null))
                {
                    this.mUITbl_gridLocations_44Row1 = new UITbl_gridLocations_44Row11(this);
                }
                return this.mUITbl_gridLocations_44Row1;
            }
        }
        
        public UITbl_gridLocationsTable1 UITbl_gridLocationsTable
        {
            get
            {
                if ((this.mUITbl_gridLocationsTable == null))
                {
                    this.mUITbl_gridLocationsTable = new UITbl_gridLocationsTable1(this);
                }
                return this.mUITbl_gridLocationsTable;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridLocations_44Row1 mUITbl_gridLocations_44Row;
        
        private UITbl_gridLocations_44Row11 mUITbl_gridLocations_44Row1;
        
        private UITbl_gridLocationsTable1 mUITbl_gridLocationsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocations_44Row1 : HtmlRow
    {
        
        public UITbl_gridLocations_44Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridLocations_44014";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Automated Parent AddressHibaldstow Roa";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_44014";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCompany(44014);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCompany(44014);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocations_44Row11 : HtmlRow
    {
        
        public UITbl_gridLocations_44Row11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridLocations_44013";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Automated AddressLow Moor RoadLN6 3JY1";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_44013";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCompany(44013);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCompany(44013);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocationsTable1 : HtmlTable
    {
        
        public UITbl_gridLocationsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridLocations";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Company Name Address Line 1PostcodeCompa";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridLocations class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "21";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlCell UI__AutomatedAddressCell
        {
            get
            {
                if ((this.mUI__AutomatedAddressCell == null))
                {
                    this.mUI__AutomatedAddressCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUI__AutomatedAddressCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "__Automated Address";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUI__AutomatedAddressCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUI__AutomatedAddressCell.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUI__AutomatedAddressCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUI__AutomatedAddressCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow3 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow3()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow4 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow4()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow5 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow5()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument4 UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument4(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument4 mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument4 : HtmlDocument
    {
        
        public UIAddressesDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/adminlocations.aspx";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddAddressHyperlink
        {
            get
            {
                if ((this.mUIAddAddressHyperlink == null))
                {
                    this.mUIAddAddressHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_hlAddAddress";
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddAddressHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Address";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aelocation.aspx";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://fwtest.sel-expenses.com/shared/admin/aelocation.aspx";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_hlAddAddress class=";
                    this.mUIAddAddressHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddAddressHyperlink.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIAddAddressHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddAddressHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow6 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow6()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressesDocument5 UIAddressesDocument
        {
            get
            {
                if ((this.mUIAddressesDocument == null))
                {
                    this.mUIAddressesDocument = new UIAddressesDocument5(this);
                }
                return this.mUIAddressesDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressesDocument5 mUIAddressesDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesDocument5 : HtmlDocument
    {
        
        public UIAddressesDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Addresses";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminlocations.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminlocations.aspx?name=__Auto&";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public UITbl_gridLocations_42Row UITbl_gridLocations_42Row
        {
            get
            {
                if ((this.mUITbl_gridLocations_42Row == null))
                {
                    this.mUITbl_gridLocations_42Row = new UITbl_gridLocations_42Row(this);
                }
                return this.mUITbl_gridLocations_42Row;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridLocations_42Row mUITbl_gridLocations_42Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITbl_gridLocations_42Row : HtmlRow
    {
        
        public UITbl_gridLocations_42Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridLocations_42376";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "__Automated Parent AddressLow Moor RoadL";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridLocations_42376";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "deleteCompany(42376);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:deleteCompany(42376);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Addresses");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddressesWindowsInteWindow7 : BrowserWindow
    {
        
        public UIAddressesWindowsInteWindow7()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Addresses";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Addresses");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
}
