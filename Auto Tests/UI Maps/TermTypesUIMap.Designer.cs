// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.TermTypesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class TermTypesUIMap
    {
        
        /// <summary>
        /// NavigateToTermTypesFromHomePage
        /// </summary>
        public void NavigateToTermTypesFromHomePage()
        {
            #region Variable Declarations
            HtmlSpan uIAdministrationPane = this.UIWelcometoframework20Window.UIWelcometoframework20Document.UIAdministrationPane;
            HtmlSpan uIBaseInformationPane = this.UIWelcometoframework20Window.UIAdministrationDocument.UIBaseInformationPane;
            HtmlSpan uIContractConfiguratioPane = this.UIWelcometoframework20Window.UIBaseInformationDocument.UIContractConfiguratioPane;
            HtmlSpan uITermTypesPane = this.UIWelcometoframework20Window.UIContractConfiguratioDocument.UITermTypesPane;
            #endregion

            // Click 'Administration' pane
            Mouse.Click(uIAdministrationPane, new Point(91, 16));

            // Click 'Base Information' pane
            Mouse.Click(uIBaseInformationPane, new Point(88, 15));

            // Click 'Contract Configuration Options' pane
            Mouse.Click(uIContractConfiguratioPane, new Point(191, 15));

            // Click 'Term Types' pane
            Mouse.Click(uITermTypesPane, new Point(62, 16));
        }
        
        /// <summary>
        /// AddTermTypeWithCancel - Use 'AddTermTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void AddTermTypeWithCancel()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink;
            HtmlEdit uITermTypeDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypeDescriptionEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink, new Point(59, 4));

            // Type 'CodedUI Term Type' in 'Term Type Description' text box
            uITermTypeDescriptionEdit.Text = this.AddTermTypeWithCancelParams.UITermTypeDescriptionEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(24, 12));
        }
        
        /// <summary>
        /// AddTermType - Use 'AddTermTypeParams' to pass parameters into this method.
        /// </summary>
        public void AddTermType()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddDefinitionHyperlink1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIPageOptionsAddDefiniPane.UIAddDefinitionHyperlink1;
            HtmlEdit uITermTypeDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypeDescriptionEdit;
            HtmlImage uISaveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage;
            #endregion

            // Click 'Add Definition' link
            Mouse.Click(uIAddDefinitionHyperlink1, new Point(44, 6));

            // Type 'CodedUI Term Type' in 'Term Type Description' text box
            uITermTypeDescriptionEdit.Text = this.AddTermTypeParams.UITermTypeDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(37, 19));
        }
        
        /// <summary>
        /// ValidateAddTermType - Use 'ValidateAddTermTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddTermType()
        {
            #region Variable Declarations
            HtmlCell uICodedUITermTypeCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Table.UICodedUITermTypeCell;
            #endregion

            // Verify that 'CodedUI Term Type' cell's property 'InnerText' equals 'CodedUI Term Type'
            Assert.AreEqual(this.ValidateAddTermTypeExpectedValues.UICodedUITermTypeCellInnerText, uICodedUITermTypeCell.InnerText);
        }
        
        /// <summary>
        /// ValidateTermTypeDoesNotExist - Use 'ValidateTermTypeDoesNotExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTermTypeDoesNotExist()
        {
            #region Variable Declarations
            HtmlCell uICodedUITermTypeCell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Table.UICodedUITermTypeCell;
            #endregion

            // Verify that 'CodedUI Term Type' cell's property 'InnerText' is not equal to 'CodedUI Term Type'
            Assert.AreNotEqual(this.ValidateTermTypeDoesNotExistExpectedValues.UICodedUITermTypeCellInnerText, uICodedUITermTypeCell.InnerText);
        }
        
        /// <summary>
        /// EditTermTypeWithCancel - Use 'EditTermTypeWithCancelParams' to pass parameters into this method.
        /// </summary>
        public void EditTermTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Row.UIEditImage;
            HtmlEdit uITermTypeDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypeDescriptionEdit;
            HtmlInputButton uICtl00contentmaincmdDButton = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00contentmaincmdDButton;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(15, 9));

            // Type 'CodedUI Term Type EDITED' in 'Term Type Description' text box
            uITermTypeDescriptionEdit.Text = this.EditTermTypeWithCancelParams.UITermTypeDescriptionEditText;

            // Click 'ctl00$contentmain$cmdDefCancel' button
            Mouse.Click(uICtl00contentmaincmdDButton, new Point(40, 14));
        }
        
        /// <summary>
        /// EditTermType - Use 'EditTermTypeParams' to pass parameters into this method.
        /// </summary>
        public void EditTermType()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Row.UIEditImage;
            HtmlEdit uITermTypeDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypeDescriptionEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(9, 7));

            // Type 'CodedUI Term Type EDITED' in 'Term Type Description' text box
            uITermTypeDescriptionEdit.Text = this.EditTermTypeParams.UITermTypeDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(30, 9));
        }
        
        /// <summary>
        /// ValidateEditTermType - Use 'ValidateEditTermTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEditTermType()
        {
            #region Variable Declarations
            HtmlCell uICodedUITermTypeEDITECell = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Table.UICodedUITermTypeEDITECell;
            #endregion

            // Verify that 'CodedUI Term Type EDITED' cell's property 'InnerText' equals 'CodedUI Term Type EDITED'
            Assert.AreEqual(this.ValidateEditTermTypeExpectedValues.UICodedUITermTypeEDITECellInnerText, uICodedUITermTypeEDITECell.InnerText);
        }
        
        /// <summary>
        /// EditTermTypeResetValues - Use 'EditTermTypeResetValuesParams' to pass parameters into this method.
        /// </summary>
        public void EditTermTypeResetValues()
        {
            #region Variable Declarations
            HtmlImage uIEditImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Row1.UIEditImage;
            HtmlEdit uITermTypeDescriptionEdit = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypeDescriptionEdit;
            HtmlImage uISaveImage1 = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UISaveImage1;
            #endregion

            // Click 'Edit' image
            Mouse.Click(uIEditImage, new Point(8, 12));

            // Type 'CodedUI Term Type' in 'Term Type Description' text box
            uITermTypeDescriptionEdit.Text = this.EditTermTypeResetValuesParams.UITermTypeDescriptionEditText;

            // Click 'Save' image
            Mouse.Click(uISaveImage1, new Point(23, 20));
        }
        
        /// <summary>
        /// ValidateAddDuplicateTermType - Use 'ValidateAddDuplicateTermTypeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAddDuplicateTermType()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
            //
            //
            //This definiton already exists and cannot be added'
            Assert.AreEqual(this.ValidateAddDuplicateTermTypeExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);

            // Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateAddDuplicateTermTypeExpectedValues.UICtl00_pnlMasterPopupPaneExists, uICtl00_pnlMasterPopupPane.Exists);
        }
        
        /// <summary>
        /// ArchiveTermTypeWithCancel
        /// </summary>
        public void ArchiveTermTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(10, 8));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// ArchiveTermType
        /// </summary>
        public void ArchiveTermType()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Archive' image
            Mouse.Click(uIArchiveImage, new Point(11, 9));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// UnArchiveTermTypeWithCancel
        /// </summary>
        public void UnArchiveTermTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(7, 9));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// UnArchiveTermType
        /// </summary>
        public void UnArchiveTermType()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIUnArchiveImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Un-Archive' image
            Mouse.Click(uIUnArchiveImage, new Point(6, 7));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateTermTypeIsNotArchived - Use 'ValidateTermTypeIsNotArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTermTypeIsNotArchived()
        {
            #region Variable Declarations
            HtmlImage uIArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIArchiveImage;
            #endregion

            // Verify that 'Archive' image's property 'Title' equals 'Archive'
            Assert.AreEqual(this.ValidateTermTypeIsNotArchivedExpectedValues.UIArchiveImageTitle, uIArchiveImage.Title);
        }
        
        /// <summary>
        /// ValidateTermTypeIsArchived - Use 'ValidateTermTypeIsArchivedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTermTypeIsArchived()
        {
            #region Variable Declarations
            HtmlImage uIUnArchiveImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Cell.UIUnArchiveImage;
            #endregion

            // Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
            Assert.AreEqual(this.ValidateTermTypeIsArchivedExpectedValues.UIUnArchiveImageTitle, uIUnArchiveImage.Title);
        }
        
        /// <summary>
        /// DeleteTermTypeWithCancel
        /// </summary>
        public void DeleteTermTypeWithCancel()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(11, 10));

            // Click 'Cancel' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Cancel);
        }
        
        /// <summary>
        /// DeleteTermType
        /// </summary>
        public void DeleteTermType()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITbl_bdGrid_3a5d47d7_Row.UIDeleteImage;
            BrowserWindow uIBaseDefinitionsWindoWindow = this.UIBaseDefinitionsWindoWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(12, 7));

            // Click 'Ok' button in the browser dialog window
            uIBaseDefinitionsWindoWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ValidateTermTypesPageLayout - Use 'ValidateTermTypesPageLayoutExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTermTypesPageLayout()
        {
            #region Variable Declarations
            HtmlDiv uIPageOptionsAddDefiniPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIAspnetFormCustom.UIPageOptionsAddDefiniPane;
            HtmlDiv uIJamesLloyd20SeptembePane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIInfodivPane.UIJamesLloyd20SeptembePane;
            HtmlDiv uIItemPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UILogodivPane.UIItemPane;
            HtmlDiv uIAboutSwitchSubAccounPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMenudivPane.UIAboutSwitchSubAccounPane;
            HtmlDiv uITermTypesPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UITermTypesPane;
            HtmlDiv uIBaseDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIBaseDefinitionsPane;
            HtmlDiv uICurrentDefinitionsPane = this.UIBaseDefinitionsWindoWindow.UIBaseDefinitionsDocument.UIMaindivPane.UICurrentDefinitionsPane;
            #endregion

            // Verify that 'Page Options Add Definition' pane's property 'DisplayText' equals 'Page Options
            //Add Definition '
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UIPageOptionsAddDefiniPaneDisplayText, uIPageOptionsAddDefiniPane.DisplayText);

            // Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
            StringAssert.Contains(uIJamesLloyd20SeptembePane.DisplayText, this.ValidateTermTypesPageLayoutExpectedValues.UIJamesLloyd20SeptembePaneDisplayText);

            // Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UIItemPaneExists, uIItemPane.Exists);

            // Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Term Types '
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UIAboutSwitchSubAccounPaneInnerText, uIAboutSwitchSubAccounPane.InnerText);

            // Verify that 'Term Types' pane's property 'InnerText' equals 'Term Types'
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UITermTypesPaneInnerText, uITermTypesPane.InnerText);

            // Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UIBaseDefinitionsPaneInnerText, uIBaseDefinitionsPane.InnerText);

            // Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
            Assert.AreEqual(this.ValidateTermTypesPageLayoutExpectedValues.UICurrentDefinitionsPaneInnerText, uICurrentDefinitionsPane.InnerText);
        }
        
        #region Properties
        public virtual AddTermTypeWithCancelParams AddTermTypeWithCancelParams
        {
            get
            {
                if ((this.mAddTermTypeWithCancelParams == null))
                {
                    this.mAddTermTypeWithCancelParams = new AddTermTypeWithCancelParams();
                }
                return this.mAddTermTypeWithCancelParams;
            }
        }
        
        public virtual AddTermTypeParams AddTermTypeParams
        {
            get
            {
                if ((this.mAddTermTypeParams == null))
                {
                    this.mAddTermTypeParams = new AddTermTypeParams();
                }
                return this.mAddTermTypeParams;
            }
        }
        
        public virtual ValidateAddTermTypeExpectedValues ValidateAddTermTypeExpectedValues
        {
            get
            {
                if ((this.mValidateAddTermTypeExpectedValues == null))
                {
                    this.mValidateAddTermTypeExpectedValues = new ValidateAddTermTypeExpectedValues();
                }
                return this.mValidateAddTermTypeExpectedValues;
            }
        }
        
        public virtual ValidateTermTypeDoesNotExistExpectedValues ValidateTermTypeDoesNotExistExpectedValues
        {
            get
            {
                if ((this.mValidateTermTypeDoesNotExistExpectedValues == null))
                {
                    this.mValidateTermTypeDoesNotExistExpectedValues = new ValidateTermTypeDoesNotExistExpectedValues();
                }
                return this.mValidateTermTypeDoesNotExistExpectedValues;
            }
        }
        
        public virtual EditTermTypeWithCancelParams EditTermTypeWithCancelParams
        {
            get
            {
                if ((this.mEditTermTypeWithCancelParams == null))
                {
                    this.mEditTermTypeWithCancelParams = new EditTermTypeWithCancelParams();
                }
                return this.mEditTermTypeWithCancelParams;
            }
        }
        
        public virtual EditTermTypeParams EditTermTypeParams
        {
            get
            {
                if ((this.mEditTermTypeParams == null))
                {
                    this.mEditTermTypeParams = new EditTermTypeParams();
                }
                return this.mEditTermTypeParams;
            }
        }
        
        public virtual ValidateEditTermTypeExpectedValues ValidateEditTermTypeExpectedValues
        {
            get
            {
                if ((this.mValidateEditTermTypeExpectedValues == null))
                {
                    this.mValidateEditTermTypeExpectedValues = new ValidateEditTermTypeExpectedValues();
                }
                return this.mValidateEditTermTypeExpectedValues;
            }
        }
        
        public virtual EditTermTypeResetValuesParams EditTermTypeResetValuesParams
        {
            get
            {
                if ((this.mEditTermTypeResetValuesParams == null))
                {
                    this.mEditTermTypeResetValuesParams = new EditTermTypeResetValuesParams();
                }
                return this.mEditTermTypeResetValuesParams;
            }
        }
        
        public virtual ValidateAddDuplicateTermTypeExpectedValues ValidateAddDuplicateTermTypeExpectedValues
        {
            get
            {
                if ((this.mValidateAddDuplicateTermTypeExpectedValues == null))
                {
                    this.mValidateAddDuplicateTermTypeExpectedValues = new ValidateAddDuplicateTermTypeExpectedValues();
                }
                return this.mValidateAddDuplicateTermTypeExpectedValues;
            }
        }
        
        public virtual ValidateTermTypeIsNotArchivedExpectedValues ValidateTermTypeIsNotArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateTermTypeIsNotArchivedExpectedValues == null))
                {
                    this.mValidateTermTypeIsNotArchivedExpectedValues = new ValidateTermTypeIsNotArchivedExpectedValues();
                }
                return this.mValidateTermTypeIsNotArchivedExpectedValues;
            }
        }
        
        public virtual ValidateTermTypeIsArchivedExpectedValues ValidateTermTypeIsArchivedExpectedValues
        {
            get
            {
                if ((this.mValidateTermTypeIsArchivedExpectedValues == null))
                {
                    this.mValidateTermTypeIsArchivedExpectedValues = new ValidateTermTypeIsArchivedExpectedValues();
                }
                return this.mValidateTermTypeIsArchivedExpectedValues;
            }
        }
        
        public virtual ValidateTermTypesPageLayoutExpectedValues ValidateTermTypesPageLayoutExpectedValues
        {
            get
            {
                if ((this.mValidateTermTypesPageLayoutExpectedValues == null))
                {
                    this.mValidateTermTypesPageLayoutExpectedValues = new ValidateTermTypesPageLayoutExpectedValues();
                }
                return this.mValidateTermTypesPageLayoutExpectedValues;
            }
        }
        
        public UIWelcometoframework20Window UIWelcometoframework20Window
        {
            get
            {
                if ((this.mUIWelcometoframework20Window == null))
                {
                    this.mUIWelcometoframework20Window = new UIWelcometoframework20Window();
                }
                return this.mUIWelcometoframework20Window;
            }
        }
        
        public UIBaseDefinitionsWindoWindow UIBaseDefinitionsWindoWindow
        {
            get
            {
                if ((this.mUIBaseDefinitionsWindoWindow == null))
                {
                    this.mUIBaseDefinitionsWindoWindow = new UIBaseDefinitionsWindoWindow();
                }
                return this.mUIBaseDefinitionsWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddTermTypeWithCancelParams mAddTermTypeWithCancelParams;
        
        private AddTermTypeParams mAddTermTypeParams;
        
        private ValidateAddTermTypeExpectedValues mValidateAddTermTypeExpectedValues;
        
        private ValidateTermTypeDoesNotExistExpectedValues mValidateTermTypeDoesNotExistExpectedValues;
        
        private EditTermTypeWithCancelParams mEditTermTypeWithCancelParams;
        
        private EditTermTypeParams mEditTermTypeParams;
        
        private ValidateEditTermTypeExpectedValues mValidateEditTermTypeExpectedValues;
        
        private EditTermTypeResetValuesParams mEditTermTypeResetValuesParams;
        
        private ValidateAddDuplicateTermTypeExpectedValues mValidateAddDuplicateTermTypeExpectedValues;
        
        private ValidateTermTypeIsNotArchivedExpectedValues mValidateTermTypeIsNotArchivedExpectedValues;
        
        private ValidateTermTypeIsArchivedExpectedValues mValidateTermTypeIsArchivedExpectedValues;
        
        private ValidateTermTypesPageLayoutExpectedValues mValidateTermTypesPageLayoutExpectedValues;
        
        private UIWelcometoframework20Window mUIWelcometoframework20Window;
        
        private UIBaseDefinitionsWindoWindow mUIBaseDefinitionsWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddTermTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddTermTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Term Type' in 'Term Type Description' text box
        /// </summary>
        public string UITermTypeDescriptionEditText = "CodedUI Term Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddTermType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AddTermTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Term Type' in 'Term Type Description' text box
        /// </summary>
        public string UITermTypeDescriptionEditText = "CodedUI Term Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddTermType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddTermTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Term Type' cell's property 'InnerText' equals 'CodedUI Term Type'
        /// </summary>
        public string UICodedUITermTypeCellInnerText = "CodedUI Term Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTermTypeDoesNotExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateTermTypeDoesNotExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Term Type' cell's property 'InnerText' is not equal to 'CodedUI Term Type'
        /// </summary>
        public string UICodedUITermTypeCellInnerText = "CodedUI Term Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditTermTypeWithCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditTermTypeWithCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Term Type EDITED' in 'Term Type Description' text box
        /// </summary>
        public string UITermTypeDescriptionEditText = "CodedUI Term Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditTermType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditTermTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Term Type EDITED' in 'Term Type Description' text box
        /// </summary>
        public string UITermTypeDescriptionEditText = "CodedUI Term Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEditTermType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateEditTermTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'CodedUI Term Type EDITED' cell's property 'InnerText' equals 'CodedUI Term Type EDITED'
        /// </summary>
        public string UICodedUITermTypeEDITECellInnerText = "CodedUI Term Type EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditTermTypeResetValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EditTermTypeResetValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUI Term Type' in 'Term Type Description' text box
        /// </summary>
        public string UITermTypeDescriptionEditText = "CodedUI Term Type";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAddDuplicateTermType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateAddDuplicateTermTypeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'InnerText' equals 'Duplicate Definition
        ///
        ///
        ///This definiton already exists and cannot be added'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Duplicate Definition\r\n\r\n\r\nThis definiton already exists and cannot be added";
        
        /// <summary>
        /// Verify that 'ctl00_pnlMasterPopup' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UICtl00_pnlMasterPopupPaneExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTermTypeIsNotArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateTermTypeIsNotArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Archive' image's property 'Title' equals 'Archive'
        /// </summary>
        public string UIArchiveImageTitle = "Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTermTypeIsArchived'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateTermTypeIsArchivedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Un-Archive' image's property 'Title' equals 'Un-Archive'
        /// </summary>
        public string UIUnArchiveImageTitle = "Un-Archive";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTermTypesPageLayout'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class ValidateTermTypesPageLayoutExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Page Options Add Definition' pane's property 'DisplayText' equals 'Page Options
        ///Add Definition '
        /// </summary>
        public string UIPageOptionsAddDefiniPaneDisplayText = "Page Options\r\nAdd Definition ";
        
        /// <summary>
        /// Verify that 'James Lloyd | 20 September 2010' pane's property 'DisplayText' contains 'James Lloyd'
        /// </summary>
        public string UIJamesLloyd20SeptembePaneDisplayText = "James Lloyd";
        
        /// <summary>
        /// Verify that 'Unknown Name' pane's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemPaneExists = true;
        
        /// <summary>
        /// Verify that 'About  | Switch Sub Account |  Exit  Hom' pane's property 'InnerText' equals 'About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Information : Contract Information : Term Types '
        /// </summary>
        public string UIAboutSwitchSubAccounPaneInnerText = "About  | Switch Sub Account |  Exit  Home Page : Administration Menu : Base Infor" +
            "mation : Contract Information : Term Types ";
        
        /// <summary>
        /// Verify that 'Term Types' pane's property 'InnerText' equals 'Term Types'
        /// </summary>
        public string UITermTypesPaneInnerText = "Term Types";
        
        /// <summary>
        /// Verify that 'Base Definitions' pane's property 'InnerText' equals 'Base Definitions'
        /// </summary>
        public string UIBaseDefinitionsPaneInnerText = "Base Definitions";
        
        /// <summary>
        /// Verify that 'Current Definitions' pane's property 'InnerText' equals 'Current Definitions'
        /// </summary>
        public string UICurrentDefinitionsPaneInnerText = "Current Definitions";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Window : BrowserWindow
    {
        
        public UIWelcometoframework20Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to framework2009";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to framework2009");
            this.WindowTitles.Add("Administration");
            this.WindowTitles.Add("Base Information");
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoframework20Document UIWelcometoframework20Document
        {
            get
            {
                if ((this.mUIWelcometoframework20Document == null))
                {
                    this.mUIWelcometoframework20Document = new UIWelcometoframework20Document(this);
                }
                return this.mUIWelcometoframework20Document;
            }
        }
        
        public UIAdministrationDocument UIAdministrationDocument
        {
            get
            {
                if ((this.mUIAdministrationDocument == null))
                {
                    this.mUIAdministrationDocument = new UIAdministrationDocument(this);
                }
                return this.mUIAdministrationDocument;
            }
        }
        
        public UIBaseInformationDocument UIBaseInformationDocument
        {
            get
            {
                if ((this.mUIBaseInformationDocument == null))
                {
                    this.mUIBaseInformationDocument = new UIBaseInformationDocument(this);
                }
                return this.mUIBaseInformationDocument;
            }
        }
        
        public UIContractConfiguratioDocument UIContractConfiguratioDocument
        {
            get
            {
                if ((this.mUIContractConfiguratioDocument == null))
                {
                    this.mUIContractConfiguratioDocument = new UIContractConfiguratioDocument(this);
                }
                return this.mUIContractConfiguratioDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoframework20Document mUIWelcometoframework20Document;
        
        private UIAdministrationDocument mUIAdministrationDocument;
        
        private UIBaseInformationDocument mUIBaseInformationDocument;
        
        private UIContractConfiguratioDocument mUIContractConfiguratioDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWelcometoframework20Document : HtmlDocument
    {
        
        public UIWelcometoframework20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to framework2009";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/Home.aspx";
            this.WindowTitles.Add("Welcome to framework2009");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAdministrationPane
        {
            get
            {
                if ((this.mUIAdministrationPane == null))
                {
                    this.mUIAdministrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel2";
                    this.mUIAdministrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administration";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel2 class=menuitemtitle";
                    this.mUIAdministrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIAdministrationPane.WindowTitles.Add("Welcome to framework2009");
                    #endregion
                }
                return this.mUIAdministrationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAdministrationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAdministrationDocument : HtmlDocument
    {
        
        public UIAdministrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Administration";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=admin";
            this.WindowTitles.Add("Administration");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIBaseInformationPane
        {
            get
            {
                if ((this.mUIBaseInformationPane == null))
                {
                    this.mUIBaseInformationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIBaseInformationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Information";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIBaseInformationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIBaseInformationPane.WindowTitles.Add("Administration");
                    #endregion
                }
                return this.mUIBaseInformationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIBaseInformationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseInformationDocument : HtmlDocument
    {
        
        public UIBaseInformationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Information";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=baseinfo";
            this.WindowTitles.Add("Base Information");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIContractConfiguratioPane
        {
            get
            {
                if ((this.mUIContractConfiguratioPane == null))
                {
                    this.mUIContractConfiguratioPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel0";
                    this.mUIContractConfiguratioPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contract Configuration Options";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel0 class=menuitemtitle";
                    this.mUIContractConfiguratioPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIContractConfiguratioPane.WindowTitles.Add("Base Information");
                    #endregion
                }
                return this.mUIContractConfiguratioPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIContractConfiguratioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContractConfiguratioDocument : HtmlDocument
    {
        
        public UIContractConfiguratioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Contract Configuration Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MenuMain.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/MenuMain.aspx?menusection=contractinfo";
            this.WindowTitles.Add("Contract Configuration Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UITermTypesPane
        {
            get
            {
                if ((this.mUITermTypesPane == null))
                {
                    this.mUITermTypesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITermTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuitemlabel5";
                    this.mUITermTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Term Types";
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menuitemtitle";
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menuitemlabel5 class=menuitemtitle";
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUITermTypesPane.WindowTitles.Add("Contract Configuration Options");
                    #endregion
                }
                return this.mUITermTypesPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUITermTypesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsWindoWindow : BrowserWindow
    {
        
        public UIBaseDefinitionsWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Base Definitions";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBaseDefinitionsDocument UIBaseDefinitionsDocument
        {
            get
            {
                if ((this.mUIBaseDefinitionsDocument == null))
                {
                    this.mUIBaseDefinitionsDocument = new UIBaseDefinitionsDocument(this);
                }
                return this.mUIBaseDefinitionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBaseDefinitionsDocument mUIBaseDefinitionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBaseDefinitionsDocument : HtmlDocument
    {
        
        public UIBaseDefinitionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Base Definitions";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/contracts/admin/basedefinitions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/contracts/admin/basedefinitions.aspx?bdt=113";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddDefiniPane UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new UIPageOptionsAddDefiniPane(this);
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        
        public HtmlEdit UITermTypeDescriptionEdit
        {
            get
            {
                if ((this.mUITermTypeDescriptionEdit == null))
                {
                    this.mUITermTypeDescriptionEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITermTypeDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcodes_termtype_termTypeDescription";
                    this.mUITermTypeDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcodes_termtype_termTypeDescription";
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Term Type Description";
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcodes_termtype_t";
                    this.mUITermTypeDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITermTypeDescriptionEdit.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUITermTypeDescriptionEdit;
            }
        }
        
        public HtmlInputButton UICtl00contentmaincmdDButton
        {
            get
            {
                if ((this.mUICtl00contentmaincmdDButton == null))
                {
                    this.mUICtl00contentmaincmdDButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdDefCancel";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmaincmdDButton.FilterProperties["Src"] = "https://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmaincmdDButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICtl00contentmaincmdDButton.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00contentmaincmdDButton;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "43";
                    this.mUISaveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public UITbl_bdGrid_3a5d47d7_Table UITbl_bdGrid_3a5d47d7_Table
        {
            get
            {
                if ((this.mUITbl_bdGrid_3a5d47d7_Table == null))
                {
                    this.mUITbl_bdGrid_3a5d47d7_Table = new UITbl_bdGrid_3a5d47d7_Table(this);
                }
                return this.mUITbl_bdGrid_3a5d47d7_Table;
            }
        }
        
        public UITbl_bdGrid_3a5d47d7_Row UITbl_bdGrid_3a5d47d7_Row
        {
            get
            {
                if ((this.mUITbl_bdGrid_3a5d47d7_Row == null))
                {
                    this.mUITbl_bdGrid_3a5d47d7_Row = new UITbl_bdGrid_3a5d47d7_Row(this);
                }
                return this.mUITbl_bdGrid_3a5d47d7_Row;
            }
        }
        
        public HtmlImage UISaveImage1
        {
            get
            {
                if ((this.mUISaveImage1 == null))
                {
                    this.mUISaveImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "cmdSave";
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=cmdSave onclick=javascript:baseDefObj";
                    this.mUISaveImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "46";
                    this.mUISaveImage1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUISaveImage1;
            }
        }
        
        public UITbl_bdGrid_3a5d47d7_Row1 UITbl_bdGrid_3a5d47d7_Row1
        {
            get
            {
                if ((this.mUITbl_bdGrid_3a5d47d7_Row1 == null))
                {
                    this.mUITbl_bdGrid_3a5d47d7_Row1 = new UITbl_bdGrid_3a5d47d7_Row1(this);
                }
                return this.mUITbl_bdGrid_3a5d47d7_Row1;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duplicate Definition\r\n\r\n\r\nThis definiton";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11001; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public UITbl_bdGrid_3a5d47d7_Cell UITbl_bdGrid_3a5d47d7_Cell
        {
            get
            {
                if ((this.mUITbl_bdGrid_3a5d47d7_Cell == null))
                {
                    this.mUITbl_bdGrid_3a5d47d7_Cell = new UITbl_bdGrid_3a5d47d7_Cell(this);
                }
                return this.mUITbl_bdGrid_3a5d47d7_Cell;
            }
        }
        
        public UIAspnetFormCustom UIAspnetFormCustom
        {
            get
            {
                if ((this.mUIAspnetFormCustom == null))
                {
                    this.mUIAspnetFormCustom = new UIAspnetFormCustom(this);
                }
                return this.mUIAspnetFormCustom;
            }
        }
        
        public UIInfodivPane UIInfodivPane
        {
            get
            {
                if ((this.mUIInfodivPane == null))
                {
                    this.mUIInfodivPane = new UIInfodivPane(this);
                }
                return this.mUIInfodivPane;
            }
        }
        
        public UILogodivPane UILogodivPane
        {
            get
            {
                if ((this.mUILogodivPane == null))
                {
                    this.mUILogodivPane = new UILogodivPane(this);
                }
                return this.mUILogodivPane;
            }
        }
        
        public UIMenudivPane UIMenudivPane
        {
            get
            {
                if ((this.mUIMenudivPane == null))
                {
                    this.mUIMenudivPane = new UIMenudivPane(this);
                }
                return this.mUIMenudivPane;
            }
        }
        
        public HtmlDiv UITermTypesPane
        {
            get
            {
                if ((this.mUITermTypesPane == null))
                {
                    this.mUITermTypesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITermTypesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "subpagetitle";
                    this.mUITermTypesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Term Types";
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=subpagetitle";
                    this.mUITermTypesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUITermTypesPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUITermTypesPane;
            }
        }
        
        public HtmlDiv UIBaseDefinitionsPane
        {
            get
            {
                if ((this.mUIBaseDefinitionsPane == null))
                {
                    this.mUIBaseDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pagetitle";
                    this.mUIBaseDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Base Definitions";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=pagetitle class=withsubtitle";
                    this.mUIBaseDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIBaseDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIBaseDefinitionsPane;
            }
        }
        
        public UIMaindivPane UIMaindivPane
        {
            get
            {
                if ((this.mUIMaindivPane == null))
                {
                    this.mUIMaindivPane = new UIMaindivPane(this);
                }
                return this.mUIMaindivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddDefiniPane mUIPageOptionsAddDefiniPane;
        
        private HtmlEdit mUITermTypeDescriptionEdit;
        
        private HtmlInputButton mUICtl00contentmaincmdDButton;
        
        private HtmlImage mUISaveImage;
        
        private UITbl_bdGrid_3a5d47d7_Table mUITbl_bdGrid_3a5d47d7_Table;
        
        private UITbl_bdGrid_3a5d47d7_Row mUITbl_bdGrid_3a5d47d7_Row;
        
        private HtmlImage mUISaveImage1;
        
        private UITbl_bdGrid_3a5d47d7_Row1 mUITbl_bdGrid_3a5d47d7_Row1;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private UITbl_bdGrid_3a5d47d7_Cell mUITbl_bdGrid_3a5d47d7_Cell;
        
        private UIAspnetFormCustom mUIAspnetFormCustom;
        
        private UIInfodivPane mUIInfodivPane;
        
        private UILogodivPane mUILogodivPane;
        
        private UIMenudivPane mUIMenudivPane;
        
        private HtmlDiv mUITermTypesPane;
        
        private HtmlDiv mUIBaseDefinitionsPane;
        
        private UIMaindivPane mUIMaindivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPageOptionsAddDefiniPane : HtmlDiv
    {
        
        public UIPageOptionsAddDefiniPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddDefinitionHyperlink
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink == null))
                {
                    this.mUIAddDefinitionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:baseD";
                    this.mUIAddDefinitionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddDefinitionHyperlink1
        {
            get
            {
                if ((this.mUIAddDefinitionHyperlink1 == null))
                {
                    this.mUIAddDefinitionHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddDefinitionHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Definition";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:baseDefObject.editDefinition(-1);";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddDefinitionHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddDefinitionHyperlink1.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAddDefinitionHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddDefinitionHyperlink;
        
        private HtmlHyperlink mUIAddDefinitionHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_3a5d47d7_Table : HtmlTable
    {
        
        public UITbl_bdGrid_3a5d47d7_Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d385304eecac";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Term Type Description \r\n1 month pilot\r\n3";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d3";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "14";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICodedUITermTypeCell
        {
            get
            {
                if ((this.mUICodedUITermTypeCell == null))
                {
                    this.mUICodedUITermTypeCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUITermTypeCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUITermTypeCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUITermTypeCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Term Type";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "8";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUITermTypeCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "32";
                    this.mUICodedUITermTypeCell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUITermTypeCell;
            }
        }
        
        public HtmlCell UICodedUITermTypeEDITECell
        {
            get
            {
                if ((this.mUICodedUITermTypeEDITECell == null))
                {
                    this.mUICodedUITermTypeEDITECell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUICodedUITermTypeEDITECell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICodedUITermTypeEDITECell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICodedUITermTypeEDITECell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "CodedUI Term Type EDITED";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row2";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "8";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
                    this.mUICodedUITermTypeEDITECell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "32";
                    this.mUICodedUITermTypeEDITECell.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICodedUITermTypeEDITECell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICodedUITermTypeCell;
        
        private HtmlCell mUICodedUITermTypeEDITECell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_3a5d47d7_Row : HtmlRow
    {
        
        public UITbl_bdGrid_3a5d47d7_Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d385304eecac_CodedUI Term Type";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Term Type";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "8";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "9";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        
        private HtmlImage mUIDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_3a5d47d7_Row1 : HtmlRow
    {
        
        public UITbl_bdGrid_3a5d47d7_Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d385304eecac_CodedUI Term Type EDITED";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "CodedUI Term Type EDITED";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "8";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "9";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditImage
        {
            get
            {
                if ((this.mUIEditImage == null))
                {
                    this.mUIEditImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Edit src=\"/shared/images/icons/edit.";
                    this.mUIEditImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIEditImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITbl_bdGrid_3a5d47d7_Cell : HtmlCell
    {
        
        public UITbl_bdGrid_3a5d47d7_Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d385304eecac_CodedUI Term Type_archiveStatus";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.FilterProperties[HtmlCell.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"tbl_bdGrid_3a5d47d7_7dcf_4388_b2f3_d";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "8";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = "row2";
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "31";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIArchiveImage
        {
            get
            {
                if ((this.mUIArchiveImage == null))
                {
                    this.mUIArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_lock.png";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Archive src=\"/shared/images/icons/";
                    this.mUIArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIArchiveImage;
            }
        }
        
        public HtmlImage UIUnArchiveImage
        {
            get
            {
                if ((this.mUIUnArchiveImage == null))
                {
                    this.mUIUnArchiveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIUnArchiveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://fwtest.sel-expenses.com/shared/images/icons/folder_into.png";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "title=Un-Archive src=\"/shared/images/ico";
                    this.mUIUnArchiveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIUnArchiveImage.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIUnArchiveImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIArchiveImage;
        
        private HtmlImage mUIUnArchiveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAspnetFormCustom : HtmlCustom
    {
        
        public UIAspnetFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "aspnetForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "aspnetForm";
            this.SearchProperties["TagName"] = "FORM";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=aspnetForm method=post name=aspnetFor";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPageOptionsAddDefiniPane
        {
            get
            {
                if ((this.mUIPageOptionsAddDefiniPane == null))
                {
                    this.mUIPageOptionsAddDefiniPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPageOptionsAddDefiniPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Definition ";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=submenuholder";
                    this.mUIPageOptionsAddDefiniPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIPageOptionsAddDefiniPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIPageOptionsAddDefiniPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPageOptionsAddDefiniPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInfodivPane : HtmlDiv
    {
        
        public UIInfodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "infodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 Base Def";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=infodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIJamesLloyd20SeptembePane
        {
            get
            {
                if ((this.mUIJamesLloyd20SeptembePane == null))
                {
                    this.mUIJamesLloyd20SeptembePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIJamesLloyd20SeptembePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "James Lloyd | 20 September 2010 ";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=userinfo";
                    this.mUIJamesLloyd20SeptembePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIJamesLloyd20SeptembePane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIJamesLloyd20SeptembePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIJamesLloyd20SeptembePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILogodivPane : HtmlDiv
    {
        
        public UILogodivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "logodiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=logodiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " ";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=clientlogo";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItemPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMenudivPane : HtmlDiv
    {
        
        public UIMenudivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menudiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=menudiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAboutSwitchSubAccounPane
        {
            get
            {
                if ((this.mUIAboutSwitchSubAccounPane == null))
                {
                    this.mUIAboutSwitchSubAccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAboutSwitchSubAccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "About  | Switch Sub Account |  Exit  Hom";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=menubar";
                    this.mUIAboutSwitchSubAccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIAboutSwitchSubAccounPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUIAboutSwitchSubAccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAboutSwitchSubAccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMaindivPane : HtmlDiv
    {
        
        public UIMaindivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions\r\nTerm Type Descripti";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
            this.WindowTitles.Add("Base Definitions");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICurrentDefinitionsPane
        {
            get
            {
                if ((this.mUICurrentDefinitionsPane == null))
                {
                    this.mUICurrentDefinitionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICurrentDefinitionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Current Definitions";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICurrentDefinitionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICurrentDefinitionsPane.WindowTitles.Add("Base Definitions");
                    #endregion
                }
                return this.mUICurrentDefinitionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICurrentDefinitionsPane;
        #endregion
    }
}
