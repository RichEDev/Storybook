// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.TeamsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class TeamsUIMap
    {
        
        /// <summary>
        /// ClickAddTeamLink
        /// </summary>
        public void ClickAddTeamLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddTeamHyperlink = this.UITeamsWindowsInternetWindow.UITeamsDocument2.UIPageOptionsAddTeamHePane.UIAddTeamHyperlink;
            #endregion

            // Click 'Add Team' link
            Mouse.Click(uIAddTeamHyperlink, new Point(48, 3));
        }
        
        /// <summary>
        /// ClickAddTeamMemberLink
        /// </summary>
        public void ClickAddTeamMemberLink()
        {
            #region Variable Declarations
            HtmlHyperlink addTeamMemberHyperlink = this.TeamControlsWindow.TeamControlsDocument.PageOptionsAddTeamMemberPane.AddTeamMemberHyperlink;
            #endregion

            // Click 'Add Team Member' link
            Mouse.Click(addTeamMemberHyperlink, new Point(65, 3));
        }
        
        /// <summary>
        /// PressCancelTeamButton
        /// </summary>
        public void PressCancelTeamButton()
        {
            #region Variable Declarations
            HtmlImage cancelTeamButton = this.TeamControlsWindow.TeamControlsDocument.CancelTeamButton;
            #endregion

            // Click '/shared/images/buttons/cancel_up.gif' image
            Mouse.Click(cancelTeamButton, new Point(31, 20));
        }
        
        /// <summary>
        /// PressCancelTeamMemberButton
        /// </summary>
        public void PressCancelTeamMemberButton()
        {
            #region Variable Declarations
            HtmlImage uISharedimagesbuttonscImage = this.TeamControlsWindow.TeamControlsDocument.UISharedimagesbuttonscImage;
            #endregion

            // Click '/shared/images/buttons/cancel_up.gif' image
            Mouse.Click(uISharedimagesbuttonscImage, new Point(32, 24));
        }
        
        /// <summary>
        /// PressCloseOnModalMessage
        /// </summary>
        public void PressCloseOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage oKImageButton = this.TeamControlsWindow.TeamControlsDocument.OKImageButton;
            #endregion

            // Click 'OK' image
            Mouse.Click(oKImageButton, new Point(30, 17));
        }
        
        /// <summary>
        /// PressFilterByUsernameButton
        /// </summary>
        public void PressFilterByUsernameButton()
        {
            #region Variable Declarations
            HtmlImage filterImageButton = this.TeamControlsWindow.TeamControlsDocument.UISELGridfilterGridgriHyperlink.FilterImageButton;
            #endregion

            // Click 'Filter' image
            Mouse.Click(filterImageButton, new Point(24, 13));
        }
        
        /// <summary>
        /// PressSaveTeamButton
        /// </summary>
        public void PressSaveTeamButton()
        {
            #region Variable Declarations
            HtmlImage saveTeamButton = this.TeamControlsWindow.TeamControlsDocument.SaveTeamButton;
            #endregion

            // Click '/shared/images/buttons/btn_save.png' image
            Mouse.Click(saveTeamButton, new Point(17, 16));
        }
        
        /// <summary>
        /// PressSaveTeamMemberButton
        /// </summary>
        public void PressSaveTeamMemberButton()
        {
            #region Variable Declarations
            HtmlImage saveTeamMemberImageButton = this.TeamControlsWindow.TeamControlsDocument.SaveTeamMemberImageButton;
            #endregion

            // Click '/shared/images/buttons/btn_save.png' image
            Mouse.Click(saveTeamMemberImageButton, new Point(29, 17));
        }
        
        /// <summary>
        /// SearchForTeam - Use 'SearchForTeamParams' to pass parameters into this method.
        /// </summary>
        public void SearchForTeam()
        {
            #region Variable Declarations
            HtmlEdit uITeamNameEdit = this.UITeamsWindowsInternetWindow.UITeamsDocument.UITeamNameEdit;
            HtmlImage uIFilterImage = this.UITeamsWindowsInternetWindow.UITeamsDocument.UIFilterGridgridTeamsHyperlink.UIFilterImage;
            #endregion

            // Type '__Auto Test Team 1' in 'Team Name' text box
            uITeamNameEdit.Text = this.SearchForTeamParams.UITeamNameEditText;

            // Click 'Filter' image
            Mouse.Click(uIFilterImage, new Point(37, 10));
        }
        
        /// <summary>
        /// SelectAddTeam
        /// </summary>
        public void SelectAddTeam()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddTeamHyperlink = this.UITeamsWindowsInternetWindow.UITeamsDocument.UIPageOptionsAddTeamHePane.UIAddTeamHyperlink;
            #endregion

            // Click 'Add Team' link
            Mouse.Click(uIAddTeamHyperlink, new Point(11, 4));
        }
        
        /// <summary>
        /// SelectAddTeamMember
        /// </summary>
        public void SelectAddTeamMember()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddTeamMemberHyperlink = this.UIAddEditTeamWindowsInWindow.UIAddEditTeamDocument.UIPageOptionsAddTeamMePane.UIAddTeamMemberHyperlink;
            #endregion

            // Click 'Add Team Member' link
            Mouse.Click(uIAddTeamMemberHyperlink, new Point(67, 4));
        }
        
        /// <summary>
        /// SelectCancelDeleteTeam
        /// </summary>
        public void SelectCancelDeleteTeam()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(60, 8));
        }
        
        /// <summary>
        /// ValidateTeamsModalMessage - Use 'ValidateTeamsModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTeamsModalMessage()
        {
            #region Variable Declarations
            HtmlDiv teamsModalMessage = this.TeamControlsWindow.TeamControlsDocument.TeamsModalMessage;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //The team has no members. Empty teams are prohibited. Please add at least one member.'
            Assert.AreEqual(this.ValidateTeamsModalMessageExpectedValues.TeamsModalMessageInnerText, teamsModalMessage.InnerText);
        }
        
        #region Properties
        public virtual SearchForTeamParams SearchForTeamParams
        {
            get
            {
                if ((this.mSearchForTeamParams == null))
                {
                    this.mSearchForTeamParams = new SearchForTeamParams();
                }
                return this.mSearchForTeamParams;
            }
        }
        
        public virtual ValidateTeamsModalMessageExpectedValues ValidateTeamsModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateTeamsModalMessageExpectedValues == null))
                {
                    this.mValidateTeamsModalMessageExpectedValues = new ValidateTeamsModalMessageExpectedValues();
                }
                return this.mValidateTeamsModalMessageExpectedValues;
            }
        }
        
        public UITeamsWindowsInternetWindow UITeamsWindowsInternetWindow
        {
            get
            {
                if ((this.mUITeamsWindowsInternetWindow == null))
                {
                    this.mUITeamsWindowsInternetWindow = new UITeamsWindowsInternetWindow();
                }
                return this.mUITeamsWindowsInternetWindow;
            }
        }
        
        public UIAddEditTeamWindowsInWindow UIAddEditTeamWindowsInWindow
        {
            get
            {
                if ((this.mUIAddEditTeamWindowsInWindow == null))
                {
                    this.mUIAddEditTeamWindowsInWindow = new UIAddEditTeamWindowsInWindow();
                }
                return this.mUIAddEditTeamWindowsInWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public TeamControlsWindow TeamControlsWindow
        {
            get
            {
                if ((this.mTeamControlsWindow == null))
                {
                    this.mTeamControlsWindow = new TeamControlsWindow();
                }
                return this.mTeamControlsWindow;
            }
        }
        
        public TeamMembersGridWindow TeamMembersGridWindow
        {
            get
            {
                if ((this.mTeamMembersGridWindow == null))
                {
                    this.mTeamMembersGridWindow = new TeamMembersGridWindow();
                }
                return this.mTeamMembersGridWindow;
            }
        }
        
        public UIAddEditTeamWindowsInWindow10 UIAddEditTeamWindowsInWindow10
        {
            get
            {
                if ((this.mUIAddEditTeamWindowsInWindow10 == null))
                {
                    this.mUIAddEditTeamWindowsInWindow10 = new UIAddEditTeamWindowsInWindow10();
                }
                return this.mUIAddEditTeamWindowsInWindow10;
            }
        }
        #endregion
        
        #region Fields
        private SearchForTeamParams mSearchForTeamParams;
        
        private ValidateTeamsModalMessageExpectedValues mValidateTeamsModalMessageExpectedValues;
        
        private UITeamsWindowsInternetWindow mUITeamsWindowsInternetWindow;
        
        private UIAddEditTeamWindowsInWindow mUIAddEditTeamWindowsInWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private TeamControlsWindow mTeamControlsWindow;
        
        private TeamMembersGridWindow mTeamMembersGridWindow;
        
        private UIAddEditTeamWindowsInWindow10 mUIAddEditTeamWindowsInWindow10;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchForTeam'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class SearchForTeamParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__Auto Test Team 1' in 'Team Name' text box
        /// </summary>
        public string UITeamNameEditText = "__Auto Test Team 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTeamsModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateTeamsModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///The team has no members. Empty teams are prohibited. Please add at least one member.'
        /// </summary>
        public string TeamsModalMessageInnerText = "Message from Expenses\r\n\r\n\r\nThe team has no members. Empty teams are prohibited. P" +
            "lease add at least one member.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITeamsWindowsInternetWindow : BrowserWindow
    {
        
        public UITeamsWindowsInternetWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Teams";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UITeamsDocument UITeamsDocument
        {
            get
            {
                if ((this.mUITeamsDocument == null))
                {
                    this.mUITeamsDocument = new UITeamsDocument(this);
                }
                return this.mUITeamsDocument;
            }
        }
        
        public UITeamsDocument2 UITeamsDocument2
        {
            get
            {
                if ((this.mUITeamsDocument2 == null))
                {
                    this.mUITeamsDocument2 = new UITeamsDocument2(this);
                }
                return this.mUITeamsDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UITeamsDocument mUITeamsDocument;
        
        private UITeamsDocument2 mUITeamsDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITeamsDocument : HtmlDocument
    {
        
        public UITeamsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Teams";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminteams.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/adminteams.aspx";
            this.WindowTitles.Add("Teams");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddTeamHePane UIPageOptionsAddTeamHePane
        {
            get
            {
                if ((this.mUIPageOptionsAddTeamHePane == null))
                {
                    this.mUIPageOptionsAddTeamHePane = new UIPageOptionsAddTeamHePane(this);
                }
                return this.mUIPageOptionsAddTeamHePane;
            }
        }
        
        public HtmlEdit UITeamNameEdit
        {
            get
            {
                if ((this.mUITeamNameEdit == null))
                {
                    this.mUITeamNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITeamNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "gridTeams_Filter";
                    this.mUITeamNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUITeamNameEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITeamNameEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITeamNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = "Team Name";
                    this.mUITeamNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITeamNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=gridTeams_Filter title=\"Team Name\" on";
                    this.mUITeamNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITeamNameEdit.WindowTitles.Add("Teams");
                    #endregion
                }
                return this.mUITeamNameEdit;
            }
        }
        
        public UIFilterGridgridTeamsHyperlink UIFilterGridgridTeamsHyperlink
        {
            get
            {
                if ((this.mUIFilterGridgridTeamsHyperlink == null))
                {
                    this.mUIFilterGridgridTeamsHyperlink = new UIFilterGridgridTeamsHyperlink(this);
                }
                return this.mUIFilterGridgridTeamsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddTeamHePane mUIPageOptionsAddTeamHePane;
        
        private HtmlEdit mUITeamNameEdit;
        
        private UIFilterGridgridTeamsHyperlink mUIFilterGridgridTeamsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPageOptionsAddTeamHePane : HtmlDiv
    {
        
        public UIPageOptionsAddTeamHePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Team Help ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Teams");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddTeamHyperlink
        {
            get
            {
                if ((this.mUIAddTeamHyperlink == null))
                {
                    this.mUIAddTeamHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Team";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://testing.sel-expenses.com/shared/admin/aeteam.aspx";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aeteam.aspx\"";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddTeamHyperlink.WindowTitles.Add("Teams");
                    #endregion
                }
                return this.mUIAddTeamHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddTeamHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFilterGridgridTeamsHyperlink : HtmlHyperlink
    {
        
        public UIFilterGridgridTeamsHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gridTeams_FilterLink";
            this.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "filterGrid(\'gridTeams\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:filterGrid(\'gridTeams\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BACKGROU";
            this.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Teams");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIFilterImage
        {
            get
            {
                if ((this.mUIFilterImage == null))
                {
                    this.mUIFilterImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIFilterImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Filter";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_filter.png";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/btn_filter.png";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "filterGrid(\'gridTeams\');";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:filterGrid(\'gridTeams\');";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "border=0 alt=Filter src=\"/shared/images/";
                    this.mUIFilterImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIFilterImage.WindowTitles.Add("Teams");
                    #endregion
                }
                return this.mUIFilterImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIFilterImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITeamsDocument2 : HtmlDocument
    {
        
        public UITeamsDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Teams";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminteams.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/adminteams.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddTeamHePane1 UIPageOptionsAddTeamHePane
        {
            get
            {
                if ((this.mUIPageOptionsAddTeamHePane == null))
                {
                    this.mUIPageOptionsAddTeamHePane = new UIPageOptionsAddTeamHePane1(this);
                }
                return this.mUIPageOptionsAddTeamHePane;
            }
        }
        
        public HtmlTable TeamsGrid
        {
            get
            {
                if ((this.mTeamsGrid == null))
                {
                    this.mTeamsGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mTeamsGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridTeams";
                    this.mTeamsGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Team Name Team Description\r\nGroup Capita";
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridTeams class=cGrid";
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "18";
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mTeamsGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mTeamsGrid.WindowTitles.Add("Teams");
                    #endregion
                }
                return this.mTeamsGrid;
            }
        }
        
        public UITbl_gridTeams_172Row UITbl_gridTeams_172Row
        {
            get
            {
                if ((this.mUITbl_gridTeams_172Row == null))
                {
                    this.mUITbl_gridTeams_172Row = new UITbl_gridTeams_172Row(this);
                }
                return this.mUITbl_gridTeams_172Row;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddTeamHePane1 mUIPageOptionsAddTeamHePane;
        
        private HtmlTable mTeamsGrid;
        
        private UITbl_gridTeams_172Row mUITbl_gridTeams_172Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPageOptionsAddTeamHePane1 : HtmlDiv
    {
        
        public UIPageOptionsAddTeamHePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Team Help ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddTeamHyperlink
        {
            get
            {
                if ((this.mUIAddTeamHyperlink == null))
                {
                    this.mUIAddTeamHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddTeamHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Team";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddTeamHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aeteam.aspx", PropertyExpressionOperator.Contains));
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"aeteam.aspx\"";
                    this.mUIAddTeamHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIAddTeamHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddTeamHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITbl_gridTeams_172Row : HtmlRow
    {
        
        public UITbl_gridTeams_172Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_gridTeams_172";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "test teamto see how the holidays thing w";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_gridTeams_172";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "9";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "10";
            this.WindowTitles.Add("Teams");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIMembersImage
        {
            get
            {
                if ((this.mUIMembersImage == null))
                {
                    this.mUIMembersImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMembersImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMembersImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMembersImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Members";
                    this.mUIMembersImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/users3.png";
                    this.mUIMembersImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/users3.png", PropertyExpressionOperator.Contains));
                    this.mUIMembersImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "ShowTeamMembers(172);";
                    this.mUIMembersImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:ShowTeamMembers(172);";
                    this.mUIMembersImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIMembersImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.ControlDefinition, "alt=Members", PropertyExpressionOperator.Contains));
                    this.mUIMembersImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIMembersImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIMembersImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIAddEditTeamWindowsInWindow : BrowserWindow
    {
        
        public UIAddEditTeamWindowsInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Add / Edit Team";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddEditTeamDocument UIAddEditTeamDocument
        {
            get
            {
                if ((this.mUIAddEditTeamDocument == null))
                {
                    this.mUIAddEditTeamDocument = new UIAddEditTeamDocument(this);
                }
                return this.mUIAddEditTeamDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddEditTeamDocument mUIAddEditTeamDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIAddEditTeamDocument : HtmlDocument
    {
        
        public UIAddEditTeamDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add / Edit Team";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/aeteam.aspx";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddTeamMePane UIPageOptionsAddTeamMePane
        {
            get
            {
                if ((this.mUIPageOptionsAddTeamMePane == null))
                {
                    this.mUIPageOptionsAddTeamMePane = new UIPageOptionsAddTeamMePane(this);
                }
                return this.mUIPageOptionsAddTeamMePane;
            }
        }
        
        public HtmlCheckBox UISelectAllgridEmployeCheckBox
        {
            get
            {
                if ((this.mUISelectAllgridEmployeCheckBox == null))
                {
                    this.mUISelectAllgridEmployeCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUISelectAllgridEmployeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "selectAllgridEmployees";
                    this.mUISelectAllgridEmployeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUISelectAllgridEmployeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUISelectAllgridEmployeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUISelectAllgridEmployeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUISelectAllgridEmployeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUISelectAllgridEmployeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=selectAllgridEmployees onclick=\"selec";
                    this.mUISelectAllgridEmployeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "7";
                    this.mUISelectAllgridEmployeCheckBox.WindowTitles.Add("Add / Edit Team");
                    #endregion
                }
                return this.mUISelectAllgridEmployeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddTeamMePane mUIPageOptionsAddTeamMePane;
        
        private HtmlCheckBox mUISelectAllgridEmployeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPageOptionsAddTeamMePane : HtmlDiv
    {
        
        public UIPageOptionsAddTeamMePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Team Member Help ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddTeamMemberHyperlink
        {
            get
            {
                if ((this.mUIAddTeamMemberHyperlink == null))
                {
                    this.mUIAddTeamMemberHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Team Member";
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "AddTeamMembers();";
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:AddTeamMembers();";
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddTeamMemberHyperlink.WindowTitles.Add("Add / Edit Team");
                    #endregion
                }
                return this.mUIAddTeamMemberHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddTeamMemberHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class TeamControlsWindow : BrowserWindow
    {
        
        public TeamControlsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public TeamControlsDocument TeamControlsDocument
        {
            get
            {
                if ((this.mTeamControlsDocument == null))
                {
                    this.mTeamControlsDocument = new TeamControlsDocument(this);
                }
                return this.mTeamControlsDocument;
            }
        }
        #endregion
        
        #region Fields
        private TeamControlsDocument mTeamControlsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class TeamControlsDocument : HtmlDocument
    {
        
        public TeamControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeteam.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit TeamNameTextBox
        {
            get
            {
                if ((this.mTeamNameTextBox == null))
                {
                    this.mTeamNameTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTeamNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtTeamName";
                    this.mTeamNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtTeamName";
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Team name *";
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtTeamN";
                    this.mTeamNameTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mTeamNameTextBox;
            }
        }
        
        public HtmlTextArea DescriptionTextBox
        {
            get
            {
                if ((this.mDescriptionTextBox == null))
                {
                    this.mDescriptionTextBox = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDescription";
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDescription";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtDescr";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mDescriptionTextBox;
            }
        }
        
        public HtmlComboBox TeamleaderComboBox
        {
            get
            {
                if ((this.mTeamleaderComboBox == null))
                {
                    this.mTeamleaderComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mTeamleaderComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlTeamLeader";
                    this.mTeamleaderComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlTeamLeader";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Team leader";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "1";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_ddlTeamL";
                    this.mTeamleaderComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mTeamleaderComboBox;
            }
        }
        
        public HtmlEdit UsernameFilterTextBox
        {
            get
            {
                if ((this.mUsernameFilterTextBox == null))
                {
                    this.mUsernameFilterTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUsernameFilterTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "gridTeamEmployees_Filter";
                    this.mUsernameFilterTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUsernameFilterTextBox.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUsernameFilterTextBox.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUsernameFilterTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = "Username";
                    this.mUsernameFilterTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUsernameFilterTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "onkeypress=\"javascript:SEL.Grid.doClick(";
                    this.mUsernameFilterTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mUsernameFilterTextBox;
            }
        }
        
        public HtmlImage SaveTeamMemberImageButton
        {
            get
            {
                if ((this.mSaveTeamMemberImageButton == null))
                {
                    this.mSaveTeamMemberImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mSaveTeamMemberImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSaveModal";
                    this.mSaveTeamMemberImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mSaveTeamMemberImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mSaveTeamMemberImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mSaveTeamMemberImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveTeamMemberImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mSaveTeamMemberImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=javascript:SaveEmployeesModal();";
                    this.mSaveTeamMemberImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mSaveTeamMemberImageButton;
            }
        }
        
        public HtmlImage OKImageButton
        {
            get
            {
                if ((this.mOKImageButton == null))
                {
                    this.mOKImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mOKImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=SEL.MasterPopup.HideMasterPopup(";
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mOKImageButton;
            }
        }
        
        public UISELGridfilterGridgriHyperlink UISELGridfilterGridgriHyperlink
        {
            get
            {
                if ((this.mUISELGridfilterGridgriHyperlink == null))
                {
                    this.mUISELGridfilterGridgriHyperlink = new UISELGridfilterGridgriHyperlink(this);
                }
                return this.mUISELGridfilterGridgriHyperlink;
            }
        }
        
        public HtmlImage UISharedimagesbuttonscImage
        {
            get
            {
                if ((this.mUISharedimagesbuttonscImage == null))
                {
                    this.mUISharedimagesbuttonscImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnCancelModal";
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mUISharedimagesbuttonscImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=javascript:CancelEmployeesModal(";
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mUISharedimagesbuttonscImage;
            }
        }
        
        public HtmlImage SaveTeamButton
        {
            get
            {
                if ((this.mSaveTeamButton == null))
                {
                    this.mSaveTeamButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mSaveTeamButton.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSave";
                    this.mSaveTeamButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mSaveTeamButton.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mSaveTeamButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mSaveTeamButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveTeamButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mSaveTeamButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=javascript:SaveTeam(); id=ctl00_";
                    this.mSaveTeamButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mSaveTeamButton;
            }
        }
        
        public HtmlDiv TeamsModalMessage
        {
            get
            {
                if ((this.mTeamsModalMessage == null))
                {
                    this.mTeamsModalMessage = new HtmlDiv(this);
                    #region Search Criteria
                    this.mTeamsModalMessage.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mTeamsModalMessage.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mTeamsModalMessage.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe team has ";
                    this.mTeamsModalMessage.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mTeamsModalMessage.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mTeamsModalMessage.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_pnlMasterPopup class=errorModal style=\"POSITION: fixed; LEFT: 695px; Z-I" +
                        "NDEX: 10004; TOP: 431px\"";
                    this.mTeamsModalMessage.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mTeamsModalMessage;
            }
        }
        
        public HtmlImage CancelTeamButton
        {
            get
            {
                if ((this.mCancelTeamButton == null))
                {
                    this.mCancelTeamButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mCancelTeamButton.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnCancel";
                    this.mCancelTeamButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCancelTeamButton.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mCancelTeamButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mCancelTeamButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mCancelTeamButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mCancelTeamButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=javascript:CancelTeam(); id=ctl0";
                    this.mCancelTeamButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mCancelTeamButton;
            }
        }
        
        public PageOptionsAddTeamMemberPane PageOptionsAddTeamMemberPane
        {
            get
            {
                if ((this.mPageOptionsAddTeamMemberPane == null))
                {
                    this.mPageOptionsAddTeamMemberPane = new PageOptionsAddTeamMemberPane(this);
                }
                return this.mPageOptionsAddTeamMemberPane;
            }
        }
        
        public HtmlCheckBox UISelectgridTeamEmployCheckBox
        {
            get
            {
                if ((this.mUISelectgridTeamEmployCheckBox == null))
                {
                    this.mUISelectgridTeamEmployCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUISelectgridTeamEmployCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUISelectgridTeamEmployCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "selectgridTeamEmployees";
                    this.mUISelectgridTeamEmployCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "21403";
                    this.mUISelectgridTeamEmployCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUISelectgridTeamEmployCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUISelectgridTeamEmployCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUISelectgridTeamEmployCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "type=checkbox value=21403 name=selectgri";
                    this.mUISelectgridTeamEmployCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "14";
                    #endregion
                }
                return this.mUISelectgridTeamEmployCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mTeamNameTextBox;
        
        private HtmlTextArea mDescriptionTextBox;
        
        private HtmlComboBox mTeamleaderComboBox;
        
        private HtmlEdit mUsernameFilterTextBox;
        
        private HtmlImage mSaveTeamMemberImageButton;
        
        private HtmlImage mOKImageButton;
        
        private UISELGridfilterGridgriHyperlink mUISELGridfilterGridgriHyperlink;
        
        private HtmlImage mUISharedimagesbuttonscImage;
        
        private HtmlImage mSaveTeamButton;
        
        private HtmlDiv mTeamsModalMessage;
        
        private HtmlImage mCancelTeamButton;
        
        private PageOptionsAddTeamMemberPane mPageOptionsAddTeamMemberPane;
        
        private HtmlCheckBox mUISelectgridTeamEmployCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UISELGridfilterGridgriHyperlink : HtmlHyperlink
    {
        
        public UISELGridfilterGridgriHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gridTeamEmployees_FilterLink";
            this.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
            this.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.filterGrid(\'gridTeamEmployees\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.filterGrid(\'gridTeamEmployees\');";
            this.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
            this.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=gridTeamEmployees_FilterLi";
            this.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "17";
            #endregion
        }
        
        #region Properties
        public HtmlImage FilterImageButton
        {
            get
            {
                if ((this.mFilterImageButton == null))
                {
                    this.mFilterImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mFilterImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mFilterImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mFilterImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "Filter";
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_filter.png";
                    this.mFilterImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_filter.png", PropertyExpressionOperator.Contains));
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "SEL.Grid.filterGrid(\'gridTeamEmployees\');";
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:SEL.Grid.filterGrid(\'gridTeamEmployees\');";
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "border=0 alt=Filter src=\"https://chronos";
                    this.mFilterImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mFilterImageButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mFilterImageButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class PageOptionsAddTeamMemberPane : HtmlDiv
    {
        
        public PageOptionsAddTeamMemberPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Team Member Help ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink AddTeamMemberHyperlink
        {
            get
            {
                if ((this.mAddTeamMemberHyperlink == null))
                {
                    this.mAddTeamMemberHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mAddTeamMemberHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Team Member";
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "AddTeamMembers();";
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:AddTeamMembers();";
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem href=\"javascript:AddTe";
                    this.mAddTeamMemberHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAddTeamMemberHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mAddTeamMemberHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class TeamMembersGridWindow : BrowserWindow
    {
        
        public TeamMembersGridWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public TeamMembersGridDocument TeamMembersGridDocument
        {
            get
            {
                if ((this.mTeamMembersGridDocument == null))
                {
                    this.mTeamMembersGridDocument = new TeamMembersGridDocument(this);
                }
                return this.mTeamMembersGridDocument;
            }
        }
        #endregion
        
        #region Fields
        private TeamMembersGridDocument mTeamMembersGridDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class TeamMembersGridDocument : HtmlDocument
    {
        
        public TeamMembersGridDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add / Edit Team";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeteam.aspx?teamid=190", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable TeamMembersGrid
        {
            get
            {
                if ((this.mTeamMembersGrid == null))
                {
                    this.mTeamMembersGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mTeamMembersGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridTeamMembers";
                    this.mTeamMembersGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Username Title (Mr/Mrs/Dr)First NameSurn";
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridTeamMembers class=cGrid";
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mTeamMembersGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mTeamMembersGrid.WindowTitles.Add("Add / Edit Team");
                    #endregion
                }
                return this.mTeamMembersGrid;
            }
        }
        
        public HtmlTable TeamEmployeesGrid
        {
            get
            {
                if ((this.mTeamEmployeesGrid == null))
                {
                    this.mTeamEmployeesGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mTeamEmployeesGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridTeamEmployees";
                    this.mTeamEmployeesGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Username Title (Mr/Mrs/Dr)First NameSurn";
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridTeamEmployees class=cGrid";
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "11";
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mTeamEmployeesGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
                    this.mTeamEmployeesGrid.WindowTitles.Add("Add / Edit Team");
                    #endregion
                }
                return this.mTeamEmployeesGrid;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mTeamMembersGrid;
        
        private HtmlTable mTeamEmployeesGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIAddEditTeamWindowsInWindow10 : BrowserWindow
    {
        
        public UIAddEditTeamWindowsInWindow10()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Add / Edit Team";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddEditTeamDocument1 UIAddEditTeamDocument
        {
            get
            {
                if ((this.mUIAddEditTeamDocument == null))
                {
                    this.mUIAddEditTeamDocument = new UIAddEditTeamDocument1(this);
                }
                return this.mUIAddEditTeamDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddEditTeamDocument1 mUIAddEditTeamDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIAddEditTeamDocument1 : HtmlDocument
    {
        
        public UIAddEditTeamDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add / Edit Team";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeteam.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos6.sel-expenses.com/shared/admin/aeteam.aspx?teamid=160";
            this.WindowTitles.Add("Add / Edit Team");
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_gridTeamEmployeeTable
        {
            get
            {
                if ((this.mUITbl_gridTeamEmployeeTable == null))
                {
                    this.mUITbl_gridTeamEmployeeTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridTeamEmployeeTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridTeamEmployees";
                    this.mUITbl_gridTeamEmployeeTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Username Title (Mr/Mrs/Dr)First NameSurn";
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridTeamEmployees class=cGrid";
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mUITbl_gridTeamEmployeeTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
                    this.mUITbl_gridTeamEmployeeTable.WindowTitles.Add("Add / Edit Team");
                    #endregion
                }
                return this.mUITbl_gridTeamEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_gridTeamEmployeeTable;
        #endregion
    }
}
