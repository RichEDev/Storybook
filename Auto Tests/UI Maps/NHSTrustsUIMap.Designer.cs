// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.NHSTrustsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class NHSTrustsUIMap
    {
        
        /// <summary>
        /// ClickDeleteFinancialExport
        /// </summary>
        public void ClickDeleteFinancialExport()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UITbl_financialExportsRow.UIDeleteImage;
            BrowserWindow uIFinancialExportsWindWindow = this.UIFinancialExportsWindWindow;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(6, 10));

            // Click 'Ok' button in the browser dialog window
            uIFinancialExportsWindWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// ClickNewFinancialExport
        /// </summary>
        public void ClickNewFinancialExport()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddExportHyperlink = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UIPageOptionsAddExportPane.UIAddExportHyperlink;
            #endregion

            // Click 'Add Export' link
            Mouse.Click(uIAddExportHyperlink, new Point(33, 5));
        }
        
        /// <summary>
        /// ClickNewTrustLink
        /// </summary>
        public void ClickNewTrustLink()
        {
            #region Variable Declarations
            HtmlHyperlink newTrustHyperlink = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsHyperLinkDocument.NewTrustPane.NewTrustHyperlink;
            #endregion

            // Click 'New Trust' link
            Mouse.Click(newTrustHyperlink, new Point(42, 5));
        }
        
        /// <summary>
        /// ClickOKToConfirmDeletion
        /// </summary>
        public void ClickOKToConfirmDeletion()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(26, 20));
        }
        
        /// <summary>
        /// PopulateESRFinancialExportDetails - Use 'PopulateESRFinancialExportDetailsParams' to pass parameters into this method.
        /// </summary>
        public void PopulateESRFinancialExportDetails()
        {
            #region Variable Declarations
            HtmlComboBox uIApplicationComboBox = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UIApplicationComboBox;
            HtmlComboBox uINHSTrustComboBox1 = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UINHSTrustComboBox1;
            HtmlComboBox uIReportComboBox = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UIReportComboBox;
            #endregion

            // Select 'ESR' in 'Application' combo box
            uIApplicationComboBox.SelectedItem = this.PopulateESRFinancialExportDetailsParams.UIApplicationComboBoxSelectedItem;

            // Select '__NHS Trust EDITED' in 'NHS Trust' combo box
            uINHSTrustComboBox1.SelectedItem = this.PopulateESRFinancialExportDetailsParams.UINHSTrustComboBox1SelectedItem;

            // Select 'Home to HQ Lease NR NHS' in 'Report' combo box
            uIReportComboBox.SelectedItem = this.PopulateESRFinancialExportDetailsParams.UIReportComboBoxSelectedItem;
        }
        
        /// <summary>
        /// PressCancelNHSTrust
        /// </summary>
        public void PressCancelNHSTrust()
        {
            #region Variable Declarations
            HtmlImage cancelImageButton = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsButtonsDocument.NHSTrustsButtonsPane.CancelImageButton;
            #endregion

            // Click 'Cancel' image
            Mouse.Click(cancelImageButton, new Point(38, 19));
        }
        
        /// <summary>
        /// PressCloseNHSTrusts
        /// </summary>
        public void PressCloseNHSTrusts()
        {
            #region Variable Declarations
            HtmlImage closeImageButton = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsButtonsDocument.NHSTrustsMainPane.CloseImageButton;
            #endregion

            // Move 'Close' image
            Mouse.StartDragging(closeImageButton, new Point(143, 16));
            Mouse.StopDragging(closeImageButton, -112, 3);
        }
        
        /// <summary>
        /// PressCloseOnModalMessage
        /// </summary>
        public void PressCloseOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage oKImageButton = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsButtonsDocument.OKImageButton;
            #endregion

            // Click 'OK' image
            Mouse.Click(oKImageButton, new Point(17, 11));
        }
        
        /// <summary>
        /// PressESRFinancialExportSave
        /// </summary>
        public void PressESRFinancialExportSave()
        {
            #region Variable Declarations
            HtmlImage uISaveImage = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UISaveImage;
            #endregion

            // Click 'Save' image
            Mouse.Click(uISaveImage, new Point(11, 8));
        }
        
        /// <summary>
        /// PressSaveNHSTrust
        /// </summary>
        public void PressSaveNHSTrust()
        {
            #region Variable Declarations
            HtmlImage saveImageButton = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsButtonsDocument.NHSTrustsButtonsPane.SaveImageButton;
            #endregion

            // Click 'Save' image
            Mouse.Click(saveImageButton, new Point(13, 6));
        }
        
        /// <summary>
        /// ValidateESRFinancialExport - Use 'ValidateESRFinancialExportExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateESRFinancialExport()
        {
            #region Variable Declarations
            HtmlDiv uIFinancialExportsGridPane = this.UIFinancialExportsWindWindow.UIFinancialExportsDocument.UIFinancialExportsGridPane;
            #endregion

            // Verify that the 'InnerText' property of 'financialExportsGrid' pane contains 'ExportScheduleESRHome to HQ Lease NR NHSjames 1'
            StringAssert.Contains(uIFinancialExportsGridPane.InnerText, this.ValidateESRFinancialExportExpectedValues.UIFinancialExportsGridPaneInnerText);
        }
        
        /// <summary>
        /// ValidateNHSTrustModalMesage - Use 'ValidateNHSTrustModalMesageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateNHSTrustModalMesage()
        {
            #region Variable Declarations
            HtmlDiv nHSTrustsModalMessage = this.NHSTrustsControlsModalsLinksWindow.NHSTrustsMasterPopupDocument.NHSTrustsModalMessage;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //The Trust Name you have entered already exists.'
            Assert.AreEqual(this.ValidateNHSTrustModalMesageExpectedValues.NHSTrustsModalMessageInnerText, nHSTrustsModalMessage.InnerText);
        }
        
        #region Properties
        public virtual PopulateESRFinancialExportDetailsParams PopulateESRFinancialExportDetailsParams
        {
            get
            {
                if ((this.mPopulateESRFinancialExportDetailsParams == null))
                {
                    this.mPopulateESRFinancialExportDetailsParams = new PopulateESRFinancialExportDetailsParams();
                }
                return this.mPopulateESRFinancialExportDetailsParams;
            }
        }
        
        public virtual ValidateESRFinancialExportExpectedValues ValidateESRFinancialExportExpectedValues
        {
            get
            {
                if ((this.mValidateESRFinancialExportExpectedValues == null))
                {
                    this.mValidateESRFinancialExportExpectedValues = new ValidateESRFinancialExportExpectedValues();
                }
                return this.mValidateESRFinancialExportExpectedValues;
            }
        }
        
        public virtual ValidateNHSTrustModalMesageExpectedValues ValidateNHSTrustModalMesageExpectedValues
        {
            get
            {
                if ((this.mValidateNHSTrustModalMesageExpectedValues == null))
                {
                    this.mValidateNHSTrustModalMesageExpectedValues = new ValidateNHSTrustModalMesageExpectedValues();
                }
                return this.mValidateNHSTrustModalMesageExpectedValues;
            }
        }
        
        public NHSTrustsControlsModalsLinksWindow NHSTrustsControlsModalsLinksWindow
        {
            get
            {
                if ((this.mNHSTrustsControlsModalsLinksWindow == null))
                {
                    this.mNHSTrustsControlsModalsLinksWindow = new NHSTrustsControlsModalsLinksWindow();
                }
                return this.mNHSTrustsControlsModalsLinksWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIFinancialExportsWindWindow UIFinancialExportsWindWindow
        {
            get
            {
                if ((this.mUIFinancialExportsWindWindow == null))
                {
                    this.mUIFinancialExportsWindWindow = new UIFinancialExportsWindWindow();
                }
                return this.mUIFinancialExportsWindWindow;
            }
        }
        #endregion
        
        #region Fields
        private PopulateESRFinancialExportDetailsParams mPopulateESRFinancialExportDetailsParams;
        
        private ValidateESRFinancialExportExpectedValues mValidateESRFinancialExportExpectedValues;
        
        private ValidateNHSTrustModalMesageExpectedValues mValidateNHSTrustModalMesageExpectedValues;
        
        private NHSTrustsControlsModalsLinksWindow mNHSTrustsControlsModalsLinksWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIFinancialExportsWindWindow mUIFinancialExportsWindWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PopulateESRFinancialExportDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class PopulateESRFinancialExportDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ESR' in 'Application' combo box
        /// </summary>
        public string UIApplicationComboBoxSelectedItem = "ESR";
        
        /// <summary>
        /// Select '__NHS Trust EDITED' in 'NHS Trust' combo box
        /// </summary>
        public string UINHSTrustComboBox1SelectedItem = "__NHS Trust EDITED";
        
        /// <summary>
        /// Select 'Home to HQ Lease NR NHS' in 'Report' combo box
        /// </summary>
        public string UIReportComboBoxSelectedItem = "Home to HQ Lease NR NHS";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateESRFinancialExport'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateESRFinancialExportExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'financialExportsGrid' pane contains 'ExportScheduleESRHome to HQ Lease NR NHSjames 1'
        /// </summary>
        public string UIFinancialExportsGridPaneInnerText = "ExportScheduleESRHome to HQ Lease NR NHSjames 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateNHSTrustModalMesage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateNHSTrustModalMesageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///The Trust Name you have entered already exists.'
        /// </summary>
        public string NHSTrustsModalMessageInnerText = "Message from Expenses\r\n\r\n\r\nThe Trust Name you have entered already exists.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsControlsModalsLinksWindow : BrowserWindow
    {
        
        public NHSTrustsControlsModalsLinksWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("NHS Trusts");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public NHSTrustsControlsDocument NHSTrustsControlsDocument
        {
            get
            {
                if ((this.mNHSTrustsControlsDocument == null))
                {
                    this.mNHSTrustsControlsDocument = new NHSTrustsControlsDocument(this);
                }
                return this.mNHSTrustsControlsDocument;
            }
        }
        
        public NHSTrustsButtonsDocument NHSTrustsButtonsDocument
        {
            get
            {
                if ((this.mNHSTrustsButtonsDocument == null))
                {
                    this.mNHSTrustsButtonsDocument = new NHSTrustsButtonsDocument(this);
                }
                return this.mNHSTrustsButtonsDocument;
            }
        }
        
        public NHSTrustsGridDocument NHSTrustsGridDocument
        {
            get
            {
                if ((this.mNHSTrustsGridDocument == null))
                {
                    this.mNHSTrustsGridDocument = new NHSTrustsGridDocument(this);
                }
                return this.mNHSTrustsGridDocument;
            }
        }
        
        public NHSTrustsHyperLinkDocument NHSTrustsHyperLinkDocument
        {
            get
            {
                if ((this.mNHSTrustsHyperLinkDocument == null))
                {
                    this.mNHSTrustsHyperLinkDocument = new NHSTrustsHyperLinkDocument(this);
                }
                return this.mNHSTrustsHyperLinkDocument;
            }
        }
        
        public NHSTrustsMasterPopupDocument NHSTrustsMasterPopupDocument
        {
            get
            {
                if ((this.mNHSTrustsMasterPopupDocument == null))
                {
                    this.mNHSTrustsMasterPopupDocument = new NHSTrustsMasterPopupDocument(this);
                }
                return this.mNHSTrustsMasterPopupDocument;
            }
        }
        #endregion
        
        #region Fields
        private NHSTrustsControlsDocument mNHSTrustsControlsDocument;
        
        private NHSTrustsButtonsDocument mNHSTrustsButtonsDocument;
        
        private NHSTrustsGridDocument mNHSTrustsGridDocument;
        
        private NHSTrustsHyperLinkDocument mNHSTrustsHyperLinkDocument;
        
        private NHSTrustsMasterPopupDocument mNHSTrustsMasterPopupDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsControlsDocument : HtmlDocument
    {
        
        public NHSTrustsControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "NHS Trusts";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/nhs/trusts.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/expenses/nhs/trusts.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit TrustNameTextBox
        {
            get
            {
                if ((this.mTrustNameTextBox == null))
                {
                    this.mTrustNameTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTrustNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtTrustName";
                    this.mTrustNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtTrustName";
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Trust Name *";
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtTrustName class=";
                    this.mTrustNameTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mTrustNameTextBox;
            }
        }
        
        public HtmlEdit TrustVPDTextBox
        {
            get
            {
                if ((this.mTrustVPDTextBox == null))
                {
                    this.mTrustVPDTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTrustVPDTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtTrustVPD";
                    this.mTrustVPDTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtTrustVPD";
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Trust VPD";
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtTrustVPD class=f";
                    this.mTrustVPDTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mTrustVPDTextBox;
            }
        }
        
        public HtmlComboBox PeriodTypeComboBox
        {
            get
            {
                if ((this.mPeriodTypeComboBox == null))
                {
                    this.mPeriodTypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mPeriodTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlPeriodType";
                    this.mPeriodTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlPeriodType";
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Period Type";
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "4";
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlPeriodType name=";
                    this.mPeriodTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mPeriodTypeComboBox;
            }
        }
        
        public HtmlComboBox PeriodRunComboBox
        {
            get
            {
                if ((this.mPeriodRunComboBox == null))
                {
                    this.mPeriodRunComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mPeriodRunComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlPeriodRun";
                    this.mPeriodRunComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlPeriodRun";
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Period Run";
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlPeriodRun name=c";
                    this.mPeriodRunComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mPeriodRunComboBox;
            }
        }
        
        public HtmlEdit FTPAddressTextBox
        {
            get
            {
                if ((this.mFTPAddressTextBox == null))
                {
                    this.mFTPAddressTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mFTPAddressTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtFTPAddress";
                    this.mFTPAddressTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtFTPAddress";
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "FTP Address";
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtFTPAddress class";
                    this.mFTPAddressTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mFTPAddressTextBox;
            }
        }
        
        public HtmlEdit FTPUsernameTextBox
        {
            get
            {
                if ((this.mFTPUsernameTextBox == null))
                {
                    this.mFTPUsernameTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mFTPUsernameTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtFTPUsername";
                    this.mFTPUsernameTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtFTPUsername";
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "FTP Username";
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtFTPUsername clas";
                    this.mFTPUsernameTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mFTPUsernameTextBox;
            }
        }
        
        public HtmlEdit FTPPasswordTextBox
        {
            get
            {
                if ((this.mFTPPasswordTextBox == null))
                {
                    this.mFTPPasswordTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mFTPPasswordTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtFTPPassword";
                    this.mFTPPasswordTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtFTPPassword";
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "FTP Password";
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtFTPPassword clas";
                    this.mFTPPasswordTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mFTPPasswordTextBox;
            }
        }
        
        public HtmlEdit RunSequenceTextBox
        {
            get
            {
                if ((this.mRunSequenceTextBox == null))
                {
                    this.mRunSequenceTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mRunSequenceTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtRunSequence";
                    this.mRunSequenceTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtRunSequence";
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Run Sequence";
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtRunSequence clas";
                    this.mRunSequenceTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mRunSequenceTextBox;
            }
        }
        
        public HtmlComboBox ESRInterfaceVersionComboBox
        {
            get
            {
                if ((this.mESRInterfaceVersionComboBox == null))
                {
                    this.mESRInterfaceVersionComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mESRInterfaceVersionComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlESRVersionNumber";
                    this.mESRInterfaceVersionComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlESRVersionNumber";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "ESR Interface Version";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlESRVersionNumber";
                    this.mESRInterfaceVersionComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mESRInterfaceVersionComboBox;
            }
        }
        
        public HtmlEdit DelimiterCharacterTextBox
        {
            get
            {
                if ((this.mDelimiterCharacterTextBox == null))
                {
                    this.mDelimiterCharacterTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mDelimiterCharacterTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDelimiter";
                    this.mDelimiterCharacterTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDelimiter";
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Delimiter Character";
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtDelimiter class=";
                    this.mDelimiterCharacterTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mDelimiterCharacterTextBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mTrustNameTextBox;
        
        private HtmlEdit mTrustVPDTextBox;
        
        private HtmlComboBox mPeriodTypeComboBox;
        
        private HtmlComboBox mPeriodRunComboBox;
        
        private HtmlEdit mFTPAddressTextBox;
        
        private HtmlEdit mFTPUsernameTextBox;
        
        private HtmlEdit mFTPPasswordTextBox;
        
        private HtmlEdit mRunSequenceTextBox;
        
        private HtmlComboBox mESRInterfaceVersionComboBox;
        
        private HtmlEdit mDelimiterCharacterTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsButtonsDocument : HtmlDocument
    {
        
        public NHSTrustsButtonsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/nhs/trusts.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/expenses/nhs/trusts.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlImage OKImageButton
        {
            get
            {
                if ((this.mOKImageButton == null))
                {
                    this.mOKImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mOKImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mOKImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mOKImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "37";
                    #endregion
                }
                return this.mOKImageButton;
            }
        }
        
        public NHSTrustsButtonsPane NHSTrustsButtonsPane
        {
            get
            {
                if ((this.mNHSTrustsButtonsPane == null))
                {
                    this.mNHSTrustsButtonsPane = new NHSTrustsButtonsPane(this);
                }
                return this.mNHSTrustsButtonsPane;
            }
        }
        
        public NHSTrustsMainPane NHSTrustsMainPane
        {
            get
            {
                if ((this.mNHSTrustsMainPane == null))
                {
                    this.mNHSTrustsMainPane = new NHSTrustsMainPane(this);
                }
                return this.mNHSTrustsMainPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mOKImageButton;
        
        private NHSTrustsButtonsPane mNHSTrustsButtonsPane;
        
        private NHSTrustsMainPane mNHSTrustsMainPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsButtonsPane : HtmlDiv
    {
        
        public NHSTrustsButtonsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnlTrust";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Trust Details\r\nTrust Name *  * Trust VPD";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel formpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = @"style=""Z-INDEX: 10001; BORDER-BOTTOM: #000000 1px solid; POSITION: fixed; BORDER-LEFT: #000000 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: #ffffff; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; BORDER-TOP: #000000 1px solid; BORDER-RIGHT: #000000 1px solid; PADDING-TOP: 5px; TOP: 184px; LEFT: 198px"" id=ctl00_contentmain_pnlTrust class=""modalpanel formpanel""";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
            #endregion
        }
        
        #region Properties
        public HtmlImage SaveImageButton
        {
            get
            {
                if ((this.mSaveImageButton == null))
                {
                    this.mSaveImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mSaveImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=SaveTrust(); alt=Save src=\"/shar";
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mSaveImageButton;
            }
        }
        
        public HtmlImage CancelImageButton
        {
            get
            {
                if ((this.mCancelImageButton == null))
                {
                    this.mCancelImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mCancelImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mCancelImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCancelImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "Cancel";
                    this.mCancelImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mCancelImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mCancelImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mCancelImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=hideModal() alt=Cancel src=\"/sha";
                    this.mCancelImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mCancelImageButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mSaveImageButton;
        
        private HtmlImage mCancelImageButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsMainPane : HtmlDiv
    {
        
        public NHSTrustsMainPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "maindiv";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Trust NameTrust VPD Run SequenceESR Inte";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=maindiv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
            #endregion
        }
        
        #region Properties
        public HtmlImage CloseImageButton
        {
            get
            {
                if ((this.mCloseImageButton == null))
                {
                    this.mCloseImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mCloseImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mCloseImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCloseImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "Close";
                    this.mCloseImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mCloseImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mCloseImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mCloseImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=\"window.location = \'../../export";
                    this.mCloseImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "30";
                    #endregion
                }
                return this.mCloseImageButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mCloseImageButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsGridDocument : HtmlDocument
    {
        
        public NHSTrustsGridDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "NHS Trusts";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/nhs/trusts.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/expenses/nhs/trusts.aspx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("NHS Trusts");
            #endregion
        }
        
        #region Properties
        public HtmlTable NHSTrustsGrid
        {
            get
            {
                if ((this.mNHSTrustsGrid == null))
                {
                    this.mNHSTrustsGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mNHSTrustsGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_trusts";
                    this.mNHSTrustsGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Trust Name Trust VPDRun SequenceESR Inte";
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_trusts class=cGrid";
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "8";
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "8";
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mNHSTrustsGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mNHSTrustsGrid;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mNHSTrustsGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsHyperLinkDocument : HtmlDocument
    {
        
        public NHSTrustsHyperLinkDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/nhs/trusts.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/expenses/nhs/trusts.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public NewTrustPane NewTrustPane
        {
            get
            {
                if ((this.mNewTrustPane == null))
                {
                    this.mNewTrustPane = new NewTrustPane(this);
                }
                return this.mNewTrustPane;
            }
        }
        #endregion
        
        #region Fields
        private NewTrustPane mNewTrustPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NewTrustPane : HtmlDiv
    {
        
        public NewTrustPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options \r\nNew Trust ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink NewTrustHyperlink
        {
            get
            {
                if ((this.mNewTrustHyperlink == null))
                {
                    this.mNewTrustHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mNewTrustHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mNewTrustHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mNewTrustHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mNewTrustHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Trust";
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "NewTrust();";
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:NewTrust();";
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mNewTrustHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mNewTrustHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mNewTrustHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class NHSTrustsMasterPopupDocument : HtmlDocument
    {
        
        public NHSTrustsMasterPopupDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/nhs/trusts.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/expenses/nhs/trusts.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv NHSTrustsModalMessage
        {
            get
            {
                if ((this.mNHSTrustsModalMessage == null))
                {
                    this.mNHSTrustsModalMessage = new HtmlDiv(this);
                    #region Search Criteria
                    this.mNHSTrustsModalMessage.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mNHSTrustsModalMessage.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mNHSTrustsModalMessage.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe Trust Nam";
                    this.mNHSTrustsModalMessage.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mNHSTrustsModalMessage.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mNHSTrustsModalMessage.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; TOP: 443px; LEFT: 810px\" id=ctl00_pnlMast" +
                        "erPopup class=errorModal";
                    this.mNHSTrustsModalMessage.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "36";
                    #endregion
                }
                return this.mNHSTrustsModalMessage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mNHSTrustsModalMessage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFinancialExportsWindWindow : BrowserWindow
    {
        
        public UIFinancialExportsWindWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Financial Exports";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Financial Exports");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFinancialExportsDocument UIFinancialExportsDocument
        {
            get
            {
                if ((this.mUIFinancialExportsDocument == null))
                {
                    this.mUIFinancialExportsDocument = new UIFinancialExportsDocument(this);
                }
                return this.mUIFinancialExportsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIFinancialExportsDocument mUIFinancialExportsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFinancialExportsDocument : HtmlDocument
    {
        
        public UIFinancialExportsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Financial Exports";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/expenses/admin/financialexports.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/expenses/admin/financialexports.aspx";
            this.WindowTitles.Add("Financial Exports");
            #endregion
        }
        
        #region Properties
        public UIPageOptionsAddExportPane UIPageOptionsAddExportPane
        {
            get
            {
                if ((this.mUIPageOptionsAddExportPane == null))
                {
                    this.mUIPageOptionsAddExportPane = new UIPageOptionsAddExportPane(this);
                }
                return this.mUIPageOptionsAddExportPane;
            }
        }
        
        public HtmlComboBox UIApplicationComboBox
        {
            get
            {
                if ((this.mUIApplicationComboBox == null))
                {
                    this.mUIApplicationComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIApplicationComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlApplication";
                    this.mUIApplicationComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlApplication";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Application";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlApplication clas";
                    this.mUIApplicationComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIApplicationComboBox.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUIApplicationComboBox;
            }
        }
        
        public HtmlComboBox UINHSTrustComboBox
        {
            get
            {
                if ((this.mUINHSTrustComboBox == null))
                {
                    this.mUINHSTrustComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUINHSTrustComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlNHSTrust";
                    this.mUINHSTrustComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlNHSTrust";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "NHS Trust";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlNHSTrust class=f";
                    this.mUINHSTrustComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUINHSTrustComboBox.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUINHSTrustComboBox;
            }
        }
        
        public HtmlImage UISaveImage
        {
            get
            {
                if ((this.mUISaveImage == null))
                {
                    this.mUISaveImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSave";
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISaveImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISaveImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "25";
                    this.mUISaveImage.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUISaveImage;
            }
        }
        
        public HtmlComboBox UINHSTrustComboBox1
        {
            get
            {
                if ((this.mUINHSTrustComboBox1 == null))
                {
                    this.mUINHSTrustComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUINHSTrustComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlNHSTrust";
                    this.mUINHSTrustComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlNHSTrust";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "NHS Trust";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlNHSTrust class=f";
                    this.mUINHSTrustComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUINHSTrustComboBox1.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUINHSTrustComboBox1;
            }
        }
        
        public HtmlComboBox UIReportComboBox
        {
            get
            {
                if ((this.mUIReportComboBox == null))
                {
                    this.mUIReportComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIReportComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlReport";
                    this.mUIReportComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlReport";
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Report";
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "197";
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlReport name=ctl0";
                    this.mUIReportComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUIReportComboBox.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUIReportComboBox;
            }
        }
        
        public HtmlDiv UIFinancialExportsGridPane
        {
            get
            {
                if ((this.mUIFinancialExportsGridPane == null))
                {
                    this.mUIFinancialExportsGridPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFinancialExportsGridPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "financialExportsGrid";
                    this.mUIFinancialExportsGridPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFinancialExportsGridPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ExportScheduleApplication Type Report Na";
                    this.mUIFinancialExportsGridPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFinancialExportsGridPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIFinancialExportsGridPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=financialExportsGrid";
                    this.mUIFinancialExportsGridPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "26";
                    this.mUIFinancialExportsGridPane.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUIFinancialExportsGridPane;
            }
        }
        
        public UITbl_financialExportsRow UITbl_financialExportsRow
        {
            get
            {
                if ((this.mUITbl_financialExportsRow == null))
                {
                    this.mUITbl_financialExportsRow = new UITbl_financialExportsRow(this);
                }
                return this.mUITbl_financialExportsRow;
            }
        }
        #endregion
        
        #region Fields
        private UIPageOptionsAddExportPane mUIPageOptionsAddExportPane;
        
        private HtmlComboBox mUIApplicationComboBox;
        
        private HtmlComboBox mUINHSTrustComboBox;
        
        private HtmlImage mUISaveImage;
        
        private HtmlComboBox mUINHSTrustComboBox1;
        
        private HtmlComboBox mUIReportComboBox;
        
        private HtmlDiv mUIFinancialExportsGridPane;
        
        private UITbl_financialExportsRow mUITbl_financialExportsRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPageOptionsAddExportPane : HtmlDiv
    {
        
        public UIPageOptionsAddExportPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nAdd Export ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Financial Exports");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddExportHyperlink
        {
            get
            {
                if ((this.mUIAddExportHyperlink == null))
                {
                    this.mUIAddExportHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddExportHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddExportHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddExportHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddExportHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Export";
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "AddFinancialExport();";
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:AddFinancialExport();";
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUIAddExportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAddExportHyperlink.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUIAddExportHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddExportHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITbl_financialExportsRow : HtmlRow
    {
        
        public UITbl_financialExportsRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_financialExportsGrid_26";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "ExportScheduleESRHome to HQ Lease NR NHS";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_financialExportsGrid_26";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "7";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Financial Exports");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "DeleteFinancialExport(26);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:DeleteFinancialExport(26);";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=Delete src=\"/shared/images/icons/del";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteImage.WindowTitles.Add("Financial Exports");
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIDeleteImage;
        #endregion
    }
}
