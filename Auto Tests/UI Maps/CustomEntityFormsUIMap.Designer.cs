// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.CustomEntityFormsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class CustomEntityFormsUIMap
    {
        
        /// <summary>
        /// AssertNewTabMandatoryMessage - Use 'AssertNewTabMandatoryMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNewTabMandatoryMessage()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument7.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a Tab name.'
            Assert.AreEqual(this.AssertNewTabMandatoryMessageExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// AssertTabNameAsteriskIsShown - Use 'AssertTabNameAsteriskIsShownExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertTabNameAsteriskIsShown()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument15.UIItemPane;
            #endregion

            // Verify that the 'InnerText' property of '*' pane equals '*'
            Assert.AreEqual(this.AssertTabNameAsteriskIsShownExpectedValues.UIItemPaneInnerText, uIItemPane.InnerText);

            // Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqTabHeader controltovalidate="ctl00_contentmain_txttabheader" display="Dynamic" validationGroup="vgTabHeader" initialvalue errormessage="Please enter a Tab name." isvalid="false"'
            Assert.AreEqual(this.AssertTabNameAsteriskIsShownExpectedValues.UIItemPaneControlDefinition, uIItemPane.ControlDefinition);
        }
        
        /// <summary>
        /// AssertTabOrder - Use 'AssertTabOrderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertTabOrder()
        {
            #region Variable Declarations
            HtmlDiv uITab1Tab2NewTabPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument5.UITab1Tab2NewTabPane;
            #endregion

            // Verify that the 'InnerText' property of 'Tab 1Tab 2 New Tab' pane equals 'Tab 1Tab 2 New Tab '
            Assert.AreEqual(this.AssertTabOrderExpectedValues.UITab1Tab2NewTabPaneInnerText, uITab1Tab2NewTabPane.InnerText);
        }
        
        /// <summary>
        /// CancelDeleteTab
        /// </summary>
        public void CancelDeleteTab()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(67, 14));
        }
        
        /// <summary>
        /// ClickCancelDeleteSection
        /// </summary>
        public void ClickCancelDeleteSection()
        {
            #region Variable Declarations
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(68, 21));
        }
        
        /// <summary>
        /// ClickCloseOnValidationModalOfSection
        /// </summary>
        public void ClickCloseOnValidationModalOfSection()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument10.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(35, 19));
        }
        
        /// <summary>
        /// ClickCloseOnValidationModalOfTab
        /// </summary>
        public void ClickCloseOnValidationModalOfTab()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument7.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(24, 16));
        }
        
        /// <summary>
        /// ClickConfirmDeleteSection
        /// </summary>
        public void ClickConfirmDeleteSection()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(56, 16));
        }
        
        /// <summary>
        /// ClickConfirmDeleteTab
        /// </summary>
        public void ClickConfirmDeleteTab()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(48, 21));
        }
        
        /// <summary>
        /// ClickDeleteSection
        /// </summary>
        public void ClickDeleteSection()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIDeleteImage1;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage1, new Point(12, 15));
        }
        
        /// <summary>
        /// ClickDeleteTab
        /// </summary>
        public void ClickDeleteTab()
        {
            #region Variable Declarations
            HtmlImage uIDeleteImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIDeleteImage;
            #endregion

            // Click 'Delete' image
            Mouse.Click(uIDeleteImage, new Point(25, 16));
        }
        
        /// <summary>
        /// ClickEditOnTabContextMenu
        /// </summary>
        public void ClickEditOnTabContextMenu()
        {
            #region Variable Declarations
            HtmlImage uIEdittabnameImage = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument16.UICtl00_contentmain_poPane.UIEdittabnameImage;
            #endregion

            // Click 'Edit tab name' image
            Mouse.Click(uIEdittabnameImage, new Point(8, 14));
        }
        
        /// <summary>
        /// ClickEditSectionName
        /// </summary>
        public void ClickEditSectionName()
        {
            #region Variable Declarations
            HtmlImage uIEditsectionnameImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument3.UICtl00_contentmain_poPane.UIEditsectionnameImage;
            #endregion

            // Click 'Edit section name' image
            Mouse.Click(uIEditsectionnameImage, new Point(11, 16));
        }
        
        /// <summary>
        /// ClickEditTabName
        /// </summary>
        public void ClickEditTabName()
        {
            #region Variable Declarations
            HtmlImage uIEdittabnameImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument2.UICtl00_contentmain_poPane.UIEdittabnameImage;
            #endregion

            // Click 'Edit tab name' image
            Mouse.Click(uIEdittabnameImage, new Point(11, 17));
        }
        
        /// <summary>
        /// ClickExpandAvailableFieldsDialog
        /// </summary>
        public void ClickExpandAvailableFieldsDialog()
        {
            #region Variable Declarations
            HtmlHyperlink uIGreenLightexpensesshHyperlink = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument9.UIGreenLightexpensesshHyperlink;
            #endregion

            // Click '/GreenLight/expenses/shared/admin/aecustomentity.a...' link
            Mouse.Click(uIGreenLightexpensesshHyperlink, new Point(14, 13));
        }
        
        /// <summary>
        /// ClickFormDesign
        /// </summary>
        public void ClickFormDesign()
        {
            #region Variable Declarations
            HtmlHyperlink uIFormDesignHyperlink = this.UIGreenLightAppointmenWindow.UIGreenLightAppointmenDocument.UIFormDesignHyperlink;
            #endregion

            // Click 'Form Design' link
            Mouse.Click(uIFormDesignHyperlink, new Point(44, 12));
        }
        
        /// <summary>
        /// ClickFormDesigner
        /// </summary>
        public void ClickFormDesigner()
        {
            #region Variable Declarations
            HtmlHyperlink uIFormDesignHyperlink = this.UIGreenLightAppointmenWindow1.UIGreenLightAppointmenDocument.UIFormDesignHyperlink;
            #endregion

            // Click 'Form Design' link
            Mouse.Click(uIFormDesignHyperlink, new Point(28, 7));
        }
        
        /// <summary>
        /// ClickFormsLink
        /// </summary>
        public void ClickFormsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIFormsHyperlink = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument.UIFormsHyperlink;
            #endregion

            // Click 'Forms' link
            Mouse.Click(uIFormsHyperlink, new Point(20, 9));
        }
        
        /// <summary>
        /// ClickMoveSectionDown
        /// </summary>
        public void ClickMoveSectionDown()
        {
            #region Variable Declarations
            HtmlImage uIMovedownImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIMovedownImage;
            #endregion

            // Click 'Move down' image
            Mouse.Click(uIMovedownImage, new Point(14, 19));
        }
        
        /// <summary>
        /// ClickMoveSectionUp
        /// </summary>
        public void ClickMoveSectionUp()
        {
            #region Variable Declarations
            HtmlImage uIMoveupImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIMoveupImage;
            #endregion

            // Click 'Move up' image
            Mouse.Click(uIMoveupImage, new Point(15, 11));
        }
        
        /// <summary>
        /// ClickMoveTabNameLeft
        /// </summary>
        public void ClickMoveTabNameLeft()
        {
            #region Variable Declarations
            HtmlImage uIMoveleftImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIMoveleftImage;
            #endregion

            // Click 'Move left' image
            Mouse.Click(uIMoveleftImage, new Point(8, 13));
        }
        
        /// <summary>
        /// ClickMoveTabNameRight
        /// </summary>
        public void ClickMoveTabNameRight()
        {
            #region Variable Declarations
            HtmlImage uIMoverightImage = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument4.UICtl00_contentmain_poPane.UIMoverightImage;
            #endregion

            // Click 'Move right' image
            Mouse.Click(uIMoverightImage, new Point(11, 13));
        }
        
        /// <summary>
        /// ClickNewTab
        /// </summary>
        public void ClickNewTab()
        {
            #region Variable Declarations
            HtmlSpan uINewTabPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument6.UINewTabPane;
            #endregion

            // Click 'New Tab' pane
            Mouse.Click(uINewTabPane, new Point(72, 14));
        }
        
        /// <summary>
        /// CloseDuplicateValidationModal
        /// </summary>
        public void CloseDuplicateValidationModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UICustomEntitymyCEWindWindow.UICustomEntitymyCEDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(10, 13));
        }
        
        /// <summary>
        /// CloseMandatoryFieldsModal
        /// </summary>
        public void CloseMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UICustomEntitymyCEWindWindow.UICustomEntitymyCEDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(25, 8));
        }
        
        /// <summary>
        /// PopulateFormattedText - Use 'PopulateFormattedTextParams' to pass parameters into this method.
        /// </summary>
        public void PopulateFormattedText()
        {
            #region Variable Declarations
            HtmlDocument uIHttpserselexpensescoDocument = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument16.UICtl00_contentmain_rtFrame.UIHttpserselexpensescoDocument;
            #endregion

            // Type 'Enter Text' in document
            Keyboard.SendKeys(uIHttpserselexpensescoDocument, this.PopulateFormattedTextParams.UIHttpserselexpensescoDocumentSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// PressCancelCopy
        /// </summary>
        public void PressCancelCopy()
        {
            #region Variable Declarations
            HtmlInputButton uICancelButton = this.UIGreenLightUKBATIER2MWindow.UIGreenLightUKBATIER2MDocument.UICancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(uICancelButton, new Point(43, 12));
        }
        
        /// <summary>
        /// PressCancelDeleteForm - Use 'PressCancelDeleteFormParams' to pass parameters into this method.
        /// </summary>
        public void PressCancelDeleteForm()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Type '{Tab}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.PressCancelDeleteFormParams.UIOKButtonSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'Cancel' button
            Keyboard.SendKeys(uICancelButton, this.PressCancelDeleteFormParams.UICancelButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// PressOKConfirmFormDeletion - Use 'PressOKConfirmFormDeletionParams' to pass parameters into this method.
        /// </summary>
        public void PressOKConfirmFormDeletion()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type '{Enter}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.PressOKConfirmFormDeletionParams.UIOKButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// PressSaveCopy
        /// </summary>
        public void PressSaveCopy()
        {
            #region Variable Declarations
            HtmlInputButton uISaveButton = this.UIGreenLightUKBATIER2MWindow.UIGreenLightUKBATIER2MDocument.UISaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(uISaveButton, new Point(33, 17));
        }
        
        /// <summary>
        /// testmethod
        /// </summary>
        public void testmethod()
        {
            #region Variable Declarations
            HtmlSpan uIStandardSingleTextPane1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIStandardSingleTextPane.UIStandardSingleTextPane1;
            HtmlLabel uIStandardSingleTextLabel = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIStandardSingleTextLabel;
            HtmlLabel uIStandardSingleTextLabel1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIStandardSingleTextLabel1;
            HtmlDiv uIDialogPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIDialogPane;
            HtmlSpan uINumberPane1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UINumberPane.UINumberPane1;
            HtmlLabel uINumberLabel = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UINumberLabel;
            HtmlLabel uINumberLabel1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UINumberLabel1;
            HtmlDiv uITab1NewTabTherearecuPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UICtl00_contentmain_taPane.UITab1NewTabTherearecuPane;
            HtmlSpan uIDecimalPane1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIDecimalPane.UIDecimalPane1;
            HtmlLabel uIDecimalLabel = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIDecimalLabel;
            HtmlLabel uIDecimalLabel1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIDecimalLabel1;
            HtmlSpan uIMultilineTextPane1 = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIMultilineTextPane.UIMultilineTextPane1;
            HtmlLabel uIMultilineTextLabel = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument12.UIMultilineTextLabel;
            #endregion

            // Move 'Standard Single Text' pane to 'Standard Single Text*' label
            uIStandardSingleTextLabel.EnsureClickable(new Point(92, 27));
            Mouse.StartDragging(uIStandardSingleTextPane1, new Point(53, 14));
            Mouse.StopDragging(uIStandardSingleTextLabel, new Point(92, 27));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Standard Single Text*' label at (92, 27)
            Mouse.Hover(uIStandardSingleTextLabel1, new Point(92, 27));

            // Mouse hover 'dialog' pane at (12, 166)
            Mouse.Hover(uIDialogPane, new Point(12, 166));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Move 'Number' pane to 'Number' label
            uINumberLabel.EnsureClickable(new Point(82, 21));
            Mouse.StartDragging(uINumberPane1, new Point(43, 8));
            Mouse.StopDragging(uINumberLabel, new Point(82, 21));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Number' label at (82, 21)
            Mouse.Hover(uINumberLabel1, new Point(82, 21));

            // Mouse hover 'Tab 1 New Tab There are currently no tab' pane at (553, 190)
            Mouse.Hover(uITab1NewTabTherearecuPane, new Point(553, 190));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Move 'Decimal' pane to 'Decimal' label
            uIDecimalLabel.EnsureClickable(new Point(63, 18));
            Mouse.StartDragging(uIDecimalPane1, new Point(24, 5));
            Mouse.StopDragging(uIDecimalLabel, new Point(63, 18));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Decimal' label at (63, 18)
            Mouse.Hover(uIDecimalLabel1, new Point(63, 18));

            // Mouse hover 'Tab 1 New Tab There are currently no tab' pane at (536, 213)
            Mouse.Hover(uITab1NewTabTherearecuPane, new Point(536, 213));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Move 'Multiline Text' pane to 'Multiline Text' label
            uIMultilineTextLabel.EnsureClickable(new Point(71, 22));
            Mouse.StartDragging(uIMultilineTextPane1, new Point(32, 12));
            Mouse.StopDragging(uIMultilineTextLabel, new Point(71, 22));
        }
        
        /// <summary>
        /// ValidateAstrickIsPresentAfterValidationModalIsDisplayed - Use 'ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateAstrickIsPresentAfterValidationModalIsDisplayed()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument7.UIItemPane;
            #endregion

            // Verify that the 'InnerText' property of '*' pane equals '*'
            Assert.AreEqual(this.ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues.UIItemPaneInnerText, uIItemPane.InnerText);

            // Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqTabHeader controltovalidate="ctl00_contentmain_txttabheader" display="Dynamic" validationGroup="vgTabHeader" initialvalue errormessage="Please enter a Tab name." isvalid="false"'
            Assert.AreEqual(this.ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues.UIItemPaneControlDefinition, uIItemPane.ControlDefinition);
        }
        
        /// <summary>
        /// ValidateCommentOnFormsModal - Use 'ValidateCommentOnFormsModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnFormsModal()
        {
            #region Variable Declarations
            HtmlDiv uIThefollowingcombinatPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UICtl00_contentmain_taPane.UIThefollowingcombinatPane;
            #endregion

            // Verify that the 'InnerText' property of 'The following combination of four differ' pane equals 'The following combination of four different buttons can be placed on the form. Although not mandatory to have all four, it is mandatory to have at least one. '
            Assert.AreEqual(this.ValidateCommentOnFormsModalExpectedValues.UIThefollowingcombinatPaneInnerText, uIThefollowingcombinatPane.InnerText);
        }
        
        /// <summary>
        /// ValidateCopyModalFormNameField - Use 'ValidateCopyModalFormNameFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCopyModalFormNameField()
        {
            #region Variable Declarations
            HtmlLabel uIFormnameLabel = this.UIGreenLightUKBATIER2MWindow1.UIGreenLightUKBATIER2MDocument.UIFormnameLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Form name*' label equals 'Form name*'
            Assert.AreEqual(this.ValidateCopyModalFormNameFieldExpectedValues.UIFormnameLabelInnerText, uIFormnameLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateCopyModalHeader - Use 'ValidateCopyModalHeaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCopyModalHeader()
        {
            #region Variable Declarations
            HtmlDiv uICopyFormPane = this.UIGreenLightUKBATIER2MWindow1.UIGreenLightUKBATIER2MDocument.UICopyFormFormnamePane.UICopyFormPane;
            #endregion

            // Verify that the 'InnerText' property of 'Copy Form' pane equals 'Copy Form'
            Assert.AreEqual(this.ValidateCopyModalHeaderExpectedValues.UICopyFormPaneInnerText, uICopyFormPane.InnerText);
        }
        
        /// <summary>
        /// ValidateDescriptionField - Use 'ValidateDescriptionFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDescriptionField()
        {
            #region Variable Declarations
            HtmlLabel uIDescriptionLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UIDescriptionLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Description' label equals 'Description'
            Assert.AreEqual(this.ValidateDescriptionFieldExpectedValues.UIDescriptionLabelInnerText, uIDescriptionLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateDetailsModal - Use 'ValidateDuplicateDetailsModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateDetailsModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UICustomEntitymyCEWindWindow.UICustomEntitymyCEDocument.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //The Form name you have entered already exists.'
            Assert.AreEqual(this.ValidateDuplicateDetailsModalExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateSectionModal - Use 'ValidateDuplicateSectionModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateSectionModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument12.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Cannot add a section with this name as one already exists on this tab.'
            Assert.AreEqual(this.ValidateDuplicateSectionModalExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateTabModal - Use 'ValidateDuplicateTabModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateTabModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument11.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Cannot add a tab with this name as one already exists on this form.'
            Assert.AreEqual(this.ValidateDuplicateTabModalExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateEmptyTable - Use 'ValidateEmptyTableExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateEmptyTable()
        {
            #region Variable Declarations
            HtmlCell uITherearecurrentlynofCell = this.UIGreenLightbaserelatiWindow.UIGreenLightbaserelatiDocument.UITbl_gridFormsTable.UITherearecurrentlynofCell;
            #endregion

            // Verify that the 'InnerText' property of 'There are currently no forms defined for' cell equals 'There are currently no forms defined for this GreenLight.'
            Assert.AreEqual(this.ValidateEmptyTableExpectedValues.UITherearecurrentlynofCellInnerText, uITherearecurrentlynofCell.InnerText);
        }
        
        /// <summary>
        /// ValidateFormButtonsSectionName - Use 'ValidateFormButtonsSectionNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFormButtonsSectionName()
        {
            #region Variable Declarations
            HtmlDiv uIFormButtonsPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UICtl00_contentmain_taPane.UIFormButtonsPane;
            #endregion

            // Verify that the 'InnerText' property of 'Form Buttons' pane equals 'Form Buttons'
            Assert.AreEqual(this.ValidateFormButtonsSectionNameExpectedValues.UIFormButtonsPaneInnerText, uIFormButtonsPane.InnerText);
        }
        
        /// <summary>
        /// ValidateFormDeletionMessage - Use 'ValidateFormDeletionMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFormDeletionMessage()
        {
            #region Variable Declarations
            WinText uIAreyousureyouwishtodText = this.UIMessagefromwebpageWindow.UIAreyousureyouwishtodWindow.UIAreyousureyouwishtodText;
            #endregion

            // Verify that the 'DisplayText' property of 'Are you sure you wish to delete the selected form?' label equals 'Are you sure you wish to delete the selected form?'
            Assert.AreEqual(this.ValidateFormDeletionMessageExpectedValues.UIAreyousureyouwishtodTextDisplayText, uIAreyousureyouwishtodText.DisplayText);
        }
        
        /// <summary>
        /// ValidateFormFieldOrder - Use 'ValidateFormFieldOrderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFormFieldOrder()
        {
            #region Variable Declarations
            HtmlDiv uIStandardSingleTextMuPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument6.UIStandardSingleTextMuPane;
            #endregion

            // Verify that the 'InnerText' property of 'Standard Single Text *Multiline Text' pane equals 'Standard Single Text *Multiline Text '
            Assert.AreEqual(this.ValidateFormFieldOrderExpectedValues.UIStandardSingleTextMuPaneInnerText, uIStandardSingleTextMuPane.InnerText);
        }
        
        /// <summary>
        /// ValidateFormNameField - Use 'ValidateFormNameFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFormNameField()
        {
            #region Variable Declarations
            HtmlLabel uIFormnameLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UIFormnameLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Form name*' label equals 'Form name*'
            Assert.AreEqual(this.ValidateFormNameFieldExpectedValues.UIFormnameLabelInnerText, uIFormnameLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateFormNameIsMandatory - Use 'ValidateFormNameIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateFormNameIsMandatory()
        {
            #region Variable Declarations
            HtmlLabel uIFormnameLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument3.UIFormnameLabel;
            #endregion

            // Verify that the 'Class' property of 'Form name*' label equals 'mandatory'
            Assert.AreEqual(this.ValidateFormNameIsMandatoryExpectedValues.UIFormnameLabelClass, uIFormnameLabel.Class);
        }
        
        /// <summary>
        /// ValidateGeneralDetailsSectionName - Use 'ValidateGeneralDetailsSectionNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateGeneralDetailsSectionName()
        {
            #region Variable Declarations
            HtmlDiv uIGeneralDetailsPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UICtl00_contentmain_taPane.UIGeneralDetailsPane;
            #endregion

            // Verify that the 'InnerText' property of 'General Details' pane equals 'General Details'
            Assert.AreEqual(this.ValidateGeneralDetailsSectionNameExpectedValues.UIGeneralDetailsPaneInnerText, uIGeneralDetailsPane.InnerText);
        }
        
        /// <summary>
        /// ValidateMandatoryFieldsModal - Use 'ValidateMandatoryFieldsModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane1 = this.UICustomEntitymyCEWindWindow.UICustomEntitymyCEDocument.UIDivMasterPopupPane1;
            #endregion

            // Verify that the 'DisplayText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a Form name.
            //Please enter text for at least one of the Form buttons.'
            Assert.AreEqual(this.ValidateMandatoryFieldsModalExpectedValues.UIDivMasterPopupPane1DisplayText, uIDivMasterPopupPane1.DisplayText);
        }
        
        /// <summary>
        /// ValidateSaveButtonTextField - Use 'ValidateSaveButtonTextFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSaveButtonTextField()
        {
            #region Variable Declarations
            HtmlLabel uITextforsavebuttonLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UITextforsavebuttonLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Text for 'save' button*' label equals 'Text for 'save' button*'
            Assert.AreEqual(this.ValidateSaveButtonTextFieldExpectedValues.UITextforsavebuttonLabelInnerText, uITextforsavebuttonLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateSectionOrder - Use 'ValidateSectionOrderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSectionOrder()
        {
            #region Variable Declarations
            HtmlDiv uIFormTabsPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument5.UIFormTabsPane;
            #endregion

            // Verify that the 'InnerText' property of 'formTabs' pane equals 'Section 1Section 1 EDITED'
            Assert.AreEqual(this.ValidateSectionOrderExpectedValues.UIFormTabsPaneInnerText, uIFormTabsPane.InnerText);
        }
        
        /// <summary>
        /// ValidateShowBreadcrumbsField - Use 'ValidateShowBreadcrumbsFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateShowBreadcrumbsField()
        {
            #region Variable Declarations
            HtmlLabel uIShowbreadcrumbsLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UIShowbreadcrumbsLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Show breadcrumbs' label equals 'Show breadcrumbs'
            Assert.AreEqual(this.ValidateShowBreadcrumbsFieldExpectedValues.UIShowbreadcrumbsLabelInnerText, uIShowbreadcrumbsLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateShowSubMenuField - Use 'ValidateShowSubMenuFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateShowSubMenuField()
        {
            #region Variable Declarations
            HtmlLabel uIShowsubmenuLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UIShowsubmenuLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Show sub-menu' label equals 'Show sub-menu'
            Assert.AreEqual(this.ValidateShowSubMenuFieldExpectedValues.UIShowsubmenuLabelInnerText, uIShowsubmenuLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateTabOrder - Use 'ValidateTabOrderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTabOrder()
        {
            #region Variable Declarations
            HtmlDiv uITab1Tab2NewTabPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument5.UITab1Tab2NewTabPane;
            #endregion

            // Verify that the 'InnerText' property of 'Tab 1Tab 2 New Tab' pane equals 'Tab 1Tab 2 New Tab '
            Assert.AreEqual(this.ValidateTabOrderExpectedValues.UITab1Tab2NewTabPaneInnerText, uITab1Tab2NewTabPane.InnerText);
        }
        
        /// <summary>
        /// ValidateTextCancelButtonField - Use 'ValidateTextCancelButtonFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextCancelButtonField()
        {
            #region Variable Declarations
            HtmlLabel uITextforcancelbuttonLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UITextforcancelbuttonLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Text for 'cancel' button*' label equals 'Text for 'cancel' button*'
            Assert.AreEqual(this.ValidateTextCancelButtonFieldExpectedValues.UITextforcancelbuttonLabelInnerText, uITextforcancelbuttonLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateTextCancelButtonFieldIsMandatory - Use 'ValidateTextCancelButtonFieldIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextCancelButtonFieldIsMandatory()
        {
            #region Variable Declarations
            HtmlLabel uITextforcancelbuttonLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument4.UITextforcancelbuttonLabel;
            #endregion

            // Verify that the 'Class' property of 'Text for 'cancel' button*' label equals 'mandatory'
            Assert.AreEqual(this.ValidateTextCancelButtonFieldIsMandatoryExpectedValues.UITextforcancelbuttonLabelClass, uITextforcancelbuttonLabel.Class);
        }
        
        /// <summary>
        /// ValidateTextSaveAndNewButtonField - Use 'ValidateTextSaveAndNewButtonFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextSaveAndNewButtonField()
        {
            #region Variable Declarations
            HtmlLabel uITextforsaveandnewbutLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UITextforsaveandnewbutLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Text for 'save and new' button*' label equals 'Text for 'save and new' button*'
            Assert.AreEqual(this.ValidateTextSaveAndNewButtonFieldExpectedValues.UITextforsaveandnewbutLabelInnerText, uITextforsaveandnewbutLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateTextSaveAndNewButtonFieldIsMandatory - Use 'ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextSaveAndNewButtonFieldIsMandatory()
        {
            #region Variable Declarations
            HtmlLabel uITextforsaveandnewbutLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument4.UITextforsaveandnewbutLabel;
            #endregion

            // Verify that the 'Class' property of 'Text for 'save and new' button*' label equals 'mandatory'
            Assert.AreEqual(this.ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues.UITextforsaveandnewbutLabelClass, uITextforsaveandnewbutLabel.Class);
        }
        
        /// <summary>
        /// ValidateTextSaveAndStayButtonField - Use 'ValidateTextSaveAndStayButtonFieldExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextSaveAndStayButtonField()
        {
            #region Variable Declarations
            HtmlLabel uITextforsaveandstaybuLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument1.UITextforsaveandstaybuLabel;
            #endregion

            // Verify that the 'InnerText' property of 'Text for 'save and stay' button*' label equals 'Text for 'save and stay' button*'
            Assert.AreEqual(this.ValidateTextSaveAndStayButtonFieldExpectedValues.UITextforsaveandstaybuLabelInnerText, uITextforsaveandstaybuLabel.InnerText);
        }
        
        /// <summary>
        /// ValidateTextSaveAndStayButtonFieldIsMandatory - Use 'ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextSaveAndStayButtonFieldIsMandatory()
        {
            #region Variable Declarations
            HtmlLabel uITextforsaveandstaybuLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument4.UITextforsaveandstaybuLabel;
            #endregion

            // Verify that the 'Class' property of 'Text for 'save and stay' button' label equals 'mandatory'
            Assert.AreEqual(this.ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues.UITextforsaveandstaybuLabelClass, uITextforsaveandstaybuLabel.Class);
        }
        
        /// <summary>
        /// ValidateTextSaveButtonFieldIsMandatory - Use 'ValidateTextSaveButtonFieldIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateTextSaveButtonFieldIsMandatory()
        {
            #region Variable Declarations
            HtmlLabel uITextforsavebuttonLabel = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument4.UITextforsavebuttonLabel;
            #endregion

            // Verify that the 'Class' property of 'Text for 'save' button' label equals 'mandatory'
            Assert.AreEqual(this.ValidateTextSaveButtonFieldIsMandatoryExpectedValues.UITextforsavebuttonLabelClass, uITextforsavebuttonLabel.Class);
        }
        
        /// <summary>
        /// VerifyAvailableFieldsTitleTextColour - Use 'VerifyAvailableFieldsTitleTextColourExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyAvailableFieldsTitleTextColour()
        {
            #region Variable Declarations
            HtmlSpan uIAvailableFieldsPane = this.UINewGreenLightWindowsWindow.UINewGreenLightDocument.UIAvailableFieldsPane;
            #endregion

            // Verify that the 'ControlDefinition' property of 'Available Fields' pane contains 'COLOR: #ffffff'
            StringAssert.Contains(uIAvailableFieldsPane.ControlDefinition, this.VerifyAvailableFieldsTitleTextColourExpectedValues.UIAvailableFieldsPaneControlDefinition);
        }
        
        /// <summary>
        /// VerifyMandatorySectionNameAsteriskIsDisplayed - Use 'VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyMandatorySectionNameAsteriskIsDisplayed()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UIGreenLightCustomEntiWindow.UIGreenLightCustomEntiDocument14.UIItemPane;
            #endregion

            // Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqSectionHeader controltovalidate="ctl00_contentmain_txtsectionheader" display="Dynamic" validationGroup="vgSectionHeader" initialvalue errormessage="Please enter a Section name." isvalid="false"'
            Assert.AreEqual(this.VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues.UIItemPaneControlDefinition, uIItemPane.ControlDefinition);

            // Verify that the 'InnerText' property of '*' pane equals '*'
            Assert.AreEqual(this.VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues.UIItemPaneInnerText, uIItemPane.InnerText);
        }
        
        /// <summary>
        /// VerifySectionNameDisplaysAsterisk - Use 'VerifySectionNameDisplaysAsteriskExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifySectionNameDisplaysAsterisk()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument10.UIItemPane;
            #endregion

            // Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqSectionHeader controltovalidate="ctl00_contentmain_txtsectionheader" display="Dynamic" validationGroup="vgSectionHeader" initialvalue errormessage="Please enter a Section name." isvalid="false"'
            Assert.AreEqual(this.VerifySectionNameDisplaysAsteriskExpectedValues.UIItemPaneControlDefinition, uIItemPane.ControlDefinition);
        }
        
        /// <summary>
        /// VerifySectionNameIsMandatory - Use 'VerifySectionNameIsMandatoryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifySectionNameIsMandatory()
        {
            #region Variable Declarations
            HtmlDiv uIDivMasterPopupPane = this.UICustomEntityCustomEnWindow.UICustomEntityCustomEnDocument10.UIDivMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a Section name.'
            Assert.AreEqual(this.VerifySectionNameIsMandatoryExpectedValues.UIDivMasterPopupPaneInnerText, uIDivMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// VerifyShortcutTooltip - Use 'VerifyShortcutTooltipExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyShortcutTooltip()
        {
            #region Variable Declarations
            HtmlImage uIShowHotKeyInformatioImage = this.UINewGreenLightWindowsWindow.UIGreenLightEXHIBITADocument.UIShowHotKeyInformatioImage;
            #endregion

            // Verify that the 'Alt' property of 'Show Hot Key Information' image equals 'Show Hot Key Information'
            Assert.AreEqual(this.VerifyShortcutTooltipExpectedValues.UIShowHotKeyInformatioImageAlt, uIShowHotKeyInformatioImage.Alt);

            // Verify that the 'AbsolutePath' property of 'Show Hot Key Information' image equals 'icons/24/plain/information.png'
            Assert.AreEqual(this.VerifyShortcutTooltipExpectedValues.UIShowHotKeyInformatioImageAbsolutePath, uIShowHotKeyInformatioImage.AbsolutePath);
        }
        
        #region Properties
        public virtual AssertNewTabMandatoryMessageExpectedValues AssertNewTabMandatoryMessageExpectedValues
        {
            get
            {
                if ((this.mAssertNewTabMandatoryMessageExpectedValues == null))
                {
                    this.mAssertNewTabMandatoryMessageExpectedValues = new AssertNewTabMandatoryMessageExpectedValues();
                }
                return this.mAssertNewTabMandatoryMessageExpectedValues;
            }
        }
        
        public virtual AssertTabNameAsteriskIsShownExpectedValues AssertTabNameAsteriskIsShownExpectedValues
        {
            get
            {
                if ((this.mAssertTabNameAsteriskIsShownExpectedValues == null))
                {
                    this.mAssertTabNameAsteriskIsShownExpectedValues = new AssertTabNameAsteriskIsShownExpectedValues();
                }
                return this.mAssertTabNameAsteriskIsShownExpectedValues;
            }
        }
        
        public virtual AssertTabOrderExpectedValues AssertTabOrderExpectedValues
        {
            get
            {
                if ((this.mAssertTabOrderExpectedValues == null))
                {
                    this.mAssertTabOrderExpectedValues = new AssertTabOrderExpectedValues();
                }
                return this.mAssertTabOrderExpectedValues;
            }
        }
        
        public virtual PopulateFormattedTextParams PopulateFormattedTextParams
        {
            get
            {
                if ((this.mPopulateFormattedTextParams == null))
                {
                    this.mPopulateFormattedTextParams = new PopulateFormattedTextParams();
                }
                return this.mPopulateFormattedTextParams;
            }
        }
        
        public virtual PressCancelDeleteFormParams PressCancelDeleteFormParams
        {
            get
            {
                if ((this.mPressCancelDeleteFormParams == null))
                {
                    this.mPressCancelDeleteFormParams = new PressCancelDeleteFormParams();
                }
                return this.mPressCancelDeleteFormParams;
            }
        }
        
        public virtual PressOKConfirmFormDeletionParams PressOKConfirmFormDeletionParams
        {
            get
            {
                if ((this.mPressOKConfirmFormDeletionParams == null))
                {
                    this.mPressOKConfirmFormDeletionParams = new PressOKConfirmFormDeletionParams();
                }
                return this.mPressOKConfirmFormDeletionParams;
            }
        }
        
        public virtual ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues
        {
            get
            {
                if ((this.mValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues == null))
                {
                    this.mValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues = new ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues();
                }
                return this.mValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues;
            }
        }
        
        public virtual ValidateCommentOnFormsModalExpectedValues ValidateCommentOnFormsModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnFormsModalExpectedValues == null))
                {
                    this.mValidateCommentOnFormsModalExpectedValues = new ValidateCommentOnFormsModalExpectedValues();
                }
                return this.mValidateCommentOnFormsModalExpectedValues;
            }
        }
        
        public virtual ValidateCopyModalFormNameFieldExpectedValues ValidateCopyModalFormNameFieldExpectedValues
        {
            get
            {
                if ((this.mValidateCopyModalFormNameFieldExpectedValues == null))
                {
                    this.mValidateCopyModalFormNameFieldExpectedValues = new ValidateCopyModalFormNameFieldExpectedValues();
                }
                return this.mValidateCopyModalFormNameFieldExpectedValues;
            }
        }
        
        public virtual ValidateCopyModalHeaderExpectedValues ValidateCopyModalHeaderExpectedValues
        {
            get
            {
                if ((this.mValidateCopyModalHeaderExpectedValues == null))
                {
                    this.mValidateCopyModalHeaderExpectedValues = new ValidateCopyModalHeaderExpectedValues();
                }
                return this.mValidateCopyModalHeaderExpectedValues;
            }
        }
        
        public virtual ValidateDescriptionFieldExpectedValues ValidateDescriptionFieldExpectedValues
        {
            get
            {
                if ((this.mValidateDescriptionFieldExpectedValues == null))
                {
                    this.mValidateDescriptionFieldExpectedValues = new ValidateDescriptionFieldExpectedValues();
                }
                return this.mValidateDescriptionFieldExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateDetailsModalExpectedValues ValidateDuplicateDetailsModalExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateDetailsModalExpectedValues == null))
                {
                    this.mValidateDuplicateDetailsModalExpectedValues = new ValidateDuplicateDetailsModalExpectedValues();
                }
                return this.mValidateDuplicateDetailsModalExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateSectionModalExpectedValues ValidateDuplicateSectionModalExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateSectionModalExpectedValues == null))
                {
                    this.mValidateDuplicateSectionModalExpectedValues = new ValidateDuplicateSectionModalExpectedValues();
                }
                return this.mValidateDuplicateSectionModalExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateTabModalExpectedValues ValidateDuplicateTabModalExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateTabModalExpectedValues == null))
                {
                    this.mValidateDuplicateTabModalExpectedValues = new ValidateDuplicateTabModalExpectedValues();
                }
                return this.mValidateDuplicateTabModalExpectedValues;
            }
        }
        
        public virtual ValidateEmptyTableExpectedValues ValidateEmptyTableExpectedValues
        {
            get
            {
                if ((this.mValidateEmptyTableExpectedValues == null))
                {
                    this.mValidateEmptyTableExpectedValues = new ValidateEmptyTableExpectedValues();
                }
                return this.mValidateEmptyTableExpectedValues;
            }
        }
        
        public virtual ValidateFormButtonsSectionNameExpectedValues ValidateFormButtonsSectionNameExpectedValues
        {
            get
            {
                if ((this.mValidateFormButtonsSectionNameExpectedValues == null))
                {
                    this.mValidateFormButtonsSectionNameExpectedValues = new ValidateFormButtonsSectionNameExpectedValues();
                }
                return this.mValidateFormButtonsSectionNameExpectedValues;
            }
        }
        
        public virtual ValidateFormDeletionMessageExpectedValues ValidateFormDeletionMessageExpectedValues
        {
            get
            {
                if ((this.mValidateFormDeletionMessageExpectedValues == null))
                {
                    this.mValidateFormDeletionMessageExpectedValues = new ValidateFormDeletionMessageExpectedValues();
                }
                return this.mValidateFormDeletionMessageExpectedValues;
            }
        }
        
        public virtual ValidateFormFieldOrderExpectedValues ValidateFormFieldOrderExpectedValues
        {
            get
            {
                if ((this.mValidateFormFieldOrderExpectedValues == null))
                {
                    this.mValidateFormFieldOrderExpectedValues = new ValidateFormFieldOrderExpectedValues();
                }
                return this.mValidateFormFieldOrderExpectedValues;
            }
        }
        
        public virtual ValidateFormNameFieldExpectedValues ValidateFormNameFieldExpectedValues
        {
            get
            {
                if ((this.mValidateFormNameFieldExpectedValues == null))
                {
                    this.mValidateFormNameFieldExpectedValues = new ValidateFormNameFieldExpectedValues();
                }
                return this.mValidateFormNameFieldExpectedValues;
            }
        }
        
        public virtual ValidateFormNameIsMandatoryExpectedValues ValidateFormNameIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateFormNameIsMandatoryExpectedValues == null))
                {
                    this.mValidateFormNameIsMandatoryExpectedValues = new ValidateFormNameIsMandatoryExpectedValues();
                }
                return this.mValidateFormNameIsMandatoryExpectedValues;
            }
        }
        
        public virtual ValidateGeneralDetailsSectionNameExpectedValues ValidateGeneralDetailsSectionNameExpectedValues
        {
            get
            {
                if ((this.mValidateGeneralDetailsSectionNameExpectedValues == null))
                {
                    this.mValidateGeneralDetailsSectionNameExpectedValues = new ValidateGeneralDetailsSectionNameExpectedValues();
                }
                return this.mValidateGeneralDetailsSectionNameExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryFieldsModalExpectedValues ValidateMandatoryFieldsModalExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryFieldsModalExpectedValues == null))
                {
                    this.mValidateMandatoryFieldsModalExpectedValues = new ValidateMandatoryFieldsModalExpectedValues();
                }
                return this.mValidateMandatoryFieldsModalExpectedValues;
            }
        }
        
        public virtual ValidateSaveButtonTextFieldExpectedValues ValidateSaveButtonTextFieldExpectedValues
        {
            get
            {
                if ((this.mValidateSaveButtonTextFieldExpectedValues == null))
                {
                    this.mValidateSaveButtonTextFieldExpectedValues = new ValidateSaveButtonTextFieldExpectedValues();
                }
                return this.mValidateSaveButtonTextFieldExpectedValues;
            }
        }
        
        public virtual ValidateSectionOrderExpectedValues ValidateSectionOrderExpectedValues
        {
            get
            {
                if ((this.mValidateSectionOrderExpectedValues == null))
                {
                    this.mValidateSectionOrderExpectedValues = new ValidateSectionOrderExpectedValues();
                }
                return this.mValidateSectionOrderExpectedValues;
            }
        }
        
        public virtual ValidateShowBreadcrumbsFieldExpectedValues ValidateShowBreadcrumbsFieldExpectedValues
        {
            get
            {
                if ((this.mValidateShowBreadcrumbsFieldExpectedValues == null))
                {
                    this.mValidateShowBreadcrumbsFieldExpectedValues = new ValidateShowBreadcrumbsFieldExpectedValues();
                }
                return this.mValidateShowBreadcrumbsFieldExpectedValues;
            }
        }
        
        public virtual ValidateShowSubMenuFieldExpectedValues ValidateShowSubMenuFieldExpectedValues
        {
            get
            {
                if ((this.mValidateShowSubMenuFieldExpectedValues == null))
                {
                    this.mValidateShowSubMenuFieldExpectedValues = new ValidateShowSubMenuFieldExpectedValues();
                }
                return this.mValidateShowSubMenuFieldExpectedValues;
            }
        }
        
        public virtual ValidateTabOrderExpectedValues ValidateTabOrderExpectedValues
        {
            get
            {
                if ((this.mValidateTabOrderExpectedValues == null))
                {
                    this.mValidateTabOrderExpectedValues = new ValidateTabOrderExpectedValues();
                }
                return this.mValidateTabOrderExpectedValues;
            }
        }
        
        public virtual ValidateTextCancelButtonFieldExpectedValues ValidateTextCancelButtonFieldExpectedValues
        {
            get
            {
                if ((this.mValidateTextCancelButtonFieldExpectedValues == null))
                {
                    this.mValidateTextCancelButtonFieldExpectedValues = new ValidateTextCancelButtonFieldExpectedValues();
                }
                return this.mValidateTextCancelButtonFieldExpectedValues;
            }
        }
        
        public virtual ValidateTextCancelButtonFieldIsMandatoryExpectedValues ValidateTextCancelButtonFieldIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateTextCancelButtonFieldIsMandatoryExpectedValues == null))
                {
                    this.mValidateTextCancelButtonFieldIsMandatoryExpectedValues = new ValidateTextCancelButtonFieldIsMandatoryExpectedValues();
                }
                return this.mValidateTextCancelButtonFieldIsMandatoryExpectedValues;
            }
        }
        
        public virtual ValidateTextSaveAndNewButtonFieldExpectedValues ValidateTextSaveAndNewButtonFieldExpectedValues
        {
            get
            {
                if ((this.mValidateTextSaveAndNewButtonFieldExpectedValues == null))
                {
                    this.mValidateTextSaveAndNewButtonFieldExpectedValues = new ValidateTextSaveAndNewButtonFieldExpectedValues();
                }
                return this.mValidateTextSaveAndNewButtonFieldExpectedValues;
            }
        }
        
        public virtual ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues == null))
                {
                    this.mValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues = new ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues();
                }
                return this.mValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues;
            }
        }
        
        public virtual ValidateTextSaveAndStayButtonFieldExpectedValues ValidateTextSaveAndStayButtonFieldExpectedValues
        {
            get
            {
                if ((this.mValidateTextSaveAndStayButtonFieldExpectedValues == null))
                {
                    this.mValidateTextSaveAndStayButtonFieldExpectedValues = new ValidateTextSaveAndStayButtonFieldExpectedValues();
                }
                return this.mValidateTextSaveAndStayButtonFieldExpectedValues;
            }
        }
        
        public virtual ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues == null))
                {
                    this.mValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues = new ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues();
                }
                return this.mValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues;
            }
        }
        
        public virtual ValidateTextSaveButtonFieldIsMandatoryExpectedValues ValidateTextSaveButtonFieldIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mValidateTextSaveButtonFieldIsMandatoryExpectedValues == null))
                {
                    this.mValidateTextSaveButtonFieldIsMandatoryExpectedValues = new ValidateTextSaveButtonFieldIsMandatoryExpectedValues();
                }
                return this.mValidateTextSaveButtonFieldIsMandatoryExpectedValues;
            }
        }
        
        public virtual VerifyAvailableFieldsTitleTextColourExpectedValues VerifyAvailableFieldsTitleTextColourExpectedValues
        {
            get
            {
                if ((this.mVerifyAvailableFieldsTitleTextColourExpectedValues == null))
                {
                    this.mVerifyAvailableFieldsTitleTextColourExpectedValues = new VerifyAvailableFieldsTitleTextColourExpectedValues();
                }
                return this.mVerifyAvailableFieldsTitleTextColourExpectedValues;
            }
        }
        
        public virtual VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues
        {
            get
            {
                if ((this.mVerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues == null))
                {
                    this.mVerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues = new VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues();
                }
                return this.mVerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues;
            }
        }
        
        public virtual VerifySectionNameDisplaysAsteriskExpectedValues VerifySectionNameDisplaysAsteriskExpectedValues
        {
            get
            {
                if ((this.mVerifySectionNameDisplaysAsteriskExpectedValues == null))
                {
                    this.mVerifySectionNameDisplaysAsteriskExpectedValues = new VerifySectionNameDisplaysAsteriskExpectedValues();
                }
                return this.mVerifySectionNameDisplaysAsteriskExpectedValues;
            }
        }
        
        public virtual VerifySectionNameIsMandatoryExpectedValues VerifySectionNameIsMandatoryExpectedValues
        {
            get
            {
                if ((this.mVerifySectionNameIsMandatoryExpectedValues == null))
                {
                    this.mVerifySectionNameIsMandatoryExpectedValues = new VerifySectionNameIsMandatoryExpectedValues();
                }
                return this.mVerifySectionNameIsMandatoryExpectedValues;
            }
        }
        
        public virtual VerifyShortcutTooltipExpectedValues VerifyShortcutTooltipExpectedValues
        {
            get
            {
                if ((this.mVerifyShortcutTooltipExpectedValues == null))
                {
                    this.mVerifyShortcutTooltipExpectedValues = new VerifyShortcutTooltipExpectedValues();
                }
                return this.mVerifyShortcutTooltipExpectedValues;
            }
        }
        
        public UICustomEntitymyCEWindWindow UICustomEntitymyCEWindWindow
        {
            get
            {
                if ((this.mUICustomEntitymyCEWindWindow == null))
                {
                    this.mUICustomEntitymyCEWindWindow = new UICustomEntitymyCEWindWindow();
                }
                return this.mUICustomEntitymyCEWindWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UICustomEntityCustomEnWindow UICustomEntityCustomEnWindow
        {
            get
            {
                if ((this.mUICustomEntityCustomEnWindow == null))
                {
                    this.mUICustomEntityCustomEnWindow = new UICustomEntityCustomEnWindow();
                }
                return this.mUICustomEntityCustomEnWindow;
            }
        }
        
        public UICustomEntityhelloWinWindow UICustomEntityhelloWinWindow
        {
            get
            {
                if ((this.mUICustomEntityhelloWinWindow == null))
                {
                    this.mUICustomEntityhelloWinWindow = new UICustomEntityhelloWinWindow();
                }
                return this.mUICustomEntityhelloWinWindow;
            }
        }
        
        public UICustomEntityNewentitWindow UICustomEntityNewentitWindow
        {
            get
            {
                if ((this.mUICustomEntityNewentitWindow == null))
                {
                    this.mUICustomEntityNewentitWindow = new UICustomEntityNewentitWindow();
                }
                return this.mUICustomEntityNewentitWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow UIGreenLightCustomEntiWindow
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow == null))
                {
                    this.mUIGreenLightCustomEntiWindow = new UIGreenLightCustomEntiWindow();
                }
                return this.mUIGreenLightCustomEntiWindow;
            }
        }
        
        public UINewGreenLightWindowsWindow UINewGreenLightWindowsWindow
        {
            get
            {
                if ((this.mUINewGreenLightWindowsWindow == null))
                {
                    this.mUINewGreenLightWindowsWindow = new UINewGreenLightWindowsWindow();
                }
                return this.mUINewGreenLightWindowsWindow;
            }
        }
        
        public UIGreenLightCustomEntiWindow1 UIGreenLightCustomEntiWindow1
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow1 == null))
                {
                    this.mUIGreenLightCustomEntiWindow1 = new UIGreenLightCustomEntiWindow1();
                }
                return this.mUIGreenLightCustomEntiWindow1;
            }
        }
        
        public UIGreenLightCustomEntiWindow2 UIGreenLightCustomEntiWindow2
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow2 == null))
                {
                    this.mUIGreenLightCustomEntiWindow2 = new UIGreenLightCustomEntiWindow2();
                }
                return this.mUIGreenLightCustomEntiWindow2;
            }
        }
        
        public UIGreenLightbaserelatiWindow UIGreenLightbaserelatiWindow
        {
            get
            {
                if ((this.mUIGreenLightbaserelatiWindow == null))
                {
                    this.mUIGreenLightbaserelatiWindow = new UIGreenLightbaserelatiWindow();
                }
                return this.mUIGreenLightbaserelatiWindow;
            }
        }
        
        public UIGreenLightUKBATIER2MWindow UIGreenLightUKBATIER2MWindow
        {
            get
            {
                if ((this.mUIGreenLightUKBATIER2MWindow == null))
                {
                    this.mUIGreenLightUKBATIER2MWindow = new UIGreenLightUKBATIER2MWindow();
                }
                return this.mUIGreenLightUKBATIER2MWindow;
            }
        }
        
        public UIGreenLightUKBATIER2MWindow1 UIGreenLightUKBATIER2MWindow1
        {
            get
            {
                if ((this.mUIGreenLightUKBATIER2MWindow1 == null))
                {
                    this.mUIGreenLightUKBATIER2MWindow1 = new UIGreenLightUKBATIER2MWindow1();
                }
                return this.mUIGreenLightUKBATIER2MWindow1;
            }
        }
        
        public UIGreenLightAppointmenWindow UIGreenLightAppointmenWindow
        {
            get
            {
                if ((this.mUIGreenLightAppointmenWindow == null))
                {
                    this.mUIGreenLightAppointmenWindow = new UIGreenLightAppointmenWindow();
                }
                return this.mUIGreenLightAppointmenWindow;
            }
        }
        
        public UIGreenLightAppointmenWindow1 UIGreenLightAppointmenWindow1
        {
            get
            {
                if ((this.mUIGreenLightAppointmenWindow1 == null))
                {
                    this.mUIGreenLightAppointmenWindow1 = new UIGreenLightAppointmenWindow1();
                }
                return this.mUIGreenLightAppointmenWindow1;
            }
        }
        
        public UIGreenLightCustomEntiWindow3 UIGreenLightCustomEntiWindow3
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow3 == null))
                {
                    this.mUIGreenLightCustomEntiWindow3 = new UIGreenLightCustomEntiWindow3();
                }
                return this.mUIGreenLightCustomEntiWindow3;
            }
        }
        
        public UIGreenLightCustomEntiWindow4 UIGreenLightCustomEntiWindow4
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiWindow4 == null))
                {
                    this.mUIGreenLightCustomEntiWindow4 = new UIGreenLightCustomEntiWindow4();
                }
                return this.mUIGreenLightCustomEntiWindow4;
            }
        }
        #endregion
        
        #region Fields
        private AssertNewTabMandatoryMessageExpectedValues mAssertNewTabMandatoryMessageExpectedValues;
        
        private AssertTabNameAsteriskIsShownExpectedValues mAssertTabNameAsteriskIsShownExpectedValues;
        
        private AssertTabOrderExpectedValues mAssertTabOrderExpectedValues;
        
        private PopulateFormattedTextParams mPopulateFormattedTextParams;
        
        private PressCancelDeleteFormParams mPressCancelDeleteFormParams;
        
        private PressOKConfirmFormDeletionParams mPressOKConfirmFormDeletionParams;
        
        private ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues mValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues;
        
        private ValidateCommentOnFormsModalExpectedValues mValidateCommentOnFormsModalExpectedValues;
        
        private ValidateCopyModalFormNameFieldExpectedValues mValidateCopyModalFormNameFieldExpectedValues;
        
        private ValidateCopyModalHeaderExpectedValues mValidateCopyModalHeaderExpectedValues;
        
        private ValidateDescriptionFieldExpectedValues mValidateDescriptionFieldExpectedValues;
        
        private ValidateDuplicateDetailsModalExpectedValues mValidateDuplicateDetailsModalExpectedValues;
        
        private ValidateDuplicateSectionModalExpectedValues mValidateDuplicateSectionModalExpectedValues;
        
        private ValidateDuplicateTabModalExpectedValues mValidateDuplicateTabModalExpectedValues;
        
        private ValidateEmptyTableExpectedValues mValidateEmptyTableExpectedValues;
        
        private ValidateFormButtonsSectionNameExpectedValues mValidateFormButtonsSectionNameExpectedValues;
        
        private ValidateFormDeletionMessageExpectedValues mValidateFormDeletionMessageExpectedValues;
        
        private ValidateFormFieldOrderExpectedValues mValidateFormFieldOrderExpectedValues;
        
        private ValidateFormNameFieldExpectedValues mValidateFormNameFieldExpectedValues;
        
        private ValidateFormNameIsMandatoryExpectedValues mValidateFormNameIsMandatoryExpectedValues;
        
        private ValidateGeneralDetailsSectionNameExpectedValues mValidateGeneralDetailsSectionNameExpectedValues;
        
        private ValidateMandatoryFieldsModalExpectedValues mValidateMandatoryFieldsModalExpectedValues;
        
        private ValidateSaveButtonTextFieldExpectedValues mValidateSaveButtonTextFieldExpectedValues;
        
        private ValidateSectionOrderExpectedValues mValidateSectionOrderExpectedValues;
        
        private ValidateShowBreadcrumbsFieldExpectedValues mValidateShowBreadcrumbsFieldExpectedValues;
        
        private ValidateShowSubMenuFieldExpectedValues mValidateShowSubMenuFieldExpectedValues;
        
        private ValidateTabOrderExpectedValues mValidateTabOrderExpectedValues;
        
        private ValidateTextCancelButtonFieldExpectedValues mValidateTextCancelButtonFieldExpectedValues;
        
        private ValidateTextCancelButtonFieldIsMandatoryExpectedValues mValidateTextCancelButtonFieldIsMandatoryExpectedValues;
        
        private ValidateTextSaveAndNewButtonFieldExpectedValues mValidateTextSaveAndNewButtonFieldExpectedValues;
        
        private ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues mValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues;
        
        private ValidateTextSaveAndStayButtonFieldExpectedValues mValidateTextSaveAndStayButtonFieldExpectedValues;
        
        private ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues mValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues;
        
        private ValidateTextSaveButtonFieldIsMandatoryExpectedValues mValidateTextSaveButtonFieldIsMandatoryExpectedValues;
        
        private VerifyAvailableFieldsTitleTextColourExpectedValues mVerifyAvailableFieldsTitleTextColourExpectedValues;
        
        private VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues mVerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues;
        
        private VerifySectionNameDisplaysAsteriskExpectedValues mVerifySectionNameDisplaysAsteriskExpectedValues;
        
        private VerifySectionNameIsMandatoryExpectedValues mVerifySectionNameIsMandatoryExpectedValues;
        
        private VerifyShortcutTooltipExpectedValues mVerifyShortcutTooltipExpectedValues;
        
        private UICustomEntitymyCEWindWindow mUICustomEntitymyCEWindWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UICustomEntityCustomEnWindow mUICustomEntityCustomEnWindow;
        
        private UICustomEntityhelloWinWindow mUICustomEntityhelloWinWindow;
        
        private UICustomEntityNewentitWindow mUICustomEntityNewentitWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIGreenLightCustomEntiWindow mUIGreenLightCustomEntiWindow;
        
        private UINewGreenLightWindowsWindow mUINewGreenLightWindowsWindow;
        
        private UIGreenLightCustomEntiWindow1 mUIGreenLightCustomEntiWindow1;
        
        private UIGreenLightCustomEntiWindow2 mUIGreenLightCustomEntiWindow2;
        
        private UIGreenLightbaserelatiWindow mUIGreenLightbaserelatiWindow;
        
        private UIGreenLightUKBATIER2MWindow mUIGreenLightUKBATIER2MWindow;
        
        private UIGreenLightUKBATIER2MWindow1 mUIGreenLightUKBATIER2MWindow1;
        
        private UIGreenLightAppointmenWindow mUIGreenLightAppointmenWindow;
        
        private UIGreenLightAppointmenWindow1 mUIGreenLightAppointmenWindow1;
        
        private UIGreenLightCustomEntiWindow3 mUIGreenLightCustomEntiWindow3;
        
        private UIGreenLightCustomEntiWindow4 mUIGreenLightCustomEntiWindow4;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNewTabMandatoryMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertNewTabMandatoryMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a Tab name.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a Tab name.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertTabNameAsteriskIsShown'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertTabNameAsteriskIsShownExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '*' pane equals '*'
        /// </summary>
        public string UIItemPaneInnerText = "*";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqTabHeader controltovalidate="ctl00_contentmain_txttabheader" display="Dynamic" validationGroup="vgTabHeader" initialvalue errormessage="Please enter a Tab name." isvalid="false"'
        /// </summary>
        public string UIItemPaneControlDefinition = "style=\"DISPLAY: inline; COLOR: red\" id=ctl00_contentmain_reqTabHeader controltova" +
            "lidate=\"ctl00_contentmain_txttabheader\" display=\"Dynamic\" validationGroup=\"vgTab" +
            "Header\" initialvalue errormessage=\"Please enter a Tab name.\" isvalid=\"false\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertTabOrder'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertTabOrderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Tab 1Tab 2 New Tab' pane equals 'Tab 1Tab 2 New Tab '
        /// </summary>
        public string UITab1Tab2NewTabPaneInnerText = "Tab 1Tab 2 New Tab ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PopulateFormattedText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class PopulateFormattedTextParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Enter Text' in document
        /// </summary>
        public string UIHttpserselexpensescoDocumentSendKeys = "Enter Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PressCancelDeleteForm'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class PressCancelDeleteFormParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Tab}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Enter}' in 'Cancel' button
        /// </summary>
        public string UICancelButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PressOKConfirmFormDeletion'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class PressOKConfirmFormDeletionParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Enter}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateAstrickIsPresentAfterValidationModalIsDisplayed'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateAstrickIsPresentAfterValidationModalIsDisplayedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '*' pane equals '*'
        /// </summary>
        public string UIItemPaneInnerText = "*";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqTabHeader controltovalidate="ctl00_contentmain_txttabheader" display="Dynamic" validationGroup="vgTabHeader" initialvalue errormessage="Please enter a Tab name." isvalid="false"'
        /// </summary>
        public string UIItemPaneControlDefinition = "style=\"DISPLAY: inline; COLOR: red\" id=ctl00_contentmain_reqTabHeader controltova" +
            "lidate=\"ctl00_contentmain_txttabheader\" display=\"Dynamic\" validationGroup=\"vgTab" +
            "Header\" initialvalue errormessage=\"Please enter a Tab name.\" isvalid=\"false\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnFormsModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateCommentOnFormsModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'The following combination of four differ' pane equals 'The following combination of four different buttons can be placed on the form. Although not mandatory to have all four, it is mandatory to have at least one. '
        /// </summary>
        public string UIThefollowingcombinatPaneInnerText = "The following combination of four different buttons can be placed on the form. Al" +
            "though not mandatory to have all four, it is mandatory to have at least one. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCopyModalFormNameField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateCopyModalFormNameFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Form name*' label equals 'Form name*'
        /// </summary>
        public string UIFormnameLabelInnerText = "Form name*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCopyModalHeader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateCopyModalHeaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Copy Form' pane equals 'Copy Form'
        /// </summary>
        public string UICopyFormPaneInnerText = "Copy Form";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDescriptionField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateDescriptionFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Description' label equals 'Description'
        /// </summary>
        public string UIDescriptionLabelInnerText = "Description";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateDetailsModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateDuplicateDetailsModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///The Form name you have entered already exists.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nThe Form name you have entered already exists.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateSectionModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateDuplicateSectionModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Cannot add a section with this name as one already exists on this tab.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nCannot add a section with this name as one already exi" +
            "sts on this tab.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateTabModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateDuplicateTabModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Cannot add a tab with this name as one already exists on this form.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nCannot add a tab with this name as one already exists " +
            "on this form.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateEmptyTable'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateEmptyTableExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'There are currently no forms defined for' cell equals 'There are currently no forms defined for this GreenLight.'
        /// </summary>
        public string UITherearecurrentlynofCellInnerText = "There are currently no forms defined for this GreenLight.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFormButtonsSectionName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateFormButtonsSectionNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Form Buttons' pane equals 'Form Buttons'
        /// </summary>
        public string UIFormButtonsPaneInnerText = "Form Buttons";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFormDeletionMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateFormDeletionMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Are you sure you wish to delete the selected form?' label equals 'Are you sure you wish to delete the selected form?'
        /// </summary>
        public string UIAreyousureyouwishtodTextDisplayText = "Are you sure you wish to delete the selected form?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFormFieldOrder'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateFormFieldOrderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Standard Single Text *Multiline Text' pane equals 'Standard Single Text *Multiline Text '
        /// </summary>
        public string UIStandardSingleTextMuPaneInnerText = "Standard Single Text *Multiline Text ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFormNameField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateFormNameFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Form name*' label equals 'Form name*'
        /// </summary>
        public string UIFormnameLabelInnerText = "Form name*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateFormNameIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateFormNameIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Form name*' label equals 'mandatory'
        /// </summary>
        public string UIFormnameLabelClass = "mandatory";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateGeneralDetailsSectionName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateGeneralDetailsSectionNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'General Details' pane equals 'General Details'
        /// </summary>
        public string UIGeneralDetailsPaneInnerText = "General Details";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryFieldsModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateMandatoryFieldsModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a Form name.
        ///Please enter text for at least one of the Form buttons.'
        /// </summary>
        public string UIDivMasterPopupPane1DisplayText = "Message from Expenses\r\n\r\n\r\nPlease enter a Form name.\r\nPlease enter text for at le" +
            "ast one of the Form buttons.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSaveButtonTextField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateSaveButtonTextFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Text for 'save' button*' label equals 'Text for 'save' button*'
        /// </summary>
        public string UITextforsavebuttonLabelInnerText = "Text for \'save\' button*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSectionOrder'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateSectionOrderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'formTabs' pane equals 'Section 1Section 1 EDITED'
        /// </summary>
        public string UIFormTabsPaneInnerText = "Section 1Section 1 EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateShowBreadcrumbsField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateShowBreadcrumbsFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Show breadcrumbs' label equals 'Show breadcrumbs'
        /// </summary>
        public string UIShowbreadcrumbsLabelInnerText = "Show breadcrumbs";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateShowSubMenuField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateShowSubMenuFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Show sub-menu' label equals 'Show sub-menu'
        /// </summary>
        public string UIShowsubmenuLabelInnerText = "Show sub-menu";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTabOrder'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTabOrderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Tab 1Tab 2 New Tab' pane equals 'Tab 1Tab 2 New Tab '
        /// </summary>
        public string UITab1Tab2NewTabPaneInnerText = "Tab 1Tab 2 New Tab ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextCancelButtonField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextCancelButtonFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Text for 'cancel' button*' label equals 'Text for 'cancel' button*'
        /// </summary>
        public string UITextforcancelbuttonLabelInnerText = "Text for \'cancel\' button*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextCancelButtonFieldIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextCancelButtonFieldIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Text for 'cancel' button*' label equals 'mandatory'
        /// </summary>
        public string UITextforcancelbuttonLabelClass = "mandatory";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextSaveAndNewButtonField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextSaveAndNewButtonFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Text for 'save and new' button*' label equals 'Text for 'save and new' button*'
        /// </summary>
        public string UITextforsaveandnewbutLabelInnerText = "Text for \'save and new\' button*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextSaveAndNewButtonFieldIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextSaveAndNewButtonFieldIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Text for 'save and new' button*' label equals 'mandatory'
        /// </summary>
        public string UITextforsaveandnewbutLabelClass = "mandatory";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextSaveAndStayButtonField'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextSaveAndStayButtonFieldExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Text for 'save and stay' button*' label equals 'Text for 'save and stay' button*'
        /// </summary>
        public string UITextforsaveandstaybuLabelInnerText = "Text for \'save and stay\' button*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextSaveAndStayButtonFieldIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextSaveAndStayButtonFieldIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Text for 'save and stay' button' label equals 'mandatory'
        /// </summary>
        public string UITextforsaveandstaybuLabelClass = "mandatory";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateTextSaveButtonFieldIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidateTextSaveButtonFieldIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Text for 'save' button' label equals 'mandatory'
        /// </summary>
        public string UITextforsavebuttonLabelClass = "mandatory";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyAvailableFieldsTitleTextColour'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyAvailableFieldsTitleTextColourExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'Available Fields' pane contains 'COLOR: #ffffff'
        /// </summary>
        public string UIAvailableFieldsPaneControlDefinition = "COLOR: #ffffff";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyMandatorySectionNameAsteriskIsDisplayed'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyMandatorySectionNameAsteriskIsDisplayedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqSectionHeader controltovalidate="ctl00_contentmain_txtsectionheader" display="Dynamic" validationGroup="vgSectionHeader" initialvalue errormessage="Please enter a Section name." isvalid="false"'
        /// </summary>
        public string UIItemPaneControlDefinition = "style=\"DISPLAY: inline; COLOR: red\" id=ctl00_contentmain_reqSectionHeader control" +
            "tovalidate=\"ctl00_contentmain_txtsectionheader\" display=\"Dynamic\" validationGrou" +
            "p=\"vgSectionHeader\" initialvalue errormessage=\"Please enter a Section name.\" isv" +
            "alid=\"false\"";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '*' pane equals '*'
        /// </summary>
        public string UIItemPaneInnerText = "*";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifySectionNameDisplaysAsterisk'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifySectionNameDisplaysAsteriskExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of '*' pane equals 'style="DISPLAY: inline; COLOR: red" id=ctl00_contentmain_reqSectionHeader controltovalidate="ctl00_contentmain_txtsectionheader" display="Dynamic" validationGroup="vgSectionHeader" initialvalue errormessage="Please enter a Section name." isvalid="false"'
        /// </summary>
        public string UIItemPaneControlDefinition = "style=\"DISPLAY: inline; COLOR: red\" id=ctl00_contentmain_reqSectionHeader control" +
            "tovalidate=\"ctl00_contentmain_txtsectionheader\" display=\"Dynamic\" validationGrou" +
            "p=\"vgSectionHeader\" initialvalue errormessage=\"Please enter a Section name.\" isv" +
            "alid=\"false\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifySectionNameIsMandatory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifySectionNameIsMandatoryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a Section name.'
        /// </summary>
        public string UIDivMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a Section name.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyShortcutTooltip'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyShortcutTooltipExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Alt' property of 'Show Hot Key Information' image equals 'Show Hot Key Information'
        /// </summary>
        public string UIShowHotKeyInformatioImageAlt = "Show Hot Key Information";
        
        /// <summary>
        /// Verify that the 'AbsolutePath' property of 'Show Hot Key Information' image equals 'icons/24/plain/information.png'
        /// </summary>
        public string UIShowHotKeyInformatioImageAbsolutePath = "icons/24/plain/information.png";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntitymyCEWindWindow : BrowserWindow
    {
        
        public UICustomEntitymyCEWindWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntitymyCEDocument UICustomEntitymyCEDocument
        {
            get
            {
                if ((this.mUICustomEntitymyCEDocument == null))
                {
                    this.mUICustomEntitymyCEDocument = new UICustomEntitymyCEDocument(this);
                }
                return this.mUICustomEntitymyCEDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntitymyCEDocument mUICustomEntitymyCEDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntitymyCEDocument : HtmlDocument
    {
        
        public UICustomEntitymyCEDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_body";
                    this.mUICtl00_contentmain_taPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details\r\nForm name*  * \r\nDescrip";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_body";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_body cl";
                    this.mUICtl00_contentmain_taPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "124";
                    #endregion
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public HtmlHyperlink UIFormsHyperlink
        {
            get
            {
                if ((this.mUIFormsHyperlink == null))
                {
                    this.mUIFormsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkForms";
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Forms";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'Forms\');";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'Forms\');";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnk tabIndex=0 href=\"javascript:chang";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIFormsHyperlink;
            }
        }
        
        public UITbl_gridFormsTable UITbl_gridFormsTable
        {
            get
            {
                if ((this.mUITbl_gridFormsTable == null))
                {
                    this.mUITbl_gridFormsTable = new UITbl_gridFormsTable(this);
                }
                return this.mUITbl_gridFormsTable;
            }
        }
        
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThe Form name";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "202";
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "171";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlSpan FormNameAsterisk
        {
            get
            {
                if ((this.mFormNameAsterisk == null))
                {
                    this.mFormNameAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mFormNameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_reqFormName";
                    this.mFormNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mFormNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mFormNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mFormNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mFormNameAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "318";
                    #endregion
                }
                return this.mFormNameAsterisk;
            }
        }
        
        public HtmlSpan SaveButtonAsterisk
        {
            get
            {
                if ((this.mSaveButtonAsterisk == null))
                {
                    this.mSaveButtonAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mSaveButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_cvTextSave";
                    this.mSaveButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mSaveButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mSaveButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mSaveButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mSaveButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "337";
                    #endregion
                }
                return this.mSaveButtonAsterisk;
            }
        }
        
        public HtmlSpan SaveAndNewButtonAsterisk
        {
            get
            {
                if ((this.mSaveAndNewButtonAsterisk == null))
                {
                    this.mSaveAndNewButtonAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mSaveAndNewButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_cvTextSaveAndNew";
                    this.mSaveAndNewButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mSaveAndNewButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mSaveAndNewButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mSaveAndNewButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mSaveAndNewButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mSaveAndNewButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "342";
                    #endregion
                }
                return this.mSaveAndNewButtonAsterisk;
            }
        }
        
        public HtmlSpan SaveAndStayButtonAsterisk
        {
            get
            {
                if ((this.mSaveAndStayButtonAsterisk == null))
                {
                    this.mSaveAndStayButtonAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mSaveAndStayButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_cvTextSaveAndStay";
                    this.mSaveAndStayButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mSaveAndStayButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mSaveAndStayButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mSaveAndStayButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mSaveAndStayButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mSaveAndStayButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "347";
                    #endregion
                }
                return this.mSaveAndStayButtonAsterisk;
            }
        }
        
        public HtmlSpan CancelButtonAsterisk
        {
            get
            {
                if ((this.mCancelButtonAsterisk == null))
                {
                    this.mCancelButtonAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mCancelButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_cvTextCancel";
                    this.mCancelButtonAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mCancelButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mCancelButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mCancelButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mCancelButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mCancelButtonAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "352";
                    #endregion
                }
                return this.mCancelButtonAsterisk;
            }
        }
        
        public HtmlDiv UIDivMasterPopupPane1
        {
            get
            {
                if ((this.mUIDivMasterPopupPane1 == null))
                {
                    this.mUIDivMasterPopupPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "202";
                    #endregion
                }
                return this.mUIDivMasterPopupPane1;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveForm";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveForm";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveForm class=b";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "75";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelForm";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelForm";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelForm class";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "76";
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_taPane;
        
        private HtmlHyperlink mUIFormsHyperlink;
        
        private UITbl_gridFormsTable mUITbl_gridFormsTable;
        
        private HtmlDiv mUIDivMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlSpan mFormNameAsterisk;
        
        private HtmlSpan mSaveButtonAsterisk;
        
        private HtmlSpan mSaveAndNewButtonAsterisk;
        
        private HtmlSpan mSaveAndStayButtonAsterisk;
        
        private HtmlSpan mCancelButtonAsterisk;
        
        private HtmlDiv mUIDivMasterPopupPane1;
        
        private HtmlInputButton mUISaveButton;
        
        private HtmlInputButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_gridFormsTable : HtmlTable
    {
        
        public UITbl_gridFormsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridForms";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridForms class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFormNameHyperlink
        {
            get
            {
                if ((this.mUIFormNameHyperlink == null))
                {
                    this.mUIFormNameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFormNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFormNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFormNameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFormNameHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Form Name", PropertyExpressionOperator.Contains));
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridForms\',\'form_name\',0);";
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridForms\',\'form_name\',0);";
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIFormNameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIFormNameHyperlink;
            }
        }
        
        public HtmlHyperlink UIDescriptionHyperlink
        {
            get
            {
                if ((this.mUIDescriptionHyperlink == null))
                {
                    this.mUIDescriptionHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDescriptionHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDescriptionHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Description", PropertyExpressionOperator.Contains));
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'gridForms\',\'description\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'gridForms\',\'description\',0);";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'grid";
                    this.mUIDescriptionHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIDescriptionHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFormNameHyperlink;
        
        private HtmlHyperlink mUIDescriptionHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIAreyousureyouwishtodWindow UIAreyousureyouwishtodWindow
        {
            get
            {
                if ((this.mUIAreyousureyouwishtodWindow == null))
                {
                    this.mUIAreyousureyouwishtodWindow = new UIAreyousureyouwishtodWindow(this);
                }
                return this.mUIAreyousureyouwishtodWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        
        private UICancelWindow mUICancelWindow;
        
        private UIAreyousureyouwishtodWindow mUIAreyousureyouwishtodWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIAreyousureyouwishtodWindow : WinWindow
    {
        
        public UIAreyousureyouwishtodWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UIAreyousureyouwishtodText
        {
            get
            {
                if ((this.mUIAreyousureyouwishtodText == null))
                {
                    this.mUIAreyousureyouwishtodText = new WinText(this);
                    #region Search Criteria
                    this.mUIAreyousureyouwishtodText.SearchProperties[WinText.PropertyNames.Name] = "Are you sure you wish to delete the selected form?";
                    this.mUIAreyousureyouwishtodText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIAreyousureyouwishtodText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAreyousureyouwishtodText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnWindow : BrowserWindow
    {
        
        public UICustomEntityCustomEnWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntityCustomEnDocument UICustomEntityCustomEnDocument
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument == null))
                {
                    this.mUICustomEntityCustomEnDocument = new UICustomEntityCustomEnDocument(this);
                }
                return this.mUICustomEntityCustomEnDocument;
            }
        }
        
        public UICustomEntityCustomEnDocument1 UICustomEntityCustomEnDocument1
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument1 == null))
                {
                    this.mUICustomEntityCustomEnDocument1 = new UICustomEntityCustomEnDocument1(this);
                }
                return this.mUICustomEntityCustomEnDocument1;
            }
        }
        
        public UICustomEntityCustomEnDocument2 UICustomEntityCustomEnDocument2
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument2 == null))
                {
                    this.mUICustomEntityCustomEnDocument2 = new UICustomEntityCustomEnDocument2(this);
                }
                return this.mUICustomEntityCustomEnDocument2;
            }
        }
        
        public UICustomEntityCustomEnDocument3 UICustomEntityCustomEnDocument3
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument3 == null))
                {
                    this.mUICustomEntityCustomEnDocument3 = new UICustomEntityCustomEnDocument3(this);
                }
                return this.mUICustomEntityCustomEnDocument3;
            }
        }
        
        public UICustomEntityCustomEnDocument4 UICustomEntityCustomEnDocument4
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument4 == null))
                {
                    this.mUICustomEntityCustomEnDocument4 = new UICustomEntityCustomEnDocument4(this);
                }
                return this.mUICustomEntityCustomEnDocument4;
            }
        }
        
        public UICustomEntityCustomEnDocument5 UICustomEntityCustomEnDocument5
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument5 == null))
                {
                    this.mUICustomEntityCustomEnDocument5 = new UICustomEntityCustomEnDocument5(this);
                }
                return this.mUICustomEntityCustomEnDocument5;
            }
        }
        
        public UICustomEntityCustomEnDocument6 UICustomEntityCustomEnDocument6
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument6 == null))
                {
                    this.mUICustomEntityCustomEnDocument6 = new UICustomEntityCustomEnDocument6(this);
                }
                return this.mUICustomEntityCustomEnDocument6;
            }
        }
        
        public UICustomEntityCustomEnDocument7 UICustomEntityCustomEnDocument7
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument7 == null))
                {
                    this.mUICustomEntityCustomEnDocument7 = new UICustomEntityCustomEnDocument7(this);
                }
                return this.mUICustomEntityCustomEnDocument7;
            }
        }
        
        public UICustomEntityCustomEnDocument8 UICustomEntityCustomEnDocument8
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument8 == null))
                {
                    this.mUICustomEntityCustomEnDocument8 = new UICustomEntityCustomEnDocument8(this);
                }
                return this.mUICustomEntityCustomEnDocument8;
            }
        }
        
        public UICustomEntityCustomEnDocument9 UICustomEntityCustomEnDocument9
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument9 == null))
                {
                    this.mUICustomEntityCustomEnDocument9 = new UICustomEntityCustomEnDocument9(this);
                }
                return this.mUICustomEntityCustomEnDocument9;
            }
        }
        
        public UICustomEntityCustomEnDocument10 UICustomEntityCustomEnDocument10
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument10 == null))
                {
                    this.mUICustomEntityCustomEnDocument10 = new UICustomEntityCustomEnDocument10(this);
                }
                return this.mUICustomEntityCustomEnDocument10;
            }
        }
        
        public UICustomEntityCustomEnDocument11 UICustomEntityCustomEnDocument11
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument11 == null))
                {
                    this.mUICustomEntityCustomEnDocument11 = new UICustomEntityCustomEnDocument11(this);
                }
                return this.mUICustomEntityCustomEnDocument11;
            }
        }
        
        public UICustomEntityCustomEnDocument12 UICustomEntityCustomEnDocument12
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument12 == null))
                {
                    this.mUICustomEntityCustomEnDocument12 = new UICustomEntityCustomEnDocument12(this);
                }
                return this.mUICustomEntityCustomEnDocument12;
            }
        }
        
        public UICustomEntityCustomEnDocument13 UICustomEntityCustomEnDocument13
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument13 == null))
                {
                    this.mUICustomEntityCustomEnDocument13 = new UICustomEntityCustomEnDocument13(this);
                }
                return this.mUICustomEntityCustomEnDocument13;
            }
        }
        
        public UICustomEntityCustomEnDocument14 UICustomEntityCustomEnDocument14
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument14 == null))
                {
                    this.mUICustomEntityCustomEnDocument14 = new UICustomEntityCustomEnDocument14(this);
                }
                return this.mUICustomEntityCustomEnDocument14;
            }
        }
        
        public UICustomEntityCustomEnDocument15 UICustomEntityCustomEnDocument15
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument15 == null))
                {
                    this.mUICustomEntityCustomEnDocument15 = new UICustomEntityCustomEnDocument15(this);
                }
                return this.mUICustomEntityCustomEnDocument15;
            }
        }
        
        public UICustomEntityCustomEnDocument16 UICustomEntityCustomEnDocument16
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument16 == null))
                {
                    this.mUICustomEntityCustomEnDocument16 = new UICustomEntityCustomEnDocument16(this);
                }
                return this.mUICustomEntityCustomEnDocument16;
            }
        }
        
        public UICustomEntityCustomEnDocument17 UICustomEntityCustomEnDocument17
        {
            get
            {
                if ((this.mUICustomEntityCustomEnDocument17 == null))
                {
                    this.mUICustomEntityCustomEnDocument17 = new UICustomEntityCustomEnDocument17(this);
                }
                return this.mUICustomEntityCustomEnDocument17;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntityCustomEnDocument mUICustomEntityCustomEnDocument;
        
        private UICustomEntityCustomEnDocument1 mUICustomEntityCustomEnDocument1;
        
        private UICustomEntityCustomEnDocument2 mUICustomEntityCustomEnDocument2;
        
        private UICustomEntityCustomEnDocument3 mUICustomEntityCustomEnDocument3;
        
        private UICustomEntityCustomEnDocument4 mUICustomEntityCustomEnDocument4;
        
        private UICustomEntityCustomEnDocument5 mUICustomEntityCustomEnDocument5;
        
        private UICustomEntityCustomEnDocument6 mUICustomEntityCustomEnDocument6;
        
        private UICustomEntityCustomEnDocument7 mUICustomEntityCustomEnDocument7;
        
        private UICustomEntityCustomEnDocument8 mUICustomEntityCustomEnDocument8;
        
        private UICustomEntityCustomEnDocument9 mUICustomEntityCustomEnDocument9;
        
        private UICustomEntityCustomEnDocument10 mUICustomEntityCustomEnDocument10;
        
        private UICustomEntityCustomEnDocument11 mUICustomEntityCustomEnDocument11;
        
        private UICustomEntityCustomEnDocument12 mUICustomEntityCustomEnDocument12;
        
        private UICustomEntityCustomEnDocument13 mUICustomEntityCustomEnDocument13;
        
        private UICustomEntityCustomEnDocument14 mUICustomEntityCustomEnDocument14;
        
        private UICustomEntityCustomEnDocument15 mUICustomEntityCustomEnDocument15;
        
        private UICustomEntityCustomEnDocument16 mUICustomEntityCustomEnDocument16;
        
        private UICustomEntityCustomEnDocument17 mUICustomEntityCustomEnDocument17;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISavePane
        {
            get
            {
                if ((this.mUISavePane == null))
                {
                    this.mUISavePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnSaveForm";
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "save";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveForm class=b";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "278";
                    #endregion
                }
                return this.mUISavePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISavePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument1 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlLabel UIFormnameLabel
        {
            get
            {
                if ((this.mUIFormnameLabel == null))
                {
                    this.mUIFormnameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblformname";
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtformname";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Form name*";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "41";
                    #endregion
                }
                return this.mUIFormnameLabel;
            }
        }
        
        public HtmlLabel UIDescriptionLabel
        {
            get
            {
                if ((this.mUIDescriptionLabel == null))
                {
                    this.mUIDescriptionLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblformdescription";
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDescriptionLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtformdescription";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Description";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIDescriptionLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "42";
                    #endregion
                }
                return this.mUIDescriptionLabel;
            }
        }
        
        public HtmlLabel UIShowsubmenuLabel
        {
            get
            {
                if ((this.mUIShowsubmenuLabel == null))
                {
                    this.mUIShowsubmenuLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIShowsubmenuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblshowsubmenu";
                    this.mUIShowsubmenuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIShowsubmenuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_chkshowsubmenu";
                    this.mUIShowsubmenuLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Show sub-menu";
                    this.mUIShowsubmenuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIShowsubmenuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIShowsubmenuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "43";
                    #endregion
                }
                return this.mUIShowsubmenuLabel;
            }
        }
        
        public HtmlLabel UIShowbreadcrumbsLabel
        {
            get
            {
                if ((this.mUIShowbreadcrumbsLabel == null))
                {
                    this.mUIShowbreadcrumbsLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIShowbreadcrumbsLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblshowbreadcrumbs";
                    this.mUIShowbreadcrumbsLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIShowbreadcrumbsLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_chkshowbreadcrumbs";
                    this.mUIShowbreadcrumbsLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Show breadcrumbs";
                    this.mUIShowbreadcrumbsLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIShowbreadcrumbsLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIShowbreadcrumbsLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "44";
                    #endregion
                }
                return this.mUIShowbreadcrumbsLabel;
            }
        }
        
        public HtmlLabel UITextforsavebuttonLabel
        {
            get
            {
                if ((this.mUITextforsavebuttonLabel == null))
                {
                    this.mUITextforsavebuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsavebuttontext";
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsavebuttontext";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save\' button*";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "45";
                    #endregion
                }
                return this.mUITextforsavebuttonLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandnewbutLabel
        {
            get
            {
                if ((this.mUITextforsaveandnewbutLabel == null))
                {
                    this.mUITextforsaveandnewbutLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and new\' button*";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "46";
                    #endregion
                }
                return this.mUITextforsaveandnewbutLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandstaybuLabel
        {
            get
            {
                if ((this.mUITextforsaveandstaybuLabel == null))
                {
                    this.mUITextforsaveandstaybuLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and stay\' button*";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "47";
                    #endregion
                }
                return this.mUITextforsaveandstaybuLabel;
            }
        }
        
        public HtmlLabel UITextforcancelbuttonLabel
        {
            get
            {
                if ((this.mUITextforcancelbuttonLabel == null))
                {
                    this.mUITextforcancelbuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'cancel\' button*";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory=";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "48";
                    #endregion
                }
                return this.mUITextforcancelbuttonLabel;
            }
        }
        
        public HtmlSpan UISavePane
        {
            get
            {
                if ((this.mUISavePane == null))
                {
                    this.mUISavePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnSaveForm";
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "save";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveForm class=b";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "278";
                    #endregion
                }
                return this.mUISavePane;
            }
        }
        
        public HtmlSpan UICancelPane
        {
            get
            {
                if ((this.mUICancelPane == null))
                {
                    this.mUICancelPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnCancelForm";
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "cancel";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelForm class";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "280";
                    #endregion
                }
                return this.mUICancelPane;
            }
        }
        
        public UICtl00_contentmain_taPane UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public HtmlLabel UITextforcancelbuttonLabel1
        {
            get
            {
                if ((this.mUITextforcancelbuttonLabel1 == null))
                {
                    this.mUITextforcancelbuttonLabel1 = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforcancelbuttonLabel1.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblcancelbuttontext";
                    this.mUITextforcancelbuttonLabel1.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforcancelbuttonLabel1.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtcancelbuttontext";
                    this.mUITextforcancelbuttonLabel1.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'cancel\' button*";
                    this.mUITextforcancelbuttonLabel1.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforcancelbuttonLabel1.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforcancelbuttonLabel1.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "48";
                    #endregion
                }
                return this.mUITextforcancelbuttonLabel1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUIFormnameLabel;
        
        private HtmlLabel mUIDescriptionLabel;
        
        private HtmlLabel mUIShowsubmenuLabel;
        
        private HtmlLabel mUIShowbreadcrumbsLabel;
        
        private HtmlLabel mUITextforsavebuttonLabel;
        
        private HtmlLabel mUITextforsaveandnewbutLabel;
        
        private HtmlLabel mUITextforsaveandstaybuLabel;
        
        private HtmlLabel mUITextforcancelbuttonLabel;
        
        private HtmlSpan mUISavePane;
        
        private HtmlSpan mUICancelPane;
        
        private UICtl00_contentmain_taPane mUICtl00_contentmain_taPane;
        
        private HtmlLabel mUITextforcancelbuttonLabel1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_taPane : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details\r\nForm name*  * \r\nDescrip";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible\" id=ctl00_con";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "124";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIThefollowingcombinatPane
        {
            get
            {
                if ((this.mUIThefollowingcombinatPane == null))
                {
                    this.mUIThefollowingcombinatPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIThefollowingcombinatPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIThefollowingcombinatPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIThefollowingcombinatPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The following combination of four differ";
                    this.mUIThefollowingcombinatPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIThefollowingcombinatPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "onecolumnpanel";
                    this.mUIThefollowingcombinatPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=onecolumnpanel";
                    this.mUIThefollowingcombinatPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mUIThefollowingcombinatPane;
            }
        }
        
        public HtmlDiv UIGeneralDetailsPane
        {
            get
            {
                if ((this.mUIGeneralDetailsPane == null))
                {
                    this.mUIGeneralDetailsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIGeneralDetailsPane;
            }
        }
        
        public HtmlDiv UIFormButtonsPane
        {
            get
            {
                if ((this.mUIFormButtonsPane == null))
                {
                    this.mUIFormButtonsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFormButtonsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIFormButtonsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormButtonsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Form Buttons";
                    this.mUIFormButtonsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormButtonsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIFormButtonsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIFormButtonsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mUIFormButtonsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIThefollowingcombinatPane;
        
        private HtmlDiv mUIGeneralDetailsPane;
        
        private HtmlDiv mUIFormButtonsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument2 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlLabel UIFormnameLabel
        {
            get
            {
                if ((this.mUIFormnameLabel == null))
                {
                    this.mUIFormnameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblformname";
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtformname";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Form name*";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "41";
                    #endregion
                }
                return this.mUIFormnameLabel;
            }
        }
        
        public HtmlLabel UITextforsavebuttonLabel
        {
            get
            {
                if ((this.mUITextforsavebuttonLabel == null))
                {
                    this.mUITextforsavebuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsavebuttontext";
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsavebuttontext";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save\' button*";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "45";
                    #endregion
                }
                return this.mUITextforsavebuttonLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandnewbutLabel
        {
            get
            {
                if ((this.mUITextforsaveandnewbutLabel == null))
                {
                    this.mUITextforsaveandnewbutLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and new\' button*";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "46";
                    #endregion
                }
                return this.mUITextforsaveandnewbutLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandstaybuLabel
        {
            get
            {
                if ((this.mUITextforsaveandstaybuLabel == null))
                {
                    this.mUITextforsaveandstaybuLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and stay\' button*";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "47";
                    #endregion
                }
                return this.mUITextforsaveandstaybuLabel;
            }
        }
        
        public HtmlLabel UITextforcancelbuttonLabel
        {
            get
            {
                if ((this.mUITextforcancelbuttonLabel == null))
                {
                    this.mUITextforcancelbuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'cancel\' button*";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory=";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "48";
                    #endregion
                }
                return this.mUITextforcancelbuttonLabel;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUIFormnameLabel;
        
        private HtmlLabel mUITextforsavebuttonLabel;
        
        private HtmlLabel mUITextforsaveandnewbutLabel;
        
        private HtmlLabel mUITextforsaveandstaybuLabel;
        
        private HtmlLabel mUITextforcancelbuttonLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument3 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlLabel UIFormnameLabel
        {
            get
            {
                if ((this.mUIFormnameLabel == null))
                {
                    this.mUIFormnameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblformname";
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtformname";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Form name*";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "41";
                    #endregion
                }
                return this.mUIFormnameLabel;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUIFormnameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument4 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlLabel UITextforsavebuttonLabel
        {
            get
            {
                if ((this.mUITextforsavebuttonLabel == null))
                {
                    this.mUITextforsavebuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsavebuttontext";
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsavebuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsavebuttontext";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save\' button";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsavebuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "45";
                    #endregion
                }
                return this.mUITextforsavebuttonLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandnewbutLabel
        {
            get
            {
                if ((this.mUITextforsaveandnewbutLabel == null))
                {
                    this.mUITextforsaveandnewbutLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandnewbutLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandnewbuttontext";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and new\' button*";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandnewbutLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "46";
                    #endregion
                }
                return this.mUITextforsaveandnewbutLabel;
            }
        }
        
        public HtmlLabel UITextforsaveandstaybuLabel
        {
            get
            {
                if ((this.mUITextforsaveandstaybuLabel == null))
                {
                    this.mUITextforsaveandstaybuLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforsaveandstaybuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtsaveandstaybuttontext";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'save and stay\' button";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforsaveandstaybuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "47";
                    #endregion
                }
                return this.mUITextforsaveandstaybuLabel;
            }
        }
        
        public HtmlLabel UITextforcancelbuttonLabel
        {
            get
            {
                if ((this.mUITextforcancelbuttonLabel == null))
                {
                    this.mUITextforcancelbuttonLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabGenDet_lblcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITextforcancelbuttonLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_tabConForms_tabGenDet_txtcancelbuttontext";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Text for \'cancel\' button*";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabGenD";
                    this.mUITextforcancelbuttonLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "48";
                    #endregion
                }
                return this.mUITextforcancelbuttonLabel;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUITextforsavebuttonLabel;
        
        private HtmlLabel mUITextforsaveandnewbutLabel;
        
        private HtmlLabel mUITextforsaveandstaybuLabel;
        
        private HtmlLabel mUITextforcancelbuttonLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument5 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UINewTabPane UINewTabPane
        {
            get
            {
                if ((this.mUINewTabPane == null))
                {
                    this.mUINewTabPane = new UINewTabPane(this);
                }
                return this.mUINewTabPane;
            }
        }
        
        public HtmlSpan UISavePane
        {
            get
            {
                if ((this.mUISavePane == null))
                {
                    this.mUISavePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnSaveTab";
                    this.mUISavePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "save";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveTab class=bu";
                    this.mUISavePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "350";
                    #endregion
                }
                return this.mUISavePane;
            }
        }
        
        public HtmlSpan UICancelPane
        {
            get
            {
                if ((this.mUICancelPane == null))
                {
                    this.mUICancelPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnCancelTab";
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "cancel";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelTab class=";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "352";
                    #endregion
                }
                return this.mUICancelPane;
            }
        }
        #endregion
        
        #region Fields
        private UINewTabPane mUINewTabPane;
        
        private HtmlSpan mUISavePane;
        
        private HtmlSpan mUICancelPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UINewTabPane : HtmlSpan
    {
        
        public UINewTabPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "tab_middle_img_add";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " New Tab ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_tabheader_middle";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=tab_middle_img_add class=sm_tabheader";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "276";
            #endregion
        }
        
        #region Properties
        public HtmlImage UINewtabImage
        {
            get
            {
                if ((this.mUINewtabImage == null))
                {
                    this.mUINewtabImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUINewtabImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUINewtabImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUINewtabImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "New tab";
                    this.mUINewtabImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/GreenLight/expenses//shared/images/icons/16/Plain/add2.png";
                    this.mUINewtabImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://localhost/GreenLight/expenses//shared/images/icons/16/Plain/add2.png";
                    this.mUINewtabImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_form_editor_tab_btn";
                    this.mUINewtabImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_form_editor_tab_btn title=\"New ";
                    this.mUINewtabImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUINewtabImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUINewtabImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument6 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIFormDesignPane
        {
            get
            {
                if ((this.mUIFormDesignPane == null))
                {
                    this.mUIFormDesignPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConForms_tabFormDes";
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Form Design ";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConForms_t";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "233";
                    #endregion
                }
                return this.mUIFormDesignPane;
            }
        }
        
        public HtmlSpan UINewTabPane
        {
            get
            {
                if ((this.mUINewTabPane == null))
                {
                    this.mUINewTabPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINewTabPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "tab_middle_img_add";
                    this.mUINewTabPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " New Tab ";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_tabheader_middle";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=tab_middle_img_add class=sm_tabheader";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "276";
                    #endregion
                }
                return this.mUINewTabPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIFormDesignPane;
        
        private HtmlSpan mUINewTabPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument7 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "205";
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "71";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_reqTabHeader";
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "348";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDivMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlSpan mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument8 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlImage UIOptionsImage
        {
            get
            {
                if ((this.mUIOptionsImage == null))
                {
                    this.mUIOptionsImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOptionsImage.SearchProperties[HtmlImage.PropertyNames.Id] = "tab_options_img_Tab_0";
                    this.mUIOptionsImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOptionsImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Options";
                    this.mUIOptionsImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/GreenLight/expenses//shared/images/icons/16/Plain/gear.png";
                    this.mUIOptionsImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://localhost/GreenLight/expenses//shared/images/icons/16/Plain/gear.png";
                    this.mUIOptionsImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_form_editor_tab_btn";
                    this.mUIOptionsImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=tab_options_img_Tab_0 class=sm_form_e";
                    this.mUIOptionsImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "49";
                    #endregion
                }
                return this.mUIOptionsImage;
            }
        }
        
        public HtmlSpan UICogMenu
        {
            get
            {
                if ((this.mUICogMenu == null))
                {
                    this.mUICogMenu = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICogMenu.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
                    this.mUICogMenu.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICogMenu.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICogMenu.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICogMenu.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
                    this.mUICogMenu.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; FILTER: ; ZOOM: 1";
                    this.mUICogMenu.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "374";
                    #endregion
                }
                return this.mUICogMenu;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIOptionsImage;
        
        private HtmlSpan mUICogMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument9 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane mUICtl00_contentmain_poPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; FILTER: ; ZOOM: 1";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "374";
            #endregion
        }
        
        #region Properties
        public HtmlImage UINewsectionImage
        {
            get
            {
                if ((this.mUINewsectionImage == null))
                {
                    this.mUINewsectionImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUINewsectionImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUINewsectionImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUINewsectionImage.SearchProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Alt, "New section", PropertyExpressionOperator.Contains));
                    this.mUINewsectionImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/row_add_before.png", PropertyExpressionOperator.Contains));
                    this.mUINewsectionImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/row_add_before.png", PropertyExpressionOperator.Contains));
                    this.mUINewsectionImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUINewsectionImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"New section\" alt=\"Ne";
                    this.mUINewsectionImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUINewsectionImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUINewsectionImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument10 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "209";
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "81";
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_reqSectionHeader";
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "360";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDivMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlSpan mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument11 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nCannot add a ";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "206";
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDivMasterPopupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument12 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDivMasterPopupPane
        {
            get
            {
                if ((this.mUIDivMasterPopupPane == null))
                {
                    this.mUIDivMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMasterPopup";
                    this.mUIDivMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nCannot add a ";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMasterPopup";
                    this.mUIDivMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "209";
                    #endregion
                }
                return this.mUIDivMasterPopupPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDivMasterPopupPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument13 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITabPane
        {
            get
            {
                if ((this.mUITabPane == null))
                {
                    this.mUITabPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITabPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabFormDes_tabContainer";
                    this.mUITabPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITabPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " New Tab ";
                    this.mUITabPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITabPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_tabcontainer";
                    this.mUITabPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabForm";
                    this.mUITabPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "137";
                    #endregion
                }
                return this.mUITabPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITabPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument14 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UINewTabPane
        {
            get
            {
                if ((this.mUINewTabPane == null))
                {
                    this.mUINewTabPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUINewTabPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabFormDes_tabContainer";
                    this.mUINewTabPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = " New Tab ";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_tabcontainer";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabForm";
                    this.mUINewTabPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "137";
                    #endregion
                }
                return this.mUINewTabPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUINewTabPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument15 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UITabBarPane
        {
            get
            {
                if ((this.mUITabBarPane == null))
                {
                    this.mUITabBarPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITabBarPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "tabBar";
                    this.mUITabBarPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITabBarPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUITabBarPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITabBarPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITabBarPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=tabBar";
                    this.mUITabBarPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "275";
                    #endregion
                }
                return this.mUITabBarPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUITabBarPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument16 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane1 UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane1(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        
        public HtmlDiv UITabTestTabnamesavecaPane
        {
            get
            {
                if ((this.mUITabTestTabnamesavecaPane == null))
                {
                    this.mUITabTestTabnamesavecaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITabTestTabnamesavecaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnltab";
                    this.mUITabTestTabnamesavecaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITabTestTabnamesavecaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Tab : Test\r\nTab name** \r\nsave cancel ";
                    this.mUITabTestTabnamesavecaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITabTestTabnamesavecaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel formpanel formpanelsmall";
                    this.mUITabTestTabnamesavecaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUITabTestTabnamesavecaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "180";
                    #endregion
                }
                return this.mUITabTestTabnamesavecaPane;
            }
        }
        
        public HtmlSpan UICancelPane
        {
            get
            {
                if ((this.mUICancelPane == null))
                {
                    this.mUICancelPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnCancelTab";
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "cancel";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelTab class=";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "355";
                    #endregion
                }
                return this.mUICancelPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane1 mUICtl00_contentmain_poPane;
        
        private HtmlDiv mUITabTestTabnamesavecaPane;
        
        private HtmlSpan mUICancelPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane1 : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; FILTER: ; ZOOM: 1";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "374";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEdittabnameImage
        {
            get
            {
                if ((this.mUIEdittabnameImage == null))
                {
                    this.mUIEdittabnameImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit tab name";
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Edit tab name\" alt=\"";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIEdittabnameImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEdittabnameImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityCustomEnDocument17 : HtmlDocument
    {
        
        public UICustomEntityCustomEnDocument17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UITabSaveButton
        {
            get
            {
                if ((this.mUITabSaveButton == null))
                {
                    this.mUITabSaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUITabSaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveTab";
                    this.mUITabSaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveTab";
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveTab class=bu";
                    this.mUITabSaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "61";
                    #endregion
                }
                return this.mUITabSaveButton;
            }
        }
        
        public HtmlInputButton UITabCancelButton
        {
            get
            {
                if ((this.mUITabCancelButton == null))
                {
                    this.mUITabCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUITabCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelTab";
                    this.mUITabCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelTab";
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelTab class=";
                    this.mUITabCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "62";
                    #endregion
                }
                return this.mUITabCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUITabSaveButton;
        
        private HtmlInputButton mUITabCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityhelloWinWindow : BrowserWindow
    {
        
        public UICustomEntityhelloWinWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntityhelloDocument UICustomEntityhelloDocument
        {
            get
            {
                if ((this.mUICustomEntityhelloDocument == null))
                {
                    this.mUICustomEntityhelloDocument = new UICustomEntityhelloDocument(this);
                }
                return this.mUICustomEntityhelloDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntityhelloDocument mUICustomEntityhelloDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityhelloDocument : HtmlDocument
    {
        
        public UICustomEntityhelloDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=1477", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UICancelPane
        {
            get
            {
                if ((this.mUICancelPane == null))
                {
                    this.mUICancelPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICancelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_btnCancelForm";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "cancel";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "buttonInner";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelForm class";
                    this.mUICancelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "280";
                    #endregion
                }
                return this.mUICancelPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUICancelPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityNewentitWindow : BrowserWindow
    {
        
        public UICustomEntityNewentitWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICustomEntityNewentitDocument UICustomEntityNewentitDocument
        {
            get
            {
                if ((this.mUICustomEntityNewentitDocument == null))
                {
                    this.mUICustomEntityNewentitDocument = new UICustomEntityNewentitDocument(this);
                }
                return this.mUICustomEntityNewentitDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICustomEntityNewentitDocument mUICustomEntityNewentitDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICustomEntityNewentitDocument : HtmlDocument
    {
        
        public UICustomEntityNewentitDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=4508", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_gridFormsTable
        {
            get
            {
                if ((this.mUITbl_gridFormsTable == null))
                {
                    this.mUITbl_gridFormsTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridForms";
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Form Name Description\r\nThere are current";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridForms class=datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITbl_gridFormsTable;
            }
        }
        
        public HtmlTextArea UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributedescription";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributedescription";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributedescrip";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_gridFormsTable;
        
        private HtmlTextArea mUIDescriptionEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIPasteMenuItem
        {
            get
            {
                if ((this.mUIPasteMenuItem == null))
                {
                    this.mUIPasteMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIPasteMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Paste";
                    #endregion
                }
                return this.mUIPasteMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIPasteMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiWindow : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        
        public UIGreenLightCustomEntiDocument1 UIGreenLightCustomEntiDocument1
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument1 == null))
                {
                    this.mUIGreenLightCustomEntiDocument1 = new UIGreenLightCustomEntiDocument1(this);
                }
                return this.mUIGreenLightCustomEntiDocument1;
            }
        }
        
        public UIGreenLightCustomEntiDocument2 UIGreenLightCustomEntiDocument2
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument2 == null))
                {
                    this.mUIGreenLightCustomEntiDocument2 = new UIGreenLightCustomEntiDocument2(this);
                }
                return this.mUIGreenLightCustomEntiDocument2;
            }
        }
        
        public UIGreenLightCustomEntiDocument3 UIGreenLightCustomEntiDocument3
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument3 == null))
                {
                    this.mUIGreenLightCustomEntiDocument3 = new UIGreenLightCustomEntiDocument3(this);
                }
                return this.mUIGreenLightCustomEntiDocument3;
            }
        }
        
        public UIGreenLightCustomEntiDocument4 UIGreenLightCustomEntiDocument4
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument4 == null))
                {
                    this.mUIGreenLightCustomEntiDocument4 = new UIGreenLightCustomEntiDocument4(this);
                }
                return this.mUIGreenLightCustomEntiDocument4;
            }
        }
        
        public UIGreenLightCustomEntiDocument5 UIGreenLightCustomEntiDocument5
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument5 == null))
                {
                    this.mUIGreenLightCustomEntiDocument5 = new UIGreenLightCustomEntiDocument5(this);
                }
                return this.mUIGreenLightCustomEntiDocument5;
            }
        }
        
        public UIGreenLightCustomEntiDocument6 UIGreenLightCustomEntiDocument6
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument6 == null))
                {
                    this.mUIGreenLightCustomEntiDocument6 = new UIGreenLightCustomEntiDocument6(this);
                }
                return this.mUIGreenLightCustomEntiDocument6;
            }
        }
        
        public UIGreenLightCustomEntiDocument7 UIGreenLightCustomEntiDocument7
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument7 == null))
                {
                    this.mUIGreenLightCustomEntiDocument7 = new UIGreenLightCustomEntiDocument7(this);
                }
                return this.mUIGreenLightCustomEntiDocument7;
            }
        }
        
        public UIGreenLightCustomEntiDocument8 UIGreenLightCustomEntiDocument8
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument8 == null))
                {
                    this.mUIGreenLightCustomEntiDocument8 = new UIGreenLightCustomEntiDocument8(this);
                }
                return this.mUIGreenLightCustomEntiDocument8;
            }
        }
        
        public UIGreenLightCustomEntiDocument9 UIGreenLightCustomEntiDocument9
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument9 == null))
                {
                    this.mUIGreenLightCustomEntiDocument9 = new UIGreenLightCustomEntiDocument9(this);
                }
                return this.mUIGreenLightCustomEntiDocument9;
            }
        }
        
        public UIGreenLightCustomEntiDocument10 UIGreenLightCustomEntiDocument10
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument10 == null))
                {
                    this.mUIGreenLightCustomEntiDocument10 = new UIGreenLightCustomEntiDocument10(this);
                }
                return this.mUIGreenLightCustomEntiDocument10;
            }
        }
        
        public UIGreenLightCustomEntiDocument11 UIGreenLightCustomEntiDocument11
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument11 == null))
                {
                    this.mUIGreenLightCustomEntiDocument11 = new UIGreenLightCustomEntiDocument11(this);
                }
                return this.mUIGreenLightCustomEntiDocument11;
            }
        }
        
        public UIGreenLightCustomEntiDocument12 UIGreenLightCustomEntiDocument12
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument12 == null))
                {
                    this.mUIGreenLightCustomEntiDocument12 = new UIGreenLightCustomEntiDocument12(this);
                }
                return this.mUIGreenLightCustomEntiDocument12;
            }
        }
        
        public UIGreenLightCustomEntiDocument13 UIGreenLightCustomEntiDocument13
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument13 == null))
                {
                    this.mUIGreenLightCustomEntiDocument13 = new UIGreenLightCustomEntiDocument13(this);
                }
                return this.mUIGreenLightCustomEntiDocument13;
            }
        }
        
        public UIGreenLightCustomEntiDocument14 UIGreenLightCustomEntiDocument14
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument14 == null))
                {
                    this.mUIGreenLightCustomEntiDocument14 = new UIGreenLightCustomEntiDocument14(this);
                }
                return this.mUIGreenLightCustomEntiDocument14;
            }
        }
        
        public UIGreenLightCustomEntiDocument15 UIGreenLightCustomEntiDocument15
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument15 == null))
                {
                    this.mUIGreenLightCustomEntiDocument15 = new UIGreenLightCustomEntiDocument15(this);
                }
                return this.mUIGreenLightCustomEntiDocument15;
            }
        }
        
        public UIGreenLightCustomEntiDocument16 UIGreenLightCustomEntiDocument16
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument16 == null))
                {
                    this.mUIGreenLightCustomEntiDocument16 = new UIGreenLightCustomEntiDocument16(this);
                }
                return this.mUIGreenLightCustomEntiDocument16;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument mUIGreenLightCustomEntiDocument;
        
        private UIGreenLightCustomEntiDocument1 mUIGreenLightCustomEntiDocument1;
        
        private UIGreenLightCustomEntiDocument2 mUIGreenLightCustomEntiDocument2;
        
        private UIGreenLightCustomEntiDocument3 mUIGreenLightCustomEntiDocument3;
        
        private UIGreenLightCustomEntiDocument4 mUIGreenLightCustomEntiDocument4;
        
        private UIGreenLightCustomEntiDocument5 mUIGreenLightCustomEntiDocument5;
        
        private UIGreenLightCustomEntiDocument6 mUIGreenLightCustomEntiDocument6;
        
        private UIGreenLightCustomEntiDocument7 mUIGreenLightCustomEntiDocument7;
        
        private UIGreenLightCustomEntiDocument8 mUIGreenLightCustomEntiDocument8;
        
        private UIGreenLightCustomEntiDocument9 mUIGreenLightCustomEntiDocument9;
        
        private UIGreenLightCustomEntiDocument10 mUIGreenLightCustomEntiDocument10;
        
        private UIGreenLightCustomEntiDocument11 mUIGreenLightCustomEntiDocument11;
        
        private UIGreenLightCustomEntiDocument12 mUIGreenLightCustomEntiDocument12;
        
        private UIGreenLightCustomEntiDocument13 mUIGreenLightCustomEntiDocument13;
        
        private UIGreenLightCustomEntiDocument14 mUIGreenLightCustomEntiDocument14;
        
        private UIGreenLightCustomEntiDocument15 mUIGreenLightCustomEntiDocument15;
        
        private UIGreenLightCustomEntiDocument16 mUIGreenLightCustomEntiDocument16;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2170", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFormsHyperlink
        {
            get
            {
                if ((this.mUIFormsHyperlink == null))
                {
                    this.mUIFormsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkForms";
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFormsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Forms";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'Forms\');";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'Forms\');";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "selectedPage";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnk class=selectedPage tabIndex=0 hre";
                    this.mUIFormsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIFormsHyperlink;
            }
        }
        
        public HtmlSpan UIFormDesignPane
        {
            get
            {
                if ((this.mUIFormDesignPane == null))
                {
                    this.mUIFormDesignPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConForms_tabFormDes";
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Form Design ";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConForms_t";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "438";
                    #endregion
                }
                return this.mUIFormDesignPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFormsHyperlink;
        
        private HtmlSpan mUIFormDesignPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument1 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2172", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane2 UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane2(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane2 mUICtl00_contentmain_poPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane2 : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; POSITION: absolut";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "565";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEdittabnameImage
        {
            get
            {
                if ((this.mUIEdittabnameImage == null))
                {
                    this.mUIEdittabnameImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit tab name";
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Edit tab name\" alt=\"";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIEdittabnameImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEdittabnameImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument2 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2173", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane3 UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane3(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane3 mUICtl00_contentmain_poPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane3 : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; POSITION: absolut";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "565";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEdittabnameImage
        {
            get
            {
                if ((this.mUIEdittabnameImage == null))
                {
                    this.mUIEdittabnameImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEdittabnameImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit tab name";
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Edit tab name\" alt=\"";
                    this.mUIEdittabnameImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIEdittabnameImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEdittabnameImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument3 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2208", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane4 UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane4(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane4 mUICtl00_contentmain_poPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane4 : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; POSITION: absolut";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "567";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditsectionnameImage
        {
            get
            {
                if ((this.mUIEditsectionnameImage == null))
                {
                    this.mUIEditsectionnameImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditsectionnameImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditsectionnameImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditsectionnameImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit section name";
                    this.mUIEditsectionnameImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/Plain/edit.png";
                    this.mUIEditsectionnameImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/edit.png", PropertyExpressionOperator.Contains));
                    this.mUIEditsectionnameImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIEditsectionnameImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Edit section name\" a";
                    this.mUIEditsectionnameImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mUIEditsectionnameImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditsectionnameImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument4 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2236", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UICtl00_contentmain_poPane5 UICtl00_contentmain_poPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_poPane == null))
                {
                    this.mUICtl00_contentmain_poPane = new UICtl00_contentmain_poPane5(this);
                }
                return this.mUICtl00_contentmain_poPane;
            }
        }
        #endregion
        
        #region Fields
        private UICtl00_contentmain_poPane5 mUICtl00_contentmain_poPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_poPane5 : HtmlSpan
    {
        
        public UICtl00_contentmain_poPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; POSITION: absolut";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "571";
            #endregion
        }
        
        #region Properties
        public HtmlImage UIMoveleftImage
        {
            get
            {
                if ((this.mUIMoveleftImage == null))
                {
                    this.mUIMoveleftImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveleftImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveleftImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveleftImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move left";
                    this.mUIMoveleftImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/arrow_left_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveleftImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/arrow_left_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveleftImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIMoveleftImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Move left\" alt=\"Move";
                    this.mUIMoveleftImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIMoveleftImage;
            }
        }
        
        public HtmlImage UIMoverightImage
        {
            get
            {
                if ((this.mUIMoverightImage == null))
                {
                    this.mUIMoverightImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoverightImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoverightImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoverightImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move right";
                    this.mUIMoverightImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/arrow_right_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoverightImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/arrow_right_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoverightImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIMoverightImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Move right\" alt=\"Mov";
                    this.mUIMoverightImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIMoverightImage;
            }
        }
        
        public HtmlImage UIDeleteImage
        {
            get
            {
                if ((this.mUIDeleteImage == null))
                {
                    this.mUIDeleteImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/Plain/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Src] = "shared/images/icons/16/Plain/delete2.png";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=Delete alt=Delete src";
                    this.mUIDeleteImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mUIDeleteImage;
            }
        }
        
        public HtmlImage UIDeleteImage1
        {
            get
            {
                if ((this.mUIDeleteImage1 == null))
                {
                    this.mUIDeleteImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIDeleteImage1.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIDeleteImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIDeleteImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete";
                    this.mUIDeleteImage1.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/delete2.png", PropertyExpressionOperator.Contains));
                    this.mUIDeleteImage1.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/delete2.png", PropertyExpressionOperator.Contains));
                    this.mUIDeleteImage1.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIDeleteImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=Delete alt=Delete src";
                    this.mUIDeleteImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mUIDeleteImage1;
            }
        }
        
        public HtmlImage UIMoveupImage
        {
            get
            {
                if ((this.mUIMoveupImage == null))
                {
                    this.mUIMoveupImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMoveupImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMoveupImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMoveupImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move up";
                    this.mUIMoveupImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/arrow_up_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveupImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/arrow_up_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMoveupImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIMoveupImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Move up\" alt=\"Move u";
                    this.mUIMoveupImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIMoveupImage;
            }
        }
        
        public HtmlImage UIMovedownImage
        {
            get
            {
                if ((this.mUIMovedownImage == null))
                {
                    this.mUIMovedownImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIMovedownImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIMovedownImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIMovedownImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move down";
                    this.mUIMovedownImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "/shared/images/icons/16/Plain/arrow_down_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMovedownImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/shared/images/icons/16/Plain/arrow_down_blue.png", PropertyExpressionOperator.Contains));
                    this.mUIMovedownImage.FilterProperties[HtmlImage.PropertyNames.Class] = "sm_btn";
                    this.mUIMovedownImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "class=sm_btn title=\"Move down\" alt=\"Move";
                    this.mUIMovedownImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIMovedownImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIMoveleftImage;
        
        private HtmlImage mUIMoverightImage;
        
        private HtmlImage mUIDeleteImage;
        
        private HtmlImage mUIDeleteImage1;
        
        private HtmlImage mUIMoveupImage;
        
        private HtmlImage mUIMovedownImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument5 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2242", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITab1Tab2NewTabPane
        {
            get
            {
                if ((this.mUITab1Tab2NewTabPane == null))
                {
                    this.mUITab1Tab2NewTabPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITab1Tab2NewTabPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabFormDes_tabContainer";
                    this.mUITab1Tab2NewTabPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITab1Tab2NewTabPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Tab 1Tab 2 New Tab ";
                    this.mUITab1Tab2NewTabPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITab1Tab2NewTabPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_tabcontainer";
                    this.mUITab1Tab2NewTabPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabConForms_tabForm";
                    this.mUITab1Tab2NewTabPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "140";
                    #endregion
                }
                return this.mUITab1Tab2NewTabPane;
            }
        }
        
        public HtmlDiv UIFormTabsPane
        {
            get
            {
                if ((this.mUIFormTabsPane == null))
                {
                    this.mUIFormTabsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFormTabsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "formTabs";
                    this.mUIFormTabsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormTabsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Section 1Section 1 EDITEDSection 2Standa";
                    this.mUIFormTabsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormTabsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIFormTabsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=formTabs";
                    this.mUIFormTabsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "144";
                    this.mUIFormTabsPane.SearchConfigurations.Add(SearchConfiguration.VisibleOnly);
                    #endregion
                }
                return this.mUIFormTabsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITab1Tab2NewTabPane;
        
        private HtmlDiv mUIFormTabsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument6 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2249", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIStandardSingleTextMuPane
        {
            get
            {
                if ((this.mUIStandardSingleTextMuPane == null))
                {
                    this.mUIStandardSingleTextMuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextMuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "Tab_0_Section_0_FieldsArea";
                    this.mUIStandardSingleTextMuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextMuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Standard Single Text *Multiline Text ";
                    this.mUIStandardSingleTextMuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIStandardSingleTextMuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectionsortables ui-sortable";
                    this.mUIStandardSingleTextMuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=Tab_0_Section_0_FieldsArea class=\"sec";
                    this.mUIStandardSingleTextMuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "148";
                    #endregion
                }
                return this.mUIStandardSingleTextMuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIStandardSingleTextMuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument7 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2297", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAvailableFieldsclosePane
        {
            get
            {
                if ((this.mUIAvailableFieldsclosePane == null))
                {
                    this.mUIAvailableFieldsclosePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAvailableFieldsclosePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAvailableFieldsclosePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAvailableFieldsclosePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available FieldscloseSpacerCommencement ";
                    this.mUIAvailableFieldsclosePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAvailableFieldsclosePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable";
                    this.mUIAvailableFieldsclosePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10025; POSITION: absolut";
                    this.mUIAvailableFieldsclosePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "242";
                    #endregion
                }
                return this.mUIAvailableFieldsclosePane;
            }
        }
        
        public HtmlDiv UIDialogPane
        {
            get
            {
                if ((this.mUIDialogPane == null))
                {
                    this.mUIDialogPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDialogPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "dialog";
                    this.mUIDialogPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SpacerCommencement DateCommentComment ED";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog-content ui-widget-content ui-droppable";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MIN-HEIGHT: 0px; WIDTH: auto; DIS";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "244";
                    #endregion
                }
                return this.mUIDialogPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAvailableFieldsclosePane;
        
        private HtmlDiv mUIDialogPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument8 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=5205", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_moPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_moPane == null))
                {
                    this.mUICtl00_contentmain_moPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_modform_backgroundElement";
                    this.mUICtl00_contentmain_moPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalBackground";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 9995; POSITION: fixed; W";
                    this.mUICtl00_contentmain_moPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "214";
                    #endregion
                }
                return this.mUICtl00_contentmain_moPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_moPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument9 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=5223", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGreenLightexpensesshHyperlink
        {
            get
            {
                if ((this.mUIGreenLightexpensesshHyperlink == null))
                {
                    this.mUIGreenLightexpensesshHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGreenLightexpensesshHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGreenLightexpensesshHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGreenLightexpensesshHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGreenLightexpensesshHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "shared/admin/aecustomentity.aspx?entityid=5223#", PropertyExpressionOperator.Contains));
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "dialog-expand ui-dialog-titlebar-expand ui-corner-all";
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline\" class=\"dialog-ex";
                    this.mUIGreenLightexpensesshHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "84";
                    #endregion
                }
                return this.mUIGreenLightexpensesshHyperlink;
            }
        }
        
        public HtmlDiv UIAvailableFields
        {
            get
            {
                if ((this.mUIAvailableFields == null))
                {
                    this.mUIAvailableFields = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAvailableFields.SearchProperties[HtmlDiv.PropertyNames.Id] = "dialog";
                    this.mUIAvailableFields.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAvailableFields.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SpacerCommencement DateCommentComment ED";
                    this.mUIAvailableFields.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAvailableFields.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog-content ui-widget-content ui-droppable";
                    this.mUIAvailableFields.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MIN-HEIGHT: 0px; WIDTH: auto; DIS";
                    this.mUIAvailableFields.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "240";
                    this.mUIAvailableFields.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mUIAvailableFields;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGreenLightexpensesshHyperlink;
        
        private HtmlDiv mUIAvailableFields;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument10 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIFormDesignPane
        {
            get
            {
                if ((this.mUIFormDesignPane == null))
                {
                    this.mUIFormDesignPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConForms_tabFormDes";
                    this.mUIFormDesignPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Form Design ";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabConForms_t";
                    this.mUIFormDesignPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "224";
                    #endregion
                }
                return this.mUIFormDesignPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIFormDesignPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument11 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=5288", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIFormattedLargeTextPane
        {
            get
            {
                if ((this.mUIFormattedLargeTextPane == null))
                {
                    this.mUIFormattedLargeTextPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFormattedLargeTextPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "availableField35984";
                    this.mUIFormattedLargeTextPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormattedLargeTextPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Formatted Large Text";
                    this.mUIFormattedLargeTextPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormattedLargeTextPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_field_tall onecolumn ui-draggable";
                    this.mUIFormattedLargeTextPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "aria-disabled=false id=availableField359";
                    this.mUIFormattedLargeTextPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "609";
                    #endregion
                }
                return this.mUIFormattedLargeTextPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIFormattedLargeTextPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument12 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=5291", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIStandardSingleTextPane UIStandardSingleTextPane
        {
            get
            {
                if ((this.mUIStandardSingleTextPane == null))
                {
                    this.mUIStandardSingleTextPane = new UIStandardSingleTextPane(this);
                }
                return this.mUIStandardSingleTextPane;
            }
        }
        
        public HtmlLabel UIStandardSingleTextLabel
        {
            get
            {
                if ((this.mUIStandardSingleTextLabel == null))
                {
                    this.mUIStandardSingleTextLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIStandardSingleTextLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36098";
                    this.mUIStandardSingleTextLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Standard Single Text*";
                    this.mUIStandardSingleTextLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = " sm_label mandatory";
                    this.mUIStandardSingleTextLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "style=\"CURSOR: url(https://testing3.sel-";
                    this.mUIStandardSingleTextLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIStandardSingleTextLabel;
            }
        }
        
        public HtmlLabel UIStandardSingleTextLabel1
        {
            get
            {
                if ((this.mUIStandardSingleTextLabel1 == null))
                {
                    this.mUIStandardSingleTextLabel1 = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextLabel1.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36098";
                    this.mUIStandardSingleTextLabel1.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextLabel1.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIStandardSingleTextLabel1.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Standard Single Text*";
                    this.mUIStandardSingleTextLabel1.FilterProperties[HtmlLabel.PropertyNames.Class] = " sm_label mandatory";
                    this.mUIStandardSingleTextLabel1.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=lbl_36098 class=\" sm_label mandatory\"";
                    this.mUIStandardSingleTextLabel1.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIStandardSingleTextLabel1;
            }
        }
        
        public HtmlDiv UIDialogPane
        {
            get
            {
                if ((this.mUIDialogPane == null))
                {
                    this.mUIDialogPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDialogPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "dialog";
                    this.mUIDialogPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SpacerCommencement DateCommentComment ED";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog-content ui-widget-content ui-droppable";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MIN-HEIGHT: 0px; WIDTH: auto; DIS";
                    this.mUIDialogPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "243";
                    #endregion
                }
                return this.mUIDialogPane;
            }
        }
        
        public UINumberPane UINumberPane
        {
            get
            {
                if ((this.mUINumberPane == null))
                {
                    this.mUINumberPane = new UINumberPane(this);
                }
                return this.mUINumberPane;
            }
        }
        
        public HtmlLabel UINumberLabel
        {
            get
            {
                if ((this.mUINumberLabel == null))
                {
                    this.mUINumberLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUINumberLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36100";
                    this.mUINumberLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINumberLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUINumberLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Number";
                    this.mUINumberLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUINumberLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "style=\"CURSOR: url(https://testing3.sel-";
                    this.mUINumberLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUINumberLabel;
            }
        }
        
        public HtmlLabel UINumberLabel1
        {
            get
            {
                if ((this.mUINumberLabel1 == null))
                {
                    this.mUINumberLabel1 = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUINumberLabel1.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36100";
                    this.mUINumberLabel1.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINumberLabel1.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUINumberLabel1.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Number";
                    this.mUINumberLabel1.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUINumberLabel1.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=lbl_36100";
                    this.mUINumberLabel1.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUINumberLabel1;
            }
        }
        
        public UICtl00_contentmain_taPane1 UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane1(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public UIDecimalPane UIDecimalPane
        {
            get
            {
                if ((this.mUIDecimalPane == null))
                {
                    this.mUIDecimalPane = new UIDecimalPane(this);
                }
                return this.mUIDecimalPane;
            }
        }
        
        public HtmlLabel UIDecimalLabel
        {
            get
            {
                if ((this.mUIDecimalLabel == null))
                {
                    this.mUIDecimalLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDecimalLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36101";
                    this.mUIDecimalLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDecimalLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIDecimalLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Decimal";
                    this.mUIDecimalLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIDecimalLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "style=\"CURSOR: url(https://testing3.sel-";
                    this.mUIDecimalLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIDecimalLabel;
            }
        }
        
        public HtmlLabel UIDecimalLabel1
        {
            get
            {
                if ((this.mUIDecimalLabel1 == null))
                {
                    this.mUIDecimalLabel1 = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIDecimalLabel1.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36101";
                    this.mUIDecimalLabel1.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIDecimalLabel1.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIDecimalLabel1.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Decimal";
                    this.mUIDecimalLabel1.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIDecimalLabel1.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=lbl_36101";
                    this.mUIDecimalLabel1.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIDecimalLabel1;
            }
        }
        
        public UIMultilineTextPane UIMultilineTextPane
        {
            get
            {
                if ((this.mUIMultilineTextPane == null))
                {
                    this.mUIMultilineTextPane = new UIMultilineTextPane(this);
                }
                return this.mUIMultilineTextPane;
            }
        }
        
        public HtmlLabel UIMultilineTextLabel
        {
            get
            {
                if ((this.mUIMultilineTextLabel == null))
                {
                    this.mUIMultilineTextLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIMultilineTextLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "lbl_36099";
                    this.mUIMultilineTextLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIMultilineTextLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIMultilineTextLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Multiline Text";
                    this.mUIMultilineTextLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIMultilineTextLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "style=\"CURSOR: url(https://testing3.sel-";
                    this.mUIMultilineTextLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mUIMultilineTextLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardSingleTextPane mUIStandardSingleTextPane;
        
        private HtmlLabel mUIStandardSingleTextLabel;
        
        private HtmlLabel mUIStandardSingleTextLabel1;
        
        private HtmlDiv mUIDialogPane;
        
        private UINumberPane mUINumberPane;
        
        private HtmlLabel mUINumberLabel;
        
        private HtmlLabel mUINumberLabel1;
        
        private UICtl00_contentmain_taPane1 mUICtl00_contentmain_taPane;
        
        private UIDecimalPane mUIDecimalPane;
        
        private HtmlLabel mUIDecimalLabel;
        
        private HtmlLabel mUIDecimalLabel1;
        
        private UIMultilineTextPane mUIMultilineTextPane;
        
        private HtmlLabel mUIMultilineTextLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIStandardSingleTextPane : HtmlSpan
    {
        
        public UIStandardSingleTextPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "availableField36098";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Standard Single Text";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_field twocolumn ui-draggable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "aria-disabled=false id=availableField360";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "678";
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIStandardSingleTextPane1
        {
            get
            {
                if ((this.mUIStandardSingleTextPane1 == null))
                {
                    this.mUIStandardSingleTextPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIStandardSingleTextPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIStandardSingleTextPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIStandardSingleTextPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Standard Single Text";
                    this.mUIStandardSingleTextPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIStandardSingleTextPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIStandardSingleTextPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"LINE-HEIGHT: normal; WIDTH: 200px";
                    this.mUIStandardSingleTextPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIStandardSingleTextPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIStandardSingleTextPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UINumberPane : HtmlSpan
    {
        
        public UINumberPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "availableField36100";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Number";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_field twocolumn ui-draggable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "aria-disabled=false id=availableField361";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "678";
            #endregion
        }
        
        #region Properties
        public HtmlSpan UINumberPane1
        {
            get
            {
                if ((this.mUINumberPane1 == null))
                {
                    this.mUINumberPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINumberPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUINumberPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINumberPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Number";
                    this.mUINumberPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINumberPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUINumberPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"LINE-HEIGHT: normal; WIDTH: 200px";
                    this.mUINumberPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUINumberPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUINumberPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_taPane1 : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabConForms_tabFormDes";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Form Design \r\nTab 1 New Tab There are cu";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible\" id=ctl00_con";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "137";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITab1NewTabTherearecuPane
        {
            get
            {
                if ((this.mUITab1NewTabTherearecuPane == null))
                {
                    this.mUITab1NewTabTherearecuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITab1NewTabTherearecuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUITab1NewTabTherearecuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITab1NewTabTherearecuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Tab 1 New Tab There are currently no tab";
                    this.mUITab1NewTabTherearecuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITab1NewTabTherearecuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalcontents ui-droppable";
                    this.mUITab1NewTabTherearecuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"CURSOR: auto\" class=\"modalcontent";
                    this.mUITab1NewTabTherearecuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUITab1NewTabTherearecuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITab1NewTabTherearecuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDecimalPane : HtmlSpan
    {
        
        public UIDecimalPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "availableField36101";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Decimal";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_field twocolumn ui-draggable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "aria-disabled=false id=availableField361";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "678";
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIDecimalPane1
        {
            get
            {
                if ((this.mUIDecimalPane1 == null))
                {
                    this.mUIDecimalPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIDecimalPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIDecimalPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDecimalPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Decimal";
                    this.mUIDecimalPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDecimalPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIDecimalPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"LINE-HEIGHT: normal; WIDTH: 200px";
                    this.mUIDecimalPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIDecimalPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIDecimalPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMultilineTextPane : HtmlSpan
    {
        
        public UIMultilineTextPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "availableField36099";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Multiline Text";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_field_tall onecolumn ui-draggable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "aria-disabled=false id=availableField360";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "678";
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIMultilineTextPane1
        {
            get
            {
                if ((this.mUIMultilineTextPane1 == null))
                {
                    this.mUIMultilineTextPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMultilineTextPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMultilineTextPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMultilineTextPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Multiline Text";
                    this.mUIMultilineTextPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMultilineTextPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIMultilineTextPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"LINE-HEIGHT: normal; WIDTH: 200px";
                    this.mUIMultilineTextPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUIMultilineTextPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIMultilineTextPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument13 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2349", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UISectionContextPanel
        {
            get
            {
                if ((this.mUISectionContextPanel == null))
                {
                    this.mUISectionContextPanel = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISectionContextPanel.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_popupFormOptions";
                    this.mUISectionContextPanel.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISectionContextPanel.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUISectionContextPanel.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISectionContextPanel.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
                    this.mUISectionContextPanel.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10020; POSITION: absolut";
                    this.mUISectionContextPanel.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "569";
                    #endregion
                }
                return this.mUISectionContextPanel;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUISectionContextPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument14 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2747", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_reqSectionHeader";
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "570";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument15 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2753", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_reqTabHeader";
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "584";
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument16 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "GreenLight", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIStandardTextDefaulttextEdit
        {
            get
            {
                if ((this.mUIStandardTextDefaulttextEdit == null))
                {
                    this.mUIStandardTextDefaulttextEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIStandardTextDefaulttextEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtDefaultText";
                    this.mUIStandardTextDefaulttextEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDefaultText";
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Default text";
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan active";
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=-1 id=txtDefaultText class=\"fil";
                    this.mUIStandardTextDefaulttextEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "119";
                    #endregion
                }
                return this.mUIStandardTextDefaulttextEdit;
            }
        }
        
        public HtmlInputButton UISaveDefaultTextButton
        {
            get
            {
                if ((this.mUISaveDefaultTextButton == null))
                {
                    this.mUISaveDefaultTextButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveDefaultTextButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveDefaultText";
                    this.mUISaveDefaultTextButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveDefaultText";
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.CustomEntityAdministration.";
                    this.mUISaveDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "121";
                    #endregion
                }
                return this.mUISaveDefaultTextButton;
            }
        }
        
        public HtmlInputButton UICancelDefaultTextButton
        {
            get
            {
                if ((this.mUICancelDefaultTextButton == null))
                {
                    this.mUICancelDefaultTextButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelDefaultTextButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelDefaultText";
                    this.mUICancelDefaultTextButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelDefaultText";
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.CustomEntityAdministration.";
                    this.mUICancelDefaultTextButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "122";
                    #endregion
                }
                return this.mUICancelDefaultTextButton;
            }
        }
        
        public HtmlTextArea UITxtDefaultTextLargeEdit
        {
            get
            {
                if ((this.mUITxtDefaultTextLargeEdit == null))
                {
                    this.mUITxtDefaultTextLargeEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUITxtDefaultTextLargeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtDefaultTextLarge";
                    this.mUITxtDefaultTextLargeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUITxtDefaultTextLargeEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtDefaultTextLargeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtDefaultTextLargeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtDefaultTextLargeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=-1 id=txtDefaultTextLarge style";
                    this.mUITxtDefaultTextLargeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    #endregion
                }
                return this.mUITxtDefaultTextLargeEdit;
            }
        }
        
        public UICtl00_contentmain_rtFrame UICtl00_contentmain_rtFrame
        {
            get
            {
                if ((this.mUICtl00_contentmain_rtFrame == null))
                {
                    this.mUICtl00_contentmain_rtFrame = new UICtl00_contentmain_rtFrame(this);
                }
                return this.mUICtl00_contentmain_rtFrame;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIStandardTextDefaulttextEdit;
        
        private HtmlInputButton mUISaveDefaultTextButton;
        
        private HtmlInputButton mUICancelDefaultTextButton;
        
        private HtmlTextArea mUITxtDefaultTextLargeEdit;
        
        private UICtl00_contentmain_rtFrame mUICtl00_contentmain_rtFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_rtFrame : HtmlIFrame
    {
        
        public UICtl00_contentmain_rtFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ctl00_contentmain_rteDefaultText_ctl02_ctl00";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "ctl00_contentmain_rteDefaultText_ctl02_ctl00";
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "false;";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "javascript:false;";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "tabIndex=-1 id=ctl00_contentmain_rteDefa";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "3";
            #endregion
        }
        
        #region Properties
        public HtmlDocument UIHttpserselexpensescoDocument
        {
            get
            {
                if ((this.mUIHttpserselexpensescoDocument == null))
                {
                    this.mUIHttpserselexpensescoDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIHttpserselexpensescoDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
                    this.mUIHttpserselexpensescoDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIHttpserselexpensescoDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
                    this.mUIHttpserselexpensescoDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
                    this.mUIHttpserselexpensescoDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIHttpserselexpensescoDocument.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIHttpserselexpensescoDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIHttpserselexpensescoDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UINewGreenLightWindowsWindow : BrowserWindow
    {
        
        public UINewGreenLightWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINewGreenLightDocument UINewGreenLightDocument
        {
            get
            {
                if ((this.mUINewGreenLightDocument == null))
                {
                    this.mUINewGreenLightDocument = new UINewGreenLightDocument(this);
                }
                return this.mUINewGreenLightDocument;
            }
        }
        
        public UIGreenLightEXHIBITADocument UIGreenLightEXHIBITADocument
        {
            get
            {
                if ((this.mUIGreenLightEXHIBITADocument == null))
                {
                    this.mUIGreenLightEXHIBITADocument = new UIGreenLightEXHIBITADocument(this);
                }
                return this.mUIGreenLightEXHIBITADocument;
            }
        }
        #endregion
        
        #region Fields
        private UINewGreenLightDocument mUINewGreenLightDocument;
        
        private UIGreenLightEXHIBITADocument mUIGreenLightEXHIBITADocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UINewGreenLightDocument : HtmlDocument
    {
        
        public UINewGreenLightDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIAvailableFieldsPane
        {
            get
            {
                if ((this.mUIAvailableFieldsPane == null))
                {
                    this.mUIAvailableFieldsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIAvailableFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ui-dialog-title-dialog";
                    this.mUIAvailableFieldsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Available Fields";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog-title";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"COLOR: #ffffff\" id=ui-dialog-titl";
                    this.mUIAvailableFieldsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "376";
                    #endregion
                }
                return this.mUIAvailableFieldsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIAvailableFieldsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightEXHIBITADocument : HtmlDocument
    {
        
        public UIGreenLightEXHIBITADocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/shared/admin/aecustomentity.aspx", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=2166", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlImage UIShowHotKeyInformatioImage
        {
            get
            {
                if ((this.mUIShowHotKeyInformatioImage == null))
                {
                    this.mUIShowHotKeyInformatioImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIShowHotKeyInformatioImage.SearchProperties[HtmlImage.PropertyNames.Id] = "imgFormDesignerHelp";
                    this.mUIShowHotKeyInformatioImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIShowHotKeyInformatioImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Show Hot Key Information";
                    this.mUIShowHotKeyInformatioImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.AbsolutePath, "icons/24/plain/information.png", PropertyExpressionOperator.Contains));
                    this.mUIShowHotKeyInformatioImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "icons/24/plain/information.png", PropertyExpressionOperator.Contains));
                    this.mUIShowHotKeyInformatioImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIShowHotKeyInformatioImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"POSITION: absolute; DISPLAY: inli";
                    this.mUIShowHotKeyInformatioImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "122";
                    #endregion
                }
                return this.mUIShowHotKeyInformatioImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIShowHotKeyInformatioImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiWindow1 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument17 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument17(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument17 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument17 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=147013", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_gridFormsTable
        {
            get
            {
                if ((this.mUITbl_gridFormsTable == null))
                {
                    this.mUITbl_gridFormsTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridForms";
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Form NameDescription \r\nThere are current";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridForms class=datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITbl_gridFormsTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_gridFormsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiWindow2 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument18 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument18(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument18 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument18 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/shared/admin/aecustomentity.aspx?entityid=6831", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable UITbl_gridFormsTable
        {
            get
            {
                if ((this.mUITbl_gridFormsTable == null))
                {
                    this.mUITbl_gridFormsTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridForms";
                    this.mUITbl_gridFormsTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Form Name Description\r\nThere are current";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridForms class=datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUITbl_gridFormsTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITbl_gridFormsTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUITbl_gridFormsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightbaserelatiWindow : BrowserWindow
    {
        
        public UIGreenLightbaserelatiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightbaserelatiDocument UIGreenLightbaserelatiDocument
        {
            get
            {
                if ((this.mUIGreenLightbaserelatiDocument == null))
                {
                    this.mUIGreenLightbaserelatiDocument = new UIGreenLightbaserelatiDocument(this);
                }
                return this.mUIGreenLightbaserelatiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightbaserelatiDocument mUIGreenLightbaserelatiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightbaserelatiDocument : HtmlDocument
    {
        
        public UIGreenLightbaserelatiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=6308", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UITbl_gridFormsTable1 UITbl_gridFormsTable
        {
            get
            {
                if ((this.mUITbl_gridFormsTable == null))
                {
                    this.mUITbl_gridFormsTable = new UITbl_gridFormsTable1(this);
                }
                return this.mUITbl_gridFormsTable;
            }
        }
        #endregion
        
        #region Fields
        private UITbl_gridFormsTable1 mUITbl_gridFormsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_gridFormsTable1 : HtmlTable
    {
        
        public UITbl_gridFormsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridForms";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Form Name Description\r\nThere are current";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridForms class=datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            #endregion
        }
        
        #region Properties
        public HtmlCell UITherearecurrentlynofCell
        {
            get
            {
                if ((this.mUITherearecurrentlynofCell == null))
                {
                    this.mUITherearecurrentlynofCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITherearecurrentlynofCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITherearecurrentlynofCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITherearecurrentlynofCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "There are currently no forms defined for";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1 colSpan=4 align=middle";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUITherearecurrentlynofCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUITherearecurrentlynofCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUITherearecurrentlynofCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightUKBATIER2MWindow : BrowserWindow
    {
        
        public UIGreenLightUKBATIER2MWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightUKBATIER2MDocument UIGreenLightUKBATIER2MDocument
        {
            get
            {
                if ((this.mUIGreenLightUKBATIER2MDocument == null))
                {
                    this.mUIGreenLightUKBATIER2MDocument = new UIGreenLightUKBATIER2MDocument(this);
                }
                return this.mUIGreenLightUKBATIER2MDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightUKBATIER2MDocument mUIGreenLightUKBATIER2MDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightUKBATIER2MDocument : HtmlDocument
    {
        
        public UIGreenLightUKBATIER2MDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=211", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveCopyForm";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveCopyForm";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BACKGROUND-POSITION: left -155px\"";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "65";
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelCopyForm";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelCopyForm";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnCancelCopyForm c";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "66";
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISaveButton;
        
        private HtmlInputButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightUKBATIER2MWindow1 : BrowserWindow
    {
        
        public UIGreenLightUKBATIER2MWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightUKBATIER2MDocument1 UIGreenLightUKBATIER2MDocument
        {
            get
            {
                if ((this.mUIGreenLightUKBATIER2MDocument == null))
                {
                    this.mUIGreenLightUKBATIER2MDocument = new UIGreenLightUKBATIER2MDocument1(this);
                }
                return this.mUIGreenLightUKBATIER2MDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightUKBATIER2MDocument1 mUIGreenLightUKBATIER2MDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightUKBATIER2MDocument1 : HtmlDocument
    {
        
        public UIGreenLightUKBATIER2MDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=211", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIFormnameEdit
        {
            get
            {
                if ((this.mUIFormnameEdit == null))
                {
                    this.mUIFormnameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFormnameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtcopyformname";
                    this.mUIFormnameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtcopyformname";
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Form name*";
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtcopyformname cla";
                    this.mUIFormnameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "64";
                    #endregion
                }
                return this.mUIFormnameEdit;
            }
        }
        
        public HtmlSpan UIFormNameAsteriskInCopyModal
        {
            get
            {
                if ((this.mUIFormNameAsteriskInCopyModal == null))
                {
                    this.mUIFormNameAsteriskInCopyModal = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIFormNameAsteriskInCopyModal.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_reqNewFormName";
                    this.mUIFormNameAsteriskInCopyModal.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFormNameAsteriskInCopyModal.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUIFormNameAsteriskInCopyModal.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFormNameAsteriskInCopyModal.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIFormNameAsteriskInCopyModal.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"DISPLAY: inline; COLOR: red\" id=c";
                    this.mUIFormNameAsteriskInCopyModal.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "237";
                    #endregion
                }
                return this.mUIFormNameAsteriskInCopyModal;
            }
        }
        
        public HtmlLabel UIFormnameLabel
        {
            get
            {
                if ((this.mUIFormnameLabel == null))
                {
                    this.mUIFormnameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_lblnewformname";
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIFormnameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_txtcopyformname";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Form name*";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_lblnewformname clas";
                    this.mUIFormnameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "41";
                    #endregion
                }
                return this.mUIFormnameLabel;
            }
        }
        
        public UICopyFormFormnamePane UICopyFormFormnamePane
        {
            get
            {
                if ((this.mUICopyFormFormnamePane == null))
                {
                    this.mUICopyFormFormnamePane = new UICopyFormFormnamePane(this);
                }
                return this.mUICopyFormFormnamePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIFormnameEdit;
        
        private HtmlSpan mUIFormNameAsteriskInCopyModal;
        
        private HtmlLabel mUIFormnameLabel;
        
        private UICopyFormFormnamePane mUICopyFormFormnamePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICopyFormFormnamePane : HtmlDiv
    {
        
        public UICopyFormFormnamePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnlcopyform";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Copy Form\r\nForm name*  ", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel formpanel formpanelsmall";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "139";
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICopyFormPane
        {
            get
            {
                if ((this.mUICopyFormPane == null))
                {
                    this.mUICopyFormPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICopyFormPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICopyFormPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICopyFormPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Copy Form";
                    this.mUICopyFormPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICopyFormPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUICopyFormPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUICopyFormPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mUICopyFormPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICopyFormPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightAppointmenWindow : BrowserWindow
    {
        
        public UIGreenLightAppointmenWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightAppointmenDocument UIGreenLightAppointmenDocument
        {
            get
            {
                if ((this.mUIGreenLightAppointmenDocument == null))
                {
                    this.mUIGreenLightAppointmenDocument = new UIGreenLightAppointmenDocument(this);
                }
                return this.mUIGreenLightAppointmenDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightAppointmenDocument mUIGreenLightAppointmenDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightAppointmenDocument : HtmlDocument
    {
        
        public UIGreenLightAppointmenDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=59649", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFormDesignHyperlink
        {
            get
            {
                if ((this.mUIFormDesignHyperlink == null))
                {
                    this.mUIFormDesignHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConForms_tabFormDes";
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Form Design ";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFormDesignHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=59649#", PropertyExpressionOperator.Contains));
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "45";
                    #endregion
                }
                return this.mUIFormDesignHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFormDesignHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightAppointmenWindow1 : BrowserWindow
    {
        
        public UIGreenLightAppointmenWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightAppointmenDocument1 UIGreenLightAppointmenDocument
        {
            get
            {
                if ((this.mUIGreenLightAppointmenDocument == null))
                {
                    this.mUIGreenLightAppointmenDocument = new UIGreenLightAppointmenDocument1(this);
                }
                return this.mUIGreenLightAppointmenDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightAppointmenDocument1 mUIGreenLightAppointmenDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightAppointmenDocument1 : HtmlDocument
    {
        
        public UIGreenLightAppointmenDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=59649", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFormDesignHyperlink
        {
            get
            {
                if ((this.mUIFormDesignHyperlink == null))
                {
                    this.mUIFormDesignHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabConForms_tabFormDes";
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFormDesignHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Form Design ";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFormDesignHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=59649#", PropertyExpressionOperator.Contains));
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=__tab_ctl00_contentmain_ta";
                    this.mUIFormDesignHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "45";
                    #endregion
                }
                return this.mUIFormDesignHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFormDesignHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiWindow3 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow3()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument19 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument19(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument19 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument19 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=76479", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEditableDiv UIDefaultvalueforFormaEdit
        {
            get
            {
                if ((this.mUIDefaultvalueforFormaEdit == null))
                {
                    this.mUIDefaultvalueforFormaEdit = new HtmlEditableDiv(this);
                    #region Search Criteria
                    this.mUIDefaultvalueforFormaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "EditorExtender1_ExtenderContentEditable";
                    this.mUIDefaultvalueforFormaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIDefaultvalueforFormaEdit.FilterProperties[HtmlEdit.PropertyNames.InnerText] = "Default value for Formatted Large Text";
                    this.mUIDefaultvalueforFormaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDefaultvalueforFormaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "ajax__html_editor_extender_texteditor";
                    this.mUIDefaultvalueforFormaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=EditorExtender1_ExtenderContentEditable class=ajax__html_editor_extender_texte" +
                        "ditor contentEditable=true style=\"OVERFLOW: auto; HEIGHT: 245px; CLEAR: both\"";
                    this.mUIDefaultvalueforFormaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "271";
                    #endregion
                }
                return this.mUIDefaultvalueforFormaEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEditableDiv mUIDefaultvalueforFormaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiWindow4 : BrowserWindow
    {
        
        public UIGreenLightCustomEntiWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "GreenLight", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGreenLightCustomEntiDocument20 UIGreenLightCustomEntiDocument
        {
            get
            {
                if ((this.mUIGreenLightCustomEntiDocument == null))
                {
                    this.mUIGreenLightCustomEntiDocument = new UIGreenLightCustomEntiDocument20(this);
                }
                return this.mUIGreenLightCustomEntiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGreenLightCustomEntiDocument20 mUIGreenLightCustomEntiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGreenLightCustomEntiDocument20 : HtmlDocument
    {
        
        public UIGreenLightCustomEntiDocument20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aecustomentity.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aecustomentity.aspx?entityid=78273", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIPopupFormOptionsPane
        {
            get
            {
                if ((this.mUIPopupFormOptionsPane == null))
                {
                    this.mUIPopupFormOptionsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIPopupFormOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "popupFormOptions";
                    this.mUIPopupFormOptionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPopupFormOptionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIPopupFormOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPopupFormOptionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sm_form_field_options";
                    this.mUIPopupFormOptionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=popupFormOptions class=sm_form_field_options style=\"RIGHT: auto; POSITION: abs" +
                        "olute; ZOOM: 1; LEFT: 582px; FILTER: none; Z-INDEX: 10020; TOP: 245px\" jQuery190" +
                        "09883768681904519=\"94\"";
                    this.mUIPopupFormOptionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "668";
                    #endregion
                }
                return this.mUIPopupFormOptionsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIPopupFormOptionsPane;
        #endregion
    }
}
