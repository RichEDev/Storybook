// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.UserDefinedFieldsNewUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UserDefinedFieldsNewUIMap
    {
        
        /// <summary>
        /// ClickNewUserDefinedFieldLink
        /// </summary>
        public void ClickNewUserDefinedFieldLink()
        {
            #region Variable Declarations
            HtmlHyperlink addUserdefinedFieldHyperlink = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldGridDocument.AddUserdefinedFieldHyperlink;
            #endregion

            // Click 'Add Userdefined Field' link
            Mouse.Click(addUserdefinedFieldHyperlink, new Point(90, 9));
        }
        
        /// <summary>
        /// PressCancelUserDefinedFieldListItemButton
        /// </summary>
        public void PressCancelUserDefinedFieldListItemButton()
        {
            #region Variable Declarations
            HtmlInputButton cancelSaveListItemButton = this.UserdefinedFieldsListButtonWindow.UserdefinedFieldListButtonDocument.CancelSaveListItemButton;
            #endregion

            // Click 'ctl00$contentmain$cmdlistitemcancel' button
            Mouse.Click(cancelSaveListItemButton, new Point(27, 18));
        }
        
        /// <summary>
        /// PressCancelUserDefinedFieldsButton
        /// </summary>
        public void PressCancelUserDefinedFieldsButton()
        {
            #region Variable Declarations
            HtmlInputButton cancelButton = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldButtonsDocument.CancelButton;
            #endregion

            // Click 'ctl00$contentmain$cmdcancel' button
            Mouse.Click(cancelButton, new Point(30, 8));
        }
        
        /// <summary>
        /// PressCloseOnModalMessage
        /// </summary>
        public void PressCloseOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage closeModalButton = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldButtonsDocument.CloseModalButton;
            #endregion

            // Click 'OK' image
            Mouse.Click(closeModalButton, new Point(36, 15));
        }
        
        /// <summary>
        /// PressCloseUserDefinedFieldsGridButton
        /// </summary>
        public void PressCloseUserDefinedFieldsGridButton()
        {
            #region Variable Declarations
            HtmlInputButton closeSummaryButton = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldGridDocument.CloseSummaryButton;
            #endregion

            // Click 'ctl00$contentmain$cmdClose' button
            Mouse.Click(closeSummaryButton, new Point(20, 15));
        }
        
        /// <summary>
        /// PressSaveUserDefinedFieldButton
        /// </summary>
        public void PressSaveUserDefinedFieldButton()
        {
            #region Variable Declarations
            HtmlImage saveImageButton = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldButtonsDocument.SaveImageButton;
            #endregion

            // Click 'Save' image
            Mouse.Click(saveImageButton, new Point(19, 13));
        }
        
        /// <summary>
        /// PressSaveUserDefinedFieldListItemButton
        /// </summary>
        public void PressSaveUserDefinedFieldListItemButton()
        {
            #region Variable Declarations
            HtmlImage saveIListItemmage = this.UserdefinedFieldsListButtonWindow.UserdefinedFieldListButtonDocument.SaveIListItemmage;
            #endregion

            // Click 'Save' image
            Mouse.Click(saveIListItemmage, new Point(28, 18));
        }
        
        /// <summary>
        /// ValidateModalMessage - Use 'ValidateModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateModalMessage()
        {
            #region Variable Declarations
            HtmlDiv modalMessagePane = this.UserDefinedFieldLinksGridWindow.UserDefinedFieldButtonsDocument.ModalMessagePane;
            #endregion

            // Verify that the 'DisplayText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a name for this attribute in the box provided'
            Assert.AreEqual(this.ValidateModalMessageExpectedValues.ModalMessagePaneDisplayText, modalMessagePane.DisplayText);
        }
        
        #region Properties
        public virtual ValidateModalMessageExpectedValues ValidateModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateModalMessageExpectedValues == null))
                {
                    this.mValidateModalMessageExpectedValues = new ValidateModalMessageExpectedValues();
                }
                return this.mValidateModalMessageExpectedValues;
            }
        }
        
        public UserDefinedFieldControlsWindow UserDefinedFieldControlsWindow
        {
            get
            {
                if ((this.mUserDefinedFieldControlsWindow == null))
                {
                    this.mUserDefinedFieldControlsWindow = new UserDefinedFieldControlsWindow();
                }
                return this.mUserDefinedFieldControlsWindow;
            }
        }
        
        public UserDefinedFieldLinksGridWindow UserDefinedFieldLinksGridWindow
        {
            get
            {
                if ((this.mUserDefinedFieldLinksGridWindow == null))
                {
                    this.mUserDefinedFieldLinksGridWindow = new UserDefinedFieldLinksGridWindow();
                }
                return this.mUserDefinedFieldLinksGridWindow;
            }
        }
        
        public UserdefinedFieldsListButtonWindow UserdefinedFieldsListButtonWindow
        {
            get
            {
                if ((this.mUserdefinedFieldsListButtonWindow == null))
                {
                    this.mUserdefinedFieldsListButtonWindow = new UserdefinedFieldsListButtonWindow();
                }
                return this.mUserdefinedFieldsListButtonWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateModalMessageExpectedValues mValidateModalMessageExpectedValues;
        
        private UserDefinedFieldControlsWindow mUserDefinedFieldControlsWindow;
        
        private UserDefinedFieldLinksGridWindow mUserDefinedFieldLinksGridWindow;
        
        private UserdefinedFieldsListButtonWindow mUserdefinedFieldsListButtonWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ValidateModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a name for this attribute in the box provided'
        /// </summary>
        public string ModalMessagePaneDisplayText = "Message from Expenses\r\n\r\n\r\nPlease enter a name for this attribute in the box prov" +
            "ided";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserDefinedFieldControlsWindow : BrowserWindow
    {
        
        public UserDefinedFieldControlsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UserDefinedFieldControlsDocument UserDefinedFieldControlsDocument
        {
            get
            {
                if ((this.mUserDefinedFieldControlsDocument == null))
                {
                    this.mUserDefinedFieldControlsDocument = new UserDefinedFieldControlsDocument(this);
                }
                return this.mUserDefinedFieldControlsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UserDefinedFieldControlsDocument mUserDefinedFieldControlsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserDefinedFieldControlsDocument : HtmlDocument
    {
        
        public UserDefinedFieldControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeuserdefined.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit DisplayNameTextBox
        {
            get
            {
                if ((this.mDisplayNameTextBox == null))
                {
                    this.mDisplayNameTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mDisplayNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributename";
                    this.mDisplayNameTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributename";
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Display Name*";
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributename cl";
                    this.mDisplayNameTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mDisplayNameTextBox;
            }
        }
        
        public HtmlComboBox AppliesToComboBox
        {
            get
            {
                if ((this.mAppliesToComboBox == null))
                {
                    this.mAppliesToComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mAppliesToComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbappliesto";
                    this.mAppliesToComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbappliesto";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Applies To*";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "9";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbappliesto class=";
                    this.mAppliesToComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAppliesToComboBox;
            }
        }
        
        public HtmlTextArea DescriptionTextBox
        {
            get
            {
                if ((this.mDescriptionTextBox == null))
                {
                    this.mDescriptionTextBox = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributedescription";
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributedescription";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributedescrip";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mDescriptionTextBox;
            }
        }
        
        public HtmlTextArea TooltipTextBox
        {
            get
            {
                if ((this.mTooltipTextBox == null))
                {
                    this.mTooltipTextBox = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mTooltipTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtattributetooltip";
                    this.mTooltipTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtattributetooltip";
                    this.mTooltipTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Tooltip";
                    this.mTooltipTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTooltipTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mTooltipTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtattributetooltip";
                    this.mTooltipTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mTooltipTextBox;
            }
        }
        
        public HtmlCheckBox ItemSpecificCheckBox
        {
            get
            {
                if ((this.mItemSpecificCheckBox == null))
                {
                    this.mItemSpecificCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mItemSpecificCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkspecific";
                    this.mItemSpecificCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkspecific";
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Item Specific";
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled id=ctl00_contentmain_chkspecifi";
                    this.mItemSpecificCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mItemSpecificCheckBox;
            }
        }
        
        public HtmlComboBox GroupComboBox
        {
            get
            {
                if ((this.mGroupComboBox == null))
                {
                    this.mGroupComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlstgroup";
                    this.mGroupComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlstgroup";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Group";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "1";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "onchange=ddlstgroup_OnChange(); id=ctl00";
                    this.mGroupComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mGroupComboBox;
            }
        }
        
        public HtmlComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbattributetype";
                    this.mTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbattributetype";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Type";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "9";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "onchange=\"ClearRelatedTable(); showFurth";
                    this.mTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        
        public HtmlCheckBox MandatoryCheckBox
        {
            get
            {
                if ((this.mMandatoryCheckBox == null))
                {
                    this.mMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkattributemandatory";
                    this.mMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkattributemandatory";
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory";
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkattributemandato";
                    this.mMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mMandatoryCheckBox;
            }
        }
        
        public HtmlEdit TextMaxLengthTextBox
        {
            get
            {
                if ((this.mTextMaxLengthTextBox == null))
                {
                    this.mTextMaxLengthTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mTextMaxLengthTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlength";
                    this.mTextMaxLengthTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlength";
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmaxlength name=c";
                    this.mTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mTextMaxLengthTextBox;
            }
        }
        
        public HtmlComboBox TextFormatComboBox
        {
            get
            {
                if ((this.mTextFormatComboBox == null))
                {
                    this.mTextFormatComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mTextFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbtextformat";
                    this.mTextFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbtextformat";
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmbtextformat name=";
                    this.mTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mTextFormatComboBox;
            }
        }
        
        public HtmlEdit DecimalPrecisionTextBox
        {
            get
            {
                if ((this.mDecimalPrecisionTextBox == null))
                {
                    this.mDecimalPrecisionTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mDecimalPrecisionTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtprecision";
                    this.mDecimalPrecisionTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtprecision";
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtpreci";
                    this.mDecimalPrecisionTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    #endregion
                }
                return this.mDecimalPrecisionTextBox;
            }
        }
        
        public HtmlComboBox DefaultValueComboBox
        {
            get
            {
                if ((this.mDefaultValueComboBox == null))
                {
                    this.mDefaultValueComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mDefaultValueComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdefaultvalue";
                    this.mDefaultValueComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdefaultvalue";
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmbdefau";
                    this.mDefaultValueComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mDefaultValueComboBox;
            }
        }
        
        public HtmlComboBox DateFormatComboBox
        {
            get
            {
                if ((this.mDateFormatComboBox == null))
                {
                    this.mDateFormatComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mDateFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbdateformat";
                    this.mDateFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbdateformat";
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmbdatef";
                    this.mDateFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mDateFormatComboBox;
            }
        }
        
        public HtmlEdit LTextMaxLengthTextBox
        {
            get
            {
                if ((this.mLTextMaxLengthTextBox == null))
                {
                    this.mLTextMaxLengthTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mLTextMaxLengthTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxlengthlarge";
                    this.mLTextMaxLengthTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxlengthlarge";
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtmaxle";
                    this.mLTextMaxLengthTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    #endregion
                }
                return this.mLTextMaxLengthTextBox;
            }
        }
        
        public HtmlComboBox LTextFormatComboBox
        {
            get
            {
                if ((this.mLTextFormatComboBox == null))
                {
                    this.mLTextFormatComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mLTextFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbtextformatlarge";
                    this.mLTextFormatComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbtextformatlarge";
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmbtextf";
                    this.mLTextFormatComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mLTextFormatComboBox;
            }
        }
        
        public HtmlEdit HyperlinkTextBox
        {
            get
            {
                if ((this.mHyperlinkTextBox == null))
                {
                    this.mHyperlinkTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mHyperlinkTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkText";
                    this.mHyperlinkTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkText";
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtHyper";
                    this.mHyperlinkTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    #endregion
                }
                return this.mHyperlinkTextBox;
            }
        }
        
        public HtmlEdit HyperlinkPathTextBox
        {
            get
            {
                if ((this.mHyperlinkPathTextBox == null))
                {
                    this.mHyperlinkPathTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mHyperlinkPathTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtHyperlinkPath";
                    this.mHyperlinkPathTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtHyperlinkPath";
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtHyper";
                    this.mHyperlinkPathTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    #endregion
                }
                return this.mHyperlinkPathTextBox;
            }
        }
        
        public HtmlList ListItemsListBox
        {
            get
            {
                if ((this.mListItemsListBox == null))
                {
                    this.mListItemsListBox = new HtmlList(this);
                    #region Search Criteria
                    this.mListItemsListBox.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstitems";
                    this.mListItemsListBox.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstitems";
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.ItemCount] = "0";
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_lstitems";
                    this.mListItemsListBox.FilterProperties[HtmlList.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mListItemsListBox;
            }
        }
        
        public HtmlEdit ListItemTextBox
        {
            get
            {
                if ((this.mListItemTextBox == null))
                {
                    this.mListItemTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mListItemTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtlistitem";
                    this.mListItemTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtlistitem";
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "List item*";
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtlistitem class=f";
                    this.mListItemTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "19";
                    #endregion
                }
                return this.mListItemTextBox;
            }
        }
        
        public HtmlCheckBox ArchivedCheckBox
        {
            get
            {
                if ((this.mArchivedCheckBox == null))
                {
                    this.mArchivedCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mArchivedCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkArchiveListItem";
                    this.mArchivedCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkArchiveListItem";
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Archived";
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkArchiveListItem ";
                    this.mArchivedCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "20";
                    #endregion
                }
                return this.mArchivedCheckBox;
            }
        }
        
        public ListItemsPane ListItemsPane
        {
            get
            {
                if ((this.mListItemsPane == null))
                {
                    this.mListItemsPane = new ListItemsPane(this);
                }
                return this.mListItemsPane;
            }
        }
        
        public HtmlImage MoveListItemUpImage
        {
            get
            {
                if ((this.mMoveListItemUpImage == null))
                {
                    this.mMoveListItemUpImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mMoveListItemUpImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_imgMoveUp";
                    this.mMoveListItemUpImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mMoveListItemUpImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move List Item Up";
                    this.mMoveListItemUpImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/Plain/arrow_up_blue.png";
                    this.mMoveListItemUpImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/16/Plain/arrow_up_blue.png", PropertyExpressionOperator.Contains));
                    this.mMoveListItemUpImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mMoveListItemUpImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=moveUpListItem(); id=ctl00_conte";
                    this.mMoveListItemUpImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mMoveListItemUpImage;
            }
        }
        
        public HtmlImage MoveListItemDownImage
        {
            get
            {
                if ((this.mMoveListItemDownImage == null))
                {
                    this.mMoveListItemDownImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mMoveListItemDownImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_imgMoveDown";
                    this.mMoveListItemDownImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mMoveListItemDownImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Move List Item Down";
                    this.mMoveListItemDownImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/Plain/arrow_down_blue.png";
                    this.mMoveListItemDownImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/16/Plain/arrow_down_blue.png", PropertyExpressionOperator.Contains));
                    this.mMoveListItemDownImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mMoveListItemDownImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=moveDownListItem(); id=ctl00_con";
                    this.mMoveListItemDownImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "7";
                    #endregion
                }
                return this.mMoveListItemDownImage;
            }
        }
        
        public HtmlComboBox RelatedTableComboBox
        {
            get
            {
                if ((this.mRelatedTableComboBox == null))
                {
                    this.mRelatedTableComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlRelatedTable";
                    this.mRelatedTableComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlRelatedTable";
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Related Table*";
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "14";
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_ddlRelat";
                    this.mRelatedTableComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mRelatedTableComboBox;
            }
        }
        
        public HtmlComboBox DisplayFieldComboBox
        {
            get
            {
                if ((this.mDisplayFieldComboBox == null))
                {
                    this.mDisplayFieldComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mDisplayFieldComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbDisplayField";
                    this.mDisplayFieldComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbDisplayField";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Display Field*";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "1";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmbDispl";
                    this.mDisplayFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mDisplayFieldComboBox;
            }
        }
        
        public HtmlList MatchFieldsListBox
        {
            get
            {
                if ((this.mMatchFieldsListBox == null))
                {
                    this.mMatchFieldsListBox = new HtmlList(this);
                    #region Search Criteria
                    this.mMatchFieldsListBox.SearchProperties[HtmlList.PropertyNames.Id] = "ctl00_contentmain_lstmatchfields";
                    this.mMatchFieldsListBox.SearchProperties[HtmlList.PropertyNames.Name] = "ctl00$contentmain$lstmatchfields";
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.LabeledBy] = null;
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.Size] = "4";
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.Title] = null;
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.ItemCount] = "0";
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.Class] = null;
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_lstmatch";
                    this.mMatchFieldsListBox.FilterProperties[HtmlList.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mMatchFieldsListBox;
            }
        }
        
        public HtmlEdit MaxNoSuggestionsTextBox
        {
            get
            {
                if ((this.mMaxNoSuggestionsTextBox == null))
                {
                    this.mMaxNoSuggestionsTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mMaxNoSuggestionsTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmaxrows";
                    this.mMaxNoSuggestionsTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmaxrows";
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Max No. Suggestions";
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_txtmaxro";
                    this.mMaxNoSuggestionsTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    #endregion
                }
                return this.mMaxNoSuggestionsTextBox;
            }
        }
        
        public HtmlComboBox MatchFieldComboBox
        {
            get
            {
                if ((this.mMatchFieldComboBox == null))
                {
                    this.mMatchFieldComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mMatchFieldComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_cmbmatchfieldlist";
                    this.mMatchFieldComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$cmbmatchfieldlist";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Match Field*";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "1";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "tabIndex=0 id=ctl00_contentmain_cmbmatch";
                    this.mMatchFieldComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "12";
                    #endregion
                }
                return this.mMatchFieldComboBox;
            }
        }
        
        public RelationshipPane RelationshipPane
        {
            get
            {
                if ((this.mRelationshipPane == null))
                {
                    this.mRelationshipPane = new RelationshipPane(this);
                }
                return this.mRelationshipPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mDisplayNameTextBox;
        
        private HtmlComboBox mAppliesToComboBox;
        
        private HtmlTextArea mDescriptionTextBox;
        
        private HtmlTextArea mTooltipTextBox;
        
        private HtmlCheckBox mItemSpecificCheckBox;
        
        private HtmlComboBox mGroupComboBox;
        
        private HtmlComboBox mTypeComboBox;
        
        private HtmlCheckBox mMandatoryCheckBox;
        
        private HtmlEdit mTextMaxLengthTextBox;
        
        private HtmlComboBox mTextFormatComboBox;
        
        private HtmlEdit mDecimalPrecisionTextBox;
        
        private HtmlComboBox mDefaultValueComboBox;
        
        private HtmlComboBox mDateFormatComboBox;
        
        private HtmlEdit mLTextMaxLengthTextBox;
        
        private HtmlComboBox mLTextFormatComboBox;
        
        private HtmlEdit mHyperlinkTextBox;
        
        private HtmlEdit mHyperlinkPathTextBox;
        
        private HtmlList mListItemsListBox;
        
        private HtmlEdit mListItemTextBox;
        
        private HtmlCheckBox mArchivedCheckBox;
        
        private ListItemsPane mListItemsPane;
        
        private HtmlImage mMoveListItemUpImage;
        
        private HtmlImage mMoveListItemDownImage;
        
        private HtmlComboBox mRelatedTableComboBox;
        
        private HtmlComboBox mDisplayFieldComboBox;
        
        private HtmlList mMatchFieldsListBox;
        
        private HtmlEdit mMaxNoSuggestionsTextBox;
        
        private HtmlComboBox mMatchFieldComboBox;
        
        private RelationshipPane mRelationshipPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ListItemsPane : HtmlDiv
    {
        
        public ListItemsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divListOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "List Items \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divListOptions";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
            #endregion
        }
        
        #region Properties
        public HtmlImage AddListItemImage
        {
            get
            {
                if ((this.mAddListItemImage == null))
                {
                    this.mAddListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mAddListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Add List Item";
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/plain/add2.png";
                    this.mAddListItemImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, ".sel-expenses.com/shared/images/icons/16/plain/add2.png", PropertyExpressionOperator.Contains));
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showListItemModal();";
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showListItemModal();";
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Add List Item\" src=\"../images/icons";
                    this.mAddListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAddListItemImage;
            }
        }
        
        public HtmlImage EditListItemImage
        {
            get
            {
                if ((this.mEditListItemImage == null))
                {
                    this.mEditListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mEditListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit List Item";
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.gif";
                    this.mEditListItemImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/edit.gif", PropertyExpressionOperator.Contains));
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "editListItem();";
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:editListItem();";
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit List Item\" src=\"../images/icon";
                    this.mEditListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mEditListItemImage;
            }
        }
        
        public HtmlImage DeleteListItemImage
        {
            get
            {
                if ((this.mDeleteListItemImage == null))
                {
                    this.mDeleteListItemImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mDeleteListItemImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete List Item";
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.gif";
                    this.mDeleteListItemImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/delete2.gif", PropertyExpressionOperator.Contains));
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "removeListItem();";
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:removeListItem();";
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Delete List Item\" src=\"../images/ic";
                    this.mDeleteListItemImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    #endregion
                }
                return this.mDeleteListItemImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mAddListItemImage;
        
        private HtmlImage mEditListItemImage;
        
        private HtmlImage mDeleteListItemImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RelationshipPane : HtmlDiv
    {
        
        public RelationshipPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divRelationshipTextBoxOptions";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Related Table* [None] Addresses Budget H";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divRelationshipTextBoxOptions";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "40";
            this.WindowTitles.Add("Userdefined Field: New");
            #endregion
        }
        
        #region Properties
        public HtmlImage AddMatchFieldImage
        {
            get
            {
                if ((this.mAddMatchFieldImage == null))
                {
                    this.mAddMatchFieldImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mAddMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mAddMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mAddMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Add Match Field";
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/16/plain/add2.png";
                    this.mAddMatchFieldImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/16/plain/add2.png", PropertyExpressionOperator.Contains));
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showMatchFieldModal();";
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showMatchFieldModal();";
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Add Match Field\" src=\"../images/ico";
                    this.mAddMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAddMatchFieldImage;
            }
        }
        
        public HtmlImage DeleteMatchFieldImage
        {
            get
            {
                if ((this.mDeleteMatchFieldImage == null))
                {
                    this.mDeleteMatchFieldImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mDeleteMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mDeleteMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mDeleteMatchFieldImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Delete Match Field";
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/delete2.gif";
                    this.mDeleteMatchFieldImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/icons/delete2.gif", PropertyExpressionOperator.Contains));
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "removeFieldItem();";
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:removeFieldItem();";
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Delete Match Field\" src=\"../images/";
                    this.mDeleteMatchFieldImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mDeleteMatchFieldImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mAddMatchFieldImage;
        
        private HtmlImage mDeleteMatchFieldImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserDefinedFieldLinksGridWindow : BrowserWindow
    {
        
        public UserDefinedFieldLinksGridWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UserDefinedFieldGridDocument UserDefinedFieldGridDocument
        {
            get
            {
                if ((this.mUserDefinedFieldGridDocument == null))
                {
                    this.mUserDefinedFieldGridDocument = new UserDefinedFieldGridDocument(this);
                }
                return this.mUserDefinedFieldGridDocument;
            }
        }
        
        public UserDefinedFieldButtonsDocument UserDefinedFieldButtonsDocument
        {
            get
            {
                if ((this.mUserDefinedFieldButtonsDocument == null))
                {
                    this.mUserDefinedFieldButtonsDocument = new UserDefinedFieldButtonsDocument(this);
                }
                return this.mUserDefinedFieldButtonsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UserDefinedFieldGridDocument mUserDefinedFieldGridDocument;
        
        private UserDefinedFieldButtonsDocument mUserDefinedFieldButtonsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserDefinedFieldGridDocument : HtmlDocument
    {
        
        public UserDefinedFieldGridDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/adminuserdefined.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/adminuserdefined.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable UserDefinedFieldsGrid
        {
            get
            {
                if ((this.mUserDefinedFieldsGrid == null))
                {
                    this.mUserDefinedFieldsGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mUserDefinedFieldsGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridFields";
                    this.mUserDefinedFieldsGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Display Name DescriptionField TypeMandat";
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridFields class=datatbl";
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mUserDefinedFieldsGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUserDefinedFieldsGrid;
            }
        }
        
        public HtmlHyperlink AddUserdefinedFieldHyperlink
        {
            get
            {
                if ((this.mAddUserdefinedFieldHyperlink == null))
                {
                    this.mAddUserdefinedFieldHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_lnkAddUDF";
                    this.mAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mAddUserdefinedFieldHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Userdefined Field";
                    this.mAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
                    this.mAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mAddUserdefinedFieldHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aeuserdefined.aspx", PropertyExpressionOperator.Contains));
                    this.mAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_lnkAddUDF class=sub";
                    this.mAddUserdefinedFieldHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mAddUserdefinedFieldHyperlink;
            }
        }
        
        public HtmlInputButton CloseSummaryButton
        {
            get
            {
                if ((this.mCloseSummaryButton == null))
                {
                    this.mCloseSummaryButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCloseSummaryButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdClose";
                    this.mCloseSummaryButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdClose";
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mCloseSummaryButton.FilterProperties.Add(new PropertyExpression("Src", "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_cmdClose style=\"BOR";
                    this.mCloseSummaryButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mCloseSummaryButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUserDefinedFieldsGrid;
        
        private HtmlHyperlink mAddUserdefinedFieldHyperlink;
        
        private HtmlInputButton mCloseSummaryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserDefinedFieldButtonsDocument : HtmlDocument
    {
        
        public UserDefinedFieldButtonsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeuserdefined.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv ModalMessagePane
        {
            get
            {
                if ((this.mModalMessagePane == null))
                {
                    this.mModalMessagePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mModalMessagePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mModalMessagePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mModalMessagePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mModalMessagePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mModalMessagePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mModalMessagePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_pnlMasterPopup class=errorModal style=\"POSITION: fixed; LEFT: 790px; Z-I" +
                        "NDEX: 11004; TOP: 440px\"";
                    this.mModalMessagePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mModalMessagePane;
            }
        }
        
        public HtmlImage CloseModalButton
        {
            get
            {
                if ((this.mCloseModalButton == null))
                {
                    this.mCloseModalButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mCloseModalButton.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mCloseModalButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCloseModalButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mCloseModalButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mCloseModalButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mCloseModalButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mCloseModalButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=SEL.MasterPopup.HideMasterPopup(";
                    this.mCloseModalButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mCloseModalButton;
            }
        }
        
        public HtmlImage SaveImageButton
        {
            get
            {
                if ((this.mSaveImageButton == null))
                {
                    this.mSaveImageButton = new HtmlImage(this);
                    #region Search Criteria
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_cmdok";
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mSaveImageButton.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mSaveImageButton.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = null;
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.Href] = null;
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=\"populateListItems();if (validat";
                    this.mSaveImageButton.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mSaveImageButton;
            }
        }
        
        public HtmlInputButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdcancel";
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdcancel";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mCancelButton.FilterProperties.Add(new PropertyExpression("Src", "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "tabIndex=-1 id=ctl00_contentmain_cmdcanc";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "18";
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mModalMessagePane;
        
        private HtmlImage mCloseModalButton;
        
        private HtmlImage mSaveImageButton;
        
        private HtmlInputButton mCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserdefinedFieldsListButtonWindow : BrowserWindow
    {
        
        public UserdefinedFieldsListButtonWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UserdefinedFieldListButtonDocument UserdefinedFieldListButtonDocument
        {
            get
            {
                if ((this.mUserdefinedFieldListButtonDocument == null))
                {
                    this.mUserdefinedFieldListButtonDocument = new UserdefinedFieldListButtonDocument(this);
                }
                return this.mUserdefinedFieldListButtonDocument;
            }
        }
        #endregion
        
        #region Fields
        private UserdefinedFieldListButtonDocument mUserdefinedFieldListButtonDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UserdefinedFieldListButtonDocument : HtmlDocument
    {
        
        public UserdefinedFieldListButtonDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeuserdefined.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeuserdefined.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlImage SaveIListItemmage
        {
            get
            {
                if ((this.mSaveIListItemmage == null))
                {
                    this.mSaveIListItemmage = new HtmlImage(this);
                    #region Search Criteria
                    this.mSaveIListItemmage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_btnSaveListitem";
                    this.mSaveIListItemmage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mSaveIListItemmage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Save";
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mSaveIListItemmage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_save.png", PropertyExpressionOperator.Contains));
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "addListItem();";
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:addListItem();";
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.Class] = "";
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnSaveListitem sty";
                    this.mSaveIListItemmage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mSaveIListItemmage;
            }
        }
        
        public HtmlInputButton CancelSaveListItemButton
        {
            get
            {
                if ((this.mCancelSaveListItemButton == null))
                {
                    this.mCancelSaveListItemButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCancelSaveListItemButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_cmdlistitemcancel";
                    this.mCancelSaveListItemButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$cmdlistitemcancel";
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "";
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mCancelSaveListItemButton.FilterProperties.Add(new PropertyExpression("Src", "sel-expenses.com/shared/images/buttons/cancel_up.gif", PropertyExpressionOperator.Contains));
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.Title] = "";
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.Class] = "";
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=hideListItemModal(); tabIndex=0 ";
                    this.mCancelSaveListItemButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "21";
                    #endregion
                }
                return this.mCancelSaveListItemButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mSaveIListItemmage;
        
        private HtmlInputButton mCancelSaveListItemButton;
        #endregion
    }
}
