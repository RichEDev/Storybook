// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.GeneralOptionsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class GeneralOptionsUIMap
    {
        
        /// <summary>
        /// ClickCompanyModal
        /// </summary>
        public void ClickCompanyModal()
        {
            #region Variable Declarations
            HtmlImage uIEditcodeImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CompanRow.UIEditcodeImage;
            #endregion

            // Click 'Edit {code}' image
            Mouse.Click(uIEditcodeImage, new Point(6, 11));
        }
        
        /// <summary>
        /// ClickCostcodeModal
        /// </summary>
        public void ClickCostcodeModal()
        {
            #region Variable Declarations
            HtmlImage uIEditcodeImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CostCoRow.UIEditcodeImage;
            #endregion

            // Click 'Edit {code}' image
            Mouse.Click(uIEditcodeImage, new Point(15, 9));
        }
        
        /// <summary>
        /// ClickCountryModl
        /// </summary>
        public void ClickCountryModl()
        {
            #region Variable Declarations
            HtmlImage uIEditcountryImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CountrRow.UIEditcountryImage;
            #endregion

            // Click 'Edit country' image
            Mouse.Click(uIEditcountryImage, new Point(13, 4));
        }
        
        /// <summary>
        /// ClickCurrencyModal
        /// </summary>
        public void ClickCurrencyModal()
        {
            #region Variable Declarations
            HtmlImage uIEditcurrencyImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CurrenRow.UIEditcurrencyImage;
            #endregion

            // Click 'Edit currency' image
            Mouse.Click(uIEditcurrencyImage, new Point(3, 7));
        }
        
        /// <summary>
        /// ClickDepartmentModal
        /// </summary>
        public void ClickDepartmentModal()
        {
            #region Variable Declarations
            HtmlImage uIEditdepartmentImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_DepartRow.UIEditdepartmentImage;
            #endregion

            // Click 'Edit department' image
            Mouse.Click(uIEditdepartmentImage, new Point(7, 11));
        }
        
        /// <summary>
        /// ClickDisableReceipts - Use 'ClickDisableReceiptsParams' to pass parameters into this method.
        /// </summary>
        public void ClickDisableReceipts()
        {
            #region Variable Declarations
            HtmlCheckBox uIReceiptscanbeuploadeCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UIReceiptscanbeuploadeCheckBox;
            #endregion

            // Clear 'Receipts can be uploaded to expense items' check box
            uIReceiptscanbeuploadeCheckBox.Checked = this.ClickDisableReceiptsParams.UIReceiptscanbeuploadeCheckBoxChecked;
        }
        
        /// <summary>
        /// ClickEditCompany
        /// </summary>
        public void ClickEditCompany()
        {
            #region Variable Declarations
            HtmlImage uIEditcompanyImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CompanRow1.UIEditcompanyImage;
            #endregion

            // Click 'Edit company' image
            Mouse.Click(uIEditcompanyImage, new Point(4, 4));
        }
        
        /// <summary>
        /// ClickEditCostCodeModal
        /// </summary>
        public void ClickEditCostCodeModal()
        {
            #region Variable Declarations
            HtmlImage uIEditcostcodeImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_CostCoRow.UIEditcostcodeImage;
            #endregion

            // Click 'Edit costcode' image
            Mouse.Click(uIEditcostcodeImage, new Point(5, 1));
        }
        
        /// <summary>
        /// ClickEmailServerPage
        /// </summary>
        public void ClickEmailServerPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIEmailServerHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailServerHyperlink;
            #endregion

            // Click 'Email Server' link
            Mouse.Click(uIEmailServerHyperlink, new Point(71, 6));
        }
        
        /// <summary>
        /// ClickEnableMobileDevices - Use 'ClickEnableMobileDevicesParams' to pass parameters into this method.
        /// </summary>
        public void ClickEnableMobileDevices()
        {
            #region Variable Declarations
            HtmlCheckBox uIEnableMobileDevicesCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UIEnableMobileDevicesCheckBox;
            #endregion

            // Select 'Enable Mobile Devices' check box
            uIEnableMobileDevicesCheckBox.Checked = this.ClickEnableMobileDevicesParams.UIEnableMobileDevicesCheckBoxChecked;
        }
        
        /// <summary>
        /// ClickEnableReceipts - Use 'ClickEnableReceiptsParams' to pass parameters into this method.
        /// </summary>
        public void ClickEnableReceipts()
        {
            #region Variable Declarations
            HtmlCheckBox uIReceiptscanbeuploadeCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UIReceiptscanbeuploadeCheckBox;
            #endregion

            // Select 'Receipts can be uploaded to expense items' check box
            uIReceiptscanbeuploadeCheckBox.Checked = this.ClickEnableReceiptsParams.UIReceiptscanbeuploadeCheckBoxChecked;
        }
        
        /// <summary>
        /// ClickFromModal
        /// </summary>
        public void ClickFromModal()
        {
            #region Variable Declarations
            HtmlImage uIEditfromImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_FromRow1.UIEditfromImage;
            #endregion

            // Click 'Edit from' image
            Mouse.Click(uIEditfromImage, new Point(9, 11));
        }
        
        /// <summary>
        /// ClickGeneralOptionsContractsTab
        /// </summary>
        public void ClickGeneralOptionsContractsTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIContractsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument5.UIContractsHyperlink;
            #endregion

            // Click 'Contracts' link
            Mouse.Click(uIContractsHyperlink, new Point(29, 15));
        }
        
        /// <summary>
        /// ClickGeneralOptionsDeclarationTab
        /// </summary>
        public void ClickGeneralOptionsDeclarationTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIDeclarationHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIDeclarationHyperlink;
            #endregion

            // Click 'Declaration' link
            Mouse.Click(uIDeclarationHyperlink, new Point(31, 13));
        }
        
        /// <summary>
        /// ClickGeneralOptionsDelegatesTab
        /// </summary>
        public void ClickGeneralOptionsDelegatesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIDelegatesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIDelegatesHyperlink;
            #endregion

            // Click 'Delegates' link
            Mouse.Click(uIDelegatesHyperlink, new Point(21, 8));
        }
        
        /// <summary>
        /// ClickGeneralOptionsEmployeesTab
        /// </summary>
        public void ClickGeneralOptionsEmployeesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIEmployeesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIEmployeesHyperlink;
            #endregion

            // Click 'Employees' link
            Mouse.Click(uIEmployeesHyperlink, new Point(35, 11));
        }
        
        /// <summary>
        /// ClickGeneralOptionsGeneralDetailsTab
        /// </summary>
        public void ClickGeneralOptionsGeneralDetailsTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIGeneralDetailsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIGeneralDetailsHyperlink;
            #endregion

            // Click 'General Details' link
            Mouse.Click(uIGeneralDetailsHyperlink, new Point(40, 14));
        }
        
        /// <summary>
        /// ClickGeneralOptionsInvoicesTab
        /// </summary>
        public void ClickGeneralOptionsInvoicesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvoicesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument5.UIInvoicesHyperlink;
            #endregion

            // Click 'Invoices' link
            Mouse.Click(uIInvoicesHyperlink, new Point(34, 9));
        }
        
        /// <summary>
        /// ClickGeneralOptionsLink
        /// </summary>
        public void ClickGeneralOptionsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIGeneralOptionsHyperlink1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UIGeneralOptionsHyperlink1;
            #endregion

            // Click 'General Options' link
            Mouse.Click(uIGeneralOptionsHyperlink1, new Point(48, 8));
        }
        
        /// <summary>
        /// ClickGeneralOptionsPage
        /// </summary>
        public void ClickGeneralOptionsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIGeneralOptionsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIGeneralOptionsHyperlink;
            #endregion

            // Click 'General Options' link
            Mouse.Click(uIGeneralOptionsHyperlink, new Point(77, 10));
        }
        
        /// <summary>
        /// ClickGeneralOptionsSelfRegTab
        /// </summary>
        public void ClickGeneralOptionsSelfRegTab()
        {
            #region Variable Declarations
            HtmlHyperlink uISelfRegistrationHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UISelfRegistrationHyperlink;
            #endregion

            // Click 'Self Registration' link
            Mouse.Click(uISelfRegistrationHyperlink, new Point(43, 6));
        }
        
        /// <summary>
        /// ClickGeneralOptionsSessionTimeoutTab
        /// </summary>
        public void ClickGeneralOptionsSessionTimeoutTab()
        {
            #region Variable Declarations
            HtmlHyperlink uISessionTimeoutHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UISessionTimeoutHyperlink;
            #endregion

            // Click 'Session Timeout' link
            Mouse.Click(uISessionTimeoutHyperlink, new Point(67, 8));
        }
        
        /// <summary>
        /// ClickGeneralOptionsSuppliersTab
        /// </summary>
        public void ClickGeneralOptionsSuppliersTab()
        {
            #region Variable Declarations
            HtmlHyperlink uISuppliersHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument5.UISuppliersHyperlink;
            #endregion

            // Click 'Suppliers' link
            Mouse.Click(uISuppliersHyperlink, new Point(32, 1));
        }
        
        /// <summary>
        /// ClickMainAdministratorPage
        /// </summary>
        public void ClickMainAdministratorPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIMainAdministratorHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMainAdministratorHyperlink;
            #endregion

            // Click 'Main Administrator' link
            Mouse.Click(uIMainAdministratorHyperlink, new Point(93, 6));
        }
        
        /// <summary>
        /// ClickMobileDevicesTab
        /// </summary>
        public void ClickMobileDevicesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIMobileDevicesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIMobileDevicesHyperlink;
            #endregion

            // Click 'Mobile Devices' link
            Mouse.Click(uIMobileDevicesHyperlink, new Point(59, 15));
        }
        
        /// <summary>
        /// ClickNewExpensesAddressesTab
        /// </summary>
        public void ClickNewExpensesAddressesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddressesDistancesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIAddressesDistancesHyperlink;
            #endregion

            // Click 'Addresses & Distances' link
            Mouse.Click(uIAddressesDistancesHyperlink, new Point(64, 11));
        }
        
        /// <summary>
        /// ClickNewExpensesCodeAllocationTab
        /// </summary>
        public void ClickNewExpensesCodeAllocationTab()
        {
            #region Variable Declarations
            HtmlHyperlink uICodeAllocationHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UICodeAllocationHyperlink;
            #endregion

            // Click 'Code Allocation' link
            Mouse.Click(uICodeAllocationHyperlink, new Point(37, 7));
        }
        
        /// <summary>
        /// ClickNewExpensesDutyofCareTab
        /// </summary>
        public void ClickNewExpensesDutyofCareTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIDutyofCareHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIDutyofCareHyperlink;
            #endregion

            // Click 'Duty of Care' link
            Mouse.Click(uIDutyofCareHyperlink, new Point(49, 7));
        }
        
        /// <summary>
        /// ClickNewExpensesFieldSettings
        /// </summary>
        public void ClickNewExpensesFieldSettings()
        {
            #region Variable Declarations
            HtmlHyperlink uIFieldSettingsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIFieldSettingsHyperlink;
            #endregion

            // Click 'Field Settings' link
            Mouse.Click(uIFieldSettingsHyperlink, new Point(40, 0));
        }
        
        /// <summary>
        /// ClickNewExpensesMileageandCarsTab
        /// </summary>
        public void ClickNewExpensesMileageandCarsTab()
        {
            #region Variable Declarations
            HtmlSpan uIMileageCarsPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIMileageCarsPane;
            #endregion

            // Click 'Mileage & Cars' pane
            Mouse.Click(uIMileageCarsPane, new Point(53, 12));
        }
        
        /// <summary>
        /// ClickNewExpensesOtherPreferencesTab
        /// </summary>
        public void ClickNewExpensesOtherPreferencesTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIOtherPreferencesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument4.UIOtherPreferencesHyperlink;
            #endregion

            // Click 'Other Preferences' link
            Mouse.Click(uIOtherPreferencesHyperlink, new Point(56, 19));
        }
        
        /// <summary>
        /// ClickNewExpensesPage
        /// </summary>
        public void ClickNewExpensesPage()
        {
            #region Variable Declarations
            HtmlHyperlink uINewExpensesHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UINewExpensesHyperlink;
            #endregion

            // Click 'New Expenses' link
            Mouse.Click(uINewExpensesHyperlink, new Point(78, 9));
        }
        
        /// <summary>
        /// ClickNHSOptionsPage
        /// </summary>
        public void ClickNHSOptionsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uINHSOptionsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UINHSOptionsHyperlink;
            #endregion

            // Click 'NHS Options' link
            Mouse.Click(uINHSOptionsHyperlink, new Point(58, 14));
        }
        
        /// <summary>
        /// ClickOffDisplayText
        /// </summary>
        public void ClickOffDisplayText()
        {
            #region Variable Declarations
            HtmlDiv uIDisplayAsTest1DisplaPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UICtl00_contentmain_pnPane.UIDisplayAsTest1DisplaPane;
            #endregion

            // Click 'DisplayAs Test 1 Display as   Display o' pane
            Mouse.Click(uIDisplayAsTest1DisplaPane, new Point(801, 61));
        }
        
        /// <summary>
        /// ClickOtherDetailsModal
        /// </summary>
        public void ClickOtherDetailsModal()
        {
            #region Variable Declarations
            HtmlImage uIEditotherdetailsImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_OtherDRow.UIEditotherdetailsImage;
            #endregion

            // Click 'Edit otherdetails' image
            Mouse.Click(uIEditotherdetailsImage, new Point(4, 8));
        }
        
        /// <summary>
        /// ClickPasswordSettingsPage
        /// </summary>
        public void ClickPasswordSettingsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIPasswordSettingsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPasswordSettingsHyperlink;
            #endregion

            // Click 'Password Settings' link
            Mouse.Click(uIPasswordSettingsHyperlink, new Point(51, 10));
        }
        
        /// <summary>
        /// ClickProjectCodeModal
        /// </summary>
        public void ClickProjectCodeModal()
        {
            #region Variable Declarations
            HtmlImage uIEditprojectcodeImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_ProjecRow.UIEditprojectcodeImage;
            #endregion

            // Click 'Edit projectcode' image
            Mouse.Click(uIEditprojectcodeImage, new Point(2, 4));
        }
        
        /// <summary>
        /// ClickReasonModal
        /// </summary>
        public void ClickReasonModal()
        {
            #region Variable Declarations
            HtmlImage uIEditreasonImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_ReasonRow.UIEditreasonImage;
            #endregion

            // Click 'Edit reason' image
            Mouse.Click(uIEditreasonImage, new Point(4, 8));
        }
        
        /// <summary>
        /// ClickRegionalSettingsPage
        /// </summary>
        public void ClickRegionalSettingsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIRegionalSettingsHyperlink = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIRegionalSettingsHyperlink;
            #endregion

            // Click 'Regional Settings' link
            Mouse.Click(uIRegionalSettingsHyperlink, new Point(53, 9));
        }
        
        /// <summary>
        /// ClickToModal
        /// </summary>
        public void ClickToModal()
        {
            #region Variable Declarations
            HtmlImage uIEdittoImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UITbl_addScreen_ToRow.UIEdittoImage;
            #endregion

            // Click 'Edit to' image
            Mouse.Click(uIEdittoImage, new Point(6, 12));
        }
        
        /// <summary>
        /// EXCodeAllocationTickAll - Use 'EXCodeAllocationTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXCodeAllocationTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXCodeAllocationItemsAssignedCostCodes = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationItemsAssignedCostCodes;
            HtmlCheckBox eXCodeAllocationClaimantsshouldbeshoCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshouldbeshoCheckBox;
            HtmlCheckBox eXCodeAllocationItemsshouldbeassigneCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationItemsshouldbeassigneCheckBox;
            HtmlCheckBox eXCodeAllocationDepoDesc = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationDepoDesc;
            HtmlCheckBox eXCodeAllocationProjectcodes = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectcodes;
            HtmlCheckBox eXCodeAllocationProjectCodesDesc = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectCodesDesc;
            HtmlCheckBox eXCodeAllocationUsedefaultallocationCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationUsedefaultallocationCheckBox;
            HtmlCheckBox eXCodeAllocationClaimantsCostCodeBreakdown = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsCostCodeBreakdown;
            HtmlCheckBox eXCodeAllocationCostCodesInGenDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationCostCodesInGenDetails;
            HtmlCheckBox eXCodeAllocationClaimantsshowndeppobreakdown = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshowndeppobreakdown;
            HtmlCheckBox eXCodeAllocationDepartmentsshowningendetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationDepartmentsshowningendetails;
            HtmlCheckBox eXCodeAllocationClaimantsshownprojectcode = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshownprojectcode;
            HtmlCheckBox eXCodeAllocationProjectcodesingendetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectcodesingendetails;
            #endregion

            // Select 'Items should be assigned to cost codes' check box
            eXCodeAllocationItemsAssignedCostCodes.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationItemsAssignedCostCodesChecked;

            // Select 'Claimants should be shown the cost code's descript...' check box
            eXCodeAllocationClaimantsshouldbeshoCheckBox.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationClaimantsshouldbeshoCheckBoxChecked;

            // Select 'Items should be assigned to department codes' check box
            eXCodeAllocationItemsshouldbeassigneCheckBox.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationItemsshouldbeassigneCheckBoxChecked;

            // Select 'Claimants should be shown the department's descrip...' check box
            eXCodeAllocationDepoDesc.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationDepoDescChecked;

            // Select 'Items should be assigned to project codes' check box
            eXCodeAllocationProjectcodes.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationProjectcodesChecked;

            // Select 'Claimants should be shown the project code's descr...' check box
            eXCodeAllocationProjectCodesDesc.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationProjectCodesDescChecked;

            // Select 'Use default allocation if employee has none set' check box
            eXCodeAllocationUsedefaultallocationCheckBox.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationUsedefaultallocationCheckBoxChecked;

            // Select 'Claimants should be shown their cost code breakdow...' check box
            eXCodeAllocationClaimantsCostCodeBreakdown.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationClaimantsCostCodeBreakdownChecked;

            // Select 'Costcodes are shown in general details' check box
            eXCodeAllocationCostCodesInGenDetails.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationCostCodesInGenDetailsChecked;

            // Select 'Claimants should be shown their department breakdo...' check box
            eXCodeAllocationClaimantsshowndeppobreakdown.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationClaimantsshowndeppobreakdownChecked;

            // Select 'Departments are shown in general details' check box
            eXCodeAllocationDepartmentsshowningendetails.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationDepartmentsshowningendetailsChecked;

            // Select 'Claimants should be shown their project code break...' check box
            eXCodeAllocationClaimantsshownprojectcode.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationClaimantsshownprojectcodeChecked;

            // Select 'Project codes are shown in general details' check box
            eXCodeAllocationProjectcodesingendetails.Checked = this.EXCodeAllocationTickAllParams.EXCodeAllocationProjectcodesingendetailsChecked;
        }
        
        /// <summary>
        /// EXCodeAllocationUnTickAll - Use 'EXCodeAllocationUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXCodeAllocationUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXCodeAllocationItemsAssignedCostCodes = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationItemsAssignedCostCodes;
            HtmlCheckBox eXCodeAllocationClaimantsshouldbeshoCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshouldbeshoCheckBox;
            HtmlCheckBox eXCodeAllocationItemsshouldbeassigneCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationItemsshouldbeassigneCheckBox;
            HtmlCheckBox eXCodeAllocationDepoDesc = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationDepoDesc;
            HtmlCheckBox eXCodeAllocationProjectcodes = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectcodes;
            HtmlCheckBox eXCodeAllocationProjectCodesDesc = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectCodesDesc;
            HtmlCheckBox eXCodeAllocationUsedefaultallocationCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationUsedefaultallocationCheckBox;
            HtmlCheckBox eXCodeAllocationClaimantsCostCodeBreakdown = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsCostCodeBreakdown;
            HtmlCheckBox eXCodeAllocationCostCodesInGenDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationCostCodesInGenDetails;
            HtmlCheckBox eXCodeAllocationClaimantsshowndeppobreakdown = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshowndeppobreakdown;
            HtmlCheckBox eXCodeAllocationDepartmentsshowningendetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationDepartmentsshowningendetails;
            HtmlCheckBox eXCodeAllocationClaimantsshownprojectcode = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationClaimantsshownprojectcode;
            HtmlCheckBox eXCodeAllocationProjectcodesingendetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXCodeAllocationProjectcodesingendetails;
            #endregion

            // Clear 'Items should be assigned to cost codes' check box
            eXCodeAllocationItemsAssignedCostCodes.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationItemsAssignedCostCodesChecked;

            // Clear 'Claimants should be shown the cost code's descript...' check box
            eXCodeAllocationClaimantsshouldbeshoCheckBox.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationClaimantsshouldbeshoCheckBoxChecked;

            // Clear 'Items should be assigned to department codes' check box
            eXCodeAllocationItemsshouldbeassigneCheckBox.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationItemsshouldbeassigneCheckBoxChecked;

            // Clear 'Claimants should be shown the department's descrip...' check box
            eXCodeAllocationDepoDesc.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationDepoDescChecked;

            // Clear 'Items should be assigned to project codes' check box
            eXCodeAllocationProjectcodes.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationProjectcodesChecked;

            // Clear 'Claimants should be shown the project code's descr...' check box
            eXCodeAllocationProjectCodesDesc.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationProjectCodesDescChecked;

            // Clear 'Use default allocation if employee has none set' check box
            eXCodeAllocationUsedefaultallocationCheckBox.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationUsedefaultallocationCheckBoxChecked;

            // Clear 'Claimants should be shown their cost code breakdow...' check box
            eXCodeAllocationClaimantsCostCodeBreakdown.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationClaimantsCostCodeBreakdownChecked;

            // Clear 'Costcodes are shown in general details' check box
            eXCodeAllocationCostCodesInGenDetails.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationCostCodesInGenDetailsChecked;

            // Clear 'Claimants should be shown their department breakdo...' check box
            eXCodeAllocationClaimantsshowndeppobreakdown.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationClaimantsshowndeppobreakdownChecked;

            // Clear 'Departments are shown in general details' check box
            eXCodeAllocationDepartmentsshowningendetails.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationDepartmentsshowningendetailsChecked;

            // Clear 'Claimants should be shown their project code break...' check box
            eXCodeAllocationClaimantsshownprojectcode.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationClaimantsshownprojectcodeChecked;

            // Clear 'Project codes are shown in general details' check box
            eXCodeAllocationProjectcodesingendetails.Checked = this.EXCodeAllocationUnTickAllParams.EXCodeAllocationProjectcodesingendetailsChecked;
        }
        
        /// <summary>
        /// EXDeclarationTickAll - Use 'EXDeclarationTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDeclarationTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDeclarationElectronicDecl = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDeclarationElectronicDecl;
            #endregion

            // Select 'Electronic Declaration' check box
            eXDeclarationElectronicDecl.Checked = this.EXDeclarationTickAllParams.EXDeclarationElectronicDeclChecked;
        }
        
        /// <summary>
        /// EXDeclarationUnTickAll - Use 'EXDeclarationUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDeclarationUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDeclarationElectronicDecl = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDeclarationElectronicDecl;
            #endregion

            // Clear 'Electronic Declaration' check box
            eXDeclarationElectronicDecl.Checked = this.EXDeclarationUnTickAllParams.EXDeclarationElectronicDeclChecked;
        }
        
        /// <summary>
        /// EXDeclarationUpdateAllTextBoxesToFirstValue - Use 'EXDeclarationUpdateAllTextBoxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXDeclarationUpdateAllTextBoxesToFirstValue()
        {
            #region Variable Declarations
            HtmlTextArea uIClaimantDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantDeclarationMEdit;
            HtmlTextArea uIApproverDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIApproverDeclarationMEdit;
            #endregion

            // Type 'I hereby declare that I have only claimed justifiable business expenses. TEST' in 'Claimant Declaration Message' text box
            uIClaimantDeclarationMEdit.Text = this.EXDeclarationUpdateAllTextBoxesToFirstValueParams.UIClaimantDeclarationMEditText;

            // Type 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST' in 'Approver Declaration Message' text box
            uIApproverDeclarationMEdit.Text = this.EXDeclarationUpdateAllTextBoxesToFirstValueParams.UIApproverDeclarationMEditText;
        }
        
        /// <summary>
        /// EXDeclarationUpdateAllTextBoxesToSecondValue - Use 'EXDeclarationUpdateAllTextBoxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXDeclarationUpdateAllTextBoxesToSecondValue()
        {
            #region Variable Declarations
            HtmlTextArea uIClaimantDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantDeclarationMEdit;
            HtmlTextArea uIApproverDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIApproverDeclarationMEdit;
            #endregion

            // Type 'I hereby declare that I have only claimed justifiable business expenses. TEST EDITED' in 'Claimant Declaration Message' text box
            uIClaimantDeclarationMEdit.Text = this.EXDeclarationUpdateAllTextBoxesToSecondValueParams.UIClaimantDeclarationMEditText;

            // Type 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST EDITED' in 'Approver Declaration Message' text box
            uIApproverDeclarationMEdit.Text = this.EXDeclarationUpdateAllTextBoxesToSecondValueParams.UIApproverDeclarationMEditText;
        }
        
        /// <summary>
        /// ExDeclarationValidateTextBoxesFirstValue - Use 'ExDeclarationValidateTextBoxesFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExDeclarationValidateTextBoxesFirstValue()
        {
            #region Variable Declarations
            HtmlTextArea uIClaimantDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantDeclarationMEdit;
            HtmlTextArea uIApproverDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIApproverDeclarationMEdit;
            #endregion

            // Verify that the 'Text' property of 'Claimant Declaration Message' text box equals 'I hereby declare that I have only claimed justifiable business expenses. TEST'
            Assert.AreEqual(this.ExDeclarationValidateTextBoxesFirstValueExpectedValues.UIClaimantDeclarationMEditText, uIClaimantDeclarationMEdit.Text);

            // Verify that the 'Text' property of 'Approver Declaration Message' text box equals 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST'
            Assert.AreEqual(this.ExDeclarationValidateTextBoxesFirstValueExpectedValues.UIApproverDeclarationMEditText, uIApproverDeclarationMEdit.Text);
        }
        
        /// <summary>
        /// ExDeclarationValidateTextBoxesSecondValue - Use 'ExDeclarationValidateTextBoxesSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExDeclarationValidateTextBoxesSecondValue()
        {
            #region Variable Declarations
            HtmlTextArea uIClaimantDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantDeclarationMEdit;
            HtmlTextArea uIApproverDeclarationMEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIApproverDeclarationMEdit;
            #endregion

            // Verify that the 'Text' property of 'Claimant Declaration Message' text box equals 'I hereby declare that I have only claimed justifiable business expenses. TEST EDITED'
            Assert.AreEqual(this.ExDeclarationValidateTextBoxesSecondValueExpectedValues.UIClaimantDeclarationMEditText, uIClaimantDeclarationMEdit.Text);

            // Verify that the 'Text' property of 'Approver Declaration Message' text box equals 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST EDITED'
            Assert.AreEqual(this.ExDeclarationValidateTextBoxesSecondValueExpectedValues.UIApproverDeclarationMEditText, uIApproverDeclarationMEdit.Text);
        }
        
        /// <summary>
        /// EXDelegatesTickAll - Use 'EXDelegatesTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDelegatesTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDelUpdatedModifyCatsSystemOpts = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedModifyCatsSystemOpts;
            HtmlCheckBox eXDelUpdatedViewAdminReports = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedViewAdminReports;
            HtmlCheckBox eXDelUpdatedCheckandpayexpenses = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedCheckandpayexpenses;
            HtmlCheckBox eXDelUpdatedApproveAdvanceRequests = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedApproveAdvanceRequests;
            HtmlCheckBox eXDelUpdatedAuditLog = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedAuditLog;
            HtmlCheckBox eXDelUpdatedImportCorpStatement = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedImportCorpStatement;
            HtmlCheckBox eXDelUpdatedModifyEmployees = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedModifyEmployees;
            HtmlCheckBox eXDelUpdatedViewClaimantReports = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedViewClaimantReports;
            HtmlCheckBox eXDelUpdatedQuickEditDesign = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedQuickEditDesign;
            HtmlCheckBox eXDelUpdatedExportData = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedExportData;
            HtmlCheckBox eXDelUpdatedSubmitClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedSubmitClaims;
            #endregion

            // Select 'Modify categories and system options' check box
            eXDelUpdatedModifyCatsSystemOpts.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedModifyCatsSystemOptsChecked;

            // Select 'View administrator reports' check box
            eXDelUpdatedViewAdminReports.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedViewAdminReportsChecked;

            // Select 'Check and pay expenses' check box
            eXDelUpdatedCheckandpayexpenses.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedCheckandpayexpensesChecked;

            // Select 'Manage and approve advance requests' check box
            eXDelUpdatedApproveAdvanceRequests.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedApproveAdvanceRequestsChecked;

            // Select 'Search and View the Audit Log' check box
            eXDelUpdatedAuditLog.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedAuditLogChecked;

            // Select 'Import Corporate Card Statements' check box
            eXDelUpdatedImportCorpStatement.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedImportCorpStatementChecked;

            // Select 'Modify employees, sign-off groups and roles' check box
            eXDelUpdatedModifyEmployees.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedModifyEmployeesChecked;

            // Select 'View claimant reports' check box
            eXDelUpdatedViewClaimantReports.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedViewClaimantReportsChecked;

            // Select 'Quick Edit Design' check box
            eXDelUpdatedQuickEditDesign.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedQuickEditDesignChecked;

            // Select 'Export data and view export history' check box
            eXDelUpdatedExportData.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedExportDataChecked;

            // Select 'Can submit claims' check box
            eXDelUpdatedSubmitClaims.Checked = this.EXDelegatesTickAllParams.EXDelUpdatedSubmitClaimsChecked;
        }
        
        /// <summary>
        /// EXDelegatesUnTickAll - Use 'EXDelegatesUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDelegatesUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDelUpdatedModifyCatsSystemOpts = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedModifyCatsSystemOpts;
            HtmlCheckBox eXDelUpdatedViewAdminReports = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedViewAdminReports;
            HtmlCheckBox eXDelUpdatedCheckandpayexpenses = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedCheckandpayexpenses;
            HtmlCheckBox eXDelUpdatedApproveAdvanceRequests = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedApproveAdvanceRequests;
            HtmlCheckBox eXDelUpdatedAuditLog = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedAuditLog;
            HtmlCheckBox eXDelUpdatedImportCorpStatement = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedImportCorpStatement;
            HtmlCheckBox eXDelUpdatedModifyEmployees = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedModifyEmployees;
            HtmlCheckBox eXDelUpdatedViewClaimantReports = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedViewClaimantReports;
            HtmlCheckBox eXDelUpdatedQuickEditDesign = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedQuickEditDesign;
            HtmlCheckBox eXDelUpdatedExportData = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedExportData;
            HtmlCheckBox eXDelUpdatedSubmitClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDelUpdatedSubmitClaims;
            #endregion

            // Clear 'Modify categories and system options' check box
            eXDelUpdatedModifyCatsSystemOpts.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedModifyCatsSystemOptsChecked;

            // Clear 'View administrator reports' check box
            eXDelUpdatedViewAdminReports.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedViewAdminReportsChecked;

            // Clear 'Check and pay expenses' check box
            eXDelUpdatedCheckandpayexpenses.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedCheckandpayexpensesChecked;

            // Clear 'Manage and approve advance requests' check box
            eXDelUpdatedApproveAdvanceRequests.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedApproveAdvanceRequestsChecked;

            // Clear 'Search and View the Audit Log' check box
            eXDelUpdatedAuditLog.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedAuditLogChecked;

            // Clear 'Import Corporate Card Statements' check box
            eXDelUpdatedImportCorpStatement.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedImportCorpStatementChecked;

            // Clear 'Modify employees, sign-off groups and roles' check box
            eXDelUpdatedModifyEmployees.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedModifyEmployeesChecked;

            // Clear 'View claimant reports' check box
            eXDelUpdatedViewClaimantReports.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedViewClaimantReportsChecked;

            // Clear 'Quick Edit Design' check box
            eXDelUpdatedQuickEditDesign.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedQuickEditDesignChecked;

            // Clear 'Export data and view export history' check box
            eXDelUpdatedExportData.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedExportDataChecked;

            // Clear 'Can submit claims' check box
            eXDelUpdatedSubmitClaims.Checked = this.EXDelegatesUnTickAllParams.EXDelUpdatedSubmitClaimsChecked;
        }
        
        /// <summary>
        /// EXDutyofCareTickAll - Use 'EXDutyofCareTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDutyofCareTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDutyofCareDrivingLicenceExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareDrivingLicenceExpiryDate;
            HtmlCheckBox eXDutyofCareMOTExpiry = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareMOTExpiry;
            HtmlCheckBox eXDutyofCareTaxExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareTaxExpiryDate;
            HtmlCheckBox eXDutyofCareInsuranceExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareInsuranceExpiryDate;
            #endregion

            // Select 'Driving Licence Expiry Date' check box
            eXDutyofCareDrivingLicenceExpiryDate.Checked = this.EXDutyofCareTickAllParams.EXDutyofCareDrivingLicenceExpiryDateChecked;

            // Select 'MOT Expiry Date' check box
            eXDutyofCareMOTExpiry.Checked = this.EXDutyofCareTickAllParams.EXDutyofCareMOTExpiryChecked;

            // Select 'Tax Expiry Date' check box
            eXDutyofCareTaxExpiryDate.Checked = this.EXDutyofCareTickAllParams.EXDutyofCareTaxExpiryDateChecked;

            // Select 'Insurance Expiry Date' check box
            eXDutyofCareInsuranceExpiryDate.Checked = this.EXDutyofCareTickAllParams.EXDutyofCareInsuranceExpiryDateChecked;
        }
        
        /// <summary>
        /// EXDutyofCareUnTickAll - Use 'EXDutyofCareUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXDutyofCareUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXDutyofCareDrivingLicenceExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareDrivingLicenceExpiryDate;
            HtmlCheckBox eXDutyofCareMOTExpiry = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareMOTExpiry;
            HtmlCheckBox eXDutyofCareTaxExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareTaxExpiryDate;
            HtmlCheckBox eXDutyofCareInsuranceExpiryDate = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXDutyofCareInsuranceExpiryDate;
            #endregion

            // Clear 'Driving Licence Expiry Date' check box
            eXDutyofCareDrivingLicenceExpiryDate.Checked = this.EXDutyofCareUnTickAllParams.EXDutyofCareDrivingLicenceExpiryDateChecked;

            // Clear 'MOT Expiry Date' check box
            eXDutyofCareMOTExpiry.Checked = this.EXDutyofCareUnTickAllParams.EXDutyofCareMOTExpiryChecked;

            // Clear 'Tax Expiry Date' check box
            eXDutyofCareTaxExpiryDate.Checked = this.EXDutyofCareUnTickAllParams.EXDutyofCareTaxExpiryDateChecked;

            // Clear 'Insurance Expiry Date' check box
            eXDutyofCareInsuranceExpiryDate.Checked = this.EXDutyofCareUnTickAllParams.EXDutyofCareInsuranceExpiryDateChecked;
        }
        
        /// <summary>
        /// EXEmailServerUpdateAllTextboxesToFirstValue - Use 'EXEmailServerUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXEmailServerUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailServerEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailAdministratorAdEdit;
            #endregion

            // Type 'coded.ui.test1' in 'Email Server' text box
            uIEmailServerEdit.Text = this.EXEmailServerUpdateAllTextboxesToFirstValueParams.UIEmailServerEditText;

            // Type 'test1@test1.com' in 'Email Administrator Address' text box
            uIEmailAdministratorAdEdit.Text = this.EXEmailServerUpdateAllTextboxesToFirstValueParams.UIEmailAdministratorAdEditText;
        }
        
        /// <summary>
        /// EXEmailServerUpdateAllTextboxesToSecondValue - Use 'EXEmailServerUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXEmailServerUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailServerEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailAdministratorAdEdit;
            #endregion

            // Type 'coded.ui.test2' in 'Email Server' text box
            uIEmailServerEdit.Text = this.EXEmailServerUpdateAllTextboxesToSecondValueParams.UIEmailServerEditText;

            // Type 'test2@test2.com' in 'Email Administrator Address' text box
            uIEmailAdministratorAdEdit.Text = this.EXEmailServerUpdateAllTextboxesToSecondValueParams.UIEmailAdministratorAdEditText;
        }
        
        /// <summary>
        /// EXEmailServerUpdateRadioButtonsToFirstValue - Use 'EXEmailServerUpdateRadioButtonsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXEmailServerUpdateRadioButtonsToFirstValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIExpensesServerRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIExpensesServerRadioButton;
            #endregion

            // Select 'Expenses Server' radio button
            uIExpensesServerRadioButton.Selected = this.EXEmailServerUpdateRadioButtonsToFirstValueParams.UIExpensesServerRadioButtonSelected;
        }
        
        /// <summary>
        /// EXEmailServerUpdateRadioButtonsToSecondValue - Use 'EXEmailServerUpdateRadioButtonsToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXEmailServerUpdateRadioButtonsToSecondValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIClaimantsEmailAddresRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantsEmailAddresRadioButton;
            #endregion

            // Select 'Claimant's E-mail Address' radio button
            uIClaimantsEmailAddresRadioButton.Selected = this.EXEmailServerUpdateRadioButtonsToSecondValueParams.UIClaimantsEmailAddresRadioButtonSelected;
        }
        
        /// <summary>
        /// EXFieldSettingsTickAll - Use 'EXFieldSettingsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXFieldSettingsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXFieldSettingsDisplayForCash = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayForCash;
            HtmlCheckBox eXFieldSettingsDisplayOnCreditCardItems = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayOnCreditCardItems;
            HtmlCheckBox eXFieldSettingsDisplayOnPurchaseCardItems = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayOnPurchaseCardItems;
            HtmlCheckBox eXFieldSettingsDisplayOnIndividualItem = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayOnIndividualItem;
            HtmlCheckBox eXFieldSettingsMandatoryOnCashItems = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsMandatoryOnCashItems;
            HtmlCheckBox eXFieldSettingsMandatoryOnCreditCardItems = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsMandatoryOnCreditCardItems;
            HtmlCheckBox eXFieldSettingsMandatoryOnPurchaseCardItems = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsMandatoryOnPurchaseCardItems;
            #endregion

            // Select 'Display for cash' check box
            eXFieldSettingsDisplayForCash.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsDisplayForCashChecked;

            // Select 'Display on credit card items' check box
            eXFieldSettingsDisplayOnCreditCardItems.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsDisplayOnCreditCardItemsChecked;

            // Select 'Display on purchase card items' check box
            eXFieldSettingsDisplayOnPurchaseCardItems.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsDisplayOnPurchaseCardItemsChecked;

            // Select 'Display on individual item' check box
            eXFieldSettingsDisplayOnIndividualItem.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsDisplayOnIndividualItemChecked;

            // Select 'Mandatory on cash items' check box
            eXFieldSettingsMandatoryOnCashItems.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsMandatoryOnCashItemsChecked;

            // Select 'Mandatory on credit card items' check box
            eXFieldSettingsMandatoryOnCreditCardItems.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsMandatoryOnCreditCardItemsChecked;

            // Select 'Mandatory on purchase card items' check box
            eXFieldSettingsMandatoryOnPurchaseCardItems.Checked = this.EXFieldSettingsTickAllParams.EXFieldSettingsMandatoryOnPurchaseCardItemsChecked;
        }
        
        /// <summary>
        /// EXFieldSettingsUnTickAll - Use 'EXFieldSettingsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXFieldSettingsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXFieldSettingsDisplayForCash = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayForCash;
            HtmlCheckBox uIDisplayoncreditcardiCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDisplayoncreditcardiCheckBox;
            HtmlCheckBox uIDisplayonpurchasecarCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDisplayonpurchasecarCheckBox;
            #endregion

            // Clear 'Display for cash' check box
            eXFieldSettingsDisplayForCash.Checked = this.EXFieldSettingsUnTickAllParams.EXFieldSettingsDisplayForCashChecked;

            // Clear 'Display on credit card items' check box
            uIDisplayoncreditcardiCheckBox.Checked = this.EXFieldSettingsUnTickAllParams.UIDisplayoncreditcardiCheckBoxChecked;

            // Clear 'Display on purchase card items' check box
            uIDisplayonpurchasecarCheckBox.Checked = this.EXFieldSettingsUnTickAllParams.UIDisplayonpurchasecarCheckBoxChecked;
        }
        
        /// <summary>
        /// EXFieldSettingsUpdateTxtBoxToFirstValue - Use 'EXFieldSettingsUpdateTxtBoxToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXFieldSettingsUpdateTxtBoxToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit eXFieldSettingsDisplayAsTxtBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayAsTxtBox;
            #endregion

            // Type 'DisplayAs Test 1' in 'Display as' text box
            eXFieldSettingsDisplayAsTxtBox.Text = this.EXFieldSettingsUpdateTxtBoxToFirstValueParams.EXFieldSettingsDisplayAsTxtBoxText;
        }
        
        /// <summary>
        /// EXFieldSettingsUpdateTxtBoxToSecondValue - Use 'EXFieldSettingsUpdateTxtBoxToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXFieldSettingsUpdateTxtBoxToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit eXFieldSettingsDisplayAsTxtBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayAsTxtBox;
            #endregion

            // Type 'DisplayAs Test 1 EDITED' in 'Display as' text box
            eXFieldSettingsDisplayAsTxtBox.Text = this.EXFieldSettingsUpdateTxtBoxToSecondValueParams.EXFieldSettingsDisplayAsTxtBoxText;
        }
        
        /// <summary>
        /// ExFieldSettingsValidateTxtBoxFirstValue - Use 'ExFieldSettingsValidateTxtBoxFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExFieldSettingsValidateTxtBoxFirstValue()
        {
            #region Variable Declarations
            HtmlEdit eXFieldSettingsDisplayAsTxtBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayAsTxtBox;
            #endregion

            // Verify that the 'Text' property of 'Display as' text box equals 'DisplayAs Test 1'
            Assert.AreEqual(this.ExFieldSettingsValidateTxtBoxFirstValueExpectedValues.EXFieldSettingsDisplayAsTxtBoxText, eXFieldSettingsDisplayAsTxtBox.Text);
        }
        
        /// <summary>
        /// ExFieldSettingsValidateTxtBoxSecondValue - Use 'ExFieldSettingsValidateTxtBoxSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExFieldSettingsValidateTxtBoxSecondValue()
        {
            #region Variable Declarations
            HtmlEdit eXFieldSettingsDisplayAsTxtBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXFieldSettingsDisplayAsTxtBox;
            #endregion

            // Verify that the 'Text' property of 'Display as' text box equals 'DisplayAs Test 1 EDITED'
            Assert.AreEqual(this.ExFieldSettingsValidateTxtBoxSecondValueExpectedValues.EXFieldSettingsDisplayAsTxtBoxText, eXFieldSettingsDisplayAsTxtBox.Text);
        }
        
        /// <summary>
        /// EXGeneralDetailsSetOdometerReadingDate - Use 'EXGeneralDetailsSetOdometerReadingDateParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsSetOdometerReadingDate()
        {
            #region Variable Declarations
            HtmlCheckBox eXGeneralDetailsClaimantsRequiredOdoReadings = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsClaimantsRequiredOdoReadings;
            HtmlRadioButton uIOdometerreadingsrecoRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton;
            HtmlEdit uIOdometerreadingsrecoEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoEdit;
            #endregion

            // Select 'Relevant claimants required to record odometer rea...' check box
            eXGeneralDetailsClaimantsRequiredOdoReadings.Checked = this.EXGeneralDetailsSetOdometerReadingDateParams.EXGeneralDetailsClaimantsRequiredOdoReadingsChecked;

            // Select 'Odometer readings recorded when the claimant logs ...' radio button
            uIOdometerreadingsrecoRadioButton.Selected = this.EXGeneralDetailsSetOdometerReadingDateParams.UIOdometerreadingsrecoRadioButtonSelected;

            // Type '13' in 'Odometer readings recorded every month on' text box
            uIOdometerreadingsrecoEdit.Text = this.EXGeneralDetailsSetOdometerReadingDateParams.UIOdometerreadingsrecoEditText;
        }
        
        /// <summary>
        /// EXGeneralDetailsTickAll - Use 'EXGeneralDetailsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXGeneralDetailsHotelReviews = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsHotelReviews;
            HtmlCheckBox eXGeneralDetailsEmployeeDirectory = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEmployeeDirectory;
            HtmlCheckBox eXGeneralDetailsDisplayBankDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsDisplayBankDetails;
            HtmlCheckBox eXGeneralDetailsApproveOwnClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsApproveOwnClaims;
            HtmlCheckBox uIRelevantclaimantsreqCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIRelevantclaimantsreqCheckBox;
            HtmlCheckBox uIClaimscanbepartsubmiCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimscanbepartsubmiCheckBox;
            HtmlCheckBox eXGeneralDetailsEmailHotelReviews = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEmailHotelReviews;
            HtmlCheckBox eXGeneralDetailsEnterPreApprovedClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEnterPreApprovedClaims;
            HtmlCheckBox eXGeneralDetailsEditOwnDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEditOwnDetails;
            HtmlCheckBox eXGeneralDetailsApproveOwnClaim = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsApproveOwnClaim;
            HtmlCheckBox uICashandCreditCarditeCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UICashandCreditCarditeCheckBox;
            #endregion

            // Select 'Hotel Reviews' check box
            eXGeneralDetailsHotelReviews.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsHotelReviewsChecked;

            // Select 'Employee Directory' check box
            eXGeneralDetailsEmployeeDirectory.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsEmployeeDirectoryChecked;

            // Select 'Display claimant's bank details in "My Details"' check box
            eXGeneralDetailsDisplayBankDetails.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsDisplayBankDetailsChecked;

            // Select 'Allow team members to allocate and approve own cla...' check box
            eXGeneralDetailsApproveOwnClaims.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsApproveOwnClaimsChecked;

            // Select 'Relevant claimants required to record odometer rea...' check box
            uIRelevantclaimantsreqCheckBox.Checked = this.EXGeneralDetailsTickAllParams.UIRelevantclaimantsreqCheckBoxChecked;

            // Select 'Claims can be part submitted' check box
            uIClaimscanbepartsubmiCheckBox.Checked = this.EXGeneralDetailsTickAllParams.UIClaimscanbepartsubmiCheckBoxChecked;

            // Select 'Email claimants for hotel reviews' check box
            eXGeneralDetailsEmailHotelReviews.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsEmailHotelReviewsChecked;

            // Select 'Claimants can enter pre approval claims' check box
            eXGeneralDetailsEnterPreApprovedClaims.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsEnterPreApprovedClaimsChecked;

            // Select 'Claimants may edit their own personal details' check box
            eXGeneralDetailsEditOwnDetails.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsEditOwnDetailsChecked;

            // Select 'Allow employees and delegates to approve own claim...' check box
            eXGeneralDetailsApproveOwnClaim.Checked = this.EXGeneralDetailsTickAllParams.EXGeneralDetailsApproveOwnClaimChecked;

            // Select 'Cash and Credit Card items cannot be on the same c...' check box
            uICashandCreditCarditeCheckBox.Checked = this.EXGeneralDetailsTickAllParams.UICashandCreditCarditeCheckBoxChecked;
        }
        
        /// <summary>
        /// EXGeneralDetailsUnTickAll - Use 'EXGeneralDetailsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXGeneralDetailsHotelReviews = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsHotelReviews;
            HtmlCheckBox eXGeneralDetailsEmployeeDirectory = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEmployeeDirectory;
            HtmlCheckBox eXGeneralDetailsDisplayBankDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsDisplayBankDetails;
            HtmlCheckBox eXGeneralDetailsApproveOwnClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsApproveOwnClaims;
            HtmlCheckBox uIRelevantclaimantsreqCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIRelevantclaimantsreqCheckBox;
            HtmlCheckBox uIClaimscanbepartsubmiCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimscanbepartsubmiCheckBox;
            HtmlCheckBox eXGeneralDetailsEmailHotelReviews = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEmailHotelReviews;
            HtmlCheckBox eXGeneralDetailsEnterPreApprovedClaims = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEnterPreApprovedClaims;
            HtmlCheckBox eXGeneralDetailsEditOwnDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsEditOwnDetails;
            HtmlCheckBox eXGeneralDetailsApproveOwnClaim = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsApproveOwnClaim;
            HtmlCheckBox uICashandCreditCarditeCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UICashandCreditCarditeCheckBox;
            #endregion

            // Clear 'Hotel Reviews' check box
            eXGeneralDetailsHotelReviews.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsHotelReviewsChecked;

            // Clear 'Employee Directory' check box
            eXGeneralDetailsEmployeeDirectory.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsEmployeeDirectoryChecked;

            // Clear 'Display claimant's bank details in "My Details"' check box
            eXGeneralDetailsDisplayBankDetails.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsDisplayBankDetailsChecked;

            // Clear 'Allow team members to allocate and approve own cla...' check box
            eXGeneralDetailsApproveOwnClaims.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsApproveOwnClaimsChecked;

            // Clear 'Relevant claimants required to record odometer rea...' check box
            uIRelevantclaimantsreqCheckBox.Checked = this.EXGeneralDetailsUnTickAllParams.UIRelevantclaimantsreqCheckBoxChecked;

            // Clear 'Claims can be part submitted' check box
            uIClaimscanbepartsubmiCheckBox.Checked = this.EXGeneralDetailsUnTickAllParams.UIClaimscanbepartsubmiCheckBoxChecked;

            // Clear 'Email claimants for hotel reviews' check box
            eXGeneralDetailsEmailHotelReviews.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsEmailHotelReviewsChecked;

            // Clear 'Claimants can enter pre approval claims' check box
            eXGeneralDetailsEnterPreApprovedClaims.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsEnterPreApprovedClaimsChecked;

            // Clear 'Claimants may edit their own personal details' check box
            eXGeneralDetailsEditOwnDetails.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsEditOwnDetailsChecked;

            // Clear 'Allow employees and delegates to approve own claim...' check box
            eXGeneralDetailsApproveOwnClaim.Checked = this.EXGeneralDetailsUnTickAllParams.EXGeneralDetailsApproveOwnClaimChecked;

            // Clear 'Cash and Credit Card items cannot be on the same c...' check box
            uICashandCreditCarditeCheckBox.Checked = this.EXGeneralDetailsUnTickAllParams.UICashandCreditCarditeCheckBoxChecked;
        }
        
        /// <summary>
        /// EXGeneralDetailsUpdateDropDownListsFirstValue - Use 'EXGeneralDetailsUpdateDropDownListsFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsUpdateDropDownListsFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultDrilldownRepoComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultDrilldownRepoComboBox;
            #endregion

            // Select 'Standard Master Drill Down' in 'Default Drilldown Report' combo box
            uIDefaultDrilldownRepoComboBox.SelectedItem = this.EXGeneralDetailsUpdateDropDownListsFirstValueParams.UIDefaultDrilldownRepoComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EXGeneralDetailsUpdateDropDownListsSecondValue - Use 'EXGeneralDetailsUpdateDropDownListsSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsUpdateDropDownListsSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultDrilldownRepoComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultDrilldownRepoComboBox;
            #endregion

            // Select '[None]' in 'Default Drilldown Report' combo box
            uIDefaultDrilldownRepoComboBox.SelectedItem = this.EXGeneralDetailsUpdateDropDownListsSecondValueParams.UIDefaultDrilldownRepoComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EXGeneralDetailsUpdateRadioButtonsToFirstValue - Use 'EXGeneralDetailsUpdateRadioButtonsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsUpdateRadioButtonsToFirstValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIOdometerreadingsrecoRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton;
            HtmlRadioButton uIShowtheFromandToaddrRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIShowtheFromandToaddrRadioButton;
            #endregion

            // Select 'Odometer readings recorded when the claimant logs ...' radio button
            uIOdometerreadingsrecoRadioButton.Selected = this.EXGeneralDetailsUpdateRadioButtonsToFirstValueParams.UIOdometerreadingsrecoRadioButtonSelected;

            // Select 'Show the From and To addresses in drop down boxes' radio button
            uIShowtheFromandToaddrRadioButton.Selected = this.EXGeneralDetailsUpdateRadioButtonsToFirstValueParams.UIShowtheFromandToaddrRadioButtonSelected;
        }
        
        /// <summary>
        /// EXGeneralDetailsUpdateRadioButtonsToSecondValue - Use 'EXGeneralDetailsUpdateRadioButtonsToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXGeneralDetailsUpdateRadioButtonsToSecondValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIOdometerreadingsrecoRadioButton1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton1;
            HtmlRadioButton uIMaketheFromandToaddrRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIMaketheFromandToaddrRadioButton;
            #endregion

            // Select 'Odometer readings recorded when claim submitted' radio button
            uIOdometerreadingsrecoRadioButton1.Selected = this.EXGeneralDetailsUpdateRadioButtonsToSecondValueParams.UIOdometerreadingsrecoRadioButton1Selected;

            // Select 'Make the From and To addresses searchable' radio button
            uIMaketheFromandToaddrRadioButton.Selected = this.EXGeneralDetailsUpdateRadioButtonsToSecondValueParams.UIMaketheFromandToaddrRadioButtonSelected;
        }
        
        /// <summary>
        /// ExGeneralDetailsValidateDropDownListsFirstValue - Use 'ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExGeneralDetailsValidateDropDownListsFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultDrilldownRepoComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultDrilldownRepoComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Drilldown Report' combo box equals 'Standard Master Drill Down'
            Assert.AreEqual(this.ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues.UIDefaultDrilldownRepoComboBoxSelectedItem, uIDefaultDrilldownRepoComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ExGeneralDetailsValidateDropDownListsSecondValue - Use 'ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExGeneralDetailsValidateDropDownListsSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultDrilldownRepoComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultDrilldownRepoComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Drilldown Report' combo box equals '[None]'
            Assert.AreEqual(this.ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues.UIDefaultDrilldownRepoComboBoxSelectedItem, uIDefaultDrilldownRepoComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ExGeneralDetailsValidateOdometerReadingsDate - Use 'ExGeneralDetailsValidateOdometerReadingsDateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExGeneralDetailsValidateOdometerReadingsDate()
        {
            #region Variable Declarations
            HtmlEdit uIOdometerreadingsrecoEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoEdit;
            HtmlRadioButton uIOdometerreadingsrecoRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton;
            HtmlCheckBox eXGeneralDetailsClaimantsRequiredOdoReadings = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXGeneralDetailsClaimantsRequiredOdoReadings;
            #endregion

            // Verify that the 'Text' property of 'Odometer readings recorded every month on' text box equals '13'
            Assert.AreEqual(this.ExGeneralDetailsValidateOdometerReadingsDateExpectedValues.UIOdometerreadingsrecoEditText, uIOdometerreadingsrecoEdit.Text);

            // Verify that the 'Selected' property of 'Odometer readings recorded when the claimant logs ...' radio button equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateOdometerReadingsDateExpectedValues.UIOdometerreadingsrecoRadioButtonSelected, uIOdometerreadingsrecoRadioButton.Selected);

            // Verify that the 'Checked' property of 'Relevant claimants required to record odometer rea...' check box equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateOdometerReadingsDateExpectedValues.EXGeneralDetailsClaimantsRequiredOdoReadingsChecked, eXGeneralDetailsClaimantsRequiredOdoReadings.Checked);
        }
        
        /// <summary>
        /// ExGeneralDetailsValidateRadioButtonsFirstValues - Use 'ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExGeneralDetailsValidateRadioButtonsFirstValues()
        {
            #region Variable Declarations
            HtmlRadioButton uIOdometerreadingsrecoRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton;
            HtmlRadioButton uIShowtheFromandToaddrRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIShowtheFromandToaddrRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Odometer readings recorded when the claimant logs ...' radio button equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues.UIOdometerreadingsrecoRadioButtonSelected, uIOdometerreadingsrecoRadioButton.Selected);

            // Verify that the 'Selected' property of 'Show the From and To addresses in drop down boxes' radio button equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues.UIShowtheFromandToaddrRadioButtonSelected, uIShowtheFromandToaddrRadioButton.Selected);
        }
        
        /// <summary>
        /// ExGeneralDetailsValidateRadioButtonsSecondValues - Use 'ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExGeneralDetailsValidateRadioButtonsSecondValues()
        {
            #region Variable Declarations
            HtmlRadioButton uIOdometerreadingsrecoRadioButton1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIOdometerreadingsrecoRadioButton1;
            HtmlRadioButton uIMaketheFromandToaddrRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIMaketheFromandToaddrRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Odometer readings recorded when claim submitted' radio button equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues.UIOdometerreadingsrecoRadioButton1Selected, uIOdometerreadingsrecoRadioButton1.Selected);

            // Verify that the 'Selected' property of 'Make the From and To addresses searchable' radio button equals 'True'
            Assert.AreEqual(this.ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues.UIMaketheFromandToaddrRadioButtonSelected, uIMaketheFromandToaddrRadioButton.Selected);
        }
        
        /// <summary>
        /// ExMilageandCarsValidateCalculationQuickest - Use 'ExMilageandCarsValidateCalculationQuickestExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExMilageandCarsValidateCalculationQuickest()
        {
            #region Variable Declarations
            HtmlComboBox uIPostcodeAnywhereCalcComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIPostcodeAnywhereCalcComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Postcode Anywhere Calculation Type' combo box equals 'Quickest'
            Assert.AreEqual(this.ExMilageandCarsValidateCalculationQuickestExpectedValues.UIPostcodeAnywhereCalcComboBoxSelectedItem, uIPostcodeAnywhereCalcComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ExMilageandCarsValidateCalculationShortest - Use 'ExMilageandCarsValidateCalculationShortestExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExMilageandCarsValidateCalculationShortest()
        {
            #region Variable Declarations
            HtmlComboBox uIPostcodeAnywhereCalcComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIPostcodeAnywhereCalcComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Postcode Anywhere Calculation Type' combo box equals 'Shortest'
            Assert.AreEqual(this.ExMilageandCarsValidateCalculationShortestExpectedValues.UIPostcodeAnywhereCalcComboBoxSelectedItem, uIPostcodeAnywhereCalcComboBox.SelectedItem);
        }
        
        /// <summary>
        /// EXMileageandCarsTickAll - Use 'EXMileageandCarsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXMileageandCarsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXMileageandCarsClaimantsCanAddAddress = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsClaimantsCanAddAddress;
            HtmlCheckBox eXMileageandCarsAllowMultipleDestinations = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsAllowMultipleDestinations;
            HtmlCheckBox eXMileageandCarspostcodeanywhere = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarspostcodeanywhere;
            HtmlCheckBox eXMileageandCarsallowemployeestoaddnewcars = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsallowemployeestoaddnewcars;
            HtmlCheckBox eXMileageandCarsallowemployeestoselectmileagecat = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsallowemployeestoselectmileagecat;
            HtmlCheckBox eXMileageandCarsaddnewaddressascompany = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsaddnewaddressascompany;
            HtmlCheckBox eXMileageandCarsactivatecarwhenaddsown = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsactivatecarwhenaddsown;
            HtmlCheckBox eXMileageandCarsenableautolog = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsenableautolog;
            #endregion

            // Select 'Claimants can add new addresses as to/from address...' check box
            eXMileageandCarsClaimantsCanAddAddress.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsClaimantsCanAddAddressChecked;

            // Select 'Allow multiple destinations' check box
            eXMileageandCarsAllowMultipleDestinations.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsAllowMultipleDestinationsChecked;

            // Select 'Postcode Anywhere' check box
            eXMileageandCarspostcodeanywhere.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarspostcodeanywhereChecked;

            // Select 'Allow employees to add new cars' check box
            eXMileageandCarsallowemployeestoaddnewcars.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsallowemployeestoaddnewcarsChecked;

            // Select 'Allow employees to select mileage categories' check box
            eXMileageandCarsallowemployeestoselectmileagecat.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsallowemployeestoselectmileagecatChecked;

            // Select 'Claimants can add new addresses as company address...' check box
            eXMileageandCarsaddnewaddressascompany.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsaddnewaddressascompanyChecked;

            // Select 'Activate car when employee adds own' check box
            eXMileageandCarsactivatecarwhenaddsown.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsactivatecarwhenaddsownChecked;

            // Select 'Enable autolog' check box
            eXMileageandCarsenableautolog.Checked = this.EXMileageandCarsTickAllParams.EXMileageandCarsenableautologChecked;
        }
        
        /// <summary>
        /// EXMileageandCarsUnTickAll - Use 'EXMileageandCarsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXMileageandCarsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXMileageandCarsClaimantsCanAddAddress = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsClaimantsCanAddAddress;
            HtmlDiv uIClaimantscanaddnewadPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UICtl00_contentmain_taPane.UIClaimantscanaddnewadPane;
            HtmlCheckBox eXMileageandCarsAllowMultipleDestinations = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsAllowMultipleDestinations;
            HtmlCheckBox eXMileageandCarspostcodeanywhere = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarspostcodeanywhere;
            HtmlCheckBox eXMileageandCarsallowemployeestoaddnewcars = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsallowemployeestoaddnewcars;
            HtmlCheckBox eXMileageandCarsenableautolog = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXMileageandCarsenableautolog;
            #endregion

            // Clear 'Claimants can add new addresses as to/from address...' check box
            eXMileageandCarsClaimantsCanAddAddress.Checked = this.EXMileageandCarsUnTickAllParams.EXMileageandCarsClaimantsCanAddAddressChecked;

            // Click 'Claimants can add new addresses as to/fr' pane
            Mouse.Click(uIClaimantscanaddnewadPane, new Point(670, 24));

            // Clear 'Allow multiple destinations' check box
            eXMileageandCarsAllowMultipleDestinations.Checked = this.EXMileageandCarsUnTickAllParams.EXMileageandCarsAllowMultipleDestinationsChecked;

            // Clear 'Postcode Anywhere' check box
            eXMileageandCarspostcodeanywhere.Checked = this.EXMileageandCarsUnTickAllParams.EXMileageandCarspostcodeanywhereChecked;

            // Clear 'Allow employees to add new cars' check box
            eXMileageandCarsallowemployeestoaddnewcars.Checked = this.EXMileageandCarsUnTickAllParams.EXMileageandCarsallowemployeestoaddnewcarsChecked;

            // Clear 'Enable autolog' check box
            eXMileageandCarsenableautolog.Checked = this.EXMileageandCarsUnTickAllParams.EXMileageandCarsenableautologChecked;
        }
        
        /// <summary>
        /// EXMileageandCarsUpdateCalculationToQuickest - Use 'EXMileageandCarsUpdateCalculationToQuickestParams' to pass parameters into this method.
        /// </summary>
        public void EXMileageandCarsUpdateCalculationToQuickest()
        {
            #region Variable Declarations
            HtmlComboBox uIPostcodeAnywhereCalcComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIPostcodeAnywhereCalcComboBox;
            #endregion

            // Select 'Quickest' in 'Postcode Anywhere Calculation Type' combo box
            uIPostcodeAnywhereCalcComboBox.SelectedItem = this.EXMileageandCarsUpdateCalculationToQuickestParams.UIPostcodeAnywhereCalcComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EXMileageandCarsUpdateCalculationToShortest - Use 'EXMileageandCarsUpdateCalculationToShortestParams' to pass parameters into this method.
        /// </summary>
        public void EXMileageandCarsUpdateCalculationToShortest()
        {
            #region Variable Declarations
            HtmlComboBox uIPostcodeAnywhereCalcComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIPostcodeAnywhereCalcComboBox;
            #endregion

            // Select 'Shortest' in 'Postcode Anywhere Calculation Type' combo box
            uIPostcodeAnywhereCalcComboBox.SelectedItem = this.EXMileageandCarsUpdateCalculationToShortestParams.UIPostcodeAnywhereCalcComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EXNHSOptionsTickAll - Use 'EXNHSOptionsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXNHSOptionsESRnumbermandatory = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXNHSOptionsESRnumbermandatory;
            #endregion

            // Select 'ESR Assignment Numbers mandatory on employee add' check box
            eXNHSOptionsESRnumbermandatory.Checked = this.EXNHSOptionsTickAllParams.EXNHSOptionsESRnumbermandatoryChecked;
        }
        
        /// <summary>
        /// EXNHSOptionsUnTickAll - Use 'EXNHSOptionsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXNHSOptionsESRnumbermandatory = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXNHSOptionsESRnumbermandatory;
            #endregion

            // Clear 'ESR Assignment Numbers mandatory on employee add' check box
            eXNHSOptionsESRnumbermandatory.Checked = this.EXNHSOptionsUnTickAllParams.EXNHSOptionsESRnumbermandatoryChecked;
        }
        
        /// <summary>
        /// EXNHSOptionsUpdateDropDownsToAutomatic - Use 'EXNHSOptionsUpdateDropDownsToAutomaticParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsUpdateDropDownsToAutomatic()
        {
            #region Variable Declarations
            HtmlComboBox uIESROutboundEmployeeAComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox;
            HtmlComboBox uIESROutboundEmployeeAComboBox1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox1;
            #endregion

            // Select 'Automatic' in 'ESR Outbound Employee Activation Type' combo box
            uIESROutboundEmployeeAComboBox.SelectedItem = this.EXNHSOptionsUpdateDropDownsToAutomaticParams.UIESROutboundEmployeeAComboBoxSelectedItem;

            // Select 'Automatic' in 'ESR Outbound Employee Archive Type' combo box
            uIESROutboundEmployeeAComboBox1.SelectedItem = this.EXNHSOptionsUpdateDropDownsToAutomaticParams.UIESROutboundEmployeeAComboBox1SelectedItem;
        }
        
        /// <summary>
        /// EXNHSOptionsUpdateDropDownsToNone - Use 'EXNHSOptionsUpdateDropDownsToNoneParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsUpdateDropDownsToNone()
        {
            #region Variable Declarations
            HtmlComboBox uIESROutboundEmployeeAComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox;
            HtmlComboBox uIESROutboundEmployeeAComboBox1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox1;
            #endregion

            // Select 'None' in 'ESR Outbound Employee Activation Type' combo box
            uIESROutboundEmployeeAComboBox.SelectedItem = this.EXNHSOptionsUpdateDropDownsToNoneParams.UIESROutboundEmployeeAComboBoxSelectedItem;

            // Select 'None' in 'ESR Outbound Employee Archive Type' combo box
            uIESROutboundEmployeeAComboBox1.SelectedItem = this.EXNHSOptionsUpdateDropDownsToNoneParams.UIESROutboundEmployeeAComboBox1SelectedItem;
        }
        
        /// <summary>
        /// EXNHSOptionsUpdateGracePeriodFirstValue - Use 'EXNHSOptionsUpdateGracePeriodFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsUpdateGracePeriodFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIESROutboundArchiveGrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundArchiveGrEdit;
            #endregion

            // Type '7' in 'ESR Outbound Archive Grace Period' text box
            uIESROutboundArchiveGrEdit.Text = this.EXNHSOptionsUpdateGracePeriodFirstValueParams.UIESROutboundArchiveGrEditText;
        }
        
        /// <summary>
        /// EXNHSOptionsUpdateGracePeriodSecondValue - Use 'EXNHSOptionsUpdateGracePeriodSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsUpdateGracePeriodSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIESROutboundArchiveGrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundArchiveGrEdit;
            #endregion

            // Type '1' in 'ESR Outbound Archive Grace Period' text box
            uIESROutboundArchiveGrEdit.Text = this.EXNHSOptionsUpdateGracePeriodSecondValueParams.UIESROutboundArchiveGrEditText;
        }
        
        /// <summary>
        /// EXNHSOptionsValidateDropDownSetToAutomatic - Use 'EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsValidateDropDownSetToAutomatic()
        {
            #region Variable Declarations
            HtmlComboBox uIESROutboundEmployeeAComboBox1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox1;
            HtmlComboBox uIESROutboundEmployeeAComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'ESR Outbound Employee Archive Type' combo box equals 'Automatic'
            Assert.AreEqual(this.EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues.UIESROutboundEmployeeAComboBox1SelectedItem, uIESROutboundEmployeeAComboBox1.SelectedItem);

            // Verify that the 'SelectedItem' property of 'ESR Outbound Employee Activation Type' combo box equals 'Automatic'
            Assert.AreEqual(this.EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues.UIESROutboundEmployeeAComboBoxSelectedItem, uIESROutboundEmployeeAComboBox.SelectedItem);
        }
        
        /// <summary>
        /// EXNHSOptionsValidateDropDownSetToNone - Use 'EXNHSOptionsValidateDropDownSetToNoneExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsValidateDropDownSetToNone()
        {
            #region Variable Declarations
            HtmlComboBox uIESROutboundEmployeeAComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox;
            HtmlComboBox uIESROutboundEmployeeAComboBox1 = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundEmployeeAComboBox1;
            #endregion

            // Verify that the 'SelectedItem' property of 'ESR Outbound Employee Activation Type' combo box equals 'None'
            Assert.AreEqual(this.EXNHSOptionsValidateDropDownSetToNoneExpectedValues.UIESROutboundEmployeeAComboBoxSelectedItem, uIESROutboundEmployeeAComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'ESR Outbound Employee Archive Type' combo box equals 'None'
            Assert.AreEqual(this.EXNHSOptionsValidateDropDownSetToNoneExpectedValues.UIESROutboundEmployeeAComboBox1SelectedItem, uIESROutboundEmployeeAComboBox1.SelectedItem);
        }
        
        /// <summary>
        /// EXNHSOptionsValidateGracePeriodFirstValue - Use 'EXNHSOptionsValidateGracePeriodFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsValidateGracePeriodFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIESROutboundArchiveGrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundArchiveGrEdit;
            #endregion

            // Verify that the 'Text' property of 'ESR Outbound Archive Grace Period' text box equals '7'
            Assert.AreEqual(this.EXNHSOptionsValidateGracePeriodFirstValueExpectedValues.UIESROutboundArchiveGrEditText, uIESROutboundArchiveGrEdit.Text);
        }
        
        /// <summary>
        /// EXNHSOptionsValidateGracePeriodSecondValue - Use 'EXNHSOptionsValidateGracePeriodSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EXNHSOptionsValidateGracePeriodSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIESROutboundArchiveGrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIESROutboundArchiveGrEdit;
            #endregion

            // Verify that the 'Text' property of 'ESR Outbound Archive Grace Period' text box equals '1'
            Assert.AreEqual(this.EXNHSOptionsValidateGracePeriodSecondValueExpectedValues.UIESROutboundArchiveGrEditText, uIESROutboundArchiveGrEdit.Text);
        }
        
        /// <summary>
        /// EXOtherPreferencesTickAll - Use 'EXOtherPreferencesTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXOtherPreferencesTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXOtherPreferencessingleclaimattime = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencessingleclaimattime;
            HtmlCheckBox eXOtherPreferencescannotoverrideexchangerates = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencescannotoverrideexchangerates;
            HtmlCheckBox eXOtherPreferencesselecthomeaddress = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencesselecthomeaddress;
            HtmlCheckBox eXOtherPreferencesreceiptscanbeuploaded = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencesreceiptscanbeuploaded;
            HtmlCheckBox eXOtherPreferencespostcodesmandatorywhenadding = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencespostcodesmandatorywhenadding;
            #endregion

            // Select 'Employees can only enter a single claim at a time' check box
            eXOtherPreferencessingleclaimattime.Checked = this.EXOtherPreferencesTickAllParams.EXOtherPreferencessingleclaimattimeChecked;

            // Select 'Claimants can not override the exchange rates' check box
            eXOtherPreferencescannotoverrideexchangerates.Checked = this.EXOtherPreferencesTickAllParams.EXOtherPreferencescannotoverrideexchangeratesChecked;

            // Select 'Allow claimant to select home address' check box
            eXOtherPreferencesselecthomeaddress.Checked = this.EXOtherPreferencesTickAllParams.EXOtherPreferencesselecthomeaddressChecked;

            // Select 'Receipts can be uploaded to expense items' check box
            eXOtherPreferencesreceiptscanbeuploaded.Checked = this.EXOtherPreferencesTickAllParams.EXOtherPreferencesreceiptscanbeuploadedChecked;

            // Select 'Postcodes are mandatory when adding addresses' check box
            eXOtherPreferencespostcodesmandatorywhenadding.Checked = this.EXOtherPreferencesTickAllParams.EXOtherPreferencespostcodesmandatorywhenaddingChecked;
        }
        
        /// <summary>
        /// EXOtherPreferencesUnTickAll - Use 'EXOtherPreferencesUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXOtherPreferencesUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXOtherPreferencessingleclaimattime = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencessingleclaimattime;
            HtmlCheckBox eXOtherPreferencescannotoverrideexchangerates = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencescannotoverrideexchangerates;
            HtmlCheckBox eXOtherPreferencesselecthomeaddress = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencesselecthomeaddress;
            HtmlCheckBox eXOtherPreferencesreceiptscanbeuploaded = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencesreceiptscanbeuploaded;
            HtmlCheckBox eXOtherPreferencespostcodesmandatorywhenadding = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXOtherPreferencespostcodesmandatorywhenadding;
            #endregion

            // Clear 'Employees can only enter a single claim at a time' check box
            eXOtherPreferencessingleclaimattime.Checked = this.EXOtherPreferencesUnTickAllParams.EXOtherPreferencessingleclaimattimeChecked;

            // Clear 'Claimants can not override the exchange rates' check box
            eXOtherPreferencescannotoverrideexchangerates.Checked = this.EXOtherPreferencesUnTickAllParams.EXOtherPreferencescannotoverrideexchangeratesChecked;

            // Clear 'Allow claimant to select home address' check box
            eXOtherPreferencesselecthomeaddress.Checked = this.EXOtherPreferencesUnTickAllParams.EXOtherPreferencesselecthomeaddressChecked;

            // Clear 'Receipts can be uploaded to expense items' check box
            eXOtherPreferencesreceiptscanbeuploaded.Checked = this.EXOtherPreferencesUnTickAllParams.EXOtherPreferencesreceiptscanbeuploadedChecked;

            // Clear 'Postcodes are mandatory when adding addresses' check box
            eXOtherPreferencespostcodesmandatorywhenadding.Checked = this.EXOtherPreferencesUnTickAllParams.EXOtherPreferencespostcodesmandatorywhenaddingChecked;
        }
        
        /// <summary>
        /// ExpensesEmailServerValidateRadioButtonsContainFirstValue - Use 'ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExpensesEmailServerValidateRadioButtonsContainFirstValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIExpensesServerRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIExpensesServerRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Expenses Server' radio button equals 'True'
            Assert.AreEqual(this.ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues.UIExpensesServerRadioButtonSelected, uIExpensesServerRadioButton.Selected);
        }
        
        /// <summary>
        /// ExpensesEmailServerValidateRadioButtonsContainSecondValue - Use 'ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExpensesEmailServerValidateRadioButtonsContainSecondValue()
        {
            #region Variable Declarations
            HtmlRadioButton uIClaimantsEmailAddresRadioButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIClaimantsEmailAddresRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Claimant's E-mail Address' radio button equals 'True'
            Assert.AreEqual(this.ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues.UIClaimantsEmailAddresRadioButtonSelected, uIClaimantsEmailAddresRadioButton.Selected);
        }
        
        /// <summary>
        /// ExpensesEmailServerValidateTextBoxesContainFirstValue - Use 'ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExpensesEmailServerValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailServerEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailAdministratorAdEdit;
            #endregion

            // Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test1'
            Assert.AreEqual(this.ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIEmailServerEditText, uIEmailServerEdit.Text);

            // Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test1@test1.com'
            Assert.AreEqual(this.ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIEmailAdministratorAdEditText, uIEmailAdministratorAdEdit.Text);
        }
        
        /// <summary>
        /// ExpensesEmailServerValidateTextBoxesContainSecondValue - Use 'ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExpensesEmailServerValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailServerEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIEmailAdministratorAdEdit;
            #endregion

            // Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test2'
            Assert.AreEqual(this.ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIEmailServerEditText, uIEmailServerEdit.Text);

            // Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test2@test2.com'
            Assert.AreEqual(this.ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIEmailAdministratorAdEditText, uIEmailAdministratorAdEdit.Text);
        }
        
        /// <summary>
        /// EXSelfRegTickAll - Use 'EXSelfRegTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXSelfRegTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXSelfRegAllowSelfReg = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAllowSelfReg;
            HtmlCheckBox eXSelfRegHomeAddressDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegHomeAddressDetails;
            HtmlCheckBox eXSelfRegRole = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegRole;
            HtmlCheckBox eXSelfRegSignoffGroup = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegSignoffGroup;
            HtmlCheckBox eXSelfRegDefaultDepartment = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegDefaultDepartment;
            HtmlCheckBox eXSelfRegCarDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegCarDetails;
            HtmlCheckBox eXSelfRegEmployeeContactDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegEmployeeContactDetails;
            HtmlCheckBox eXSelfRegEmployeeInformation = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegEmployeeInformation;
            HtmlCheckBox eXSelfRegItemRole = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegItemRole;
            HtmlCheckBox eXSelfRegAdvancesSignoffGroup = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAdvancesSignoffGroup;
            HtmlCheckBox eXSelfRegBankDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegBankDetails;
            HtmlCheckBox eXSelfRegAdditionalUDFs = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAdditionalUDFs;
            #endregion

            // Select 'Allow Self Registration' check box
            eXSelfRegAllowSelfReg.Checked = this.EXSelfRegTickAllParams.EXSelfRegAllowSelfRegChecked;

            // Select 'Home Address/Contact Details' check box
            eXSelfRegHomeAddressDetails.Checked = this.EXSelfRegTickAllParams.EXSelfRegHomeAddressDetailsChecked;

            // Select 'Role' check box
            eXSelfRegRole.Checked = this.EXSelfRegTickAllParams.EXSelfRegRoleChecked;

            // Select 'Signoff Group' check box
            eXSelfRegSignoffGroup.Checked = this.EXSelfRegTickAllParams.EXSelfRegSignoffGroupChecked;

            // Select 'Default Department/Cost Code' check box
            eXSelfRegDefaultDepartment.Checked = this.EXSelfRegTickAllParams.EXSelfRegDefaultDepartmentChecked;

            // Select 'Car Details' check box
            eXSelfRegCarDetails.Checked = this.EXSelfRegTickAllParams.EXSelfRegCarDetailsChecked;

            // Select 'Employment Contact Details' check box
            eXSelfRegEmployeeContactDetails.Checked = this.EXSelfRegTickAllParams.EXSelfRegEmployeeContactDetailsChecked;

            // Select 'Employment Information' check box
            eXSelfRegEmployeeInformation.Checked = this.EXSelfRegTickAllParams.EXSelfRegEmployeeInformationChecked;

            // Select 'Item Role' check box
            eXSelfRegItemRole.Checked = this.EXSelfRegTickAllParams.EXSelfRegItemRoleChecked;

            // Select 'Advances Signoff Group' check box
            eXSelfRegAdvancesSignoffGroup.Checked = this.EXSelfRegTickAllParams.EXSelfRegAdvancesSignoffGroupChecked;

            // Select 'Bank Details' check box
            eXSelfRegBankDetails.Checked = this.EXSelfRegTickAllParams.EXSelfRegBankDetailsChecked;

            // Select 'Additional User Defined Fields' check box
            eXSelfRegAdditionalUDFs.Checked = this.EXSelfRegTickAllParams.EXSelfRegAdditionalUDFsChecked;
        }
        
        /// <summary>
        /// EXSelfRegUnTickAll - Use 'EXSelfRegUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void EXSelfRegUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox eXSelfRegAllowSelfReg = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAllowSelfReg;
            HtmlCheckBox eXSelfRegHomeAddressDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegHomeAddressDetails;
            HtmlCheckBox eXSelfRegRole = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegRole;
            HtmlCheckBox eXSelfRegSignoffGroup = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegSignoffGroup;
            HtmlCheckBox eXSelfRegDefaultDepartment = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegDefaultDepartment;
            HtmlCheckBox eXSelfRegCarDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegCarDetails;
            HtmlCheckBox eXSelfRegEmployeeContactDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegEmployeeContactDetails;
            HtmlCheckBox eXSelfRegEmployeeInformation = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegEmployeeInformation;
            HtmlCheckBox eXSelfRegItemRole = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegItemRole;
            HtmlCheckBox eXSelfRegAdvancesSignoffGroup = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAdvancesSignoffGroup;
            HtmlCheckBox eXSelfRegBankDetails = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegBankDetails;
            HtmlCheckBox eXSelfRegAdditionalUDFs = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.EXSelfRegAdditionalUDFs;
            #endregion

            // Clear 'Allow Self Registration' check box
            eXSelfRegAllowSelfReg.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegAllowSelfRegChecked;

            // Clear 'Home Address/Contact Details' check box
            eXSelfRegHomeAddressDetails.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegHomeAddressDetailsChecked;

            // Clear 'Role' check box
            eXSelfRegRole.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegRoleChecked;

            // Clear 'Signoff Group' check box
            eXSelfRegSignoffGroup.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegSignoffGroupChecked;

            // Clear 'Default Department/Cost Code' check box
            eXSelfRegDefaultDepartment.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegDefaultDepartmentChecked;

            // Clear 'Car Details' check box
            eXSelfRegCarDetails.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegCarDetailsChecked;

            // Clear 'Employment Contact Details' check box
            eXSelfRegEmployeeContactDetails.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegEmployeeContactDetailsChecked;

            // Clear 'Employment Information' check box
            eXSelfRegEmployeeInformation.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegEmployeeInformationChecked;

            // Clear 'Item Role' check box
            eXSelfRegItemRole.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegItemRoleChecked;

            // Clear 'Advances Signoff Group' check box
            eXSelfRegAdvancesSignoffGroup.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegAdvancesSignoffGroupChecked;

            // Clear 'Bank Details' check box
            eXSelfRegBankDetails.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegBankDetailsChecked;

            // Clear 'Additional User Defined Fields' check box
            eXSelfRegAdditionalUDFs.Checked = this.EXSelfRegUnTickAllParams.EXSelfRegAdditionalUDFsChecked;
        }
        
        /// <summary>
        /// EXSelfRegUpdateAllDropDownsToFirstValue - Use 'EXSelfRegUpdateAllDropDownsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void EXSelfRegUpdateAllDropDownsToFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultRoleComboBox;
            HtmlComboBox uIDefaultItemRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultItemRoleComboBox;
            #endregion

            // Select 'Claimant' in 'Default Role' combo box
            uIDefaultRoleComboBox.SelectedItem = this.EXSelfRegUpdateAllDropDownsToFirstValueParams.UIDefaultRoleComboBoxSelectedItem;

            // Select 'claimant' in 'Default Item Role' combo box
            uIDefaultItemRoleComboBox.SelectedItem = this.EXSelfRegUpdateAllDropDownsToFirstValueParams.UIDefaultItemRoleComboBoxSelectedItem;
        }
        
        /// <summary>
        /// EXSelfRegUpdateAllDropDownsToSecondValue - Use 'EXSelfRegUpdateAllDropDownsToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void EXSelfRegUpdateAllDropDownsToSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultRoleComboBox;
            HtmlComboBox uIDefaultItemRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultItemRoleComboBox;
            #endregion

            // Select '[None]' in 'Default Role' combo box
            uIDefaultRoleComboBox.SelectedItem = this.EXSelfRegUpdateAllDropDownsToSecondValueParams.UIDefaultRoleComboBoxSelectedItem;

            // Select '[None]' in 'Default Item Role' combo box
            uIDefaultItemRoleComboBox.SelectedItem = this.EXSelfRegUpdateAllDropDownsToSecondValueParams.UIDefaultItemRoleComboBoxSelectedItem;
        }
        
        /// <summary>
        /// ExSelfRegValidateDropDownListFirstValue - Use 'ExSelfRegValidateDropDownListFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExSelfRegValidateDropDownListFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultRoleComboBox;
            HtmlComboBox uIDefaultItemRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultItemRoleComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Role' combo box equals 'Claimant'
            Assert.AreEqual(this.ExSelfRegValidateDropDownListFirstValueExpectedValues.UIDefaultRoleComboBoxSelectedItem, uIDefaultRoleComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Item Role' combo box equals 'claimant'
            Assert.AreEqual(this.ExSelfRegValidateDropDownListFirstValueExpectedValues.UIDefaultItemRoleComboBoxSelectedItem, uIDefaultItemRoleComboBox.SelectedItem);
        }
        
        /// <summary>
        /// ExSelfRegValidateDropDownListSecondValue - Use 'ExSelfRegValidateDropDownListSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ExSelfRegValidateDropDownListSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultRoleComboBox;
            HtmlComboBox uIDefaultItemRoleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UIDefaultItemRoleComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Role' combo box equals '[None]'
            Assert.AreEqual(this.ExSelfRegValidateDropDownListSecondValueExpectedValues.UIDefaultRoleComboBoxSelectedItem, uIDefaultRoleComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Item Role' combo box equals '[None]'
            Assert.AreEqual(this.ExSelfRegValidateDropDownListSecondValueExpectedValues.UIDefaultItemRoleComboBoxSelectedItem, uIDefaultItemRoleComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkContractsValidateTextBoxesContainFirstValue - Use 'FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkContractsValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIContractKeyPrefixEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractKeyPrefixEdit;
            HtmlEdit uIContractDescriptionTEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractDescriptionTEdit;
            HtmlEdit uIContractCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractCategoryTitlEdit;
            HtmlEdit uIPenaltyClauseTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPenaltyClauseTitleEdit;
            HtmlEdit uIAbbreviatedContractDEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAbbreviatedContractDEdit;
            HtmlEdit uICurrentContractNumbeEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentContractNumbeEdit;
            HtmlEdit uIContractScheduleDefaEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractScheduleDefaEdit;
            #endregion

            // Verify that the 'Text' property of 'Contract Key Prefix' text box equals 'Test1'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIContractKeyPrefixEditText, uIContractKeyPrefixEdit.Text);

            // Verify that the 'Text' property of 'Contract Description Title' text box equals 'Test2'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIContractDescriptionTEditText, uIContractDescriptionTEdit.Text);

            // Verify that the 'Text' property of 'Contract Category Title' text box equals 'Test3'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIContractCategoryTitlEditText, uIContractCategoryTitlEdit.Text);

            // Verify that the 'Text' property of 'Penalty Clause Title' text box equals 'Test4'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIPenaltyClauseTitleEditText, uIPenaltyClauseTitleEdit.Text);

            // Verify that the 'Text' property of 'Abbreviated Contract Description Title' text box equals 'Test5'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIAbbreviatedContractDEditText, uIAbbreviatedContractDEdit.Text);

            // Verify that the 'Text' property of 'Current Contract Number Sequence Value' text box equals '2'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UICurrentContractNumbeEditText, uICurrentContractNumbeEdit.Text);

            // Verify that the 'Text' property of 'Contract Schedule Default' text box equals '4'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues.UIContractScheduleDefaEditText, uIContractScheduleDefaEdit.Text);
        }
        
        /// <summary>
        /// FrameworkContractsValidateTextBoxesContainSecondValue - Use 'FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkContractsValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIContractKeyPrefixEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractKeyPrefixEdit;
            HtmlEdit uIContractDescriptionTEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractDescriptionTEdit;
            HtmlEdit uIContractCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractCategoryTitlEdit;
            HtmlEdit uIPenaltyClauseTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPenaltyClauseTitleEdit;
            HtmlEdit uIAbbreviatedContractDEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAbbreviatedContractDEdit;
            HtmlEdit uICurrentContractNumbeEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentContractNumbeEdit;
            HtmlEdit uIContractScheduleDefaEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractScheduleDefaEdit;
            #endregion

            // Verify that the 'Text' property of 'Contract Key Prefix' text box equals 'Test1EDITED'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIContractKeyPrefixEditText, uIContractKeyPrefixEdit.Text);

            // Verify that the 'Text' property of 'Contract Description Title' text box equals 'Test2EDITED'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIContractDescriptionTEditText, uIContractDescriptionTEdit.Text);

            // Verify that the 'Text' property of 'Contract Category Title' text box equals 'Test3EDITED'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIContractCategoryTitlEditText, uIContractCategoryTitlEdit.Text);

            // Verify that the 'Text' property of 'Penalty Clause Title' text box equals 'Test4EDITED'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIPenaltyClauseTitleEditText, uIPenaltyClauseTitleEdit.Text);

            // Verify that the 'Text' property of 'Abbreviated Contract Description Title' text box equals 'Test5EDITED'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIAbbreviatedContractDEditText, uIAbbreviatedContractDEdit.Text);

            // Verify that the 'Text' property of 'Current Contract Number Sequence Value' text box equals '3'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UICurrentContractNumbeEditText, uICurrentContractNumbeEdit.Text);

            // Verify that the 'Text' property of 'Contract Schedule Default' text box equals '5'
            Assert.AreEqual(this.FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues.UIContractScheduleDefaEditText, uIContractScheduleDefaEdit.Text);
        }
        
        /// <summary>
        /// FrameworkEmailServerValidateTextBoxesContainFirstValue - Use 'FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkEmailServerValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailServerEdit;
            HtmlEdit uIEmailFromAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailFromAddressEdit;
            HtmlEdit uIAuditorEmailAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAuditorEmailAddressEdit;
            HtmlEdit uIErrorSubmitEmailAddrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitEmailAddrEdit;
            HtmlEdit uIErrorSubmitFromEmailEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitFromEmailEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailAdministratorAdEdit;
            #endregion

            // Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test1'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIEmailServerEditText, uIEmailServerEdit.Text);

            // Verify that the 'Id' property of 'Email From Address' text box equals 'ctl00_contentmain_txtEmailFromAddress'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIEmailFromAddressEditId, uIEmailFromAddressEdit.Id);

            // Verify that the 'Text' property of 'Auditor Email Address' text box equals 'test2@test2.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIAuditorEmailAddressEditText, uIAuditorEmailAddressEdit.Text);

            // Verify that the 'Text' property of 'Error Submit Email Address' text box equals 'test3@test3.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIErrorSubmitEmailAddrEditText, uIErrorSubmitEmailAddrEdit.Text);

            // Verify that the 'Text' property of 'Error Submit From Email Address' text box equals 'test4@test4.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIErrorSubmitFromEmailEditText, uIErrorSubmitFromEmailEdit.Text);

            // Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test5@test5.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues.UIEmailAdministratorAdEditText, uIEmailAdministratorAdEdit.Text);
        }
        
        /// <summary>
        /// FrameworkEmailServerValidateTextBoxesContainSecondValue - Use 'FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkEmailServerValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailServerEdit;
            HtmlEdit uIEmailFromAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailFromAddressEdit;
            HtmlEdit uIAuditorEmailAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAuditorEmailAddressEdit;
            HtmlEdit uIErrorSubmitEmailAddrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitEmailAddrEdit;
            HtmlEdit uIErrorSubmitFromEmailEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitFromEmailEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailAdministratorAdEdit;
            #endregion

            // Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test2'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIEmailServerEditText, uIEmailServerEdit.Text);

            // Verify that the 'Text' property of 'Email From Address' text box equals 'test6@test6.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIEmailFromAddressEditText, uIEmailFromAddressEdit.Text);

            // Verify that the 'Text' property of 'Auditor Email Address' text box equals 'test7@test7.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIAuditorEmailAddressEditText, uIAuditorEmailAddressEdit.Text);

            // Verify that the 'Text' property of 'Error Submit Email Address' text box equals 'test8@test8.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIErrorSubmitEmailAddrEditText, uIErrorSubmitEmailAddrEdit.Text);

            // Verify that the 'Text' property of 'Error Submit From Email Address' text box equals 'test9@test9.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIErrorSubmitFromEmailEditText, uIErrorSubmitFromEmailEdit.Text);

            // Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test10@test10.com'
            Assert.AreEqual(this.FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues.UIEmailAdministratorAdEditText, uIEmailAdministratorAdEdit.Text);
        }
        
        /// <summary>
        /// FrameworkGeneralDetailsValidateDropDownListOnFirstValue - Use 'FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkGeneralDetailsValidateDropDownListOnFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uILinkAttachmentDefaulComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UILinkAttachmentDefaulComboBox;
            HtmlComboBox uIFinancialYearStartsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearStartsComboBox;
            HtmlComboBox uIFinancialYearEndsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearEndsComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Link Attachment Default' combo box equals 'Hyperlink'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues.UILinkAttachmentDefaulComboBoxSelectedItem, uILinkAttachmentDefaulComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Financial Year Starts' combo box equals 'January'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues.UIFinancialYearStartsComboBoxSelectedItem, uIFinancialYearStartsComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Financial Year Ends' combo box equals 'January'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues.UIFinancialYearEndsComboBoxSelectedItem, uIFinancialYearEndsComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkGeneralDetailsValidateDropDownListOnLastValue - Use 'FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkGeneralDetailsValidateDropDownListOnLastValue()
        {
            #region Variable Declarations
            HtmlComboBox uILinkAttachmentDefaulComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UILinkAttachmentDefaulComboBox;
            HtmlComboBox uIFinancialYearStartsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearStartsComboBox;
            HtmlComboBox uIFinancialYearEndsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearEndsComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Link Attachment Default' combo box equals 'File'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues.UILinkAttachmentDefaulComboBoxSelectedItem, uILinkAttachmentDefaulComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Financial Year Starts' combo box equals 'December'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues.UIFinancialYearStartsComboBoxSelectedItem, uIFinancialYearStartsComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Financial Year Ends' combo box equals 'December'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues.UIFinancialYearEndsComboBoxSelectedItem, uIFinancialYearEndsComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkGeneralDetailsValidateNoCheckboxesSelected - Use 'FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkGeneralDetailsValidateNoCheckboxesSelected()
        {
            #region Variable Declarations
            HtmlCheckBox uploadAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UploadAttachmentsEnabledCheckBox;
            HtmlCheckBox hyperlinkAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.HyperlinkAttachmentsEnabledCheckBox;
            HtmlCheckBox flashingNotesIconCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FlashingNotesIconCheckBox;
            HtmlCheckBox showProductInHomePageSearchCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.ShowProductInHomePageSearchCheckBox;
            HtmlCheckBox employeesMayEditOwnDetailsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.EmployeesMayEditOwnDetailsCheckBox;
            HtmlCheckBox autoUpdateProductLicenceTotalsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.AutoUpdateProductLicenceTotalsCheckBox;
            HtmlCheckBox taskDueDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskDueDateMandatoryCheckBox;
            HtmlCheckBox taskStartDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskStartDateMandatoryCheckBox;
            HtmlCheckBox taskEndDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskEndDateMandatoryCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'Upload Attachments Enabled?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.UploadAttachmentsEnabledCheckBoxChecked, uploadAttachmentsEnabledCheckBox.Checked);

            // Verify that the 'Checked' property of 'Hyperlink Attachments Enabled?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.HyperlinkAttachmentsEnabledCheckBoxChecked, hyperlinkAttachmentsEnabledCheckBox.Checked);

            // Verify that the 'Checked' property of 'Flashing Notes Icon?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.FlashingNotesIconCheckBoxChecked, flashingNotesIconCheckBox.Checked);

            // Verify that the 'Checked' property of 'Show Product in Home Page Search Results' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.ShowProductInHomePageSearchCheckBoxChecked, showProductInHomePageSearchCheckBox.Checked);

            // Verify that the 'Checked' property of 'Employees may edit their own personal details' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.EmployeesMayEditOwnDetailsCheckBoxChecked, employeesMayEditOwnDetailsCheckBox.Checked);

            // Verify that the 'Checked' property of 'Auto Update Product Licence Totals' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.AutoUpdateProductLicenceTotalsCheckBoxChecked, autoUpdateProductLicenceTotalsCheckBox.Checked);

            // Verify that the 'Checked' property of 'Task Due Date Mandatory?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.TaskDueDateMandatoryCheckBoxChecked, taskDueDateMandatoryCheckBox.Checked);

            // Verify that the 'Checked' property of 'Task Start Date Mandatory?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.TaskStartDateMandatoryCheckBoxChecked, taskStartDateMandatoryCheckBox.Checked);

            // Verify that the 'Checked' property of 'Task End Date Mandatory?' check box equals 'False'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues.TaskEndDateMandatoryCheckBoxChecked, taskEndDateMandatoryCheckBox.Checked);
        }
        
        /// <summary>
        /// FrameworkGeneralDetailsValidateTextBoxesContainFirstValue - Use 'FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkGeneralDetailsValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIMaxFileUploadSizeKbyEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMaxFileUploadSizeKbyEdit;
            HtmlEdit uIDefaultReportPageSizEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultReportPageSizEdit;
            HtmlEdit uITaskEscalationRepeatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UITaskEscalationRepeatEdit;
            #endregion

            // Verify that the 'Text' property of 'Max File Upload Size (Kbytes)' text box equals '999'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues.UIMaxFileUploadSizeKbyEditText, uIMaxFileUploadSizeKbyEdit.Text);

            // Verify that the 'Text' property of 'Default Report Page Size (rows)' text box equals '99'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues.UIDefaultReportPageSizEditText, uIDefaultReportPageSizEdit.Text);

            // Verify that the 'Text' property of 'Task Escalation Repeat (days)' text box equals '9'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues.UITaskEscalationRepeatEditText, uITaskEscalationRepeatEdit.Text);
        }
        
        /// <summary>
        /// FrameworkGeneralDetailsValidateTextBoxesContainSecondValue - Use 'FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkGeneralDetailsValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIMaxFileUploadSizeKbyEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMaxFileUploadSizeKbyEdit;
            HtmlEdit uIDefaultReportPageSizEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultReportPageSizEdit;
            HtmlEdit uITaskEscalationRepeatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UITaskEscalationRepeatEdit;
            #endregion

            // Verify that the 'Text' property of 'Max File Upload Size (Kbytes)' text box equals '666'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues.UIMaxFileUploadSizeKbyEditText, uIMaxFileUploadSizeKbyEdit.Text);

            // Verify that the 'Text' property of 'Default Report Page Size (rows)' text box equals '66'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues.UIDefaultReportPageSizEditText, uIDefaultReportPageSizEdit.Text);

            // Verify that the 'Text' property of 'Task Escalation Repeat (days)' text box equals '6'
            Assert.AreEqual(this.FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues.UITaskEscalationRepeatEditText, uITaskEscalationRepeatEdit.Text);
        }
        
        /// <summary>
        /// FrameworkInvoicesValidateTextBoxesContainFirstValue - Use 'FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkInvoicesValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIPONumberFormatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPONumberFormatEdit;
            HtmlEdit uICurrentPOSequenceNumEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentPOSequenceNumEdit;
            #endregion

            // Verify that the 'Text' property of 'PO Number Format' text box equals 'Test'
            Assert.AreEqual(this.FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues.UIPONumberFormatEditText, uIPONumberFormatEdit.Text);

            // Verify that the 'Text' property of 'Current PO Sequence Number' text box equals 'Test'
            Assert.AreEqual(this.FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues.UICurrentPOSequenceNumEditText, uICurrentPOSequenceNumEdit.Text);
        }
        
        /// <summary>
        /// FrameworkInvoicesValidateTextBoxesContainSecondValue - Use 'FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkInvoicesValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIPONumberFormatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPONumberFormatEdit;
            HtmlEdit uICurrentPOSequenceNumEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentPOSequenceNumEdit;
            #endregion

            // Verify that the 'Text' property of 'PO Number Format' text box equals 'TestEDITED1'
            Assert.AreEqual(this.FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues.UIPONumberFormatEditText, uIPONumberFormatEdit.Text);

            // Verify that the 'Text' property of 'Current PO Sequence Number' text box equals 'TestEDITED2'
            Assert.AreEqual(this.FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues.UICurrentPOSequenceNumEditText, uICurrentPOSequenceNumEdit.Text);
        }
        
        /// <summary>
        /// FrameworkMainAdministratorValidateDropDownListOnFirstValue - Use 'FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkMainAdministratorValidateDropDownListOnFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIMainAdministratorComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMainAdministratorComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Main Administrator' combo box equals '[None]'
            Assert.AreEqual(this.FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues.UIMainAdministratorComboBoxSelectedItem, uIMainAdministratorComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkMainAdministratorValidateDropDownListOnSecondValue - Use 'FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkMainAdministratorValidateDropDownListOnSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIMainAdministratorComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UIMainAdministratorComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Main Administrator' combo box equals 'TestSurnam, Mrs TestForename (CodedUIAdmin)'
            Assert.AreEqual(this.FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues.UIMainAdministratorComboBoxSelectedItem, uIMainAdministratorComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkRegionalSettingsValidateDropDownListOnFirstValue - Use 'FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkRegionalSettingsValidateDropDownListOnFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultCountryComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultCountryComboBox;
            HtmlComboBox uIBaseCurrencyComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIBaseCurrencyComboBox;
            HtmlComboBox uIDefaultLanguageComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLanguageComboBox;
            HtmlComboBox uIDefaultLocaleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLocaleComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Country' combo box equals 'United States'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues.UIDefaultCountryComboBoxSelectedItem, uIDefaultCountryComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Base Currency' combo box equals 'US Dollar'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues.UIBaseCurrencyComboBoxSelectedItem, uIBaseCurrencyComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Language' combo box equals 'Dutch'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues.UIDefaultLanguageComboBoxSelectedItem, uIDefaultLanguageComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Locale' combo box equals '[None]'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues.UIDefaultLocaleComboBoxSelectedItem, uIDefaultLocaleComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkRegionalSettingsValidateDropDownListOnSecondValue - Use 'FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkRegionalSettingsValidateDropDownListOnSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultCountryComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultCountryComboBox;
            HtmlComboBox uIBaseCurrencyComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIBaseCurrencyComboBox;
            HtmlComboBox uIDefaultLanguageComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLanguageComboBox;
            HtmlComboBox uIDefaultLocaleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLocaleComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of 'Default Country' combo box equals 'United Kingdom'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues.UIDefaultCountryComboBoxSelectedItem, uIDefaultCountryComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Base Currency' combo box equals 'Pound Sterling'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues.UIBaseCurrencyComboBoxSelectedItem, uIBaseCurrencyComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Language' combo box equals 'English'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues.UIDefaultLanguageComboBoxSelectedItem, uIDefaultLanguageComboBox.SelectedItem);

            // Verify that the 'SelectedItem' property of 'Default Locale' combo box equals 'English (United Kingdom) (en-GB)'
            Assert.AreEqual(this.FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues.UIDefaultLocaleComboBoxSelectedItem, uIDefaultLocaleComboBox.SelectedItem);
        }
        
        /// <summary>
        /// FrameworkSuppliersValidateTextBoxesContainFirstValue - Use 'FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkSuppliersValidateTextBoxesContainFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uISupplierTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierTitleEdit;
            HtmlEdit uISupplierRegionTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierRegionTitleEdit;
            HtmlEdit uISupplierCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierCategoryTitlEdit;
            HtmlEdit uISupplierVariationTitEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierVariationTitEdit;
            #endregion

            // Verify that the 'Text' property of 'Supplier Title' text box equals 'Test 1'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues.UISupplierTitleEditText, uISupplierTitleEdit.Text);

            // Verify that the 'Text' property of 'Supplier Region Title' text box equals 'Test 2'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues.UISupplierRegionTitleEditText, uISupplierRegionTitleEdit.Text);

            // Verify that the 'Text' property of 'Supplier Category Title' text box equals 'Test 3'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues.UISupplierCategoryTitlEditText, uISupplierCategoryTitlEdit.Text);

            // Verify that the 'Text' property of 'Supplier Variation Title' text box equals 'Test 4'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues.UISupplierVariationTitEditText, uISupplierVariationTitEdit.Text);
        }
        
        /// <summary>
        /// FrameworkSuppliersValidateTextBoxesContainSecondValue - Use 'FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FrameworkSuppliersValidateTextBoxesContainSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uISupplierTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierTitleEdit;
            HtmlEdit uISupplierRegionTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierRegionTitleEdit;
            HtmlEdit uISupplierCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierCategoryTitlEdit;
            HtmlEdit uISupplierVariationTitEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierVariationTitEdit;
            #endregion

            // Verify that the 'Text' property of 'Supplier Title' text box equals 'Test 1 EDITED'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues.UISupplierTitleEditText, uISupplierTitleEdit.Text);

            // Verify that the 'Text' property of 'Supplier Region Title' text box equals 'Test 2 EDITED'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues.UISupplierRegionTitleEditText, uISupplierRegionTitleEdit.Text);

            // Verify that the 'Text' property of 'Supplier Category Title' text box equals 'Test 3 EDITED'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues.UISupplierCategoryTitlEditText, uISupplierCategoryTitlEdit.Text);

            // Verify that the 'Text' property of 'Supplier Variation Title' text box equals 'Test 4 EDITED'
            Assert.AreEqual(this.FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues.UISupplierVariationTitEditText, uISupplierVariationTitEdit.Text);
        }
        
        /// <summary>
        /// FWContractsTickAll - Use 'FWContractsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWContractsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWContractsContractContractDatesCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractContractDatesCB;
            HtmlCheckBox fWContractsContractAutoGenConNumCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoGenConNumCB;
            HtmlCheckBox fWContractsContractAutoUpdateAnnualConValCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoUpdateAnnualConValCB;
            HtmlCheckBox fWContractsContractInvoiceFrequencyActiveCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractInvoiceFrequencyActiveCB;
            HtmlCheckBox fWContractsContractContractCatMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractContractCatMandatoryCB;
            HtmlCheckBox fWContractsContractTermTypeFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractTermTypeFieldCB;
            HtmlCheckBox fWContractsContractInflatorActiveCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractInflatorActiveCB;
            HtmlCheckBox fWContractsContractAutoGenUpdatableCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoGenUpdatableCB;
            HtmlCheckBox fWContractsContractAllowNotesInArchivedCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAllowNotesInArchivedCB;
            HtmlCheckBox fWContractsContractAutoSequenceVaritionsCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoSequenceVaritionsCB;
            #endregion

            // Select 'Contract Dates Mandatory?' check box
            fWContractsContractContractDatesCB.Checked = this.FWContractsTickAllParams.FWContractsContractContractDatesCBChecked;

            // Select 'Auto Generate Contract Numbers?' check box
            fWContractsContractAutoGenConNumCB.Checked = this.FWContractsTickAllParams.FWContractsContractAutoGenConNumCBChecked;

            // Select 'Auto Update Annual Contract Value Field?' check box
            fWContractsContractAutoUpdateAnnualConValCB.Checked = this.FWContractsTickAllParams.FWContractsContractAutoUpdateAnnualConValCBChecked;

            // Select 'Invoice Frequency Active?' check box
            fWContractsContractInvoiceFrequencyActiveCB.Checked = this.FWContractsTickAllParams.FWContractsContractInvoiceFrequencyActiveCBChecked;

            // Select 'Contract Category Mandatory?' check box
            fWContractsContractContractCatMandatoryCB.Checked = this.FWContractsTickAllParams.FWContractsContractContractCatMandatoryCBChecked;

            // Select 'Term Type Field Active?' check box
            fWContractsContractTermTypeFieldCB.Checked = this.FWContractsTickAllParams.FWContractsContractTermTypeFieldCBChecked;

            // Select 'Inflator Active?' check box
            fWContractsContractInflatorActiveCB.Checked = this.FWContractsTickAllParams.FWContractsContractInflatorActiveCBChecked;

            // Select 'Is Auto Generated Contract Number Updatable?' check box
            fWContractsContractAutoGenUpdatableCB.Checked = this.FWContractsTickAllParams.FWContractsContractAutoGenUpdatableCBChecked;

            // Select 'Allow Notes to be Added to Archived Contracts?' check box
            fWContractsContractAllowNotesInArchivedCB.Checked = this.FWContractsTickAllParams.FWContractsContractAllowNotesInArchivedCBChecked;

            // Select 'Auto Sequence Variations?' check box
            fWContractsContractAutoSequenceVaritionsCB.Checked = this.FWContractsTickAllParams.FWContractsContractAutoSequenceVaritionsCBChecked;
        }
        
        /// <summary>
        /// FWContractsUnTickAll - Use 'FWContractsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWContractsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWContractsContractContractDatesCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractContractDatesCB;
            HtmlCheckBox fWContractsContractAutoGenConNumCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoGenConNumCB;
            HtmlCheckBox fWContractsContractAutoUpdateAnnualConValCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoUpdateAnnualConValCB;
            HtmlCheckBox fWContractsContractInvoiceFrequencyActiveCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractInvoiceFrequencyActiveCB;
            HtmlCheckBox fWContractsContractContractCatMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractContractCatMandatoryCB;
            HtmlCheckBox fWContractsContractTermTypeFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractTermTypeFieldCB;
            HtmlCheckBox fWContractsContractInflatorActiveCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractInflatorActiveCB;
            HtmlCheckBox fWContractsContractAutoGenUpdatableCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoGenUpdatableCB;
            HtmlCheckBox fWContractsContractAllowNotesInArchivedCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAllowNotesInArchivedCB;
            HtmlCheckBox fWContractsContractAutoSequenceVaritionsCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWContractsContractAutoSequenceVaritionsCB;
            #endregion

            // Clear 'Contract Dates Mandatory?' check box
            fWContractsContractContractDatesCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractContractDatesCBChecked;

            // Clear 'Auto Generate Contract Numbers?' check box
            fWContractsContractAutoGenConNumCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractAutoGenConNumCBChecked;

            // Clear 'Auto Update Annual Contract Value Field?' check box
            fWContractsContractAutoUpdateAnnualConValCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractAutoUpdateAnnualConValCBChecked;

            // Clear 'Invoice Frequency Active?' check box
            fWContractsContractInvoiceFrequencyActiveCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractInvoiceFrequencyActiveCBChecked;

            // Clear 'Contract Category Mandatory?' check box
            fWContractsContractContractCatMandatoryCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractContractCatMandatoryCBChecked;

            // Clear 'Term Type Field Active?' check box
            fWContractsContractTermTypeFieldCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractTermTypeFieldCBChecked;

            // Clear 'Inflator Active?' check box
            fWContractsContractInflatorActiveCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractInflatorActiveCBChecked;

            // Clear 'Is Auto Generated Contract Number Updatable?' check box
            fWContractsContractAutoGenUpdatableCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractAutoGenUpdatableCBChecked;

            // Clear 'Allow Notes to be Added to Archived Contracts?' check box
            fWContractsContractAllowNotesInArchivedCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractAllowNotesInArchivedCBChecked;

            // Clear 'Auto Sequence Variations?' check box
            fWContractsContractAutoSequenceVaritionsCB.Checked = this.FWContractsUnTickAllParams.FWContractsContractAutoSequenceVaritionsCBChecked;
        }
        
        /// <summary>
        /// FWContractsUpdateAllTextboxesToFirstValue - Use 'FWContractsUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWContractsUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIContractKeyPrefixEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractKeyPrefixEdit;
            HtmlEdit uIContractDescriptionTEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractDescriptionTEdit;
            HtmlEdit uIContractCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractCategoryTitlEdit;
            HtmlEdit uIPenaltyClauseTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPenaltyClauseTitleEdit;
            HtmlEdit uIAbbreviatedContractDEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAbbreviatedContractDEdit;
            HtmlEdit uIContractScheduleDefaEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractScheduleDefaEdit;
            HtmlEdit uICurrentContractNumbeEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentContractNumbeEdit;
            #endregion

            // Type 'Test1' in 'Contract Key Prefix' text box
            uIContractKeyPrefixEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIContractKeyPrefixEditText;

            // Type 'Test2' in 'Contract Description Title' text box
            uIContractDescriptionTEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIContractDescriptionTEditText;

            // Type 'Test3' in 'Contract Category Title' text box
            uIContractCategoryTitlEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIContractCategoryTitlEditText;

            // Type 'Test4' in 'Penalty Clause Title' text box
            uIPenaltyClauseTitleEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIPenaltyClauseTitleEditText;

            // Type 'Test5' in 'Abbreviated Contract Description Title' text box
            uIAbbreviatedContractDEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIAbbreviatedContractDEditText;

            // Type '4' in 'Contract Schedule Default' text box
            uIContractScheduleDefaEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UIContractScheduleDefaEditText;

            // Type '2' in 'Current Contract Number Sequence Value' text box
            uICurrentContractNumbeEdit.Text = this.FWContractsUpdateAllTextboxesToFirstValueParams.UICurrentContractNumbeEditText;
        }
        
        /// <summary>
        /// FWContractsUpdateAllTextboxesToSecondValue - Use 'FWContractsUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWContractsUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIContractKeyPrefixEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractKeyPrefixEdit;
            HtmlEdit uIContractDescriptionTEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractDescriptionTEdit;
            HtmlEdit uIContractCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractCategoryTitlEdit;
            HtmlEdit uIPenaltyClauseTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPenaltyClauseTitleEdit;
            HtmlEdit uIAbbreviatedContractDEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAbbreviatedContractDEdit;
            HtmlEdit uICurrentContractNumbeEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentContractNumbeEdit;
            HtmlEdit uIContractScheduleDefaEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIContractScheduleDefaEdit;
            #endregion

            // Type 'Test1EDITED' in 'Contract Key Prefix' text box
            uIContractKeyPrefixEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIContractKeyPrefixEditText;

            // Type 'Test2EDITED' in 'Contract Description Title' text box
            uIContractDescriptionTEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIContractDescriptionTEditText;

            // Type 'Test3EDITED' in 'Contract Category Title' text box
            uIContractCategoryTitlEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIContractCategoryTitlEditText;

            // Type 'Test4EDITED' in 'Penalty Clause Title' text box
            uIPenaltyClauseTitleEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIPenaltyClauseTitleEditText;

            // Type 'Test5EDITED' in 'Abbreviated Contract Description Title' text box
            uIAbbreviatedContractDEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIAbbreviatedContractDEditText;

            // Type '3' in 'Current Contract Number Sequence Value' text box
            uICurrentContractNumbeEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UICurrentContractNumbeEditText;

            // Type '5' in 'Contract Schedule Default' text box
            uIContractScheduleDefaEdit.Text = this.FWContractsUpdateAllTextboxesToSecondValueParams.UIContractScheduleDefaEditText;
        }
        
        /// <summary>
        /// FWEmailServerUpdateAllTextboxesToFirstValue - Use 'FWEmailServerUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWEmailServerUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailServerEdit;
            HtmlEdit uIEmailFromAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailFromAddressEdit;
            HtmlEdit uIAuditorEmailAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAuditorEmailAddressEdit;
            HtmlEdit uIErrorSubmitEmailAddrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitEmailAddrEdit;
            HtmlEdit uIErrorSubmitFromEmailEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitFromEmailEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailAdministratorAdEdit;
            #endregion

            // Type 'coded.ui.test1' in 'Email Server' text box
            uIEmailServerEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIEmailServerEditText;

            // Type 'test1@test1.com' in 'Email From Address' text box
            uIEmailFromAddressEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIEmailFromAddressEditText;

            // Type 'test2@test2.com' in 'Auditor Email Address' text box
            uIAuditorEmailAddressEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIAuditorEmailAddressEditText;

            // Type 'test3@test3.com' in 'Error Submit Email Address' text box
            uIErrorSubmitEmailAddrEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIErrorSubmitEmailAddrEditText;

            // Type 'test4@test4.com' in 'Error Submit From Email Address' text box
            uIErrorSubmitFromEmailEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIErrorSubmitFromEmailEditText;

            // Type 'test5@test5.com' in 'Email Administrator Address' text box
            uIEmailAdministratorAdEdit.Text = this.FWEmailServerUpdateAllTextboxesToFirstValueParams.UIEmailAdministratorAdEditText;
        }
        
        /// <summary>
        /// FWEmailServerUpdateAllTextboxesToSecondValue - Use 'FWEmailServerUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWEmailServerUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIEmailServerEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailServerEdit;
            HtmlEdit uIEmailFromAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailFromAddressEdit;
            HtmlEdit uIAuditorEmailAddressEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIAuditorEmailAddressEdit;
            HtmlEdit uIErrorSubmitEmailAddrEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitEmailAddrEdit;
            HtmlEdit uIErrorSubmitFromEmailEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIErrorSubmitFromEmailEdit;
            HtmlEdit uIEmailAdministratorAdEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIEmailAdministratorAdEdit;
            #endregion

            // Type 'coded.ui.test2' in 'Email Server' text box
            uIEmailServerEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIEmailServerEditText;

            // Type 'test6@test6.com' in 'Email From Address' text box
            uIEmailFromAddressEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIEmailFromAddressEditText;

            // Type 'test7@test7.com' in 'Auditor Email Address' text box
            uIAuditorEmailAddressEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIAuditorEmailAddressEditText;

            // Type 'test8@test8.com' in 'Error Submit Email Address' text box
            uIErrorSubmitEmailAddrEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIErrorSubmitEmailAddrEditText;

            // Type 'test9@test9.com' in 'Error Submit From Email Address' text box
            uIErrorSubmitFromEmailEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIErrorSubmitFromEmailEditText;

            // Type 'test10@test10.com' in 'Email Administrator Address' text box
            uIEmailAdministratorAdEdit.Text = this.FWEmailServerUpdateAllTextboxesToSecondValueParams.UIEmailAdministratorAdEditText;
        }
        
        /// <summary>
        /// FWGeneralDetailsChangeAllDropDownsToFirstValue - Use 'FWGeneralDetailsChangeAllDropDownsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsChangeAllDropDownsToFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uILinkAttachmentDefaulComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UILinkAttachmentDefaulComboBox;
            HtmlComboBox uIFinancialYearStartsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearStartsComboBox;
            HtmlComboBox uIFinancialYearEndsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearEndsComboBox;
            #endregion

            // Select 'Hyperlink' in 'Link Attachment Default' combo box
            uILinkAttachmentDefaulComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToFirstValueParams.UILinkAttachmentDefaulComboBoxSelectedItem;

            // Select 'January' in 'Financial Year Starts' combo box
            uIFinancialYearStartsComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToFirstValueParams.UIFinancialYearStartsComboBoxSelectedItem;

            // Select 'January' in 'Financial Year Ends' combo box
            uIFinancialYearEndsComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToFirstValueParams.UIFinancialYearEndsComboBoxSelectedItem;
        }
        
        /// <summary>
        /// FWGeneralDetailsChangeAllDropDownsToLastValue - Use 'FWGeneralDetailsChangeAllDropDownsToLastValueParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsChangeAllDropDownsToLastValue()
        {
            #region Variable Declarations
            HtmlComboBox uILinkAttachmentDefaulComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UILinkAttachmentDefaulComboBox;
            HtmlComboBox uIFinancialYearStartsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearStartsComboBox;
            HtmlComboBox uIFinancialYearEndsComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIFinancialYearEndsComboBox;
            #endregion

            // Select 'File' in 'Link Attachment Default' combo box
            uILinkAttachmentDefaulComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToLastValueParams.UILinkAttachmentDefaulComboBoxSelectedItem;

            // Select 'December' in 'Financial Year Starts' combo box
            uIFinancialYearStartsComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToLastValueParams.UIFinancialYearStartsComboBoxSelectedItem;

            // Select 'December' in 'Financial Year Ends' combo box
            uIFinancialYearEndsComboBox.SelectedItem = this.FWGeneralDetailsChangeAllDropDownsToLastValueParams.UIFinancialYearEndsComboBoxSelectedItem;
        }
        
        /// <summary>
        /// FWGeneralDetailsTickAll - Use 'FWGeneralDetailsTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox uploadAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UploadAttachmentsEnabledCheckBox;
            HtmlCheckBox hyperlinkAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.HyperlinkAttachmentsEnabledCheckBox;
            HtmlCheckBox flashingNotesIconCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FlashingNotesIconCheckBox;
            HtmlCheckBox showProductInHomePageSearchCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.ShowProductInHomePageSearchCheckBox;
            HtmlCheckBox employeesMayEditOwnDetailsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.EmployeesMayEditOwnDetailsCheckBox;
            HtmlCheckBox autoUpdateProductLicenceTotalsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.AutoUpdateProductLicenceTotalsCheckBox;
            HtmlCheckBox taskDueDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskDueDateMandatoryCheckBox;
            HtmlCheckBox taskEndDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskEndDateMandatoryCheckBox;
            HtmlCheckBox taskStartDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskStartDateMandatoryCheckBox;
            #endregion

            // Select 'Upload Attachments Enabled?' check box
            uploadAttachmentsEnabledCheckBox.Checked = this.FWGeneralDetailsTickAllParams.UploadAttachmentsEnabledCheckBoxChecked;

            // Select 'Upload Attachments Enabled?' check box
            uploadAttachmentsEnabledCheckBox.Checked = this.FWGeneralDetailsTickAllParams.UploadAttachmentsEnabledCheckBoxChecked1;

            // Select 'Hyperlink Attachments Enabled?' check box
            hyperlinkAttachmentsEnabledCheckBox.Checked = this.FWGeneralDetailsTickAllParams.HyperlinkAttachmentsEnabledCheckBoxChecked;

            // Select 'Flashing Notes Icon?' check box
            flashingNotesIconCheckBox.Checked = this.FWGeneralDetailsTickAllParams.FlashingNotesIconCheckBoxChecked;

            // Select 'Show Product in Home Page Search Results' check box
            showProductInHomePageSearchCheckBox.Checked = this.FWGeneralDetailsTickAllParams.ShowProductInHomePageSearchCheckBoxChecked;

            // Select 'Employees may edit their own personal details' check box
            employeesMayEditOwnDetailsCheckBox.Checked = this.FWGeneralDetailsTickAllParams.EmployeesMayEditOwnDetailsCheckBoxChecked;

            // Select 'Auto Update Product Licence Totals' check box
            autoUpdateProductLicenceTotalsCheckBox.Checked = this.FWGeneralDetailsTickAllParams.AutoUpdateProductLicenceTotalsCheckBoxChecked;

            // Select 'Task Due Date Mandatory?' check box
            taskDueDateMandatoryCheckBox.Checked = this.FWGeneralDetailsTickAllParams.TaskDueDateMandatoryCheckBoxChecked;

            // Select 'Task End Date Mandatory?' check box
            taskEndDateMandatoryCheckBox.Checked = this.FWGeneralDetailsTickAllParams.TaskEndDateMandatoryCheckBoxChecked;

            // Select 'Task Start Date Mandatory?' check box
            taskStartDateMandatoryCheckBox.Checked = this.FWGeneralDetailsTickAllParams.TaskStartDateMandatoryCheckBoxChecked;
        }
        
        /// <summary>
        /// FWGeneralDetailsUnTickAll - Use 'FWGeneralDetailsUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox uploadAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UploadAttachmentsEnabledCheckBox;
            HtmlCheckBox hyperlinkAttachmentsEnabledCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.HyperlinkAttachmentsEnabledCheckBox;
            HtmlCheckBox flashingNotesIconCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FlashingNotesIconCheckBox;
            HtmlCheckBox showProductInHomePageSearchCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.ShowProductInHomePageSearchCheckBox;
            HtmlCheckBox employeesMayEditOwnDetailsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.EmployeesMayEditOwnDetailsCheckBox;
            HtmlCheckBox autoUpdateProductLicenceTotalsCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.AutoUpdateProductLicenceTotalsCheckBox;
            HtmlCheckBox taskDueDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskDueDateMandatoryCheckBox;
            HtmlCheckBox taskStartDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskStartDateMandatoryCheckBox;
            HtmlCheckBox taskEndDateMandatoryCheckBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.TaskEndDateMandatoryCheckBox;
            #endregion

            // Clear 'Upload Attachments Enabled?' check box
            uploadAttachmentsEnabledCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.UploadAttachmentsEnabledCheckBoxChecked;

            // Clear 'Hyperlink Attachments Enabled?' check box
            hyperlinkAttachmentsEnabledCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.HyperlinkAttachmentsEnabledCheckBoxChecked;

            // Clear 'Flashing Notes Icon?' check box
            flashingNotesIconCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.FlashingNotesIconCheckBoxChecked;

            // Clear 'Show Product in Home Page Search Results' check box
            showProductInHomePageSearchCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.ShowProductInHomePageSearchCheckBoxChecked;

            // Clear 'Employees may edit their own personal details' check box
            employeesMayEditOwnDetailsCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.EmployeesMayEditOwnDetailsCheckBoxChecked;

            // Clear 'Auto Update Product Licence Totals' check box
            autoUpdateProductLicenceTotalsCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.AutoUpdateProductLicenceTotalsCheckBoxChecked;

            // Clear 'Task Due Date Mandatory?' check box
            taskDueDateMandatoryCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.TaskDueDateMandatoryCheckBoxChecked;

            // Clear 'Task Start Date Mandatory?' check box
            taskStartDateMandatoryCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.TaskStartDateMandatoryCheckBoxChecked;

            // Clear 'Task End Date Mandatory?' check box
            taskEndDateMandatoryCheckBox.Checked = this.FWGeneralDetailsUnTickAllParams.TaskEndDateMandatoryCheckBoxChecked;
        }
        
        /// <summary>
        /// FWGeneralDetailsUpdateAllTextboxesToFirstValue - Use 'FWGeneralDetailsUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIMaxFileUploadSizeKbyEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMaxFileUploadSizeKbyEdit;
            HtmlEdit uIDefaultReportPageSizEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultReportPageSizEdit;
            HtmlEdit uITaskEscalationRepeatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UITaskEscalationRepeatEdit;
            #endregion

            // Type '999' in 'Max File Upload Size (Kbytes)' text box
            uIMaxFileUploadSizeKbyEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToFirstValueParams.UIMaxFileUploadSizeKbyEditText;

            // Type '99' in 'Default Report Page Size (rows)' text box
            uIDefaultReportPageSizEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToFirstValueParams.UIDefaultReportPageSizEditText;

            // Type '9' in 'Task Escalation Repeat (days)' text box
            uITaskEscalationRepeatEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToFirstValueParams.UITaskEscalationRepeatEditText;
        }
        
        /// <summary>
        /// FWGeneralDetailsUpdateAllTextboxesToSecondValue - Use 'FWGeneralDetailsUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWGeneralDetailsUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIMaxFileUploadSizeKbyEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMaxFileUploadSizeKbyEdit;
            HtmlEdit uIDefaultReportPageSizEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultReportPageSizEdit;
            HtmlEdit uITaskEscalationRepeatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UITaskEscalationRepeatEdit;
            #endregion

            // Type '666' in 'Max File Upload Size (Kbytes)' text box
            uIMaxFileUploadSizeKbyEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToSecondValueParams.UIMaxFileUploadSizeKbyEditText;

            // Type '66' in 'Default Report Page Size (rows)' text box
            uIDefaultReportPageSizEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToSecondValueParams.UIDefaultReportPageSizEditText;

            // Type '6' in 'Task Escalation Repeat (days)' text box
            uITaskEscalationRepeatEdit.Text = this.FWGeneralDetailsUpdateAllTextboxesToSecondValueParams.UITaskEscalationRepeatEditText;
        }
        
        /// <summary>
        /// FWInvoicesTickAll - Use 'FWInvoicesTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWInvoicesTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWInvoicesAutoPONumbersCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWInvoicesAutoPONumbersCB;
            HtmlCheckBox fWInvoicesKeepInvoiceForecastCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWInvoicesKeepInvoiceForecastCB;
            #endregion

            // Select 'Auto Generate PO Numbers?' check box
            fWInvoicesAutoPONumbersCB.Checked = this.FWInvoicesTickAllParams.FWInvoicesAutoPONumbersCBChecked;

            // Select 'Keep Invoice Forecast on Move to Actual?' check box
            fWInvoicesKeepInvoiceForecastCB.Checked = this.FWInvoicesTickAllParams.FWInvoicesKeepInvoiceForecastCBChecked;
        }
        
        /// <summary>
        /// FWInvoicesUnTickAll - Use 'FWInvoicesUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWInvoicesUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWInvoicesKeepInvoiceForecastCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWInvoicesKeepInvoiceForecastCB;
            HtmlCheckBox fWInvoicesAutoPONumbersCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.FWInvoicesAutoPONumbersCB;
            #endregion

            // Clear 'Keep Invoice Forecast on Move to Actual?' check box
            fWInvoicesKeepInvoiceForecastCB.Checked = this.FWInvoicesUnTickAllParams.FWInvoicesKeepInvoiceForecastCBChecked;

            // Clear 'Auto Generate PO Numbers?' check box
            fWInvoicesAutoPONumbersCB.Checked = this.FWInvoicesUnTickAllParams.FWInvoicesAutoPONumbersCBChecked;
        }
        
        /// <summary>
        /// FWInvoicesUpdateAllTextboxesToFirstValue - Use 'FWInvoicesUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWInvoicesUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uIPONumberFormatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPONumberFormatEdit;
            HtmlEdit uICurrentPOSequenceNumEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentPOSequenceNumEdit;
            #endregion

            // Type 'Test' in 'PO Number Format' text box
            uIPONumberFormatEdit.Text = this.FWInvoicesUpdateAllTextboxesToFirstValueParams.UIPONumberFormatEditText;

            // Type 'Test' in 'Current PO Sequence Number' text box
            uICurrentPOSequenceNumEdit.Text = this.FWInvoicesUpdateAllTextboxesToFirstValueParams.UICurrentPOSequenceNumEditText;
        }
        
        /// <summary>
        /// FWInvoicesUpdateAllTextboxesToSecondValue - Use 'FWInvoicesUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWInvoicesUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uIPONumberFormatEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIPONumberFormatEdit;
            HtmlEdit uICurrentPOSequenceNumEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICurrentPOSequenceNumEdit;
            #endregion

            // Type 'TestEDITED1' in 'PO Number Format' text box
            uIPONumberFormatEdit.Text = this.FWInvoicesUpdateAllTextboxesToSecondValueParams.UIPONumberFormatEditText;

            // Type 'TestEDITED2' in 'Current PO Sequence Number' text box
            uICurrentPOSequenceNumEdit.Text = this.FWInvoicesUpdateAllTextboxesToSecondValueParams.UICurrentPOSequenceNumEditText;
        }
        
        /// <summary>
        /// FWMainAdministratorChangeAllDropDownsToFirstValue - Use 'FWMainAdministratorChangeAllDropDownsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWMainAdministratorChangeAllDropDownsToFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIMainAdministratorComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIMainAdministratorComboBox;
            #endregion

            // Select '[None]' in 'Main Administrator' combo box
            uIMainAdministratorComboBox.SelectedItem = this.FWMainAdministratorChangeAllDropDownsToFirstValueParams.UIMainAdministratorComboBoxSelectedItem;
        }
        
        /// <summary>
        /// FWMainAdministratorChangeAllDropDownsToSecondValue - Use 'FWMainAdministratorChangeAllDropDownsToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWMainAdministratorChangeAllDropDownsToSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIMainAdministratorComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UIMainAdministratorComboBox;
            #endregion

            // Select '[None]' in 'Main Administrator' combo box
            uIMainAdministratorComboBox.SelectedItem = this.FWMainAdministratorChangeAllDropDownsToSecondValueParams.UIMainAdministratorComboBoxSelectedItem;

            // Select 'TestSurnam, Mrs TestForename (CodedUIAdmin)' in 'Main Administrator' combo box
            uIMainAdministratorComboBox.SelectedItem = this.FWMainAdministratorChangeAllDropDownsToSecondValueParams.UIMainAdministratorComboBoxSelectedItem1;
        }
        
        /// <summary>
        /// FWRegionalSettingsChangeAllDropDownsToFirstValue - Use 'FWRegionalSettingsChangeAllDropDownsToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWRegionalSettingsChangeAllDropDownsToFirstValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultCountryComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultCountryComboBox;
            HtmlComboBox uIBaseCurrencyComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIBaseCurrencyComboBox;
            HtmlComboBox uIDefaultLanguageComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLanguageComboBox;
            HtmlComboBox uIDefaultLocaleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLocaleComboBox;
            #endregion

            // Select 'United States' in 'Default Country' combo box
            uIDefaultCountryComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToFirstValueParams.UIDefaultCountryComboBoxSelectedItem;

            // Select 'US Dollar' in 'Base Currency' combo box
            uIBaseCurrencyComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToFirstValueParams.UIBaseCurrencyComboBoxSelectedItem;

            // Select 'Dutch' in 'Default Language' combo box
            uIDefaultLanguageComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToFirstValueParams.UIDefaultLanguageComboBoxSelectedItem;

            // Select '[None]' in 'Default Locale' combo box
            uIDefaultLocaleComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToFirstValueParams.UIDefaultLocaleComboBoxSelectedItem;
        }
        
        /// <summary>
        /// FWRegionalSettingsChangeAllDropDownsToSecondValue - Use 'FWRegionalSettingsChangeAllDropDownsToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWRegionalSettingsChangeAllDropDownsToSecondValue()
        {
            #region Variable Declarations
            HtmlComboBox uIDefaultCountryComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultCountryComboBox;
            HtmlComboBox uIBaseCurrencyComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIBaseCurrencyComboBox;
            HtmlComboBox uIDefaultLanguageComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLanguageComboBox;
            HtmlComboBox uIDefaultLocaleComboBox = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIDefaultLocaleComboBox;
            #endregion

            // Select 'United Kingdom' in 'Default Country' combo box
            uIDefaultCountryComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToSecondValueParams.UIDefaultCountryComboBoxSelectedItem;

            // Select 'Pound Sterling' in 'Base Currency' combo box
            uIBaseCurrencyComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToSecondValueParams.UIBaseCurrencyComboBoxSelectedItem;

            // Select 'English' in 'Default Language' combo box
            uIDefaultLanguageComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToSecondValueParams.UIDefaultLanguageComboBoxSelectedItem;

            // Select 'English (United Kingdom) (en-GB)' in 'Default Locale' combo box
            uIDefaultLocaleComboBox.SelectedItem = this.FWRegionalSettingsChangeAllDropDownsToSecondValueParams.UIDefaultLocaleComboBoxSelectedItem;
        }
        
        /// <summary>
        /// FWSuppliersTickAll - Use 'FWSuppliersTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWSuppliersTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWSuppliersTurnoverCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersTurnoverCB;
            HtmlCheckBox fWSuppliersFinancialCheckCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialCheckCB;
            HtmlCheckBox fWSuppliersContractFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersContractFieldCB;
            HtmlCheckBox fWSuppliersCategoryMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersCategoryMandatoryCB;
            HtmlCheckBox fWSuppliersStatusMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersStatusMandatoryCB;
            HtmlCheckBox fWSuppliersNumberEmployeesFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersNumberEmployeesFieldCB;
            HtmlCheckBox fWSuppliersFinancialStatusCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialStatusCB;
            HtmlCheckBox fWSuppliersFinancialYearEndCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialYearEndCB;
            #endregion

            // Select 'Supplier Turnover Enabled?' check box
            fWSuppliersTurnoverCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersTurnoverCBChecked;

            // Select 'Last Financial Check Enabled?' check box
            fWSuppliersFinancialCheckCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersFinancialCheckCBChecked;

            // Select 'Internal Contact Field Enabled?' check box
            fWSuppliersContractFieldCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersContractFieldCBChecked;

            // Select 'Supplier Category Mandatory?' check box
            fWSuppliersCategoryMandatoryCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersCategoryMandatoryCBChecked;

            // Select 'Supplier Status Mandatory?' check box
            fWSuppliersStatusMandatoryCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersStatusMandatoryCBChecked;

            // Select 'Supplier Number Employees Field Enabled?' check box
            fWSuppliersNumberEmployeesFieldCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersNumberEmployeesFieldCBChecked;

            // Select 'Last Financial Status Enabled?' check box
            fWSuppliersFinancialStatusCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersFinancialStatusCBChecked;

            // Select 'Financial Year End Enabled?' check box
            fWSuppliersFinancialYearEndCB.Checked = this.FWSuppliersTickAllParams.FWSuppliersFinancialYearEndCBChecked;
        }
        
        /// <summary>
        /// FWSuppliersUnTickAll - Use 'FWSuppliersUnTickAllParams' to pass parameters into this method.
        /// </summary>
        public void FWSuppliersUnTickAll()
        {
            #region Variable Declarations
            HtmlCheckBox fWSuppliersTurnoverCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersTurnoverCB;
            HtmlCheckBox fWSuppliersFinancialCheckCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialCheckCB;
            HtmlCheckBox fWSuppliersContractFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersContractFieldCB;
            HtmlCheckBox fWSuppliersCategoryMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersCategoryMandatoryCB;
            HtmlCheckBox fWSuppliersStatusMandatoryCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersStatusMandatoryCB;
            HtmlCheckBox fWSuppliersNumberEmployeesFieldCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersNumberEmployeesFieldCB;
            HtmlCheckBox fWSuppliersFinancialStatusCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialStatusCB;
            HtmlCheckBox fWSuppliersFinancialYearEndCB = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.FWSuppliersFinancialYearEndCB;
            #endregion

            // Clear 'Supplier Turnover Enabled?' check box
            fWSuppliersTurnoverCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersTurnoverCBChecked;

            // Clear 'Last Financial Check Enabled?' check box
            fWSuppliersFinancialCheckCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersFinancialCheckCBChecked;

            // Clear 'Internal Contact Field Enabled?' check box
            fWSuppliersContractFieldCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersContractFieldCBChecked;

            // Clear 'Supplier Category Mandatory?' check box
            fWSuppliersCategoryMandatoryCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersCategoryMandatoryCBChecked;

            // Clear 'Supplier Status Mandatory?' check box
            fWSuppliersStatusMandatoryCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersStatusMandatoryCBChecked;

            // Clear 'Supplier Number Employees Field Enabled?' check box
            fWSuppliersNumberEmployeesFieldCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersNumberEmployeesFieldCBChecked;

            // Clear 'Last Financial Status Enabled?' check box
            fWSuppliersFinancialStatusCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersFinancialStatusCBChecked;

            // Clear 'Financial Year End Enabled?' check box
            fWSuppliersFinancialYearEndCB.Checked = this.FWSuppliersUnTickAllParams.FWSuppliersFinancialYearEndCBChecked;
        }
        
        /// <summary>
        /// FWSuppliersUpdateAllTextboxesToFirstValue - Use 'FWSuppliersUpdateAllTextboxesToFirstValueParams' to pass parameters into this method.
        /// </summary>
        public void FWSuppliersUpdateAllTextboxesToFirstValue()
        {
            #region Variable Declarations
            HtmlEdit uISupplierTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierTitleEdit;
            HtmlEdit uISupplierRegionTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierRegionTitleEdit;
            HtmlEdit uISupplierCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierCategoryTitlEdit;
            HtmlEdit uISupplierVariationTitEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierVariationTitEdit;
            #endregion

            // Type 'Test 1' in 'Supplier Title' text box
            uISupplierTitleEdit.Text = this.FWSuppliersUpdateAllTextboxesToFirstValueParams.UISupplierTitleEditText;

            // Type 'Test 2' in 'Supplier Region Title' text box
            uISupplierRegionTitleEdit.Text = this.FWSuppliersUpdateAllTextboxesToFirstValueParams.UISupplierRegionTitleEditText;

            // Type 'Test 3' in 'Supplier Category Title' text box
            uISupplierCategoryTitlEdit.Text = this.FWSuppliersUpdateAllTextboxesToFirstValueParams.UISupplierCategoryTitlEditText;

            // Type 'Test 4' in 'Supplier Variation Title' text box
            uISupplierVariationTitEdit.Text = this.FWSuppliersUpdateAllTextboxesToFirstValueParams.UISupplierVariationTitEditText;
        }
        
        /// <summary>
        /// FWSuppliersUpdateAllTextboxesToSecondValue - Use 'FWSuppliersUpdateAllTextboxesToSecondValueParams' to pass parameters into this method.
        /// </summary>
        public void FWSuppliersUpdateAllTextboxesToSecondValue()
        {
            #region Variable Declarations
            HtmlEdit uISupplierTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierTitleEdit;
            HtmlEdit uISupplierRegionTitleEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierRegionTitleEdit;
            HtmlEdit uISupplierCategoryTitlEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierCategoryTitlEdit;
            HtmlEdit uISupplierVariationTitEdit = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument1.UISupplierVariationTitEdit;
            #endregion

            // Type 'Test 1 EDITED' in 'Supplier Title' text box
            uISupplierTitleEdit.Text = this.FWSuppliersUpdateAllTextboxesToSecondValueParams.UISupplierTitleEditText;

            // Type 'Test 2 EDITED' in 'Supplier Region Title' text box
            uISupplierRegionTitleEdit.Text = this.FWSuppliersUpdateAllTextboxesToSecondValueParams.UISupplierRegionTitleEditText;

            // Type 'Test 3 EDITED' in 'Supplier Category Title' text box
            uISupplierCategoryTitlEdit.Text = this.FWSuppliersUpdateAllTextboxesToSecondValueParams.UISupplierCategoryTitlEditText;

            // Type 'Test 4 EDITED' in 'Supplier Variation Title' text box
            uISupplierVariationTitEdit.Text = this.FWSuppliersUpdateAllTextboxesToSecondValueParams.UISupplierVariationTitEditText;
        }
        
        /// <summary>
        /// PressDisableSelfRegMessageOK
        /// </summary>
        public void PressDisableSelfRegMessageOK()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(52, 7));
        }
        
        /// <summary>
        /// PressFieldSettingsModalCancelButton
        /// </summary>
        public void PressFieldSettingsModalCancelButton()
        {
            #region Variable Declarations
            HtmlImage uISharedimagesbuttonscImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UISharedimagesbuttonscImage;
            #endregion

            // Click '/shared/images/buttons/cancel_up.gif' image
            Mouse.Click(uISharedimagesbuttonscImage, new Point(34, 17));
        }
        
        /// <summary>
        /// PressFieldSettingsModalSaveButton
        /// </summary>
        public void PressFieldSettingsModalSaveButton()
        {
            #region Variable Declarations
            HtmlImage uISharedimagesbuttonsbImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument2.UISharedimagesbuttonsbImage;
            #endregion

            // Click '/shared/images/buttons/btn_save.png' image
            Mouse.Click(uISharedimagesbuttonsbImage, new Point(35, 16));
        }
        
        /// <summary>
        /// PressGeneralOptionsCancelButton
        /// </summary>
        public void PressGeneralOptionsCancelButton()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmainbtnCButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICtl00contentmainbtnCButton;
            #endregion

            // Click 'ctl00$contentmain$btnCancel' button
            Mouse.Click(uICtl00contentmainbtnCButton, new Point(35, 24));
        }
        
        /// <summary>
        /// PressGeneralOptionsSaveButton
        /// </summary>
        public void PressGeneralOptionsSaveButton()
        {
            #region Variable Declarations
            HtmlInputButton uICtl00contentmainbtnSButton = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICtl00contentmainbtnSButton;
            #endregion

            // Click 'ctl00$contentmain$btnSave' button
            Mouse.Click(uICtl00contentmainbtnSButton, new Point(27, 8));
        }
        
        /// <summary>
        /// PressOKInPNGWillAutomaticallyBeAddedModal
        /// </summary>
        public void PressOKInPNGWillAutomaticallyBeAddedModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(16, 11));
        }
        
        /// <summary>
        /// ValidatePNGWilBeAutomaticallyAddedModal - Use 'ValidatePNGWilBeAutomaticallyAddedModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePNGWilBeAutomaticallyAddedModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument3.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Enabling this option will automatically permit .PNG file type attachments for use by mobile device receipts.
            //
            //This is not currently one of the permitted attachment types.'
            Assert.AreEqual(this.ValidatePNGWilBeAutomaticallyAddedModalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        #region Properties
        public virtual ClickDisableReceiptsParams ClickDisableReceiptsParams
        {
            get
            {
                if ((this.mClickDisableReceiptsParams == null))
                {
                    this.mClickDisableReceiptsParams = new ClickDisableReceiptsParams();
                }
                return this.mClickDisableReceiptsParams;
            }
        }
        
        public virtual ClickEnableMobileDevicesParams ClickEnableMobileDevicesParams
        {
            get
            {
                if ((this.mClickEnableMobileDevicesParams == null))
                {
                    this.mClickEnableMobileDevicesParams = new ClickEnableMobileDevicesParams();
                }
                return this.mClickEnableMobileDevicesParams;
            }
        }
        
        public virtual ClickEnableReceiptsParams ClickEnableReceiptsParams
        {
            get
            {
                if ((this.mClickEnableReceiptsParams == null))
                {
                    this.mClickEnableReceiptsParams = new ClickEnableReceiptsParams();
                }
                return this.mClickEnableReceiptsParams;
            }
        }
        
        public virtual EXCodeAllocationTickAllParams EXCodeAllocationTickAllParams
        {
            get
            {
                if ((this.mEXCodeAllocationTickAllParams == null))
                {
                    this.mEXCodeAllocationTickAllParams = new EXCodeAllocationTickAllParams();
                }
                return this.mEXCodeAllocationTickAllParams;
            }
        }
        
        public virtual EXCodeAllocationUnTickAllParams EXCodeAllocationUnTickAllParams
        {
            get
            {
                if ((this.mEXCodeAllocationUnTickAllParams == null))
                {
                    this.mEXCodeAllocationUnTickAllParams = new EXCodeAllocationUnTickAllParams();
                }
                return this.mEXCodeAllocationUnTickAllParams;
            }
        }
        
        public virtual EXDeclarationTickAllParams EXDeclarationTickAllParams
        {
            get
            {
                if ((this.mEXDeclarationTickAllParams == null))
                {
                    this.mEXDeclarationTickAllParams = new EXDeclarationTickAllParams();
                }
                return this.mEXDeclarationTickAllParams;
            }
        }
        
        public virtual EXDeclarationUnTickAllParams EXDeclarationUnTickAllParams
        {
            get
            {
                if ((this.mEXDeclarationUnTickAllParams == null))
                {
                    this.mEXDeclarationUnTickAllParams = new EXDeclarationUnTickAllParams();
                }
                return this.mEXDeclarationUnTickAllParams;
            }
        }
        
        public virtual EXDeclarationUpdateAllTextBoxesToFirstValueParams EXDeclarationUpdateAllTextBoxesToFirstValueParams
        {
            get
            {
                if ((this.mEXDeclarationUpdateAllTextBoxesToFirstValueParams == null))
                {
                    this.mEXDeclarationUpdateAllTextBoxesToFirstValueParams = new EXDeclarationUpdateAllTextBoxesToFirstValueParams();
                }
                return this.mEXDeclarationUpdateAllTextBoxesToFirstValueParams;
            }
        }
        
        public virtual EXDeclarationUpdateAllTextBoxesToSecondValueParams EXDeclarationUpdateAllTextBoxesToSecondValueParams
        {
            get
            {
                if ((this.mEXDeclarationUpdateAllTextBoxesToSecondValueParams == null))
                {
                    this.mEXDeclarationUpdateAllTextBoxesToSecondValueParams = new EXDeclarationUpdateAllTextBoxesToSecondValueParams();
                }
                return this.mEXDeclarationUpdateAllTextBoxesToSecondValueParams;
            }
        }
        
        public virtual ExDeclarationValidateTextBoxesFirstValueExpectedValues ExDeclarationValidateTextBoxesFirstValueExpectedValues
        {
            get
            {
                if ((this.mExDeclarationValidateTextBoxesFirstValueExpectedValues == null))
                {
                    this.mExDeclarationValidateTextBoxesFirstValueExpectedValues = new ExDeclarationValidateTextBoxesFirstValueExpectedValues();
                }
                return this.mExDeclarationValidateTextBoxesFirstValueExpectedValues;
            }
        }
        
        public virtual ExDeclarationValidateTextBoxesSecondValueExpectedValues ExDeclarationValidateTextBoxesSecondValueExpectedValues
        {
            get
            {
                if ((this.mExDeclarationValidateTextBoxesSecondValueExpectedValues == null))
                {
                    this.mExDeclarationValidateTextBoxesSecondValueExpectedValues = new ExDeclarationValidateTextBoxesSecondValueExpectedValues();
                }
                return this.mExDeclarationValidateTextBoxesSecondValueExpectedValues;
            }
        }
        
        public virtual EXDelegatesTickAllParams EXDelegatesTickAllParams
        {
            get
            {
                if ((this.mEXDelegatesTickAllParams == null))
                {
                    this.mEXDelegatesTickAllParams = new EXDelegatesTickAllParams();
                }
                return this.mEXDelegatesTickAllParams;
            }
        }
        
        public virtual EXDelegatesUnTickAllParams EXDelegatesUnTickAllParams
        {
            get
            {
                if ((this.mEXDelegatesUnTickAllParams == null))
                {
                    this.mEXDelegatesUnTickAllParams = new EXDelegatesUnTickAllParams();
                }
                return this.mEXDelegatesUnTickAllParams;
            }
        }
        
        public virtual EXDutyofCareTickAllParams EXDutyofCareTickAllParams
        {
            get
            {
                if ((this.mEXDutyofCareTickAllParams == null))
                {
                    this.mEXDutyofCareTickAllParams = new EXDutyofCareTickAllParams();
                }
                return this.mEXDutyofCareTickAllParams;
            }
        }
        
        public virtual EXDutyofCareUnTickAllParams EXDutyofCareUnTickAllParams
        {
            get
            {
                if ((this.mEXDutyofCareUnTickAllParams == null))
                {
                    this.mEXDutyofCareUnTickAllParams = new EXDutyofCareUnTickAllParams();
                }
                return this.mEXDutyofCareUnTickAllParams;
            }
        }
        
        public virtual EXEmailServerUpdateAllTextboxesToFirstValueParams EXEmailServerUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mEXEmailServerUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mEXEmailServerUpdateAllTextboxesToFirstValueParams = new EXEmailServerUpdateAllTextboxesToFirstValueParams();
                }
                return this.mEXEmailServerUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual EXEmailServerUpdateAllTextboxesToSecondValueParams EXEmailServerUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mEXEmailServerUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mEXEmailServerUpdateAllTextboxesToSecondValueParams = new EXEmailServerUpdateAllTextboxesToSecondValueParams();
                }
                return this.mEXEmailServerUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual EXEmailServerUpdateRadioButtonsToFirstValueParams EXEmailServerUpdateRadioButtonsToFirstValueParams
        {
            get
            {
                if ((this.mEXEmailServerUpdateRadioButtonsToFirstValueParams == null))
                {
                    this.mEXEmailServerUpdateRadioButtonsToFirstValueParams = new EXEmailServerUpdateRadioButtonsToFirstValueParams();
                }
                return this.mEXEmailServerUpdateRadioButtonsToFirstValueParams;
            }
        }
        
        public virtual EXEmailServerUpdateRadioButtonsToSecondValueParams EXEmailServerUpdateRadioButtonsToSecondValueParams
        {
            get
            {
                if ((this.mEXEmailServerUpdateRadioButtonsToSecondValueParams == null))
                {
                    this.mEXEmailServerUpdateRadioButtonsToSecondValueParams = new EXEmailServerUpdateRadioButtonsToSecondValueParams();
                }
                return this.mEXEmailServerUpdateRadioButtonsToSecondValueParams;
            }
        }
        
        public virtual EXFieldSettingsTickAllParams EXFieldSettingsTickAllParams
        {
            get
            {
                if ((this.mEXFieldSettingsTickAllParams == null))
                {
                    this.mEXFieldSettingsTickAllParams = new EXFieldSettingsTickAllParams();
                }
                return this.mEXFieldSettingsTickAllParams;
            }
        }
        
        public virtual EXFieldSettingsUnTickAllParams EXFieldSettingsUnTickAllParams
        {
            get
            {
                if ((this.mEXFieldSettingsUnTickAllParams == null))
                {
                    this.mEXFieldSettingsUnTickAllParams = new EXFieldSettingsUnTickAllParams();
                }
                return this.mEXFieldSettingsUnTickAllParams;
            }
        }
        
        public virtual EXFieldSettingsUpdateTxtBoxToFirstValueParams EXFieldSettingsUpdateTxtBoxToFirstValueParams
        {
            get
            {
                if ((this.mEXFieldSettingsUpdateTxtBoxToFirstValueParams == null))
                {
                    this.mEXFieldSettingsUpdateTxtBoxToFirstValueParams = new EXFieldSettingsUpdateTxtBoxToFirstValueParams();
                }
                return this.mEXFieldSettingsUpdateTxtBoxToFirstValueParams;
            }
        }
        
        public virtual EXFieldSettingsUpdateTxtBoxToSecondValueParams EXFieldSettingsUpdateTxtBoxToSecondValueParams
        {
            get
            {
                if ((this.mEXFieldSettingsUpdateTxtBoxToSecondValueParams == null))
                {
                    this.mEXFieldSettingsUpdateTxtBoxToSecondValueParams = new EXFieldSettingsUpdateTxtBoxToSecondValueParams();
                }
                return this.mEXFieldSettingsUpdateTxtBoxToSecondValueParams;
            }
        }
        
        public virtual ExFieldSettingsValidateTxtBoxFirstValueExpectedValues ExFieldSettingsValidateTxtBoxFirstValueExpectedValues
        {
            get
            {
                if ((this.mExFieldSettingsValidateTxtBoxFirstValueExpectedValues == null))
                {
                    this.mExFieldSettingsValidateTxtBoxFirstValueExpectedValues = new ExFieldSettingsValidateTxtBoxFirstValueExpectedValues();
                }
                return this.mExFieldSettingsValidateTxtBoxFirstValueExpectedValues;
            }
        }
        
        public virtual ExFieldSettingsValidateTxtBoxSecondValueExpectedValues ExFieldSettingsValidateTxtBoxSecondValueExpectedValues
        {
            get
            {
                if ((this.mExFieldSettingsValidateTxtBoxSecondValueExpectedValues == null))
                {
                    this.mExFieldSettingsValidateTxtBoxSecondValueExpectedValues = new ExFieldSettingsValidateTxtBoxSecondValueExpectedValues();
                }
                return this.mExFieldSettingsValidateTxtBoxSecondValueExpectedValues;
            }
        }
        
        public virtual EXGeneralDetailsSetOdometerReadingDateParams EXGeneralDetailsSetOdometerReadingDateParams
        {
            get
            {
                if ((this.mEXGeneralDetailsSetOdometerReadingDateParams == null))
                {
                    this.mEXGeneralDetailsSetOdometerReadingDateParams = new EXGeneralDetailsSetOdometerReadingDateParams();
                }
                return this.mEXGeneralDetailsSetOdometerReadingDateParams;
            }
        }
        
        public virtual EXGeneralDetailsTickAllParams EXGeneralDetailsTickAllParams
        {
            get
            {
                if ((this.mEXGeneralDetailsTickAllParams == null))
                {
                    this.mEXGeneralDetailsTickAllParams = new EXGeneralDetailsTickAllParams();
                }
                return this.mEXGeneralDetailsTickAllParams;
            }
        }
        
        public virtual EXGeneralDetailsUnTickAllParams EXGeneralDetailsUnTickAllParams
        {
            get
            {
                if ((this.mEXGeneralDetailsUnTickAllParams == null))
                {
                    this.mEXGeneralDetailsUnTickAllParams = new EXGeneralDetailsUnTickAllParams();
                }
                return this.mEXGeneralDetailsUnTickAllParams;
            }
        }
        
        public virtual EXGeneralDetailsUpdateDropDownListsFirstValueParams EXGeneralDetailsUpdateDropDownListsFirstValueParams
        {
            get
            {
                if ((this.mEXGeneralDetailsUpdateDropDownListsFirstValueParams == null))
                {
                    this.mEXGeneralDetailsUpdateDropDownListsFirstValueParams = new EXGeneralDetailsUpdateDropDownListsFirstValueParams();
                }
                return this.mEXGeneralDetailsUpdateDropDownListsFirstValueParams;
            }
        }
        
        public virtual EXGeneralDetailsUpdateDropDownListsSecondValueParams EXGeneralDetailsUpdateDropDownListsSecondValueParams
        {
            get
            {
                if ((this.mEXGeneralDetailsUpdateDropDownListsSecondValueParams == null))
                {
                    this.mEXGeneralDetailsUpdateDropDownListsSecondValueParams = new EXGeneralDetailsUpdateDropDownListsSecondValueParams();
                }
                return this.mEXGeneralDetailsUpdateDropDownListsSecondValueParams;
            }
        }
        
        public virtual EXGeneralDetailsUpdateRadioButtonsToFirstValueParams EXGeneralDetailsUpdateRadioButtonsToFirstValueParams
        {
            get
            {
                if ((this.mEXGeneralDetailsUpdateRadioButtonsToFirstValueParams == null))
                {
                    this.mEXGeneralDetailsUpdateRadioButtonsToFirstValueParams = new EXGeneralDetailsUpdateRadioButtonsToFirstValueParams();
                }
                return this.mEXGeneralDetailsUpdateRadioButtonsToFirstValueParams;
            }
        }
        
        public virtual EXGeneralDetailsUpdateRadioButtonsToSecondValueParams EXGeneralDetailsUpdateRadioButtonsToSecondValueParams
        {
            get
            {
                if ((this.mEXGeneralDetailsUpdateRadioButtonsToSecondValueParams == null))
                {
                    this.mEXGeneralDetailsUpdateRadioButtonsToSecondValueParams = new EXGeneralDetailsUpdateRadioButtonsToSecondValueParams();
                }
                return this.mEXGeneralDetailsUpdateRadioButtonsToSecondValueParams;
            }
        }
        
        public virtual ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues
        {
            get
            {
                if ((this.mExGeneralDetailsValidateDropDownListsFirstValueExpectedValues == null))
                {
                    this.mExGeneralDetailsValidateDropDownListsFirstValueExpectedValues = new ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues();
                }
                return this.mExGeneralDetailsValidateDropDownListsFirstValueExpectedValues;
            }
        }
        
        public virtual ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues
        {
            get
            {
                if ((this.mExGeneralDetailsValidateDropDownListsSecondValueExpectedValues == null))
                {
                    this.mExGeneralDetailsValidateDropDownListsSecondValueExpectedValues = new ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues();
                }
                return this.mExGeneralDetailsValidateDropDownListsSecondValueExpectedValues;
            }
        }
        
        public virtual ExGeneralDetailsValidateOdometerReadingsDateExpectedValues ExGeneralDetailsValidateOdometerReadingsDateExpectedValues
        {
            get
            {
                if ((this.mExGeneralDetailsValidateOdometerReadingsDateExpectedValues == null))
                {
                    this.mExGeneralDetailsValidateOdometerReadingsDateExpectedValues = new ExGeneralDetailsValidateOdometerReadingsDateExpectedValues();
                }
                return this.mExGeneralDetailsValidateOdometerReadingsDateExpectedValues;
            }
        }
        
        public virtual ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues
        {
            get
            {
                if ((this.mExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues == null))
                {
                    this.mExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues = new ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues();
                }
                return this.mExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues;
            }
        }
        
        public virtual ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues
        {
            get
            {
                if ((this.mExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues == null))
                {
                    this.mExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues = new ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues();
                }
                return this.mExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues;
            }
        }
        
        public virtual ExMilageandCarsValidateCalculationQuickestExpectedValues ExMilageandCarsValidateCalculationQuickestExpectedValues
        {
            get
            {
                if ((this.mExMilageandCarsValidateCalculationQuickestExpectedValues == null))
                {
                    this.mExMilageandCarsValidateCalculationQuickestExpectedValues = new ExMilageandCarsValidateCalculationQuickestExpectedValues();
                }
                return this.mExMilageandCarsValidateCalculationQuickestExpectedValues;
            }
        }
        
        public virtual ExMilageandCarsValidateCalculationShortestExpectedValues ExMilageandCarsValidateCalculationShortestExpectedValues
        {
            get
            {
                if ((this.mExMilageandCarsValidateCalculationShortestExpectedValues == null))
                {
                    this.mExMilageandCarsValidateCalculationShortestExpectedValues = new ExMilageandCarsValidateCalculationShortestExpectedValues();
                }
                return this.mExMilageandCarsValidateCalculationShortestExpectedValues;
            }
        }
        
        public virtual EXMileageandCarsTickAllParams EXMileageandCarsTickAllParams
        {
            get
            {
                if ((this.mEXMileageandCarsTickAllParams == null))
                {
                    this.mEXMileageandCarsTickAllParams = new EXMileageandCarsTickAllParams();
                }
                return this.mEXMileageandCarsTickAllParams;
            }
        }
        
        public virtual EXMileageandCarsUnTickAllParams EXMileageandCarsUnTickAllParams
        {
            get
            {
                if ((this.mEXMileageandCarsUnTickAllParams == null))
                {
                    this.mEXMileageandCarsUnTickAllParams = new EXMileageandCarsUnTickAllParams();
                }
                return this.mEXMileageandCarsUnTickAllParams;
            }
        }
        
        public virtual EXMileageandCarsUpdateCalculationToQuickestParams EXMileageandCarsUpdateCalculationToQuickestParams
        {
            get
            {
                if ((this.mEXMileageandCarsUpdateCalculationToQuickestParams == null))
                {
                    this.mEXMileageandCarsUpdateCalculationToQuickestParams = new EXMileageandCarsUpdateCalculationToQuickestParams();
                }
                return this.mEXMileageandCarsUpdateCalculationToQuickestParams;
            }
        }
        
        public virtual EXMileageandCarsUpdateCalculationToShortestParams EXMileageandCarsUpdateCalculationToShortestParams
        {
            get
            {
                if ((this.mEXMileageandCarsUpdateCalculationToShortestParams == null))
                {
                    this.mEXMileageandCarsUpdateCalculationToShortestParams = new EXMileageandCarsUpdateCalculationToShortestParams();
                }
                return this.mEXMileageandCarsUpdateCalculationToShortestParams;
            }
        }
        
        public virtual EXNHSOptionsTickAllParams EXNHSOptionsTickAllParams
        {
            get
            {
                if ((this.mEXNHSOptionsTickAllParams == null))
                {
                    this.mEXNHSOptionsTickAllParams = new EXNHSOptionsTickAllParams();
                }
                return this.mEXNHSOptionsTickAllParams;
            }
        }
        
        public virtual EXNHSOptionsUnTickAllParams EXNHSOptionsUnTickAllParams
        {
            get
            {
                if ((this.mEXNHSOptionsUnTickAllParams == null))
                {
                    this.mEXNHSOptionsUnTickAllParams = new EXNHSOptionsUnTickAllParams();
                }
                return this.mEXNHSOptionsUnTickAllParams;
            }
        }
        
        public virtual EXNHSOptionsUpdateDropDownsToAutomaticParams EXNHSOptionsUpdateDropDownsToAutomaticParams
        {
            get
            {
                if ((this.mEXNHSOptionsUpdateDropDownsToAutomaticParams == null))
                {
                    this.mEXNHSOptionsUpdateDropDownsToAutomaticParams = new EXNHSOptionsUpdateDropDownsToAutomaticParams();
                }
                return this.mEXNHSOptionsUpdateDropDownsToAutomaticParams;
            }
        }
        
        public virtual EXNHSOptionsUpdateDropDownsToNoneParams EXNHSOptionsUpdateDropDownsToNoneParams
        {
            get
            {
                if ((this.mEXNHSOptionsUpdateDropDownsToNoneParams == null))
                {
                    this.mEXNHSOptionsUpdateDropDownsToNoneParams = new EXNHSOptionsUpdateDropDownsToNoneParams();
                }
                return this.mEXNHSOptionsUpdateDropDownsToNoneParams;
            }
        }
        
        public virtual EXNHSOptionsUpdateGracePeriodFirstValueParams EXNHSOptionsUpdateGracePeriodFirstValueParams
        {
            get
            {
                if ((this.mEXNHSOptionsUpdateGracePeriodFirstValueParams == null))
                {
                    this.mEXNHSOptionsUpdateGracePeriodFirstValueParams = new EXNHSOptionsUpdateGracePeriodFirstValueParams();
                }
                return this.mEXNHSOptionsUpdateGracePeriodFirstValueParams;
            }
        }
        
        public virtual EXNHSOptionsUpdateGracePeriodSecondValueParams EXNHSOptionsUpdateGracePeriodSecondValueParams
        {
            get
            {
                if ((this.mEXNHSOptionsUpdateGracePeriodSecondValueParams == null))
                {
                    this.mEXNHSOptionsUpdateGracePeriodSecondValueParams = new EXNHSOptionsUpdateGracePeriodSecondValueParams();
                }
                return this.mEXNHSOptionsUpdateGracePeriodSecondValueParams;
            }
        }
        
        public virtual EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues
        {
            get
            {
                if ((this.mEXNHSOptionsValidateDropDownSetToAutomaticExpectedValues == null))
                {
                    this.mEXNHSOptionsValidateDropDownSetToAutomaticExpectedValues = new EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues();
                }
                return this.mEXNHSOptionsValidateDropDownSetToAutomaticExpectedValues;
            }
        }
        
        public virtual EXNHSOptionsValidateDropDownSetToNoneExpectedValues EXNHSOptionsValidateDropDownSetToNoneExpectedValues
        {
            get
            {
                if ((this.mEXNHSOptionsValidateDropDownSetToNoneExpectedValues == null))
                {
                    this.mEXNHSOptionsValidateDropDownSetToNoneExpectedValues = new EXNHSOptionsValidateDropDownSetToNoneExpectedValues();
                }
                return this.mEXNHSOptionsValidateDropDownSetToNoneExpectedValues;
            }
        }
        
        public virtual EXNHSOptionsValidateGracePeriodFirstValueExpectedValues EXNHSOptionsValidateGracePeriodFirstValueExpectedValues
        {
            get
            {
                if ((this.mEXNHSOptionsValidateGracePeriodFirstValueExpectedValues == null))
                {
                    this.mEXNHSOptionsValidateGracePeriodFirstValueExpectedValues = new EXNHSOptionsValidateGracePeriodFirstValueExpectedValues();
                }
                return this.mEXNHSOptionsValidateGracePeriodFirstValueExpectedValues;
            }
        }
        
        public virtual EXNHSOptionsValidateGracePeriodSecondValueExpectedValues EXNHSOptionsValidateGracePeriodSecondValueExpectedValues
        {
            get
            {
                if ((this.mEXNHSOptionsValidateGracePeriodSecondValueExpectedValues == null))
                {
                    this.mEXNHSOptionsValidateGracePeriodSecondValueExpectedValues = new EXNHSOptionsValidateGracePeriodSecondValueExpectedValues();
                }
                return this.mEXNHSOptionsValidateGracePeriodSecondValueExpectedValues;
            }
        }
        
        public virtual EXOtherPreferencesTickAllParams EXOtherPreferencesTickAllParams
        {
            get
            {
                if ((this.mEXOtherPreferencesTickAllParams == null))
                {
                    this.mEXOtherPreferencesTickAllParams = new EXOtherPreferencesTickAllParams();
                }
                return this.mEXOtherPreferencesTickAllParams;
            }
        }
        
        public virtual EXOtherPreferencesUnTickAllParams EXOtherPreferencesUnTickAllParams
        {
            get
            {
                if ((this.mEXOtherPreferencesUnTickAllParams == null))
                {
                    this.mEXOtherPreferencesUnTickAllParams = new EXOtherPreferencesUnTickAllParams();
                }
                return this.mEXOtherPreferencesUnTickAllParams;
            }
        }
        
        public virtual ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues == null))
                {
                    this.mExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues = new ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues();
                }
                return this.mExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues;
            }
        }
        
        public virtual ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues == null))
                {
                    this.mExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues = new ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues();
                }
                return this.mExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues;
            }
        }
        
        public virtual ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues = new ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues = new ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual EXSelfRegTickAllParams EXSelfRegTickAllParams
        {
            get
            {
                if ((this.mEXSelfRegTickAllParams == null))
                {
                    this.mEXSelfRegTickAllParams = new EXSelfRegTickAllParams();
                }
                return this.mEXSelfRegTickAllParams;
            }
        }
        
        public virtual EXSelfRegUnTickAllParams EXSelfRegUnTickAllParams
        {
            get
            {
                if ((this.mEXSelfRegUnTickAllParams == null))
                {
                    this.mEXSelfRegUnTickAllParams = new EXSelfRegUnTickAllParams();
                }
                return this.mEXSelfRegUnTickAllParams;
            }
        }
        
        public virtual EXSelfRegUpdateAllDropDownsToFirstValueParams EXSelfRegUpdateAllDropDownsToFirstValueParams
        {
            get
            {
                if ((this.mEXSelfRegUpdateAllDropDownsToFirstValueParams == null))
                {
                    this.mEXSelfRegUpdateAllDropDownsToFirstValueParams = new EXSelfRegUpdateAllDropDownsToFirstValueParams();
                }
                return this.mEXSelfRegUpdateAllDropDownsToFirstValueParams;
            }
        }
        
        public virtual EXSelfRegUpdateAllDropDownsToSecondValueParams EXSelfRegUpdateAllDropDownsToSecondValueParams
        {
            get
            {
                if ((this.mEXSelfRegUpdateAllDropDownsToSecondValueParams == null))
                {
                    this.mEXSelfRegUpdateAllDropDownsToSecondValueParams = new EXSelfRegUpdateAllDropDownsToSecondValueParams();
                }
                return this.mEXSelfRegUpdateAllDropDownsToSecondValueParams;
            }
        }
        
        public virtual ExSelfRegValidateDropDownListFirstValueExpectedValues ExSelfRegValidateDropDownListFirstValueExpectedValues
        {
            get
            {
                if ((this.mExSelfRegValidateDropDownListFirstValueExpectedValues == null))
                {
                    this.mExSelfRegValidateDropDownListFirstValueExpectedValues = new ExSelfRegValidateDropDownListFirstValueExpectedValues();
                }
                return this.mExSelfRegValidateDropDownListFirstValueExpectedValues;
            }
        }
        
        public virtual ExSelfRegValidateDropDownListSecondValueExpectedValues ExSelfRegValidateDropDownListSecondValueExpectedValues
        {
            get
            {
                if ((this.mExSelfRegValidateDropDownListSecondValueExpectedValues == null))
                {
                    this.mExSelfRegValidateDropDownListSecondValueExpectedValues = new ExSelfRegValidateDropDownListSecondValueExpectedValues();
                }
                return this.mExSelfRegValidateDropDownListSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkContractsValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mFrameworkContractsValidateTextBoxesContainFirstValueExpectedValues = new FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mFrameworkContractsValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkContractsValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mFrameworkContractsValidateTextBoxesContainSecondValueExpectedValues = new FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mFrameworkContractsValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mFrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues = new FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mFrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mFrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues = new FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mFrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues == null))
                {
                    this.mFrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues = new FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues();
                }
                return this.mFrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues == null))
                {
                    this.mFrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues = new FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues();
                }
                return this.mFrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues;
            }
        }
        
        public virtual FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues
        {
            get
            {
                if ((this.mFrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues == null))
                {
                    this.mFrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues = new FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues();
                }
                return this.mFrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues;
            }
        }
        
        public virtual FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mFrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues = new FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mFrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mFrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues = new FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mFrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mFrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues = new FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mFrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mFrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues = new FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mFrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues == null))
                {
                    this.mFrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues = new FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues();
                }
                return this.mFrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues == null))
                {
                    this.mFrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues = new FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues();
                }
                return this.mFrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues == null))
                {
                    this.mFrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues = new FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues();
                }
                return this.mFrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues == null))
                {
                    this.mFrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues = new FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues();
                }
                return this.mFrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues;
            }
        }
        
        public virtual FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues == null))
                {
                    this.mFrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues = new FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues();
                }
                return this.mFrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues;
            }
        }
        
        public virtual FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues
        {
            get
            {
                if ((this.mFrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues == null))
                {
                    this.mFrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues = new FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues();
                }
                return this.mFrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues;
            }
        }
        
        public virtual FWContractsTickAllParams FWContractsTickAllParams
        {
            get
            {
                if ((this.mFWContractsTickAllParams == null))
                {
                    this.mFWContractsTickAllParams = new FWContractsTickAllParams();
                }
                return this.mFWContractsTickAllParams;
            }
        }
        
        public virtual FWContractsUnTickAllParams FWContractsUnTickAllParams
        {
            get
            {
                if ((this.mFWContractsUnTickAllParams == null))
                {
                    this.mFWContractsUnTickAllParams = new FWContractsUnTickAllParams();
                }
                return this.mFWContractsUnTickAllParams;
            }
        }
        
        public virtual FWContractsUpdateAllTextboxesToFirstValueParams FWContractsUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mFWContractsUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mFWContractsUpdateAllTextboxesToFirstValueParams = new FWContractsUpdateAllTextboxesToFirstValueParams();
                }
                return this.mFWContractsUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual FWContractsUpdateAllTextboxesToSecondValueParams FWContractsUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mFWContractsUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mFWContractsUpdateAllTextboxesToSecondValueParams = new FWContractsUpdateAllTextboxesToSecondValueParams();
                }
                return this.mFWContractsUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual FWEmailServerUpdateAllTextboxesToFirstValueParams FWEmailServerUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mFWEmailServerUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mFWEmailServerUpdateAllTextboxesToFirstValueParams = new FWEmailServerUpdateAllTextboxesToFirstValueParams();
                }
                return this.mFWEmailServerUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual FWEmailServerUpdateAllTextboxesToSecondValueParams FWEmailServerUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mFWEmailServerUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mFWEmailServerUpdateAllTextboxesToSecondValueParams = new FWEmailServerUpdateAllTextboxesToSecondValueParams();
                }
                return this.mFWEmailServerUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual FWGeneralDetailsChangeAllDropDownsToFirstValueParams FWGeneralDetailsChangeAllDropDownsToFirstValueParams
        {
            get
            {
                if ((this.mFWGeneralDetailsChangeAllDropDownsToFirstValueParams == null))
                {
                    this.mFWGeneralDetailsChangeAllDropDownsToFirstValueParams = new FWGeneralDetailsChangeAllDropDownsToFirstValueParams();
                }
                return this.mFWGeneralDetailsChangeAllDropDownsToFirstValueParams;
            }
        }
        
        public virtual FWGeneralDetailsChangeAllDropDownsToLastValueParams FWGeneralDetailsChangeAllDropDownsToLastValueParams
        {
            get
            {
                if ((this.mFWGeneralDetailsChangeAllDropDownsToLastValueParams == null))
                {
                    this.mFWGeneralDetailsChangeAllDropDownsToLastValueParams = new FWGeneralDetailsChangeAllDropDownsToLastValueParams();
                }
                return this.mFWGeneralDetailsChangeAllDropDownsToLastValueParams;
            }
        }
        
        public virtual FWGeneralDetailsTickAllParams FWGeneralDetailsTickAllParams
        {
            get
            {
                if ((this.mFWGeneralDetailsTickAllParams == null))
                {
                    this.mFWGeneralDetailsTickAllParams = new FWGeneralDetailsTickAllParams();
                }
                return this.mFWGeneralDetailsTickAllParams;
            }
        }
        
        public virtual FWGeneralDetailsUnTickAllParams FWGeneralDetailsUnTickAllParams
        {
            get
            {
                if ((this.mFWGeneralDetailsUnTickAllParams == null))
                {
                    this.mFWGeneralDetailsUnTickAllParams = new FWGeneralDetailsUnTickAllParams();
                }
                return this.mFWGeneralDetailsUnTickAllParams;
            }
        }
        
        public virtual FWGeneralDetailsUpdateAllTextboxesToFirstValueParams FWGeneralDetailsUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mFWGeneralDetailsUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mFWGeneralDetailsUpdateAllTextboxesToFirstValueParams = new FWGeneralDetailsUpdateAllTextboxesToFirstValueParams();
                }
                return this.mFWGeneralDetailsUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual FWGeneralDetailsUpdateAllTextboxesToSecondValueParams FWGeneralDetailsUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mFWGeneralDetailsUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mFWGeneralDetailsUpdateAllTextboxesToSecondValueParams = new FWGeneralDetailsUpdateAllTextboxesToSecondValueParams();
                }
                return this.mFWGeneralDetailsUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual FWInvoicesTickAllParams FWInvoicesTickAllParams
        {
            get
            {
                if ((this.mFWInvoicesTickAllParams == null))
                {
                    this.mFWInvoicesTickAllParams = new FWInvoicesTickAllParams();
                }
                return this.mFWInvoicesTickAllParams;
            }
        }
        
        public virtual FWInvoicesUnTickAllParams FWInvoicesUnTickAllParams
        {
            get
            {
                if ((this.mFWInvoicesUnTickAllParams == null))
                {
                    this.mFWInvoicesUnTickAllParams = new FWInvoicesUnTickAllParams();
                }
                return this.mFWInvoicesUnTickAllParams;
            }
        }
        
        public virtual FWInvoicesUpdateAllTextboxesToFirstValueParams FWInvoicesUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mFWInvoicesUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mFWInvoicesUpdateAllTextboxesToFirstValueParams = new FWInvoicesUpdateAllTextboxesToFirstValueParams();
                }
                return this.mFWInvoicesUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual FWInvoicesUpdateAllTextboxesToSecondValueParams FWInvoicesUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mFWInvoicesUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mFWInvoicesUpdateAllTextboxesToSecondValueParams = new FWInvoicesUpdateAllTextboxesToSecondValueParams();
                }
                return this.mFWInvoicesUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual FWMainAdministratorChangeAllDropDownsToFirstValueParams FWMainAdministratorChangeAllDropDownsToFirstValueParams
        {
            get
            {
                if ((this.mFWMainAdministratorChangeAllDropDownsToFirstValueParams == null))
                {
                    this.mFWMainAdministratorChangeAllDropDownsToFirstValueParams = new FWMainAdministratorChangeAllDropDownsToFirstValueParams();
                }
                return this.mFWMainAdministratorChangeAllDropDownsToFirstValueParams;
            }
        }
        
        public virtual FWMainAdministratorChangeAllDropDownsToSecondValueParams FWMainAdministratorChangeAllDropDownsToSecondValueParams
        {
            get
            {
                if ((this.mFWMainAdministratorChangeAllDropDownsToSecondValueParams == null))
                {
                    this.mFWMainAdministratorChangeAllDropDownsToSecondValueParams = new FWMainAdministratorChangeAllDropDownsToSecondValueParams();
                }
                return this.mFWMainAdministratorChangeAllDropDownsToSecondValueParams;
            }
        }
        
        public virtual FWRegionalSettingsChangeAllDropDownsToFirstValueParams FWRegionalSettingsChangeAllDropDownsToFirstValueParams
        {
            get
            {
                if ((this.mFWRegionalSettingsChangeAllDropDownsToFirstValueParams == null))
                {
                    this.mFWRegionalSettingsChangeAllDropDownsToFirstValueParams = new FWRegionalSettingsChangeAllDropDownsToFirstValueParams();
                }
                return this.mFWRegionalSettingsChangeAllDropDownsToFirstValueParams;
            }
        }
        
        public virtual FWRegionalSettingsChangeAllDropDownsToSecondValueParams FWRegionalSettingsChangeAllDropDownsToSecondValueParams
        {
            get
            {
                if ((this.mFWRegionalSettingsChangeAllDropDownsToSecondValueParams == null))
                {
                    this.mFWRegionalSettingsChangeAllDropDownsToSecondValueParams = new FWRegionalSettingsChangeAllDropDownsToSecondValueParams();
                }
                return this.mFWRegionalSettingsChangeAllDropDownsToSecondValueParams;
            }
        }
        
        public virtual FWSuppliersTickAllParams FWSuppliersTickAllParams
        {
            get
            {
                if ((this.mFWSuppliersTickAllParams == null))
                {
                    this.mFWSuppliersTickAllParams = new FWSuppliersTickAllParams();
                }
                return this.mFWSuppliersTickAllParams;
            }
        }
        
        public virtual FWSuppliersUnTickAllParams FWSuppliersUnTickAllParams
        {
            get
            {
                if ((this.mFWSuppliersUnTickAllParams == null))
                {
                    this.mFWSuppliersUnTickAllParams = new FWSuppliersUnTickAllParams();
                }
                return this.mFWSuppliersUnTickAllParams;
            }
        }
        
        public virtual FWSuppliersUpdateAllTextboxesToFirstValueParams FWSuppliersUpdateAllTextboxesToFirstValueParams
        {
            get
            {
                if ((this.mFWSuppliersUpdateAllTextboxesToFirstValueParams == null))
                {
                    this.mFWSuppliersUpdateAllTextboxesToFirstValueParams = new FWSuppliersUpdateAllTextboxesToFirstValueParams();
                }
                return this.mFWSuppliersUpdateAllTextboxesToFirstValueParams;
            }
        }
        
        public virtual FWSuppliersUpdateAllTextboxesToSecondValueParams FWSuppliersUpdateAllTextboxesToSecondValueParams
        {
            get
            {
                if ((this.mFWSuppliersUpdateAllTextboxesToSecondValueParams == null))
                {
                    this.mFWSuppliersUpdateAllTextboxesToSecondValueParams = new FWSuppliersUpdateAllTextboxesToSecondValueParams();
                }
                return this.mFWSuppliersUpdateAllTextboxesToSecondValueParams;
            }
        }
        
        public virtual ValidatePNGWilBeAutomaticallyAddedModalExpectedValues ValidatePNGWilBeAutomaticallyAddedModalExpectedValues
        {
            get
            {
                if ((this.mValidatePNGWilBeAutomaticallyAddedModalExpectedValues == null))
                {
                    this.mValidatePNGWilBeAutomaticallyAddedModalExpectedValues = new ValidatePNGWilBeAutomaticallyAddedModalExpectedValues();
                }
                return this.mValidatePNGWilBeAutomaticallyAddedModalExpectedValues;
            }
        }
        
        public UIGeneralOptionsWindowWindow UIGeneralOptionsWindowWindow
        {
            get
            {
                if ((this.mUIGeneralOptionsWindowWindow == null))
                {
                    this.mUIGeneralOptionsWindowWindow = new UIGeneralOptionsWindowWindow();
                }
                return this.mUIGeneralOptionsWindowWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        #endregion
        
        #region Fields
        private ClickDisableReceiptsParams mClickDisableReceiptsParams;
        
        private ClickEnableMobileDevicesParams mClickEnableMobileDevicesParams;
        
        private ClickEnableReceiptsParams mClickEnableReceiptsParams;
        
        private EXCodeAllocationTickAllParams mEXCodeAllocationTickAllParams;
        
        private EXCodeAllocationUnTickAllParams mEXCodeAllocationUnTickAllParams;
        
        private EXDeclarationTickAllParams mEXDeclarationTickAllParams;
        
        private EXDeclarationUnTickAllParams mEXDeclarationUnTickAllParams;
        
        private EXDeclarationUpdateAllTextBoxesToFirstValueParams mEXDeclarationUpdateAllTextBoxesToFirstValueParams;
        
        private EXDeclarationUpdateAllTextBoxesToSecondValueParams mEXDeclarationUpdateAllTextBoxesToSecondValueParams;
        
        private ExDeclarationValidateTextBoxesFirstValueExpectedValues mExDeclarationValidateTextBoxesFirstValueExpectedValues;
        
        private ExDeclarationValidateTextBoxesSecondValueExpectedValues mExDeclarationValidateTextBoxesSecondValueExpectedValues;
        
        private EXDelegatesTickAllParams mEXDelegatesTickAllParams;
        
        private EXDelegatesUnTickAllParams mEXDelegatesUnTickAllParams;
        
        private EXDutyofCareTickAllParams mEXDutyofCareTickAllParams;
        
        private EXDutyofCareUnTickAllParams mEXDutyofCareUnTickAllParams;
        
        private EXEmailServerUpdateAllTextboxesToFirstValueParams mEXEmailServerUpdateAllTextboxesToFirstValueParams;
        
        private EXEmailServerUpdateAllTextboxesToSecondValueParams mEXEmailServerUpdateAllTextboxesToSecondValueParams;
        
        private EXEmailServerUpdateRadioButtonsToFirstValueParams mEXEmailServerUpdateRadioButtonsToFirstValueParams;
        
        private EXEmailServerUpdateRadioButtonsToSecondValueParams mEXEmailServerUpdateRadioButtonsToSecondValueParams;
        
        private EXFieldSettingsTickAllParams mEXFieldSettingsTickAllParams;
        
        private EXFieldSettingsUnTickAllParams mEXFieldSettingsUnTickAllParams;
        
        private EXFieldSettingsUpdateTxtBoxToFirstValueParams mEXFieldSettingsUpdateTxtBoxToFirstValueParams;
        
        private EXFieldSettingsUpdateTxtBoxToSecondValueParams mEXFieldSettingsUpdateTxtBoxToSecondValueParams;
        
        private ExFieldSettingsValidateTxtBoxFirstValueExpectedValues mExFieldSettingsValidateTxtBoxFirstValueExpectedValues;
        
        private ExFieldSettingsValidateTxtBoxSecondValueExpectedValues mExFieldSettingsValidateTxtBoxSecondValueExpectedValues;
        
        private EXGeneralDetailsSetOdometerReadingDateParams mEXGeneralDetailsSetOdometerReadingDateParams;
        
        private EXGeneralDetailsTickAllParams mEXGeneralDetailsTickAllParams;
        
        private EXGeneralDetailsUnTickAllParams mEXGeneralDetailsUnTickAllParams;
        
        private EXGeneralDetailsUpdateDropDownListsFirstValueParams mEXGeneralDetailsUpdateDropDownListsFirstValueParams;
        
        private EXGeneralDetailsUpdateDropDownListsSecondValueParams mEXGeneralDetailsUpdateDropDownListsSecondValueParams;
        
        private EXGeneralDetailsUpdateRadioButtonsToFirstValueParams mEXGeneralDetailsUpdateRadioButtonsToFirstValueParams;
        
        private EXGeneralDetailsUpdateRadioButtonsToSecondValueParams mEXGeneralDetailsUpdateRadioButtonsToSecondValueParams;
        
        private ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues mExGeneralDetailsValidateDropDownListsFirstValueExpectedValues;
        
        private ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues mExGeneralDetailsValidateDropDownListsSecondValueExpectedValues;
        
        private ExGeneralDetailsValidateOdometerReadingsDateExpectedValues mExGeneralDetailsValidateOdometerReadingsDateExpectedValues;
        
        private ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues mExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues;
        
        private ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues mExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues;
        
        private ExMilageandCarsValidateCalculationQuickestExpectedValues mExMilageandCarsValidateCalculationQuickestExpectedValues;
        
        private ExMilageandCarsValidateCalculationShortestExpectedValues mExMilageandCarsValidateCalculationShortestExpectedValues;
        
        private EXMileageandCarsTickAllParams mEXMileageandCarsTickAllParams;
        
        private EXMileageandCarsUnTickAllParams mEXMileageandCarsUnTickAllParams;
        
        private EXMileageandCarsUpdateCalculationToQuickestParams mEXMileageandCarsUpdateCalculationToQuickestParams;
        
        private EXMileageandCarsUpdateCalculationToShortestParams mEXMileageandCarsUpdateCalculationToShortestParams;
        
        private EXNHSOptionsTickAllParams mEXNHSOptionsTickAllParams;
        
        private EXNHSOptionsUnTickAllParams mEXNHSOptionsUnTickAllParams;
        
        private EXNHSOptionsUpdateDropDownsToAutomaticParams mEXNHSOptionsUpdateDropDownsToAutomaticParams;
        
        private EXNHSOptionsUpdateDropDownsToNoneParams mEXNHSOptionsUpdateDropDownsToNoneParams;
        
        private EXNHSOptionsUpdateGracePeriodFirstValueParams mEXNHSOptionsUpdateGracePeriodFirstValueParams;
        
        private EXNHSOptionsUpdateGracePeriodSecondValueParams mEXNHSOptionsUpdateGracePeriodSecondValueParams;
        
        private EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues mEXNHSOptionsValidateDropDownSetToAutomaticExpectedValues;
        
        private EXNHSOptionsValidateDropDownSetToNoneExpectedValues mEXNHSOptionsValidateDropDownSetToNoneExpectedValues;
        
        private EXNHSOptionsValidateGracePeriodFirstValueExpectedValues mEXNHSOptionsValidateGracePeriodFirstValueExpectedValues;
        
        private EXNHSOptionsValidateGracePeriodSecondValueExpectedValues mEXNHSOptionsValidateGracePeriodSecondValueExpectedValues;
        
        private EXOtherPreferencesTickAllParams mEXOtherPreferencesTickAllParams;
        
        private EXOtherPreferencesUnTickAllParams mEXOtherPreferencesUnTickAllParams;
        
        private ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues mExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues;
        
        private ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues mExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues;
        
        private ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues mExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues;
        
        private ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues mExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues;
        
        private EXSelfRegTickAllParams mEXSelfRegTickAllParams;
        
        private EXSelfRegUnTickAllParams mEXSelfRegUnTickAllParams;
        
        private EXSelfRegUpdateAllDropDownsToFirstValueParams mEXSelfRegUpdateAllDropDownsToFirstValueParams;
        
        private EXSelfRegUpdateAllDropDownsToSecondValueParams mEXSelfRegUpdateAllDropDownsToSecondValueParams;
        
        private ExSelfRegValidateDropDownListFirstValueExpectedValues mExSelfRegValidateDropDownListFirstValueExpectedValues;
        
        private ExSelfRegValidateDropDownListSecondValueExpectedValues mExSelfRegValidateDropDownListSecondValueExpectedValues;
        
        private FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues mFrameworkContractsValidateTextBoxesContainFirstValueExpectedValues;
        
        private FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues mFrameworkContractsValidateTextBoxesContainSecondValueExpectedValues;
        
        private FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues mFrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues;
        
        private FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues mFrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues;
        
        private FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues mFrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues;
        
        private FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues mFrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues;
        
        private FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues mFrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues;
        
        private FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues mFrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues;
        
        private FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues mFrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues;
        
        private FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues mFrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues;
        
        private FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues mFrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues;
        
        private FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues mFrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues;
        
        private FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues mFrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues;
        
        private FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues mFrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues;
        
        private FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues mFrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues;
        
        private FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues mFrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues;
        
        private FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues mFrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues;
        
        private FWContractsTickAllParams mFWContractsTickAllParams;
        
        private FWContractsUnTickAllParams mFWContractsUnTickAllParams;
        
        private FWContractsUpdateAllTextboxesToFirstValueParams mFWContractsUpdateAllTextboxesToFirstValueParams;
        
        private FWContractsUpdateAllTextboxesToSecondValueParams mFWContractsUpdateAllTextboxesToSecondValueParams;
        
        private FWEmailServerUpdateAllTextboxesToFirstValueParams mFWEmailServerUpdateAllTextboxesToFirstValueParams;
        
        private FWEmailServerUpdateAllTextboxesToSecondValueParams mFWEmailServerUpdateAllTextboxesToSecondValueParams;
        
        private FWGeneralDetailsChangeAllDropDownsToFirstValueParams mFWGeneralDetailsChangeAllDropDownsToFirstValueParams;
        
        private FWGeneralDetailsChangeAllDropDownsToLastValueParams mFWGeneralDetailsChangeAllDropDownsToLastValueParams;
        
        private FWGeneralDetailsTickAllParams mFWGeneralDetailsTickAllParams;
        
        private FWGeneralDetailsUnTickAllParams mFWGeneralDetailsUnTickAllParams;
        
        private FWGeneralDetailsUpdateAllTextboxesToFirstValueParams mFWGeneralDetailsUpdateAllTextboxesToFirstValueParams;
        
        private FWGeneralDetailsUpdateAllTextboxesToSecondValueParams mFWGeneralDetailsUpdateAllTextboxesToSecondValueParams;
        
        private FWInvoicesTickAllParams mFWInvoicesTickAllParams;
        
        private FWInvoicesUnTickAllParams mFWInvoicesUnTickAllParams;
        
        private FWInvoicesUpdateAllTextboxesToFirstValueParams mFWInvoicesUpdateAllTextboxesToFirstValueParams;
        
        private FWInvoicesUpdateAllTextboxesToSecondValueParams mFWInvoicesUpdateAllTextboxesToSecondValueParams;
        
        private FWMainAdministratorChangeAllDropDownsToFirstValueParams mFWMainAdministratorChangeAllDropDownsToFirstValueParams;
        
        private FWMainAdministratorChangeAllDropDownsToSecondValueParams mFWMainAdministratorChangeAllDropDownsToSecondValueParams;
        
        private FWRegionalSettingsChangeAllDropDownsToFirstValueParams mFWRegionalSettingsChangeAllDropDownsToFirstValueParams;
        
        private FWRegionalSettingsChangeAllDropDownsToSecondValueParams mFWRegionalSettingsChangeAllDropDownsToSecondValueParams;
        
        private FWSuppliersTickAllParams mFWSuppliersTickAllParams;
        
        private FWSuppliersUnTickAllParams mFWSuppliersUnTickAllParams;
        
        private FWSuppliersUpdateAllTextboxesToFirstValueParams mFWSuppliersUpdateAllTextboxesToFirstValueParams;
        
        private FWSuppliersUpdateAllTextboxesToSecondValueParams mFWSuppliersUpdateAllTextboxesToSecondValueParams;
        
        private ValidatePNGWilBeAutomaticallyAddedModalExpectedValues mValidatePNGWilBeAutomaticallyAddedModalExpectedValues;
        
        private UIGeneralOptionsWindowWindow mUIGeneralOptionsWindowWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickDisableReceipts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ClickDisableReceiptsParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Receipts can be uploaded to expense items' check box
        /// </summary>
        public bool UIReceiptscanbeuploadeCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickEnableMobileDevices'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ClickEnableMobileDevicesParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Enable Mobile Devices' check box
        /// </summary>
        public bool UIEnableMobileDevicesCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickEnableReceipts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ClickEnableReceiptsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Receipts can be uploaded to expense items' check box
        /// </summary>
        public bool UIReceiptscanbeuploadeCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXCodeAllocationTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXCodeAllocationTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Items should be assigned to cost codes' check box
        /// </summary>
        public bool EXCodeAllocationItemsAssignedCostCodesChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown the cost code's descript...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshouldbeshoCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Items should be assigned to department codes' check box
        /// </summary>
        public bool EXCodeAllocationItemsshouldbeassigneCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown the department's descrip...' check box
        /// </summary>
        public bool EXCodeAllocationDepoDescChecked = true;
        
        /// <summary>
        /// Select 'Items should be assigned to project codes' check box
        /// </summary>
        public bool EXCodeAllocationProjectcodesChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown the project code's descr...' check box
        /// </summary>
        public bool EXCodeAllocationProjectCodesDescChecked = true;
        
        /// <summary>
        /// Select 'Use default allocation if employee has none set' check box
        /// </summary>
        public bool EXCodeAllocationUsedefaultallocationCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown their cost code breakdow...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsCostCodeBreakdownChecked = true;
        
        /// <summary>
        /// Select 'Costcodes are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationCostCodesInGenDetailsChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown their department breakdo...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshowndeppobreakdownChecked = true;
        
        /// <summary>
        /// Select 'Departments are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationDepartmentsshowningendetailsChecked = true;
        
        /// <summary>
        /// Select 'Claimants should be shown their project code break...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshownprojectcodeChecked = true;
        
        /// <summary>
        /// Select 'Project codes are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationProjectcodesingendetailsChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXCodeAllocationUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXCodeAllocationUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Items should be assigned to cost codes' check box
        /// </summary>
        public bool EXCodeAllocationItemsAssignedCostCodesChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown the cost code's descript...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshouldbeshoCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Items should be assigned to department codes' check box
        /// </summary>
        public bool EXCodeAllocationItemsshouldbeassigneCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown the department's descrip...' check box
        /// </summary>
        public bool EXCodeAllocationDepoDescChecked = false;
        
        /// <summary>
        /// Clear 'Items should be assigned to project codes' check box
        /// </summary>
        public bool EXCodeAllocationProjectcodesChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown the project code's descr...' check box
        /// </summary>
        public bool EXCodeAllocationProjectCodesDescChecked = false;
        
        /// <summary>
        /// Clear 'Use default allocation if employee has none set' check box
        /// </summary>
        public bool EXCodeAllocationUsedefaultallocationCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown their cost code breakdow...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsCostCodeBreakdownChecked = false;
        
        /// <summary>
        /// Clear 'Costcodes are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationCostCodesInGenDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown their department breakdo...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshowndeppobreakdownChecked = false;
        
        /// <summary>
        /// Clear 'Departments are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationDepartmentsshowningendetailsChecked = false;
        
        /// <summary>
        /// Clear 'Claimants should be shown their project code break...' check box
        /// </summary>
        public bool EXCodeAllocationClaimantsshownprojectcodeChecked = false;
        
        /// <summary>
        /// Clear 'Project codes are shown in general details' check box
        /// </summary>
        public bool EXCodeAllocationProjectcodesingendetailsChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDeclarationTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDeclarationTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Electronic Declaration' check box
        /// </summary>
        public bool EXDeclarationElectronicDeclChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDeclarationUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDeclarationUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Electronic Declaration' check box
        /// </summary>
        public bool EXDeclarationElectronicDeclChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDeclarationUpdateAllTextBoxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDeclarationUpdateAllTextBoxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'I hereby declare that I have only claimed justifiable business expenses. TEST' in 'Claimant Declaration Message' text box
        /// </summary>
        public string UIClaimantDeclarationMEditText = "I hereby declare that I have only claimed justifiable business expenses. TEST";
        
        /// <summary>
        /// Type 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST' in 'Approver Declaration Message' text box
        /// </summary>
        public string UIApproverDeclarationMEditText = "I hereby declare I have checked this in detail and believe the claim to be accura" +
            "te. TEST";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDeclarationUpdateAllTextBoxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDeclarationUpdateAllTextBoxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'I hereby declare that I have only claimed justifiable business expenses. TEST EDITED' in 'Claimant Declaration Message' text box
        /// </summary>
        public string UIClaimantDeclarationMEditText = "I hereby declare that I have only claimed justifiable business expenses. TEST EDI" +
            "TED";
        
        /// <summary>
        /// Type 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST EDITED' in 'Approver Declaration Message' text box
        /// </summary>
        public string UIApproverDeclarationMEditText = "I hereby declare I have checked this in detail and believe the claim to be accura" +
            "te. TEST EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExDeclarationValidateTextBoxesFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExDeclarationValidateTextBoxesFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Claimant Declaration Message' text box equals 'I hereby declare that I have only claimed justifiable business expenses. TEST'
        /// </summary>
        public string UIClaimantDeclarationMEditText = "I hereby declare that I have only claimed justifiable business expenses. TEST";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Approver Declaration Message' text box equals 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST'
        /// </summary>
        public string UIApproverDeclarationMEditText = "I hereby declare I have checked this in detail and believe the claim to be accura" +
            "te. TEST";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExDeclarationValidateTextBoxesSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExDeclarationValidateTextBoxesSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Claimant Declaration Message' text box equals 'I hereby declare that I have only claimed justifiable business expenses. TEST EDITED'
        /// </summary>
        public string UIClaimantDeclarationMEditText = "I hereby declare that I have only claimed justifiable business expenses. TEST EDI" +
            "TED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Approver Declaration Message' text box equals 'I hereby declare I have checked this in detail and believe the claim to be accurate. TEST EDITED'
        /// </summary>
        public string UIApproverDeclarationMEditText = "I hereby declare I have checked this in detail and believe the claim to be accura" +
            "te. TEST EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDelegatesTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDelegatesTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Modify categories and system options' check box
        /// </summary>
        public bool EXDelUpdatedModifyCatsSystemOptsChecked = true;
        
        /// <summary>
        /// Select 'View administrator reports' check box
        /// </summary>
        public bool EXDelUpdatedViewAdminReportsChecked = true;
        
        /// <summary>
        /// Select 'Check and pay expenses' check box
        /// </summary>
        public bool EXDelUpdatedCheckandpayexpensesChecked = true;
        
        /// <summary>
        /// Select 'Manage and approve advance requests' check box
        /// </summary>
        public bool EXDelUpdatedApproveAdvanceRequestsChecked = true;
        
        /// <summary>
        /// Select 'Search and View the Audit Log' check box
        /// </summary>
        public bool EXDelUpdatedAuditLogChecked = true;
        
        /// <summary>
        /// Select 'Import Corporate Card Statements' check box
        /// </summary>
        public bool EXDelUpdatedImportCorpStatementChecked = true;
        
        /// <summary>
        /// Select 'Modify employees, sign-off groups and roles' check box
        /// </summary>
        public bool EXDelUpdatedModifyEmployeesChecked = true;
        
        /// <summary>
        /// Select 'View claimant reports' check box
        /// </summary>
        public bool EXDelUpdatedViewClaimantReportsChecked = true;
        
        /// <summary>
        /// Select 'Quick Edit Design' check box
        /// </summary>
        public bool EXDelUpdatedQuickEditDesignChecked = true;
        
        /// <summary>
        /// Select 'Export data and view export history' check box
        /// </summary>
        public bool EXDelUpdatedExportDataChecked = true;
        
        /// <summary>
        /// Select 'Can submit claims' check box
        /// </summary>
        public bool EXDelUpdatedSubmitClaimsChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDelegatesUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDelegatesUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Modify categories and system options' check box
        /// </summary>
        public bool EXDelUpdatedModifyCatsSystemOptsChecked = false;
        
        /// <summary>
        /// Clear 'View administrator reports' check box
        /// </summary>
        public bool EXDelUpdatedViewAdminReportsChecked = false;
        
        /// <summary>
        /// Clear 'Check and pay expenses' check box
        /// </summary>
        public bool EXDelUpdatedCheckandpayexpensesChecked = false;
        
        /// <summary>
        /// Clear 'Manage and approve advance requests' check box
        /// </summary>
        public bool EXDelUpdatedApproveAdvanceRequestsChecked = false;
        
        /// <summary>
        /// Clear 'Search and View the Audit Log' check box
        /// </summary>
        public bool EXDelUpdatedAuditLogChecked = false;
        
        /// <summary>
        /// Clear 'Import Corporate Card Statements' check box
        /// </summary>
        public bool EXDelUpdatedImportCorpStatementChecked = false;
        
        /// <summary>
        /// Clear 'Modify employees, sign-off groups and roles' check box
        /// </summary>
        public bool EXDelUpdatedModifyEmployeesChecked = false;
        
        /// <summary>
        /// Clear 'View claimant reports' check box
        /// </summary>
        public bool EXDelUpdatedViewClaimantReportsChecked = false;
        
        /// <summary>
        /// Clear 'Quick Edit Design' check box
        /// </summary>
        public bool EXDelUpdatedQuickEditDesignChecked = false;
        
        /// <summary>
        /// Clear 'Export data and view export history' check box
        /// </summary>
        public bool EXDelUpdatedExportDataChecked = false;
        
        /// <summary>
        /// Clear 'Can submit claims' check box
        /// </summary>
        public bool EXDelUpdatedSubmitClaimsChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDutyofCareTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDutyofCareTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Driving Licence Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareDrivingLicenceExpiryDateChecked = true;
        
        /// <summary>
        /// Select 'MOT Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareMOTExpiryChecked = true;
        
        /// <summary>
        /// Select 'Tax Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareTaxExpiryDateChecked = true;
        
        /// <summary>
        /// Select 'Insurance Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareInsuranceExpiryDateChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXDutyofCareUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXDutyofCareUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Driving Licence Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareDrivingLicenceExpiryDateChecked = false;
        
        /// <summary>
        /// Clear 'MOT Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareMOTExpiryChecked = false;
        
        /// <summary>
        /// Clear 'Tax Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareTaxExpiryDateChecked = false;
        
        /// <summary>
        /// Clear 'Insurance Expiry Date' check box
        /// </summary>
        public bool EXDutyofCareInsuranceExpiryDateChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXEmailServerUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXEmailServerUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'coded.ui.test1' in 'Email Server' text box
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test1";
        
        /// <summary>
        /// Type 'test1@test1.com' in 'Email Administrator Address' text box
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test1@test1.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXEmailServerUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXEmailServerUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'coded.ui.test2' in 'Email Server' text box
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test2";
        
        /// <summary>
        /// Type 'test2@test2.com' in 'Email Administrator Address' text box
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test2@test2.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXEmailServerUpdateRadioButtonsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXEmailServerUpdateRadioButtonsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Expenses Server' radio button
        /// </summary>
        public bool UIExpensesServerRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXEmailServerUpdateRadioButtonsToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXEmailServerUpdateRadioButtonsToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Claimant's E-mail Address' radio button
        /// </summary>
        public bool UIClaimantsEmailAddresRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXFieldSettingsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXFieldSettingsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Display for cash' check box
        /// </summary>
        public bool EXFieldSettingsDisplayForCashChecked = true;
        
        /// <summary>
        /// Select 'Display on credit card items' check box
        /// </summary>
        public bool EXFieldSettingsDisplayOnCreditCardItemsChecked = true;
        
        /// <summary>
        /// Select 'Display on purchase card items' check box
        /// </summary>
        public bool EXFieldSettingsDisplayOnPurchaseCardItemsChecked = true;
        
        /// <summary>
        /// Select 'Display on individual item' check box
        /// </summary>
        public bool EXFieldSettingsDisplayOnIndividualItemChecked = true;
        
        /// <summary>
        /// Select 'Mandatory on cash items' check box
        /// </summary>
        public bool EXFieldSettingsMandatoryOnCashItemsChecked = true;
        
        /// <summary>
        /// Select 'Mandatory on credit card items' check box
        /// </summary>
        public bool EXFieldSettingsMandatoryOnCreditCardItemsChecked = true;
        
        /// <summary>
        /// Select 'Mandatory on purchase card items' check box
        /// </summary>
        public bool EXFieldSettingsMandatoryOnPurchaseCardItemsChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXFieldSettingsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXFieldSettingsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Display for cash' check box
        /// </summary>
        public bool EXFieldSettingsDisplayForCashChecked = false;
        
        /// <summary>
        /// Clear 'Display on credit card items' check box
        /// </summary>
        public bool UIDisplayoncreditcardiCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Display on purchase card items' check box
        /// </summary>
        public bool UIDisplayonpurchasecarCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXFieldSettingsUpdateTxtBoxToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXFieldSettingsUpdateTxtBoxToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'DisplayAs Test 1' in 'Display as' text box
        /// </summary>
        public string EXFieldSettingsDisplayAsTxtBoxText = "DisplayAs Test 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXFieldSettingsUpdateTxtBoxToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXFieldSettingsUpdateTxtBoxToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'DisplayAs Test 1 EDITED' in 'Display as' text box
        /// </summary>
        public string EXFieldSettingsDisplayAsTxtBoxText = "DisplayAs Test 1 EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExFieldSettingsValidateTxtBoxFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExFieldSettingsValidateTxtBoxFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Display as' text box equals 'DisplayAs Test 1'
        /// </summary>
        public string EXFieldSettingsDisplayAsTxtBoxText = "DisplayAs Test 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExFieldSettingsValidateTxtBoxSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExFieldSettingsValidateTxtBoxSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Display as' text box equals 'DisplayAs Test 1 EDITED'
        /// </summary>
        public string EXFieldSettingsDisplayAsTxtBoxText = "DisplayAs Test 1 EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsSetOdometerReadingDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsSetOdometerReadingDateParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Relevant claimants required to record odometer rea...' check box
        /// </summary>
        public bool EXGeneralDetailsClaimantsRequiredOdoReadingsChecked = true;
        
        /// <summary>
        /// Select 'Odometer readings recorded when the claimant logs ...' radio button
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButtonSelected = true;
        
        /// <summary>
        /// Type '13' in 'Odometer readings recorded every month on' text box
        /// </summary>
        public string UIOdometerreadingsrecoEditText = "13";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Hotel Reviews' check box
        /// </summary>
        public bool EXGeneralDetailsHotelReviewsChecked = true;
        
        /// <summary>
        /// Select 'Employee Directory' check box
        /// </summary>
        public bool EXGeneralDetailsEmployeeDirectoryChecked = true;
        
        /// <summary>
        /// Select 'Display claimant's bank details in "My Details"' check box
        /// </summary>
        public bool EXGeneralDetailsDisplayBankDetailsChecked = true;
        
        /// <summary>
        /// Select 'Allow team members to allocate and approve own cla...' check box
        /// </summary>
        public bool EXGeneralDetailsApproveOwnClaimsChecked = true;
        
        /// <summary>
        /// Select 'Relevant claimants required to record odometer rea...' check box
        /// </summary>
        public bool UIRelevantclaimantsreqCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Claims can be part submitted' check box
        /// </summary>
        public bool UIClaimscanbepartsubmiCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Email claimants for hotel reviews' check box
        /// </summary>
        public bool EXGeneralDetailsEmailHotelReviewsChecked = true;
        
        /// <summary>
        /// Select 'Claimants can enter pre approval claims' check box
        /// </summary>
        public bool EXGeneralDetailsEnterPreApprovedClaimsChecked = true;
        
        /// <summary>
        /// Select 'Claimants may edit their own personal details' check box
        /// </summary>
        public bool EXGeneralDetailsEditOwnDetailsChecked = true;
        
        /// <summary>
        /// Select 'Allow employees and delegates to approve own claim...' check box
        /// </summary>
        public bool EXGeneralDetailsApproveOwnClaimChecked = true;
        
        /// <summary>
        /// Select 'Cash and Credit Card items cannot be on the same c...' check box
        /// </summary>
        public bool UICashandCreditCarditeCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Hotel Reviews' check box
        /// </summary>
        public bool EXGeneralDetailsHotelReviewsChecked = false;
        
        /// <summary>
        /// Clear 'Employee Directory' check box
        /// </summary>
        public bool EXGeneralDetailsEmployeeDirectoryChecked = false;
        
        /// <summary>
        /// Clear 'Display claimant's bank details in "My Details"' check box
        /// </summary>
        public bool EXGeneralDetailsDisplayBankDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Allow team members to allocate and approve own cla...' check box
        /// </summary>
        public bool EXGeneralDetailsApproveOwnClaimsChecked = false;
        
        /// <summary>
        /// Clear 'Relevant claimants required to record odometer rea...' check box
        /// </summary>
        public bool UIRelevantclaimantsreqCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Claims can be part submitted' check box
        /// </summary>
        public bool UIClaimscanbepartsubmiCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Email claimants for hotel reviews' check box
        /// </summary>
        public bool EXGeneralDetailsEmailHotelReviewsChecked = false;
        
        /// <summary>
        /// Clear 'Claimants can enter pre approval claims' check box
        /// </summary>
        public bool EXGeneralDetailsEnterPreApprovedClaimsChecked = false;
        
        /// <summary>
        /// Clear 'Claimants may edit their own personal details' check box
        /// </summary>
        public bool EXGeneralDetailsEditOwnDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Allow employees and delegates to approve own claim...' check box
        /// </summary>
        public bool EXGeneralDetailsApproveOwnClaimChecked = false;
        
        /// <summary>
        /// Clear 'Cash and Credit Card items cannot be on the same c...' check box
        /// </summary>
        public bool UICashandCreditCarditeCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsUpdateDropDownListsFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsUpdateDropDownListsFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Standard Master Drill Down' in 'Default Drilldown Report' combo box
        /// </summary>
        public string UIDefaultDrilldownRepoComboBoxSelectedItem = "Standard Master Drill Down";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsUpdateDropDownListsSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsUpdateDropDownListsSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select '[None]' in 'Default Drilldown Report' combo box
        /// </summary>
        public string UIDefaultDrilldownRepoComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsUpdateRadioButtonsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsUpdateRadioButtonsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Odometer readings recorded when the claimant logs ...' radio button
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButtonSelected = true;
        
        /// <summary>
        /// Select 'Show the From and To addresses in drop down boxes' radio button
        /// </summary>
        public bool UIShowtheFromandToaddrRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXGeneralDetailsUpdateRadioButtonsToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXGeneralDetailsUpdateRadioButtonsToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Odometer readings recorded when claim submitted' radio button
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButton1Selected = true;
        
        /// <summary>
        /// Select 'Make the From and To addresses searchable' radio button
        /// </summary>
        public bool UIMaketheFromandToaddrRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExGeneralDetailsValidateDropDownListsFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExGeneralDetailsValidateDropDownListsFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Drilldown Report' combo box equals 'Standard Master Drill Down'
        /// </summary>
        public string UIDefaultDrilldownRepoComboBoxSelectedItem = "Standard Master Drill Down";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExGeneralDetailsValidateDropDownListsSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExGeneralDetailsValidateDropDownListsSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Drilldown Report' combo box equals '[None]'
        /// </summary>
        public string UIDefaultDrilldownRepoComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExGeneralDetailsValidateOdometerReadingsDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExGeneralDetailsValidateOdometerReadingsDateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Odometer readings recorded every month on' text box equals '13'
        /// </summary>
        public string UIOdometerreadingsrecoEditText = "13";
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Odometer readings recorded when the claimant logs ...' radio button equals 'True'
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButtonSelected = true;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Relevant claimants required to record odometer rea...' check box equals 'True'
        /// </summary>
        public bool EXGeneralDetailsClaimantsRequiredOdoReadingsChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExGeneralDetailsValidateRadioButtonsFirstValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExGeneralDetailsValidateRadioButtonsFirstValuesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Odometer readings recorded when the claimant logs ...' radio button equals 'True'
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButtonSelected = true;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Show the From and To addresses in drop down boxes' radio button equals 'True'
        /// </summary>
        public bool UIShowtheFromandToaddrRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExGeneralDetailsValidateRadioButtonsSecondValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExGeneralDetailsValidateRadioButtonsSecondValuesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Odometer readings recorded when claim submitted' radio button equals 'True'
        /// </summary>
        public bool UIOdometerreadingsrecoRadioButton1Selected = true;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Make the From and To addresses searchable' radio button equals 'True'
        /// </summary>
        public bool UIMaketheFromandToaddrRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExMilageandCarsValidateCalculationQuickest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExMilageandCarsValidateCalculationQuickestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Postcode Anywhere Calculation Type' combo box equals 'Quickest'
        /// </summary>
        public string UIPostcodeAnywhereCalcComboBoxSelectedItem = "Quickest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExMilageandCarsValidateCalculationShortest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExMilageandCarsValidateCalculationShortestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Postcode Anywhere Calculation Type' combo box equals 'Shortest'
        /// </summary>
        public string UIPostcodeAnywhereCalcComboBoxSelectedItem = "Shortest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXMileageandCarsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXMileageandCarsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Claimants can add new addresses as to/from address...' check box
        /// </summary>
        public bool EXMileageandCarsClaimantsCanAddAddressChecked = true;
        
        /// <summary>
        /// Select 'Allow multiple destinations' check box
        /// </summary>
        public bool EXMileageandCarsAllowMultipleDestinationsChecked = true;
        
        /// <summary>
        /// Select 'Postcode Anywhere' check box
        /// </summary>
        public bool EXMileageandCarspostcodeanywhereChecked = true;
        
        /// <summary>
        /// Select 'Allow employees to add new cars' check box
        /// </summary>
        public bool EXMileageandCarsallowemployeestoaddnewcarsChecked = true;
        
        /// <summary>
        /// Select 'Allow employees to select mileage categories' check box
        /// </summary>
        public bool EXMileageandCarsallowemployeestoselectmileagecatChecked = true;
        
        /// <summary>
        /// Select 'Claimants can add new addresses as company address...' check box
        /// </summary>
        public bool EXMileageandCarsaddnewaddressascompanyChecked = true;
        
        /// <summary>
        /// Select 'Activate car when employee adds own' check box
        /// </summary>
        public bool EXMileageandCarsactivatecarwhenaddsownChecked = true;
        
        /// <summary>
        /// Select 'Enable autolog' check box
        /// </summary>
        public bool EXMileageandCarsenableautologChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXMileageandCarsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXMileageandCarsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Claimants can add new addresses as to/from address...' check box
        /// </summary>
        public bool EXMileageandCarsClaimantsCanAddAddressChecked = false;
        
        /// <summary>
        /// Clear 'Allow multiple destinations' check box
        /// </summary>
        public bool EXMileageandCarsAllowMultipleDestinationsChecked = false;
        
        /// <summary>
        /// Clear 'Postcode Anywhere' check box
        /// </summary>
        public bool EXMileageandCarspostcodeanywhereChecked = false;
        
        /// <summary>
        /// Clear 'Allow employees to add new cars' check box
        /// </summary>
        public bool EXMileageandCarsallowemployeestoaddnewcarsChecked = false;
        
        /// <summary>
        /// Clear 'Enable autolog' check box
        /// </summary>
        public bool EXMileageandCarsenableautologChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXMileageandCarsUpdateCalculationToQuickest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXMileageandCarsUpdateCalculationToQuickestParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Quickest' in 'Postcode Anywhere Calculation Type' combo box
        /// </summary>
        public string UIPostcodeAnywhereCalcComboBoxSelectedItem = "Quickest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXMileageandCarsUpdateCalculationToShortest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXMileageandCarsUpdateCalculationToShortestParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Shortest' in 'Postcode Anywhere Calculation Type' combo box
        /// </summary>
        public string UIPostcodeAnywhereCalcComboBoxSelectedItem = "Shortest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ESR Assignment Numbers mandatory on employee add' check box
        /// </summary>
        public bool EXNHSOptionsESRnumbermandatoryChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'ESR Assignment Numbers mandatory on employee add' check box
        /// </summary>
        public bool EXNHSOptionsESRnumbermandatoryChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsUpdateDropDownsToAutomatic'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsUpdateDropDownsToAutomaticParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Automatic' in 'ESR Outbound Employee Activation Type' combo box
        /// </summary>
        public string UIESROutboundEmployeeAComboBoxSelectedItem = "Automatic";
        
        /// <summary>
        /// Select 'Automatic' in 'ESR Outbound Employee Archive Type' combo box
        /// </summary>
        public string UIESROutboundEmployeeAComboBox1SelectedItem = "Automatic";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsUpdateDropDownsToNone'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsUpdateDropDownsToNoneParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'None' in 'ESR Outbound Employee Activation Type' combo box
        /// </summary>
        public string UIESROutboundEmployeeAComboBoxSelectedItem = "None";
        
        /// <summary>
        /// Select 'None' in 'ESR Outbound Employee Archive Type' combo box
        /// </summary>
        public string UIESROutboundEmployeeAComboBox1SelectedItem = "None";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsUpdateGracePeriodFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsUpdateGracePeriodFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type '7' in 'ESR Outbound Archive Grace Period' text box
        /// </summary>
        public string UIESROutboundArchiveGrEditText = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsUpdateGracePeriodSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsUpdateGracePeriodSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'ESR Outbound Archive Grace Period' text box
        /// </summary>
        public string UIESROutboundArchiveGrEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsValidateDropDownSetToAutomatic'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsValidateDropDownSetToAutomaticExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ESR Outbound Employee Archive Type' combo box equals 'Automatic'
        /// </summary>
        public string UIESROutboundEmployeeAComboBox1SelectedItem = "Automatic";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ESR Outbound Employee Activation Type' combo box equals 'Automatic'
        /// </summary>
        public string UIESROutboundEmployeeAComboBoxSelectedItem = "Automatic";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsValidateDropDownSetToNone'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsValidateDropDownSetToNoneExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ESR Outbound Employee Activation Type' combo box equals 'None'
        /// </summary>
        public string UIESROutboundEmployeeAComboBoxSelectedItem = "None";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'ESR Outbound Employee Archive Type' combo box equals 'None'
        /// </summary>
        public string UIESROutboundEmployeeAComboBox1SelectedItem = "None";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsValidateGracePeriodFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsValidateGracePeriodFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ESR Outbound Archive Grace Period' text box equals '7'
        /// </summary>
        public string UIESROutboundArchiveGrEditText = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXNHSOptionsValidateGracePeriodSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXNHSOptionsValidateGracePeriodSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'ESR Outbound Archive Grace Period' text box equals '1'
        /// </summary>
        public string UIESROutboundArchiveGrEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXOtherPreferencesTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXOtherPreferencesTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Employees can only enter a single claim at a time' check box
        /// </summary>
        public bool EXOtherPreferencessingleclaimattimeChecked = true;
        
        /// <summary>
        /// Select 'Claimants can not override the exchange rates' check box
        /// </summary>
        public bool EXOtherPreferencescannotoverrideexchangeratesChecked = true;
        
        /// <summary>
        /// Select 'Allow claimant to select home address' check box
        /// </summary>
        public bool EXOtherPreferencesselecthomeaddressChecked = true;
        
        /// <summary>
        /// Select 'Receipts can be uploaded to expense items' check box
        /// </summary>
        public bool EXOtherPreferencesreceiptscanbeuploadedChecked = true;
        
        /// <summary>
        /// Select 'Postcodes are mandatory when adding addresses' check box
        /// </summary>
        public bool EXOtherPreferencespostcodesmandatorywhenaddingChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXOtherPreferencesUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXOtherPreferencesUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Employees can only enter a single claim at a time' check box
        /// </summary>
        public bool EXOtherPreferencessingleclaimattimeChecked = false;
        
        /// <summary>
        /// Clear 'Claimants can not override the exchange rates' check box
        /// </summary>
        public bool EXOtherPreferencescannotoverrideexchangeratesChecked = false;
        
        /// <summary>
        /// Clear 'Allow claimant to select home address' check box
        /// </summary>
        public bool EXOtherPreferencesselecthomeaddressChecked = false;
        
        /// <summary>
        /// Clear 'Receipts can be uploaded to expense items' check box
        /// </summary>
        public bool EXOtherPreferencesreceiptscanbeuploadedChecked = false;
        
        /// <summary>
        /// Clear 'Postcodes are mandatory when adding addresses' check box
        /// </summary>
        public bool EXOtherPreferencespostcodesmandatorywhenaddingChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExpensesEmailServerValidateRadioButtonsContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExpensesEmailServerValidateRadioButtonsContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Expenses Server' radio button equals 'True'
        /// </summary>
        public bool UIExpensesServerRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExpensesEmailServerValidateRadioButtonsContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExpensesEmailServerValidateRadioButtonsContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Claimant's E-mail Address' radio button equals 'True'
        /// </summary>
        public bool UIClaimantsEmailAddresRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExpensesEmailServerValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExpensesEmailServerValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test1'
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test1@test1.com'
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test1@test1.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExpensesEmailServerValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExpensesEmailServerValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test2'
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test2@test2.com'
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test2@test2.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXSelfRegTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXSelfRegTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Allow Self Registration' check box
        /// </summary>
        public bool EXSelfRegAllowSelfRegChecked = true;
        
        /// <summary>
        /// Select 'Home Address/Contact Details' check box
        /// </summary>
        public bool EXSelfRegHomeAddressDetailsChecked = true;
        
        /// <summary>
        /// Select 'Role' check box
        /// </summary>
        public bool EXSelfRegRoleChecked = true;
        
        /// <summary>
        /// Select 'Signoff Group' check box
        /// </summary>
        public bool EXSelfRegSignoffGroupChecked = true;
        
        /// <summary>
        /// Select 'Default Department/Cost Code' check box
        /// </summary>
        public bool EXSelfRegDefaultDepartmentChecked = true;
        
        /// <summary>
        /// Select 'Car Details' check box
        /// </summary>
        public bool EXSelfRegCarDetailsChecked = true;
        
        /// <summary>
        /// Select 'Employment Contact Details' check box
        /// </summary>
        public bool EXSelfRegEmployeeContactDetailsChecked = true;
        
        /// <summary>
        /// Select 'Employment Information' check box
        /// </summary>
        public bool EXSelfRegEmployeeInformationChecked = true;
        
        /// <summary>
        /// Select 'Item Role' check box
        /// </summary>
        public bool EXSelfRegItemRoleChecked = true;
        
        /// <summary>
        /// Select 'Advances Signoff Group' check box
        /// </summary>
        public bool EXSelfRegAdvancesSignoffGroupChecked = true;
        
        /// <summary>
        /// Select 'Bank Details' check box
        /// </summary>
        public bool EXSelfRegBankDetailsChecked = true;
        
        /// <summary>
        /// Select 'Additional User Defined Fields' check box
        /// </summary>
        public bool EXSelfRegAdditionalUDFsChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXSelfRegUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXSelfRegUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Allow Self Registration' check box
        /// </summary>
        public bool EXSelfRegAllowSelfRegChecked = false;
        
        /// <summary>
        /// Clear 'Home Address/Contact Details' check box
        /// </summary>
        public bool EXSelfRegHomeAddressDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Role' check box
        /// </summary>
        public bool EXSelfRegRoleChecked = false;
        
        /// <summary>
        /// Clear 'Signoff Group' check box
        /// </summary>
        public bool EXSelfRegSignoffGroupChecked = false;
        
        /// <summary>
        /// Clear 'Default Department/Cost Code' check box
        /// </summary>
        public bool EXSelfRegDefaultDepartmentChecked = false;
        
        /// <summary>
        /// Clear 'Car Details' check box
        /// </summary>
        public bool EXSelfRegCarDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Employment Contact Details' check box
        /// </summary>
        public bool EXSelfRegEmployeeContactDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Employment Information' check box
        /// </summary>
        public bool EXSelfRegEmployeeInformationChecked = false;
        
        /// <summary>
        /// Clear 'Item Role' check box
        /// </summary>
        public bool EXSelfRegItemRoleChecked = false;
        
        /// <summary>
        /// Clear 'Advances Signoff Group' check box
        /// </summary>
        public bool EXSelfRegAdvancesSignoffGroupChecked = false;
        
        /// <summary>
        /// Clear 'Bank Details' check box
        /// </summary>
        public bool EXSelfRegBankDetailsChecked = false;
        
        /// <summary>
        /// Clear 'Additional User Defined Fields' check box
        /// </summary>
        public bool EXSelfRegAdditionalUDFsChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXSelfRegUpdateAllDropDownsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXSelfRegUpdateAllDropDownsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Claimant' in 'Default Role' combo box
        /// </summary>
        public string UIDefaultRoleComboBoxSelectedItem = "Claimant";
        
        /// <summary>
        /// Select 'claimant' in 'Default Item Role' combo box
        /// </summary>
        public string UIDefaultItemRoleComboBoxSelectedItem = "claimant";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EXSelfRegUpdateAllDropDownsToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class EXSelfRegUpdateAllDropDownsToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select '[None]' in 'Default Role' combo box
        /// </summary>
        public string UIDefaultRoleComboBoxSelectedItem = "[None]";
        
        /// <summary>
        /// Select '[None]' in 'Default Item Role' combo box
        /// </summary>
        public string UIDefaultItemRoleComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExSelfRegValidateDropDownListFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExSelfRegValidateDropDownListFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Role' combo box equals 'Claimant'
        /// </summary>
        public string UIDefaultRoleComboBoxSelectedItem = "Claimant";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Item Role' combo box equals 'claimant'
        /// </summary>
        public string UIDefaultItemRoleComboBoxSelectedItem = "claimant";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExSelfRegValidateDropDownListSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ExSelfRegValidateDropDownListSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Role' combo box equals '[None]'
        /// </summary>
        public string UIDefaultRoleComboBoxSelectedItem = "[None]";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Item Role' combo box equals '[None]'
        /// </summary>
        public string UIDefaultItemRoleComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkContractsValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkContractsValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Key Prefix' text box equals 'Test1'
        /// </summary>
        public string UIContractKeyPrefixEditText = "Test1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Description Title' text box equals 'Test2'
        /// </summary>
        public string UIContractDescriptionTEditText = "Test2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Category Title' text box equals 'Test3'
        /// </summary>
        public string UIContractCategoryTitlEditText = "Test3";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Penalty Clause Title' text box equals 'Test4'
        /// </summary>
        public string UIPenaltyClauseTitleEditText = "Test4";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Abbreviated Contract Description Title' text box equals 'Test5'
        /// </summary>
        public string UIAbbreviatedContractDEditText = "Test5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Current Contract Number Sequence Value' text box equals '2'
        /// </summary>
        public string UICurrentContractNumbeEditText = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Schedule Default' text box equals '4'
        /// </summary>
        public string UIContractScheduleDefaEditText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkContractsValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkContractsValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Key Prefix' text box equals 'Test1EDITED'
        /// </summary>
        public string UIContractKeyPrefixEditText = "Test1EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Description Title' text box equals 'Test2EDITED'
        /// </summary>
        public string UIContractDescriptionTEditText = "Test2EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Category Title' text box equals 'Test3EDITED'
        /// </summary>
        public string UIContractCategoryTitlEditText = "Test3EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Penalty Clause Title' text box equals 'Test4EDITED'
        /// </summary>
        public string UIPenaltyClauseTitleEditText = "Test4EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Abbreviated Contract Description Title' text box equals 'Test5EDITED'
        /// </summary>
        public string UIAbbreviatedContractDEditText = "Test5EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Current Contract Number Sequence Value' text box equals '3'
        /// </summary>
        public string UICurrentContractNumbeEditText = "3";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Contract Schedule Default' text box equals '5'
        /// </summary>
        public string UIContractScheduleDefaEditText = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkEmailServerValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkEmailServerValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test1'
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test1";
        
        /// <summary>
        /// Verify that the 'Id' property of 'Email From Address' text box equals 'ctl00_contentmain_txtEmailFromAddress'
        /// </summary>
        public string UIEmailFromAddressEditId = "ctl00_contentmain_txtEmailFromAddress";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Auditor Email Address' text box equals 'test2@test2.com'
        /// </summary>
        public string UIAuditorEmailAddressEditText = "test2@test2.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Error Submit Email Address' text box equals 'test3@test3.com'
        /// </summary>
        public string UIErrorSubmitEmailAddrEditText = "test3@test3.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Error Submit From Email Address' text box equals 'test4@test4.com'
        /// </summary>
        public string UIErrorSubmitFromEmailEditText = "test4@test4.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test5@test5.com'
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test5@test5.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkEmailServerValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkEmailServerValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Email Server' text box equals 'coded.ui.test2'
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Email From Address' text box equals 'test6@test6.com'
        /// </summary>
        public string UIEmailFromAddressEditText = "test6@test6.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Auditor Email Address' text box equals 'test7@test7.com'
        /// </summary>
        public string UIAuditorEmailAddressEditText = "test7@test7.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Error Submit Email Address' text box equals 'test8@test8.com'
        /// </summary>
        public string UIErrorSubmitEmailAddrEditText = "test8@test8.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Error Submit From Email Address' text box equals 'test9@test9.com'
        /// </summary>
        public string UIErrorSubmitFromEmailEditText = "test9@test9.com";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Email Administrator Address' text box equals 'test10@test10.com'
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test10@test10.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkGeneralDetailsValidateDropDownListOnFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkGeneralDetailsValidateDropDownListOnFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Link Attachment Default' combo box equals 'Hyperlink'
        /// </summary>
        public string UILinkAttachmentDefaulComboBoxSelectedItem = "Hyperlink";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Financial Year Starts' combo box equals 'January'
        /// </summary>
        public string UIFinancialYearStartsComboBoxSelectedItem = "January";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Financial Year Ends' combo box equals 'January'
        /// </summary>
        public string UIFinancialYearEndsComboBoxSelectedItem = "January";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkGeneralDetailsValidateDropDownListOnLastValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkGeneralDetailsValidateDropDownListOnLastValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Link Attachment Default' combo box equals 'File'
        /// </summary>
        public string UILinkAttachmentDefaulComboBoxSelectedItem = "File";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Financial Year Starts' combo box equals 'December'
        /// </summary>
        public string UIFinancialYearStartsComboBoxSelectedItem = "December";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Financial Year Ends' combo box equals 'December'
        /// </summary>
        public string UIFinancialYearEndsComboBoxSelectedItem = "December";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkGeneralDetailsValidateNoCheckboxesSelected'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkGeneralDetailsValidateNoCheckboxesSelectedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Upload Attachments Enabled?' check box equals 'False'
        /// </summary>
        public bool UploadAttachmentsEnabledCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Hyperlink Attachments Enabled?' check box equals 'False'
        /// </summary>
        public bool HyperlinkAttachmentsEnabledCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Flashing Notes Icon?' check box equals 'False'
        /// </summary>
        public bool FlashingNotesIconCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Show Product in Home Page Search Results' check box equals 'False'
        /// </summary>
        public bool ShowProductInHomePageSearchCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Employees may edit their own personal details' check box equals 'False'
        /// </summary>
        public bool EmployeesMayEditOwnDetailsCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Auto Update Product Licence Totals' check box equals 'False'
        /// </summary>
        public bool AutoUpdateProductLicenceTotalsCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Task Due Date Mandatory?' check box equals 'False'
        /// </summary>
        public bool TaskDueDateMandatoryCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Task Start Date Mandatory?' check box equals 'False'
        /// </summary>
        public bool TaskStartDateMandatoryCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'Task End Date Mandatory?' check box equals 'False'
        /// </summary>
        public bool TaskEndDateMandatoryCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkGeneralDetailsValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkGeneralDetailsValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Max File Upload Size (Kbytes)' text box equals '999'
        /// </summary>
        public string UIMaxFileUploadSizeKbyEditText = "999";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Default Report Page Size (rows)' text box equals '99'
        /// </summary>
        public string UIDefaultReportPageSizEditText = "99";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Task Escalation Repeat (days)' text box equals '9'
        /// </summary>
        public string UITaskEscalationRepeatEditText = "9";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkGeneralDetailsValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkGeneralDetailsValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Max File Upload Size (Kbytes)' text box equals '666'
        /// </summary>
        public string UIMaxFileUploadSizeKbyEditText = "666";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Default Report Page Size (rows)' text box equals '66'
        /// </summary>
        public string UIDefaultReportPageSizEditText = "66";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Task Escalation Repeat (days)' text box equals '6'
        /// </summary>
        public string UITaskEscalationRepeatEditText = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkInvoicesValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkInvoicesValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'PO Number Format' text box equals 'Test'
        /// </summary>
        public string UIPONumberFormatEditText = "Test";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Current PO Sequence Number' text box equals 'Test'
        /// </summary>
        public string UICurrentPOSequenceNumEditText = "Test";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkInvoicesValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkInvoicesValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'PO Number Format' text box equals 'TestEDITED1'
        /// </summary>
        public string UIPONumberFormatEditText = "TestEDITED1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Current PO Sequence Number' text box equals 'TestEDITED2'
        /// </summary>
        public string UICurrentPOSequenceNumEditText = "TestEDITED2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkMainAdministratorValidateDropDownListOnFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkMainAdministratorValidateDropDownListOnFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Main Administrator' combo box equals '[None]'
        /// </summary>
        public string UIMainAdministratorComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkMainAdministratorValidateDropDownListOnSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkMainAdministratorValidateDropDownListOnSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Main Administrator' combo box equals 'TestSurnam, Mrs TestForename (CodedUIAdmin)'
        /// </summary>
        public string UIMainAdministratorComboBoxSelectedItem = "TestSurnam, Mrs TestForename (CodedUIAdmin)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkRegionalSettingsValidateDropDownListOnFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkRegionalSettingsValidateDropDownListOnFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Country' combo box equals 'United States'
        /// </summary>
        public string UIDefaultCountryComboBoxSelectedItem = "United States";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Base Currency' combo box equals 'US Dollar'
        /// </summary>
        public string UIBaseCurrencyComboBoxSelectedItem = "US Dollar";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Language' combo box equals 'Dutch'
        /// </summary>
        public string UIDefaultLanguageComboBoxSelectedItem = "Dutch";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Locale' combo box equals '[None]'
        /// </summary>
        public string UIDefaultLocaleComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkRegionalSettingsValidateDropDownListOnSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkRegionalSettingsValidateDropDownListOnSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Country' combo box equals 'United Kingdom'
        /// </summary>
        public string UIDefaultCountryComboBoxSelectedItem = "United Kingdom";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Base Currency' combo box equals 'Pound Sterling'
        /// </summary>
        public string UIBaseCurrencyComboBoxSelectedItem = "Pound Sterling";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Language' combo box equals 'English'
        /// </summary>
        public string UIDefaultLanguageComboBoxSelectedItem = "English";
        
        /// <summary>
        /// Verify that the 'SelectedItem' property of 'Default Locale' combo box equals 'English (United Kingdom) (en-GB)'
        /// </summary>
        public string UIDefaultLocaleComboBoxSelectedItem = "English (United Kingdom) (en-GB)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkSuppliersValidateTextBoxesContainFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkSuppliersValidateTextBoxesContainFirstValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Title' text box equals 'Test 1'
        /// </summary>
        public string UISupplierTitleEditText = "Test 1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Region Title' text box equals 'Test 2'
        /// </summary>
        public string UISupplierRegionTitleEditText = "Test 2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Category Title' text box equals 'Test 3'
        /// </summary>
        public string UISupplierCategoryTitlEditText = "Test 3";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Variation Title' text box equals 'Test 4'
        /// </summary>
        public string UISupplierVariationTitEditText = "Test 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FrameworkSuppliersValidateTextBoxesContainSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FrameworkSuppliersValidateTextBoxesContainSecondValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Title' text box equals 'Test 1 EDITED'
        /// </summary>
        public string UISupplierTitleEditText = "Test 1 EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Region Title' text box equals 'Test 2 EDITED'
        /// </summary>
        public string UISupplierRegionTitleEditText = "Test 2 EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Category Title' text box equals 'Test 3 EDITED'
        /// </summary>
        public string UISupplierCategoryTitlEditText = "Test 3 EDITED";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Supplier Variation Title' text box equals 'Test 4 EDITED'
        /// </summary>
        public string UISupplierVariationTitEditText = "Test 4 EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWContractsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWContractsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Contract Dates Mandatory?' check box
        /// </summary>
        public bool FWContractsContractContractDatesCBChecked = true;
        
        /// <summary>
        /// Select 'Auto Generate Contract Numbers?' check box
        /// </summary>
        public bool FWContractsContractAutoGenConNumCBChecked = true;
        
        /// <summary>
        /// Select 'Auto Update Annual Contract Value Field?' check box
        /// </summary>
        public bool FWContractsContractAutoUpdateAnnualConValCBChecked = true;
        
        /// <summary>
        /// Select 'Invoice Frequency Active?' check box
        /// </summary>
        public bool FWContractsContractInvoiceFrequencyActiveCBChecked = true;
        
        /// <summary>
        /// Select 'Contract Category Mandatory?' check box
        /// </summary>
        public bool FWContractsContractContractCatMandatoryCBChecked = true;
        
        /// <summary>
        /// Select 'Term Type Field Active?' check box
        /// </summary>
        public bool FWContractsContractTermTypeFieldCBChecked = true;
        
        /// <summary>
        /// Select 'Inflator Active?' check box
        /// </summary>
        public bool FWContractsContractInflatorActiveCBChecked = true;
        
        /// <summary>
        /// Select 'Is Auto Generated Contract Number Updatable?' check box
        /// </summary>
        public bool FWContractsContractAutoGenUpdatableCBChecked = true;
        
        /// <summary>
        /// Select 'Allow Notes to be Added to Archived Contracts?' check box
        /// </summary>
        public bool FWContractsContractAllowNotesInArchivedCBChecked = true;
        
        /// <summary>
        /// Select 'Auto Sequence Variations?' check box
        /// </summary>
        public bool FWContractsContractAutoSequenceVaritionsCBChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWContractsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWContractsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Contract Dates Mandatory?' check box
        /// </summary>
        public bool FWContractsContractContractDatesCBChecked = false;
        
        /// <summary>
        /// Clear 'Auto Generate Contract Numbers?' check box
        /// </summary>
        public bool FWContractsContractAutoGenConNumCBChecked = false;
        
        /// <summary>
        /// Clear 'Auto Update Annual Contract Value Field?' check box
        /// </summary>
        public bool FWContractsContractAutoUpdateAnnualConValCBChecked = false;
        
        /// <summary>
        /// Clear 'Invoice Frequency Active?' check box
        /// </summary>
        public bool FWContractsContractInvoiceFrequencyActiveCBChecked = false;
        
        /// <summary>
        /// Clear 'Contract Category Mandatory?' check box
        /// </summary>
        public bool FWContractsContractContractCatMandatoryCBChecked = false;
        
        /// <summary>
        /// Clear 'Term Type Field Active?' check box
        /// </summary>
        public bool FWContractsContractTermTypeFieldCBChecked = false;
        
        /// <summary>
        /// Clear 'Inflator Active?' check box
        /// </summary>
        public bool FWContractsContractInflatorActiveCBChecked = false;
        
        /// <summary>
        /// Clear 'Is Auto Generated Contract Number Updatable?' check box
        /// </summary>
        public bool FWContractsContractAutoGenUpdatableCBChecked = false;
        
        /// <summary>
        /// Clear 'Allow Notes to be Added to Archived Contracts?' check box
        /// </summary>
        public bool FWContractsContractAllowNotesInArchivedCBChecked = false;
        
        /// <summary>
        /// Clear 'Auto Sequence Variations?' check box
        /// </summary>
        public bool FWContractsContractAutoSequenceVaritionsCBChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWContractsUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWContractsUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test1' in 'Contract Key Prefix' text box
        /// </summary>
        public string UIContractKeyPrefixEditText = "Test1";
        
        /// <summary>
        /// Type 'Test2' in 'Contract Description Title' text box
        /// </summary>
        public string UIContractDescriptionTEditText = "Test2";
        
        /// <summary>
        /// Type 'Test3' in 'Contract Category Title' text box
        /// </summary>
        public string UIContractCategoryTitlEditText = "Test3";
        
        /// <summary>
        /// Type 'Test4' in 'Penalty Clause Title' text box
        /// </summary>
        public string UIPenaltyClauseTitleEditText = "Test4";
        
        /// <summary>
        /// Type 'Test5' in 'Abbreviated Contract Description Title' text box
        /// </summary>
        public string UIAbbreviatedContractDEditText = "Test5";
        
        /// <summary>
        /// Type '4' in 'Contract Schedule Default' text box
        /// </summary>
        public string UIContractScheduleDefaEditText = "4";
        
        /// <summary>
        /// Type '2' in 'Current Contract Number Sequence Value' text box
        /// </summary>
        public string UICurrentContractNumbeEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWContractsUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWContractsUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test1EDITED' in 'Contract Key Prefix' text box
        /// </summary>
        public string UIContractKeyPrefixEditText = "Test1EDITED";
        
        /// <summary>
        /// Type 'Test2EDITED' in 'Contract Description Title' text box
        /// </summary>
        public string UIContractDescriptionTEditText = "Test2EDITED";
        
        /// <summary>
        /// Type 'Test3EDITED' in 'Contract Category Title' text box
        /// </summary>
        public string UIContractCategoryTitlEditText = "Test3EDITED";
        
        /// <summary>
        /// Type 'Test4EDITED' in 'Penalty Clause Title' text box
        /// </summary>
        public string UIPenaltyClauseTitleEditText = "Test4EDITED";
        
        /// <summary>
        /// Type 'Test5EDITED' in 'Abbreviated Contract Description Title' text box
        /// </summary>
        public string UIAbbreviatedContractDEditText = "Test5EDITED";
        
        /// <summary>
        /// Type '3' in 'Current Contract Number Sequence Value' text box
        /// </summary>
        public string UICurrentContractNumbeEditText = "3";
        
        /// <summary>
        /// Type '5' in 'Contract Schedule Default' text box
        /// </summary>
        public string UIContractScheduleDefaEditText = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWEmailServerUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWEmailServerUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'coded.ui.test1' in 'Email Server' text box
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test1";
        
        /// <summary>
        /// Type 'test1@test1.com' in 'Email From Address' text box
        /// </summary>
        public string UIEmailFromAddressEditText = "test1@test1.com";
        
        /// <summary>
        /// Type 'test2@test2.com' in 'Auditor Email Address' text box
        /// </summary>
        public string UIAuditorEmailAddressEditText = "test2@test2.com";
        
        /// <summary>
        /// Type 'test3@test3.com' in 'Error Submit Email Address' text box
        /// </summary>
        public string UIErrorSubmitEmailAddrEditText = "test3@test3.com";
        
        /// <summary>
        /// Type 'test4@test4.com' in 'Error Submit From Email Address' text box
        /// </summary>
        public string UIErrorSubmitFromEmailEditText = "test4@test4.com";
        
        /// <summary>
        /// Type 'test5@test5.com' in 'Email Administrator Address' text box
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test5@test5.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWEmailServerUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWEmailServerUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'coded.ui.test2' in 'Email Server' text box
        /// </summary>
        public string UIEmailServerEditText = "coded.ui.test2";
        
        /// <summary>
        /// Type 'test6@test6.com' in 'Email From Address' text box
        /// </summary>
        public string UIEmailFromAddressEditText = "test6@test6.com";
        
        /// <summary>
        /// Type 'test7@test7.com' in 'Auditor Email Address' text box
        /// </summary>
        public string UIAuditorEmailAddressEditText = "test7@test7.com";
        
        /// <summary>
        /// Type 'test8@test8.com' in 'Error Submit Email Address' text box
        /// </summary>
        public string UIErrorSubmitEmailAddrEditText = "test8@test8.com";
        
        /// <summary>
        /// Type 'test9@test9.com' in 'Error Submit From Email Address' text box
        /// </summary>
        public string UIErrorSubmitFromEmailEditText = "test9@test9.com";
        
        /// <summary>
        /// Type 'test10@test10.com' in 'Email Administrator Address' text box
        /// </summary>
        public string UIEmailAdministratorAdEditText = "test10@test10.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsChangeAllDropDownsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsChangeAllDropDownsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Hyperlink' in 'Link Attachment Default' combo box
        /// </summary>
        public string UILinkAttachmentDefaulComboBoxSelectedItem = "Hyperlink";
        
        /// <summary>
        /// Select 'January' in 'Financial Year Starts' combo box
        /// </summary>
        public string UIFinancialYearStartsComboBoxSelectedItem = "January";
        
        /// <summary>
        /// Select 'January' in 'Financial Year Ends' combo box
        /// </summary>
        public string UIFinancialYearEndsComboBoxSelectedItem = "January";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsChangeAllDropDownsToLastValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsChangeAllDropDownsToLastValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'File' in 'Link Attachment Default' combo box
        /// </summary>
        public string UILinkAttachmentDefaulComboBoxSelectedItem = "File";
        
        /// <summary>
        /// Select 'December' in 'Financial Year Starts' combo box
        /// </summary>
        public string UIFinancialYearStartsComboBoxSelectedItem = "December";
        
        /// <summary>
        /// Select 'December' in 'Financial Year Ends' combo box
        /// </summary>
        public string UIFinancialYearEndsComboBoxSelectedItem = "December";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Upload Attachments Enabled?' check box
        /// </summary>
        public bool UploadAttachmentsEnabledCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Upload Attachments Enabled?' check box
        /// </summary>
        public bool UploadAttachmentsEnabledCheckBoxChecked1 = true;
        
        /// <summary>
        /// Select 'Hyperlink Attachments Enabled?' check box
        /// </summary>
        public bool HyperlinkAttachmentsEnabledCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Flashing Notes Icon?' check box
        /// </summary>
        public bool FlashingNotesIconCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Show Product in Home Page Search Results' check box
        /// </summary>
        public bool ShowProductInHomePageSearchCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Employees may edit their own personal details' check box
        /// </summary>
        public bool EmployeesMayEditOwnDetailsCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Auto Update Product Licence Totals' check box
        /// </summary>
        public bool AutoUpdateProductLicenceTotalsCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Task Due Date Mandatory?' check box
        /// </summary>
        public bool TaskDueDateMandatoryCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Task End Date Mandatory?' check box
        /// </summary>
        public bool TaskEndDateMandatoryCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Task Start Date Mandatory?' check box
        /// </summary>
        public bool TaskStartDateMandatoryCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Upload Attachments Enabled?' check box
        /// </summary>
        public bool UploadAttachmentsEnabledCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Hyperlink Attachments Enabled?' check box
        /// </summary>
        public bool HyperlinkAttachmentsEnabledCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Flashing Notes Icon?' check box
        /// </summary>
        public bool FlashingNotesIconCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Show Product in Home Page Search Results' check box
        /// </summary>
        public bool ShowProductInHomePageSearchCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Employees may edit their own personal details' check box
        /// </summary>
        public bool EmployeesMayEditOwnDetailsCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Auto Update Product Licence Totals' check box
        /// </summary>
        public bool AutoUpdateProductLicenceTotalsCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Task Due Date Mandatory?' check box
        /// </summary>
        public bool TaskDueDateMandatoryCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Task Start Date Mandatory?' check box
        /// </summary>
        public bool TaskStartDateMandatoryCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Task End Date Mandatory?' check box
        /// </summary>
        public bool TaskEndDateMandatoryCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type '999' in 'Max File Upload Size (Kbytes)' text box
        /// </summary>
        public string UIMaxFileUploadSizeKbyEditText = "999";
        
        /// <summary>
        /// Type '99' in 'Default Report Page Size (rows)' text box
        /// </summary>
        public string UIDefaultReportPageSizEditText = "99";
        
        /// <summary>
        /// Type '9' in 'Task Escalation Repeat (days)' text box
        /// </summary>
        public string UITaskEscalationRepeatEditText = "9";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWGeneralDetailsUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWGeneralDetailsUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type '666' in 'Max File Upload Size (Kbytes)' text box
        /// </summary>
        public string UIMaxFileUploadSizeKbyEditText = "666";
        
        /// <summary>
        /// Type '66' in 'Default Report Page Size (rows)' text box
        /// </summary>
        public string UIDefaultReportPageSizEditText = "66";
        
        /// <summary>
        /// Type '6' in 'Task Escalation Repeat (days)' text box
        /// </summary>
        public string UITaskEscalationRepeatEditText = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWInvoicesTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWInvoicesTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Auto Generate PO Numbers?' check box
        /// </summary>
        public bool FWInvoicesAutoPONumbersCBChecked = true;
        
        /// <summary>
        /// Select 'Keep Invoice Forecast on Move to Actual?' check box
        /// </summary>
        public bool FWInvoicesKeepInvoiceForecastCBChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWInvoicesUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWInvoicesUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Keep Invoice Forecast on Move to Actual?' check box
        /// </summary>
        public bool FWInvoicesKeepInvoiceForecastCBChecked = false;
        
        /// <summary>
        /// Clear 'Auto Generate PO Numbers?' check box
        /// </summary>
        public bool FWInvoicesAutoPONumbersCBChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWInvoicesUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWInvoicesUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test' in 'PO Number Format' text box
        /// </summary>
        public string UIPONumberFormatEditText = "Test";
        
        /// <summary>
        /// Type 'Test' in 'Current PO Sequence Number' text box
        /// </summary>
        public string UICurrentPOSequenceNumEditText = "Test";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWInvoicesUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWInvoicesUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'TestEDITED1' in 'PO Number Format' text box
        /// </summary>
        public string UIPONumberFormatEditText = "TestEDITED1";
        
        /// <summary>
        /// Type 'TestEDITED2' in 'Current PO Sequence Number' text box
        /// </summary>
        public string UICurrentPOSequenceNumEditText = "TestEDITED2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWMainAdministratorChangeAllDropDownsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWMainAdministratorChangeAllDropDownsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select '[None]' in 'Main Administrator' combo box
        /// </summary>
        public string UIMainAdministratorComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWMainAdministratorChangeAllDropDownsToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWMainAdministratorChangeAllDropDownsToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select '[None]' in 'Main Administrator' combo box
        /// </summary>
        public string UIMainAdministratorComboBoxSelectedItem = "[None]";
        
        /// <summary>
        /// Select 'TestSurnam, Mrs TestForename (CodedUIAdmin)' in 'Main Administrator' combo box
        /// </summary>
        public string UIMainAdministratorComboBoxSelectedItem1 = "TestSurnam, Mrs TestForename (CodedUIAdmin)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWRegionalSettingsChangeAllDropDownsToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWRegionalSettingsChangeAllDropDownsToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'United States' in 'Default Country' combo box
        /// </summary>
        public string UIDefaultCountryComboBoxSelectedItem = "United States";
        
        /// <summary>
        /// Select 'US Dollar' in 'Base Currency' combo box
        /// </summary>
        public string UIBaseCurrencyComboBoxSelectedItem = "US Dollar";
        
        /// <summary>
        /// Select 'Dutch' in 'Default Language' combo box
        /// </summary>
        public string UIDefaultLanguageComboBoxSelectedItem = "Dutch";
        
        /// <summary>
        /// Select '[None]' in 'Default Locale' combo box
        /// </summary>
        public string UIDefaultLocaleComboBoxSelectedItem = "[None]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWRegionalSettingsChangeAllDropDownsToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWRegionalSettingsChangeAllDropDownsToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'United Kingdom' in 'Default Country' combo box
        /// </summary>
        public string UIDefaultCountryComboBoxSelectedItem = "United Kingdom";
        
        /// <summary>
        /// Select 'Pound Sterling' in 'Base Currency' combo box
        /// </summary>
        public string UIBaseCurrencyComboBoxSelectedItem = "Pound Sterling";
        
        /// <summary>
        /// Select 'English' in 'Default Language' combo box
        /// </summary>
        public string UIDefaultLanguageComboBoxSelectedItem = "English";
        
        /// <summary>
        /// Select 'English (United Kingdom) (en-GB)' in 'Default Locale' combo box
        /// </summary>
        public string UIDefaultLocaleComboBoxSelectedItem = "English (United Kingdom) (en-GB)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWSuppliersTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWSuppliersTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Supplier Turnover Enabled?' check box
        /// </summary>
        public bool FWSuppliersTurnoverCBChecked = true;
        
        /// <summary>
        /// Select 'Last Financial Check Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialCheckCBChecked = true;
        
        /// <summary>
        /// Select 'Internal Contact Field Enabled?' check box
        /// </summary>
        public bool FWSuppliersContractFieldCBChecked = true;
        
        /// <summary>
        /// Select 'Supplier Category Mandatory?' check box
        /// </summary>
        public bool FWSuppliersCategoryMandatoryCBChecked = true;
        
        /// <summary>
        /// Select 'Supplier Status Mandatory?' check box
        /// </summary>
        public bool FWSuppliersStatusMandatoryCBChecked = true;
        
        /// <summary>
        /// Select 'Supplier Number Employees Field Enabled?' check box
        /// </summary>
        public bool FWSuppliersNumberEmployeesFieldCBChecked = true;
        
        /// <summary>
        /// Select 'Last Financial Status Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialStatusCBChecked = true;
        
        /// <summary>
        /// Select 'Financial Year End Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialYearEndCBChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWSuppliersUnTickAll'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWSuppliersUnTickAllParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Supplier Turnover Enabled?' check box
        /// </summary>
        public bool FWSuppliersTurnoverCBChecked = false;
        
        /// <summary>
        /// Clear 'Last Financial Check Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialCheckCBChecked = false;
        
        /// <summary>
        /// Clear 'Internal Contact Field Enabled?' check box
        /// </summary>
        public bool FWSuppliersContractFieldCBChecked = false;
        
        /// <summary>
        /// Clear 'Supplier Category Mandatory?' check box
        /// </summary>
        public bool FWSuppliersCategoryMandatoryCBChecked = false;
        
        /// <summary>
        /// Clear 'Supplier Status Mandatory?' check box
        /// </summary>
        public bool FWSuppliersStatusMandatoryCBChecked = false;
        
        /// <summary>
        /// Clear 'Supplier Number Employees Field Enabled?' check box
        /// </summary>
        public bool FWSuppliersNumberEmployeesFieldCBChecked = false;
        
        /// <summary>
        /// Clear 'Last Financial Status Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialStatusCBChecked = false;
        
        /// <summary>
        /// Clear 'Financial Year End Enabled?' check box
        /// </summary>
        public bool FWSuppliersFinancialYearEndCBChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWSuppliersUpdateAllTextboxesToFirstValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWSuppliersUpdateAllTextboxesToFirstValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test 1' in 'Supplier Title' text box
        /// </summary>
        public string UISupplierTitleEditText = "Test 1";
        
        /// <summary>
        /// Type 'Test 2' in 'Supplier Region Title' text box
        /// </summary>
        public string UISupplierRegionTitleEditText = "Test 2";
        
        /// <summary>
        /// Type 'Test 3' in 'Supplier Category Title' text box
        /// </summary>
        public string UISupplierCategoryTitlEditText = "Test 3";
        
        /// <summary>
        /// Type 'Test 4' in 'Supplier Variation Title' text box
        /// </summary>
        public string UISupplierVariationTitEditText = "Test 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FWSuppliersUpdateAllTextboxesToSecondValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class FWSuppliersUpdateAllTextboxesToSecondValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test 1 EDITED' in 'Supplier Title' text box
        /// </summary>
        public string UISupplierTitleEditText = "Test 1 EDITED";
        
        /// <summary>
        /// Type 'Test 2 EDITED' in 'Supplier Region Title' text box
        /// </summary>
        public string UISupplierRegionTitleEditText = "Test 2 EDITED";
        
        /// <summary>
        /// Type 'Test 3 EDITED' in 'Supplier Category Title' text box
        /// </summary>
        public string UISupplierCategoryTitlEditText = "Test 3 EDITED";
        
        /// <summary>
        /// Type 'Test 4 EDITED' in 'Supplier Variation Title' text box
        /// </summary>
        public string UISupplierVariationTitEditText = "Test 4 EDITED";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePNGWilBeAutomaticallyAddedModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ValidatePNGWilBeAutomaticallyAddedModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Enabling this option will automatically permit .PNG file type attachments for use by mobile device receipts.
        ///
        ///This is not currently one of the permitted attachment types.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nEnabling this option will automatically permit .PNG fi" +
            "le type attachments for use by mobile device receipts.\r\n\r\nThis is not currently " +
            "one of the permitted attachment types.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsWindowWindow : BrowserWindow
    {
        
        public UIGeneralOptionsWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "General Options";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGeneralOptionsDocument UIGeneralOptionsDocument
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument == null))
                {
                    this.mUIGeneralOptionsDocument = new UIGeneralOptionsDocument(this);
                }
                return this.mUIGeneralOptionsDocument;
            }
        }
        
        public UIGeneralOptionsDocument1 UIGeneralOptionsDocument1
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument1 == null))
                {
                    this.mUIGeneralOptionsDocument1 = new UIGeneralOptionsDocument1(this);
                }
                return this.mUIGeneralOptionsDocument1;
            }
        }
        
        public UIGeneralOptionsDocument2 UIGeneralOptionsDocument2
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument2 == null))
                {
                    this.mUIGeneralOptionsDocument2 = new UIGeneralOptionsDocument2(this);
                }
                return this.mUIGeneralOptionsDocument2;
            }
        }
        
        public UIGeneralOptionsDocument3 UIGeneralOptionsDocument3
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument3 == null))
                {
                    this.mUIGeneralOptionsDocument3 = new UIGeneralOptionsDocument3(this);
                }
                return this.mUIGeneralOptionsDocument3;
            }
        }
        
        public UIGeneralOptionsDocument4 UIGeneralOptionsDocument4
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument4 == null))
                {
                    this.mUIGeneralOptionsDocument4 = new UIGeneralOptionsDocument4(this);
                }
                return this.mUIGeneralOptionsDocument4;
            }
        }
        
        public UIGeneralOptionsDocument5 UIGeneralOptionsDocument5
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument5 == null))
                {
                    this.mUIGeneralOptionsDocument5 = new UIGeneralOptionsDocument5(this);
                }
                return this.mUIGeneralOptionsDocument5;
            }
        }
        #endregion
        
        #region Fields
        private UIGeneralOptionsDocument mUIGeneralOptionsDocument;
        
        private UIGeneralOptionsDocument1 mUIGeneralOptionsDocument1;
        
        private UIGeneralOptionsDocument2 mUIGeneralOptionsDocument2;
        
        private UIGeneralOptionsDocument3 mUIGeneralOptionsDocument3;
        
        private UIGeneralOptionsDocument4 mUIGeneralOptionsDocument4;
        
        private UIGeneralOptionsDocument5 mUIGeneralOptionsDocument5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument : HtmlDocument
    {
        
        public UIGeneralOptionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://fwtest.sel-expenses.com/shared/admin/accountOptions.aspx";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGeneralOptionsHyperlink
        {
            get
            {
                if ((this.mUIGeneralOptionsHyperlink == null))
                {
                    this.mUIGeneralOptionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Options";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkGeneral href=\"javascript:changePag";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIGeneralOptionsHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIGeneralOptionsHyperlink;
            }
        }
        
        public HtmlSpan UIGeneralDetailsPane
        {
            get
            {
                if ((this.mUIGeneralDetailsPane == null))
                {
                    this.mUIGeneralDetailsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabFWGeneral";
                    this.mUIGeneralDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "General Details";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIGeneralDetailsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
                    this.mUIGeneralDetailsPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIGeneralDetailsPane;
            }
        }
        
        public HtmlHyperlink UIGeneralOptionsHyperlink1
        {
            get
            {
                if ((this.mUIGeneralOptionsHyperlink1 == null))
                {
                    this.mUIGeneralOptionsHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Options";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "selectedPage";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkGeneral class=selectedPage href=\"j";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIGeneralOptionsHyperlink1.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIGeneralOptionsHyperlink1;
            }
        }
        
        public HtmlSpan UIContractsPane
        {
            get
            {
                if ((this.mUIContractsPane == null))
                {
                    this.mUIContractsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIContractsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabContracts";
                    this.mUIContractsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIContractsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contracts";
                    this.mUIContractsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIContractsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIContractsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIContractsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mUIContractsPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIContractsPane;
            }
        }
        
        public HtmlSpan UIInvoicesPane
        {
            get
            {
                if ((this.mUIInvoicesPane == null))
                {
                    this.mUIInvoicesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIInvoicesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabInvoices";
                    this.mUIInvoicesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIInvoicesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Invoices";
                    this.mUIInvoicesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIInvoicesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIInvoicesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIInvoicesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "31";
                    this.mUIInvoicesPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIInvoicesPane;
            }
        }
        
        public HtmlSpan UISuppliersPane
        {
            get
            {
                if ((this.mUISuppliersPane == null))
                {
                    this.mUISuppliersPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISuppliersPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabSupplier";
                    this.mUISuppliersPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISuppliersPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Suppliers";
                    this.mUISuppliersPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISuppliersPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISuppliersPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUISuppliersPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "35";
                    this.mUISuppliersPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISuppliersPane;
            }
        }
        
        public HtmlHyperlink UIEmailServerHyperlink
        {
            get
            {
                if ((this.mUIEmailServerHyperlink == null))
                {
                    this.mUIEmailServerHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmailServerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkEmailServer";
                    this.mUIEmailServerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEmailServerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmailServerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Email Server";
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'EmailServer\');";
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'EmailServer\');";
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkEmailServer href=\"javascript:chang";
                    this.mUIEmailServerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIEmailServerHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailServerHyperlink;
            }
        }
        
        public HtmlHyperlink UIMainAdministratorHyperlink
        {
            get
            {
                if ((this.mUIMainAdministratorHyperlink == null))
                {
                    this.mUIMainAdministratorHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMainAdministratorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkMainAdministrator";
                    this.mUIMainAdministratorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMainAdministratorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMainAdministratorHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Main Administrator";
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'MainAdministrator\');";
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'MainAdministrator\');";
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkMainAdministrator href=\"javascript";
                    this.mUIMainAdministratorHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIMainAdministratorHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMainAdministratorHyperlink;
            }
        }
        
        public HtmlHyperlink UIRegionalSettingsHyperlink
        {
            get
            {
                if ((this.mUIRegionalSettingsHyperlink == null))
                {
                    this.mUIRegionalSettingsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRegionalSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkRegionalSettings";
                    this.mUIRegionalSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIRegionalSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIRegionalSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Regional Settings";
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'RegionalSettings\');";
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'RegionalSettings\');";
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkRegionalSettings href=\"javascript:";
                    this.mUIRegionalSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIRegionalSettingsHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIRegionalSettingsHyperlink;
            }
        }
        
        public HtmlHyperlink UIPasswordSettingsHyperlink
        {
            get
            {
                if ((this.mUIPasswordSettingsHyperlink == null))
                {
                    this.mUIPasswordSettingsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPasswordSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkPasswordSettings";
                    this.mUIPasswordSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPasswordSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPasswordSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Password Settings";
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'PasswordSettings\');";
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'PasswordSettings\');";
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkPasswordSettings href=\"javascript:";
                    this.mUIPasswordSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIPasswordSettingsHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIPasswordSettingsHyperlink;
            }
        }
        
        public HtmlInputButton UICtl00contentmainbtnCButton
        {
            get
            {
                if ((this.mUICtl00contentmainbtnCButton == null))
                {
                    this.mUICtl00contentmainbtnCButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmainbtnCButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancel";
                    this.mUICtl00contentmainbtnCButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancel";
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmainbtnCButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmainbtnCButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "211";
                    this.mUICtl00contentmainbtnCButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICtl00contentmainbtnCButton;
            }
        }
        
        public HtmlInputButton UICtl00contentmainbtnSButton
        {
            get
            {
                if ((this.mUICtl00contentmainbtnSButton == null))
                {
                    this.mUICtl00contentmainbtnSButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICtl00contentmainbtnSButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSave";
                    this.mUICtl00contentmainbtnSButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSave";
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Type] = "image";
                    this.mUICtl00contentmainbtnSButton.FilterProperties["Src"] = "http://fwtest.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUICtl00contentmainbtnSButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "210";
                    this.mUICtl00contentmainbtnSButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICtl00contentmainbtnSButton;
            }
        }
        
        public HtmlCheckBox UploadAttachmentsEnabledCheckBox
        {
            get
            {
                if ((this.mUploadAttachmentsEnabledCheckBox == null))
                {
                    this.mUploadAttachmentsEnabledCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUploadAttachmentsEnabledCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkUploadAttachmentEnabled";
                    this.mUploadAttachmentsEnabledCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkUploadAttachmentEnabled";
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Upload Attachments Enabled?";
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUploadAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "48";
                    this.mUploadAttachmentsEnabledCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUploadAttachmentsEnabledCheckBox;
            }
        }
        
        public HtmlCheckBox HyperlinkAttachmentsEnabledCheckBox
        {
            get
            {
                if ((this.mHyperlinkAttachmentsEnabledCheckBox == null))
                {
                    this.mHyperlinkAttachmentsEnabledCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mHyperlinkAttachmentsEnabledCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkHyperlinkAttachmentsEnabled";
                    this.mHyperlinkAttachmentsEnabledCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkHyperlinkAttachmentsEnabled";
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Hyperlink Attachments Enabled?";
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mHyperlinkAttachmentsEnabledCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "49";
                    this.mHyperlinkAttachmentsEnabledCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mHyperlinkAttachmentsEnabledCheckBox;
            }
        }
        
        public HtmlCheckBox FlashingNotesIconCheckBox
        {
            get
            {
                if ((this.mFlashingNotesIconCheckBox == null))
                {
                    this.mFlashingNotesIconCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFlashingNotesIconCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkNotesIconFlash";
                    this.mFlashingNotesIconCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkNotesIconFlash";
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Flashing Notes Icon?";
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "51";
                    this.mFlashingNotesIconCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFlashingNotesIconCheckBox;
            }
        }
        
        public HtmlCheckBox ShowProductInHomePageSearchCheckBox
        {
            get
            {
                if ((this.mShowProductInHomePageSearchCheckBox == null))
                {
                    this.mShowProductInHomePageSearchCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mShowProductInHomePageSearchCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkShowProductInSearch";
                    this.mShowProductInHomePageSearchCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkShowProductInSearch";
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Show Product in Home Page Search Results";
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mShowProductInHomePageSearchCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "52";
                    this.mShowProductInHomePageSearchCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mShowProductInHomePageSearchCheckBox;
            }
        }
        
        public HtmlCheckBox EmployeesMayEditOwnDetailsCheckBox
        {
            get
            {
                if ((this.mEmployeesMayEditOwnDetailsCheckBox == null))
                {
                    this.mEmployeesMayEditOwnDetailsCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEmployeesMayEditOwnDetailsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkfwEditMyDetails";
                    this.mEmployeesMayEditOwnDetailsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkfwEditMyDetails";
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employees may edit their own personal details";
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEmployeesMayEditOwnDetailsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "54";
                    this.mEmployeesMayEditOwnDetailsCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEmployeesMayEditOwnDetailsCheckBox;
            }
        }
        
        public HtmlCheckBox AutoUpdateProductLicenceTotalsCheckBox
        {
            get
            {
                if ((this.mAutoUpdateProductLicenceTotalsCheckBox == null))
                {
                    this.mAutoUpdateProductLicenceTotalsCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mAutoUpdateProductLicenceTotalsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkAutoUpdateLicenceTotal";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkAutoUpdateLicenceTotal";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Update Product Licence Totals";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "55";
                    this.mAutoUpdateProductLicenceTotalsCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mAutoUpdateProductLicenceTotalsCheckBox;
            }
        }
        
        public HtmlCheckBox TaskDueDateMandatoryCheckBox
        {
            get
            {
                if ((this.mTaskDueDateMandatoryCheckBox == null))
                {
                    this.mTaskDueDateMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mTaskDueDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskDueDateMandatory";
                    this.mTaskDueDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskDueDateMandatory";
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task Due Date Mandatory?";
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mTaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "56";
                    this.mTaskDueDateMandatoryCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mTaskDueDateMandatoryCheckBox;
            }
        }
        
        public HtmlCheckBox TaskStartDateMandatoryCheckBox
        {
            get
            {
                if ((this.mTaskStartDateMandatoryCheckBox == null))
                {
                    this.mTaskStartDateMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mTaskStartDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskStartDateMandatory";
                    this.mTaskStartDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskStartDateMandatory";
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task Start Date Mandatory?";
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mTaskStartDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "57";
                    this.mTaskStartDateMandatoryCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mTaskStartDateMandatoryCheckBox;
            }
        }
        
        public HtmlCheckBox TaskEndDateMandatoryCheckBox
        {
            get
            {
                if ((this.mTaskEndDateMandatoryCheckBox == null))
                {
                    this.mTaskEndDateMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mTaskEndDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskEndDateMandatory";
                    this.mTaskEndDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskEndDateMandatory";
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task End Date Mandatory?";
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mTaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "58";
                    this.mTaskEndDateMandatoryCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mTaskEndDateMandatoryCheckBox;
            }
        }
        
        public HtmlComboBox UILinkAttachmentDefaulComboBox
        {
            get
            {
                if ((this.mUILinkAttachmentDefaulComboBox == null))
                {
                    this.mUILinkAttachmentDefaulComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUILinkAttachmentDefaulComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_optLinkAttachmentDefault";
                    this.mUILinkAttachmentDefaulComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$optLinkAttachmentDefault";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Link Attachment Default";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUILinkAttachmentDefaulComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "4";
                    this.mUILinkAttachmentDefaulComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUILinkAttachmentDefaulComboBox;
            }
        }
        
        public HtmlComboBox UIFinancialYearStartsComboBox
        {
            get
            {
                if ((this.mUIFinancialYearStartsComboBox == null))
                {
                    this.mUIFinancialYearStartsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIFinancialYearStartsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_optFYStarts";
                    this.mUIFinancialYearStartsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$optFYStarts";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Financial Year Starts";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "12";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIFinancialYearStartsComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "5";
                    this.mUIFinancialYearStartsComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIFinancialYearStartsComboBox;
            }
        }
        
        public HtmlComboBox UIFinancialYearEndsComboBox
        {
            get
            {
                if ((this.mUIFinancialYearEndsComboBox == null))
                {
                    this.mUIFinancialYearEndsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIFinancialYearEndsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_optFYEnds";
                    this.mUIFinancialYearEndsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$optFYEnds";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Financial Year Ends";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "12";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "fillspan";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIFinancialYearEndsComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "6";
                    this.mUIFinancialYearEndsComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIFinancialYearEndsComboBox;
            }
        }
        
        public HtmlEdit UIMaxFileUploadSizeKbyEdit
        {
            get
            {
                if ((this.mUIMaxFileUploadSizeKbyEdit == null))
                {
                    this.mUIMaxFileUploadSizeKbyEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMaxFileUploadSizeKbyEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_txtMaxUploadSize";
                    this.mUIMaxFileUploadSizeKbyEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$txtMaxUploadSize";
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Max File Upload Size (Kbytes)";
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIMaxFileUploadSizeKbyEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "50";
                    this.mUIMaxFileUploadSizeKbyEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMaxFileUploadSizeKbyEdit;
            }
        }
        
        public HtmlEdit UIDefaultReportPageSizEdit
        {
            get
            {
                if ((this.mUIDefaultReportPageSizEdit == null))
                {
                    this.mUIDefaultReportPageSizEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDefaultReportPageSizEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_txtDefaultPageSize";
                    this.mUIDefaultReportPageSizEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$txtDefaultPageSize";
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Default Report Page Size (rows)";
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIDefaultReportPageSizEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "53";
                    this.mUIDefaultReportPageSizEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultReportPageSizEdit;
            }
        }
        
        public HtmlEdit UITaskEscalationRepeatEdit
        {
            get
            {
                if ((this.mUITaskEscalationRepeatEdit == null))
                {
                    this.mUITaskEscalationRepeatEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITaskEscalationRepeatEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_txtTaskEscalationRepeat";
                    this.mUITaskEscalationRepeatEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$txtTaskEscalationRepeat";
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Task Escalation Repeat (days)";
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUITaskEscalationRepeatEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "59";
                    this.mUITaskEscalationRepeatEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUITaskEscalationRepeatEdit;
            }
        }
        
        public HtmlCheckBox FWContractsContractContractCatMandatoryCB
        {
            get
            {
                if ((this.mFWContractsContractContractCatMandatoryCB == null))
                {
                    this.mFWContractsContractContractCatMandatoryCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractContractCatMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkContractCategoryMandatory";
                    this.mFWContractsContractContractCatMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkContractCategoryMandatory";
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Contract Category Mandatory?";
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractContractCatMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "65";
                    this.mFWContractsContractContractCatMandatoryCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractContractCatMandatoryCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractContractDatesCB
        {
            get
            {
                if ((this.mFWContractsContractContractDatesCB == null))
                {
                    this.mFWContractsContractContractDatesCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractContractDatesCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkContractDatesMandatory";
                    this.mFWContractsContractContractDatesCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkContractDatesMandatory";
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Contract Dates Mandatory?";
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractContractDatesCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "68";
                    this.mFWContractsContractContractDatesCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractContractDatesCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractAutoGenConNumCB
        {
            get
            {
                if ((this.mFWContractsContractAutoGenConNumCB == null))
                {
                    this.mFWContractsContractAutoGenConNumCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractAutoGenConNumCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkContractNumberGenerate";
                    this.mFWContractsContractAutoGenConNumCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkContractNumberGenerate";
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Generate Contract Numbers?";
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractAutoGenConNumCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "70";
                    this.mFWContractsContractAutoGenConNumCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractAutoGenConNumCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractAutoUpdateAnnualConValCB
        {
            get
            {
                if ((this.mFWContractsContractAutoUpdateAnnualConValCB == null))
                {
                    this.mFWContractsContractAutoUpdateAnnualConValCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractAutoUpdateAnnualConValCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkAutoUpdateCV";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkAutoUpdateCV";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Update Annual Contract Value Field?";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "73";
                    this.mFWContractsContractAutoUpdateAnnualConValCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractAutoUpdateAnnualConValCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractInvoiceFrequencyActiveCB
        {
            get
            {
                if ((this.mFWContractsContractInvoiceFrequencyActiveCB == null))
                {
                    this.mFWContractsContractInvoiceFrequencyActiveCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractInvoiceFrequencyActiveCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkInvoiceFrequencyActive";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkInvoiceFrequencyActive";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Invoice Frequency Active?";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "75";
                    this.mFWContractsContractInvoiceFrequencyActiveCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractInvoiceFrequencyActiveCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractTermTypeFieldCB
        {
            get
            {
                if ((this.mFWContractsContractTermTypeFieldCB == null))
                {
                    this.mFWContractsContractTermTypeFieldCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractTermTypeFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkTermTypeActive";
                    this.mFWContractsContractTermTypeFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkTermTypeActive";
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Term Type Field Active?";
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractTermTypeFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "67";
                    this.mFWContractsContractTermTypeFieldCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractTermTypeFieldCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractInflatorActiveCB
        {
            get
            {
                if ((this.mFWContractsContractInflatorActiveCB == null))
                {
                    this.mFWContractsContractInflatorActiveCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractInflatorActiveCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkInflatorActive";
                    this.mFWContractsContractInflatorActiveCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkInflatorActive";
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Inflator Active?";
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractInflatorActiveCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "69";
                    this.mFWContractsContractInflatorActiveCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractInflatorActiveCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractAutoGenUpdatableCB
        {
            get
            {
                if ((this.mFWContractsContractAutoGenUpdatableCB == null))
                {
                    this.mFWContractsContractAutoGenUpdatableCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractAutoGenUpdatableCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkContractNumberUpdatable";
                    this.mFWContractsContractAutoGenUpdatableCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkContractNumberUpdatable";
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Is Auto Generated Contract Number Updatable?";
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractAutoGenUpdatableCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "71";
                    this.mFWContractsContractAutoGenUpdatableCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractAutoGenUpdatableCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractAllowNotesInArchivedCB
        {
            get
            {
                if ((this.mFWContractsContractAllowNotesInArchivedCB == null))
                {
                    this.mFWContractsContractAllowNotesInArchivedCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractAllowNotesInArchivedCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkArchivedNotesAdd";
                    this.mFWContractsContractAllowNotesInArchivedCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkArchivedNotesAdd";
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow Notes to be Added to Archived Contracts?";
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractAllowNotesInArchivedCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "74";
                    this.mFWContractsContractAllowNotesInArchivedCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractAllowNotesInArchivedCB;
            }
        }
        
        public HtmlCheckBox FWContractsContractAutoSequenceVaritionsCB
        {
            get
            {
                if ((this.mFWContractsContractAutoSequenceVaritionsCB == null))
                {
                    this.mFWContractsContractAutoSequenceVaritionsCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWContractsContractAutoSequenceVaritionsCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_chkVariationAutoSeq";
                    this.mFWContractsContractAutoSequenceVaritionsCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$chkVariationAutoSeq";
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Sequence Variations?";
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWContractsContractAutoSequenceVaritionsCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "76";
                    this.mFWContractsContractAutoSequenceVaritionsCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWContractsContractAutoSequenceVaritionsCB;
            }
        }
        
        public HtmlEdit UIContractKeyPrefixEdit
        {
            get
            {
                if ((this.mUIContractKeyPrefixEdit == null))
                {
                    this.mUIContractKeyPrefixEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractKeyPrefixEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtContractKey";
                    this.mUIContractKeyPrefixEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtContractKey";
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Key Prefix";
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIContractKeyPrefixEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "60";
                    this.mUIContractKeyPrefixEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIContractKeyPrefixEdit;
            }
        }
        
        public HtmlEdit UIContractDescriptionTEdit
        {
            get
            {
                if ((this.mUIContractDescriptionTEdit == null))
                {
                    this.mUIContractDescriptionTEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractDescriptionTEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtContractDescriptionTitle";
                    this.mUIContractDescriptionTEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtContractDescriptionTitle";
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Description Title";
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIContractDescriptionTEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "62";
                    this.mUIContractDescriptionTEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIContractDescriptionTEdit;
            }
        }
        
        public HtmlEdit UIContractCategoryTitlEdit
        {
            get
            {
                if ((this.mUIContractCategoryTitlEdit == null))
                {
                    this.mUIContractCategoryTitlEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractCategoryTitlEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtContractCategoryTitle";
                    this.mUIContractCategoryTitlEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtContractCategoryTitle";
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Category Title";
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIContractCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "64";
                    this.mUIContractCategoryTitlEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIContractCategoryTitlEdit;
            }
        }
        
        public HtmlEdit UIPenaltyClauseTitleEdit
        {
            get
            {
                if ((this.mUIPenaltyClauseTitleEdit == null))
                {
                    this.mUIPenaltyClauseTitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPenaltyClauseTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtPenaltyClauseTitle";
                    this.mUIPenaltyClauseTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtPenaltyClauseTitle";
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Penalty Clause Title";
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIPenaltyClauseTitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "66";
                    this.mUIPenaltyClauseTitleEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIPenaltyClauseTitleEdit;
            }
        }
        
        public HtmlEdit UIAbbreviatedContractDEdit
        {
            get
            {
                if ((this.mUIAbbreviatedContractDEdit == null))
                {
                    this.mUIAbbreviatedContractDEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAbbreviatedContractDEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtContractDescriptionTitleAbbr" +
                        "ev";
                    this.mUIAbbreviatedContractDEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtContractDescriptionTitleAbbr" +
                        "ev";
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Abbreviated Contract Description Title";
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIAbbreviatedContractDEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "63";
                    this.mUIAbbreviatedContractDEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIAbbreviatedContractDEdit;
            }
        }
        
        public HtmlEdit UIContractScheduleDefaEdit
        {
            get
            {
                if ((this.mUIContractScheduleDefaEdit == null))
                {
                    this.mUIContractScheduleDefaEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContractScheduleDefaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtScheduleDefault";
                    this.mUIContractScheduleDefaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtScheduleDefault";
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Contract Schedule Default";
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIContractScheduleDefaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "61";
                    this.mUIContractScheduleDefaEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIContractScheduleDefaEdit;
            }
        }
        
        public HtmlEdit UICurrentContractNumbeEdit
        {
            get
            {
                if ((this.mUICurrentContractNumbeEdit == null))
                {
                    this.mUICurrentContractNumbeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICurrentContractNumbeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabContracts_txtContractNumberCurSeq";
                    this.mUICurrentContractNumbeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabContracts$txtContractNumberCurSeq";
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Current Contract Number Sequence Value";
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUICurrentContractNumbeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "72";
                    this.mUICurrentContractNumbeEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICurrentContractNumbeEdit;
            }
        }
        
        public HtmlCheckBox FWInvoicesKeepInvoiceForecastCB
        {
            get
            {
                if ((this.mFWInvoicesKeepInvoiceForecastCB == null))
                {
                    this.mFWInvoicesKeepInvoiceForecastCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWInvoicesKeepInvoiceForecastCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabInvoices_chkKeepInvForecasts";
                    this.mFWInvoicesKeepInvoiceForecastCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabInvoices$chkKeepInvForecasts";
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Keep Invoice Forecast on Move to Actual?";
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWInvoicesKeepInvoiceForecastCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "77";
                    this.mFWInvoicesKeepInvoiceForecastCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWInvoicesKeepInvoiceForecastCB;
            }
        }
        
        public HtmlCheckBox FWInvoicesAutoPONumbersCB
        {
            get
            {
                if ((this.mFWInvoicesAutoPONumbersCB == null))
                {
                    this.mFWInvoicesAutoPONumbersCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWInvoicesAutoPONumbersCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabInvoices_chkPONumberGenerate";
                    this.mFWInvoicesAutoPONumbersCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabInvoices$chkPONumberGenerate";
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Generate PO Numbers?";
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWInvoicesAutoPONumbersCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "78";
                    this.mFWInvoicesAutoPONumbersCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWInvoicesAutoPONumbersCB;
            }
        }
        
        public HtmlEdit UIPONumberFormatEdit
        {
            get
            {
                if ((this.mUIPONumberFormatEdit == null))
                {
                    this.mUIPONumberFormatEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPONumberFormatEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabInvoices_txtPONumberFormat";
                    this.mUIPONumberFormatEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabInvoices$txtPONumberFormat";
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "PO Number Format";
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIPONumberFormatEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "79";
                    this.mUIPONumberFormatEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIPONumberFormatEdit;
            }
        }
        
        public HtmlEdit UICurrentPOSequenceNumEdit
        {
            get
            {
                if ((this.mUICurrentPOSequenceNumEdit == null))
                {
                    this.mUICurrentPOSequenceNumEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICurrentPOSequenceNumEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabInvoices_txtPOSequenceNumber";
                    this.mUICurrentPOSequenceNumEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabInvoices$txtPOSequenceNumber";
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Current PO Sequence Number";
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUICurrentPOSequenceNumEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "80";
                    this.mUICurrentPOSequenceNumEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICurrentPOSequenceNumEdit;
            }
        }
        
        public HtmlEdit UIEmailServerEdit
        {
            get
            {
                if ((this.mUIEmailServerEdit == null))
                {
                    this.mUIEmailServerEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailServerEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtEmailServer";
                    this.mUIEmailServerEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtEmailServer";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email Server";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtEmailServer clas";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "93";
                    this.mUIEmailServerEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailServerEdit;
            }
        }
        
        public HtmlEdit UIEmailFromAddressEdit
        {
            get
            {
                if ((this.mUIEmailFromAddressEdit == null))
                {
                    this.mUIEmailFromAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailFromAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtEmailFromAddress";
                    this.mUIEmailFromAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtEmailFromAddress";
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email From Address";
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtEmailFromAddress";
                    this.mUIEmailFromAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "96";
                    this.mUIEmailFromAddressEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailFromAddressEdit;
            }
        }
        
        public HtmlEdit UIAuditorEmailAddressEdit
        {
            get
            {
                if ((this.mUIAuditorEmailAddressEdit == null))
                {
                    this.mUIAuditorEmailAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAuditorEmailAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtAuditorEmail";
                    this.mUIAuditorEmailAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtAuditorEmail";
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Auditor Email Address";
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtAuditorEmail cla";
                    this.mUIAuditorEmailAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "97";
                    this.mUIAuditorEmailAddressEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIAuditorEmailAddressEdit;
            }
        }
        
        public HtmlEdit UIErrorSubmitEmailAddrEdit
        {
            get
            {
                if ((this.mUIErrorSubmitEmailAddrEdit == null))
                {
                    this.mUIErrorSubmitEmailAddrEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIErrorSubmitEmailAddrEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtErrorEmailSubmitAddress";
                    this.mUIErrorSubmitEmailAddrEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtErrorEmailSubmitAddress";
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Error Submit Email Address";
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtErrorEmailSubmit";
                    this.mUIErrorSubmitEmailAddrEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "98";
                    this.mUIErrorSubmitEmailAddrEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIErrorSubmitEmailAddrEdit;
            }
        }
        
        public HtmlEdit UIErrorSubmitFromEmailEdit
        {
            get
            {
                if ((this.mUIErrorSubmitFromEmailEdit == null))
                {
                    this.mUIErrorSubmitFromEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIErrorSubmitFromEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtErrorSubmitFromAddress";
                    this.mUIErrorSubmitFromEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtErrorSubmitFromAddress";
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Error Submit From Email Address";
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtErrorSubmitFromA";
                    this.mUIErrorSubmitFromEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "99";
                    this.mUIErrorSubmitFromEmailEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIErrorSubmitFromEmailEdit;
            }
        }
        
        public HtmlEdit UIEmailAdministratorAdEdit
        {
            get
            {
                if ((this.mUIEmailAdministratorAdEdit == null))
                {
                    this.mUIEmailAdministratorAdEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailAdministratorAdEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtEmailAdministrator";
                    this.mUIEmailAdministratorAdEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtEmailAdministrator";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email Administrator Address";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtEmailAdministrat";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "100";
                    this.mUIEmailAdministratorAdEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailAdministratorAdEdit;
            }
        }
        
        public HtmlComboBox UIMainAdministratorComboBox
        {
            get
            {
                if ((this.mUIMainAdministratorComboBox == null))
                {
                    this.mUIMainAdministratorComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIMainAdministratorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Main Administrator";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "858";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlMainAdministrato";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUIMainAdministratorComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMainAdministratorComboBox;
            }
        }
        
        public HtmlComboBox UIMainAdministratorComboBox1
        {
            get
            {
                if ((this.mUIMainAdministratorComboBox1 == null))
                {
                    this.mUIMainAdministratorComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIMainAdministratorComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Main Administrator";
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "859";
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlMainAdministrato";
                    this.mUIMainAdministratorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUIMainAdministratorComboBox1.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMainAdministratorComboBox1;
            }
        }
        
        public HtmlComboBox UIDefaultCountryComboBox
        {
            get
            {
                if ((this.mUIDefaultCountryComboBox == null))
                {
                    this.mUIDefaultCountryComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultCountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlDefaultCountry";
                    this.mUIDefaultCountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlDefaultCountry";
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Country";
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "68";
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlDefaultCountry n";
                    this.mUIDefaultCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "8";
                    this.mUIDefaultCountryComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultCountryComboBox;
            }
        }
        
        public HtmlComboBox UIBaseCurrencyComboBox
        {
            get
            {
                if ((this.mUIBaseCurrencyComboBox == null))
                {
                    this.mUIBaseCurrencyComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIBaseCurrencyComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlBaseCurrency";
                    this.mUIBaseCurrencyComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlBaseCurrency";
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Base Currency";
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "37";
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlBaseCurrency nam";
                    this.mUIBaseCurrencyComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "9";
                    this.mUIBaseCurrencyComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIBaseCurrencyComboBox;
            }
        }
        
        public HtmlComboBox UIDefaultLanguageComboBox
        {
            get
            {
                if ((this.mUIDefaultLanguageComboBox == null))
                {
                    this.mUIDefaultLanguageComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultLanguageComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlDefaultLanguage";
                    this.mUIDefaultLanguageComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlDefaultLanguage";
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Language";
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlDefaultLanguage ";
                    this.mUIDefaultLanguageComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "10";
                    this.mUIDefaultLanguageComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultLanguageComboBox;
            }
        }
        
        public HtmlComboBox UIDefaultLocaleComboBox
        {
            get
            {
                if ((this.mUIDefaultLocaleComboBox == null))
                {
                    this.mUIDefaultLocaleComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultLocaleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlDefaultLocale";
                    this.mUIDefaultLocaleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlDefaultLocale";
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Locale";
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlDefaultLocale na";
                    this.mUIDefaultLocaleComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "11";
                    this.mUIDefaultLocaleComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultLocaleComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGeneralOptionsHyperlink;
        
        private HtmlSpan mUIGeneralDetailsPane;
        
        private HtmlHyperlink mUIGeneralOptionsHyperlink1;
        
        private HtmlSpan mUIContractsPane;
        
        private HtmlSpan mUIInvoicesPane;
        
        private HtmlSpan mUISuppliersPane;
        
        private HtmlHyperlink mUIEmailServerHyperlink;
        
        private HtmlHyperlink mUIMainAdministratorHyperlink;
        
        private HtmlHyperlink mUIRegionalSettingsHyperlink;
        
        private HtmlHyperlink mUIPasswordSettingsHyperlink;
        
        private HtmlInputButton mUICtl00contentmainbtnCButton;
        
        private HtmlInputButton mUICtl00contentmainbtnSButton;
        
        private HtmlCheckBox mUploadAttachmentsEnabledCheckBox;
        
        private HtmlCheckBox mHyperlinkAttachmentsEnabledCheckBox;
        
        private HtmlCheckBox mFlashingNotesIconCheckBox;
        
        private HtmlCheckBox mShowProductInHomePageSearchCheckBox;
        
        private HtmlCheckBox mEmployeesMayEditOwnDetailsCheckBox;
        
        private HtmlCheckBox mAutoUpdateProductLicenceTotalsCheckBox;
        
        private HtmlCheckBox mTaskDueDateMandatoryCheckBox;
        
        private HtmlCheckBox mTaskStartDateMandatoryCheckBox;
        
        private HtmlCheckBox mTaskEndDateMandatoryCheckBox;
        
        private HtmlComboBox mUILinkAttachmentDefaulComboBox;
        
        private HtmlComboBox mUIFinancialYearStartsComboBox;
        
        private HtmlComboBox mUIFinancialYearEndsComboBox;
        
        private HtmlEdit mUIMaxFileUploadSizeKbyEdit;
        
        private HtmlEdit mUIDefaultReportPageSizEdit;
        
        private HtmlEdit mUITaskEscalationRepeatEdit;
        
        private HtmlCheckBox mFWContractsContractContractCatMandatoryCB;
        
        private HtmlCheckBox mFWContractsContractContractDatesCB;
        
        private HtmlCheckBox mFWContractsContractAutoGenConNumCB;
        
        private HtmlCheckBox mFWContractsContractAutoUpdateAnnualConValCB;
        
        private HtmlCheckBox mFWContractsContractInvoiceFrequencyActiveCB;
        
        private HtmlCheckBox mFWContractsContractTermTypeFieldCB;
        
        private HtmlCheckBox mFWContractsContractInflatorActiveCB;
        
        private HtmlCheckBox mFWContractsContractAutoGenUpdatableCB;
        
        private HtmlCheckBox mFWContractsContractAllowNotesInArchivedCB;
        
        private HtmlCheckBox mFWContractsContractAutoSequenceVaritionsCB;
        
        private HtmlEdit mUIContractKeyPrefixEdit;
        
        private HtmlEdit mUIContractDescriptionTEdit;
        
        private HtmlEdit mUIContractCategoryTitlEdit;
        
        private HtmlEdit mUIPenaltyClauseTitleEdit;
        
        private HtmlEdit mUIAbbreviatedContractDEdit;
        
        private HtmlEdit mUIContractScheduleDefaEdit;
        
        private HtmlEdit mUICurrentContractNumbeEdit;
        
        private HtmlCheckBox mFWInvoicesKeepInvoiceForecastCB;
        
        private HtmlCheckBox mFWInvoicesAutoPONumbersCB;
        
        private HtmlEdit mUIPONumberFormatEdit;
        
        private HtmlEdit mUICurrentPOSequenceNumEdit;
        
        private HtmlEdit mUIEmailServerEdit;
        
        private HtmlEdit mUIEmailFromAddressEdit;
        
        private HtmlEdit mUIAuditorEmailAddressEdit;
        
        private HtmlEdit mUIErrorSubmitEmailAddrEdit;
        
        private HtmlEdit mUIErrorSubmitFromEmailEdit;
        
        private HtmlEdit mUIEmailAdministratorAdEdit;
        
        private HtmlComboBox mUIMainAdministratorComboBox;
        
        private HtmlComboBox mUIMainAdministratorComboBox1;
        
        private HtmlComboBox mUIDefaultCountryComboBox;
        
        private HtmlComboBox mUIBaseCurrencyComboBox;
        
        private HtmlComboBox mUIDefaultLanguageComboBox;
        
        private HtmlComboBox mUIDefaultLocaleComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument1 : HtmlDocument
    {
        
        public UIGeneralOptionsDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://fwtest.sel-expenses.com/shared/admin/accountOptions.aspx";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIUploadAttachmentsEnaCheckBox
        {
            get
            {
                if ((this.mUIUploadAttachmentsEnaCheckBox == null))
                {
                    this.mUIUploadAttachmentsEnaCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIUploadAttachmentsEnaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkUploadAttachmentEnabled";
                    this.mUIUploadAttachmentsEnaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkUploadAttachmentEnabled";
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Upload Attachments Enabled?";
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIUploadAttachmentsEnaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "48";
                    this.mUIUploadAttachmentsEnaCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIUploadAttachmentsEnaCheckBox;
            }
        }
        
        public HtmlCheckBox UIHyperlinkAttachmentsCheckBox
        {
            get
            {
                if ((this.mUIHyperlinkAttachmentsCheckBox == null))
                {
                    this.mUIHyperlinkAttachmentsCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIHyperlinkAttachmentsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkHyperlinkAttachmentsEnabled";
                    this.mUIHyperlinkAttachmentsCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkHyperlinkAttachmentsEnabled";
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Hyperlink Attachments Enabled?";
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIHyperlinkAttachmentsCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "49";
                    this.mUIHyperlinkAttachmentsCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIHyperlinkAttachmentsCheckBox;
            }
        }
        
        public HtmlCheckBox UIFlashingNotesIconCheckBox
        {
            get
            {
                if ((this.mUIFlashingNotesIconCheckBox == null))
                {
                    this.mUIFlashingNotesIconCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIFlashingNotesIconCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkNotesIconFlash";
                    this.mUIFlashingNotesIconCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkNotesIconFlash";
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Flashing Notes Icon?";
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIFlashingNotesIconCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "51";
                    this.mUIFlashingNotesIconCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIFlashingNotesIconCheckBox;
            }
        }
        
        public HtmlCheckBox UIShowProductinHomePagCheckBox
        {
            get
            {
                if ((this.mUIShowProductinHomePagCheckBox == null))
                {
                    this.mUIShowProductinHomePagCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIShowProductinHomePagCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkShowProductInSearch";
                    this.mUIShowProductinHomePagCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkShowProductInSearch";
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Show Product in Home Page Search Results";
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIShowProductinHomePagCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "52";
                    this.mUIShowProductinHomePagCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIShowProductinHomePagCheckBox;
            }
        }
        
        public HtmlCheckBox UIEmployeesmayedittheiCheckBox
        {
            get
            {
                if ((this.mUIEmployeesmayedittheiCheckBox == null))
                {
                    this.mUIEmployeesmayedittheiCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIEmployeesmayedittheiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkfwEditMyDetails";
                    this.mUIEmployeesmayedittheiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkfwEditMyDetails";
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employees may edit their own personal details";
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIEmployeesmayedittheiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "54";
                    this.mUIEmployeesmayedittheiCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmployeesmayedittheiCheckBox;
            }
        }
        
        public HtmlCheckBox UIAutoUpdateProductLicCheckBox
        {
            get
            {
                if ((this.mUIAutoUpdateProductLicCheckBox == null))
                {
                    this.mUIAutoUpdateProductLicCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIAutoUpdateProductLicCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkAutoUpdateLicenceTotal";
                    this.mUIAutoUpdateProductLicCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkAutoUpdateLicenceTotal";
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Auto Update Product Licence Totals";
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIAutoUpdateProductLicCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "55";
                    this.mUIAutoUpdateProductLicCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIAutoUpdateProductLicCheckBox;
            }
        }
        
        public HtmlCheckBox UITaskDueDateMandatoryCheckBox
        {
            get
            {
                if ((this.mUITaskDueDateMandatoryCheckBox == null))
                {
                    this.mUITaskDueDateMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUITaskDueDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskDueDateMandatory";
                    this.mUITaskDueDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskDueDateMandatory";
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task Due Date Mandatory?";
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUITaskDueDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "56";
                    this.mUITaskDueDateMandatoryCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUITaskDueDateMandatoryCheckBox;
            }
        }
        
        public HtmlCheckBox UITaskStartDateMandatoCheckBox
        {
            get
            {
                if ((this.mUITaskStartDateMandatoCheckBox == null))
                {
                    this.mUITaskStartDateMandatoCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUITaskStartDateMandatoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskStartDateMandatory";
                    this.mUITaskStartDateMandatoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskStartDateMandatory";
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task Start Date Mandatory?";
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUITaskStartDateMandatoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "57";
                    this.mUITaskStartDateMandatoCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUITaskStartDateMandatoCheckBox;
            }
        }
        
        public HtmlCheckBox UITaskEndDateMandatoryCheckBox
        {
            get
            {
                if ((this.mUITaskEndDateMandatoryCheckBox == null))
                {
                    this.mUITaskEndDateMandatoryCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUITaskEndDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabFWGeneral_chkTaskEndDateMandatory";
                    this.mUITaskEndDateMandatoryCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabFWGeneral$chkTaskEndDateMandatory";
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Task End Date Mandatory?";
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUITaskEndDateMandatoryCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "58";
                    this.mUITaskEndDateMandatoryCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUITaskEndDateMandatoryCheckBox;
            }
        }
        
        public HtmlCheckBox FWSuppliersTurnoverCB
        {
            get
            {
                if ((this.mFWSuppliersTurnoverCB == null))
                {
                    this.mFWSuppliersTurnoverCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersTurnoverCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkSupplierTurnoverEnabled";
                    this.mFWSuppliersTurnoverCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkSupplierTurnoverEnabled";
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Supplier Turnover Enabled?";
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersTurnoverCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "87";
                    this.mFWSuppliersTurnoverCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersTurnoverCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersFinancialCheckCB
        {
            get
            {
                if ((this.mFWSuppliersFinancialCheckCB == null))
                {
                    this.mFWSuppliersFinancialCheckCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersFinancialCheckCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkLastFinCheckEnabled";
                    this.mFWSuppliersFinancialCheckCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkLastFinCheckEnabled";
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Last Financial Check Enabled?";
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersFinancialCheckCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "89";
                    this.mFWSuppliersFinancialCheckCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersFinancialCheckCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersContractFieldCB
        {
            get
            {
                if ((this.mFWSuppliersContractFieldCB == null))
                {
                    this.mFWSuppliersContractFieldCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersContractFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkIntContactEnabled";
                    this.mFWSuppliersContractFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkIntContactEnabled";
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Internal Contact Field Enabled?";
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersContractFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "91";
                    this.mFWSuppliersContractFieldCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersContractFieldCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersCategoryMandatoryCB
        {
            get
            {
                if ((this.mFWSuppliersCategoryMandatoryCB == null))
                {
                    this.mFWSuppliersCategoryMandatoryCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersCategoryMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkSupplierCategoryMandatory";
                    this.mFWSuppliersCategoryMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkSupplierCategoryMandatory";
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Supplier Category Mandatory?";
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersCategoryMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "84";
                    this.mFWSuppliersCategoryMandatoryCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersCategoryMandatoryCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersStatusMandatoryCB
        {
            get
            {
                if ((this.mFWSuppliersStatusMandatoryCB == null))
                {
                    this.mFWSuppliersStatusMandatoryCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersStatusMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkSupplierStatusMandatory";
                    this.mFWSuppliersStatusMandatoryCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkSupplierStatusMandatory";
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Supplier Status Mandatory?";
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersStatusMandatoryCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "86";
                    this.mFWSuppliersStatusMandatoryCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersStatusMandatoryCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersNumberEmployeesFieldCB
        {
            get
            {
                if ((this.mFWSuppliersNumberEmployeesFieldCB == null))
                {
                    this.mFWSuppliersNumberEmployeesFieldCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersNumberEmployeesFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkSupplierNumEmployeesEnabled";
                    this.mFWSuppliersNumberEmployeesFieldCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkSupplierNumEmployeesEnabled";
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Supplier Number Employees Field Enabled?";
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersNumberEmployeesFieldCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "88";
                    this.mFWSuppliersNumberEmployeesFieldCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersNumberEmployeesFieldCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersFinancialStatusCB
        {
            get
            {
                if ((this.mFWSuppliersFinancialStatusCB == null))
                {
                    this.mFWSuppliersFinancialStatusCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersFinancialStatusCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkLastFinStatusEnabled";
                    this.mFWSuppliersFinancialStatusCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkLastFinStatusEnabled";
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Last Financial Status Enabled?";
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersFinancialStatusCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "90";
                    this.mFWSuppliersFinancialStatusCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersFinancialStatusCB;
            }
        }
        
        public HtmlCheckBox FWSuppliersFinancialYearEndCB
        {
            get
            {
                if ((this.mFWSuppliersFinancialYearEndCB == null))
                {
                    this.mFWSuppliersFinancialYearEndCB = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mFWSuppliersFinancialYearEndCB.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_chkFYEEnabled";
                    this.mFWSuppliersFinancialYearEndCB.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$chkFYEEnabled";
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Financial Year End Enabled?";
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mFWSuppliersFinancialYearEndCB.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "92";
                    this.mFWSuppliersFinancialYearEndCB.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mFWSuppliersFinancialYearEndCB;
            }
        }
        
        public HtmlEdit UISupplierTitleEdit
        {
            get
            {
                if ((this.mUISupplierTitleEdit == null))
                {
                    this.mUISupplierTitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISupplierTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_txtSupplierPrimaryTitle";
                    this.mUISupplierTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$txtSupplierPrimaryTitle";
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Supplier Title";
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUISupplierTitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "81";
                    this.mUISupplierTitleEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISupplierTitleEdit;
            }
        }
        
        public HtmlEdit UISupplierRegionTitleEdit
        {
            get
            {
                if ((this.mUISupplierRegionTitleEdit == null))
                {
                    this.mUISupplierRegionTitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISupplierRegionTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_txtSupplierRegionTitle";
                    this.mUISupplierRegionTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$txtSupplierRegionTitle";
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Supplier Region Title";
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUISupplierRegionTitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "82";
                    this.mUISupplierRegionTitleEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISupplierRegionTitleEdit;
            }
        }
        
        public HtmlEdit UISupplierCategoryTitlEdit
        {
            get
            {
                if ((this.mUISupplierCategoryTitlEdit == null))
                {
                    this.mUISupplierCategoryTitlEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISupplierCategoryTitlEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_txtSupplierCategoryTitle";
                    this.mUISupplierCategoryTitlEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$txtSupplierCategoryTitle";
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Supplier Category Title";
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUISupplierCategoryTitlEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "83";
                    this.mUISupplierCategoryTitlEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISupplierCategoryTitlEdit;
            }
        }
        
        public HtmlEdit UISupplierVariationTitEdit
        {
            get
            {
                if ((this.mUISupplierVariationTitEdit == null))
                {
                    this.mUISupplierVariationTitEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISupplierVariationTitEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSupplier_txtSupplierVariationTitle";
                    this.mUISupplierVariationTitEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSupplier$txtSupplierVariationTitle";
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Supplier Variation Title";
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUISupplierVariationTitEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "85";
                    this.mUISupplierVariationTitEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISupplierVariationTitEdit;
            }
        }
        
        public HtmlComboBox UIMainAdministratorComboBox
        {
            get
            {
                if ((this.mUIMainAdministratorComboBox == null))
                {
                    this.mUIMainAdministratorComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIMainAdministratorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlMainAdministrator";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Main Administrator";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "82";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlMainAdministrato";
                    this.mUIMainAdministratorComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "7";
                    this.mUIMainAdministratorComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMainAdministratorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIUploadAttachmentsEnaCheckBox;
        
        private HtmlCheckBox mUIHyperlinkAttachmentsCheckBox;
        
        private HtmlCheckBox mUIFlashingNotesIconCheckBox;
        
        private HtmlCheckBox mUIShowProductinHomePagCheckBox;
        
        private HtmlCheckBox mUIEmployeesmayedittheiCheckBox;
        
        private HtmlCheckBox mUIAutoUpdateProductLicCheckBox;
        
        private HtmlCheckBox mUITaskDueDateMandatoryCheckBox;
        
        private HtmlCheckBox mUITaskStartDateMandatoCheckBox;
        
        private HtmlCheckBox mUITaskEndDateMandatoryCheckBox;
        
        private HtmlCheckBox mFWSuppliersTurnoverCB;
        
        private HtmlCheckBox mFWSuppliersFinancialCheckCB;
        
        private HtmlCheckBox mFWSuppliersContractFieldCB;
        
        private HtmlCheckBox mFWSuppliersCategoryMandatoryCB;
        
        private HtmlCheckBox mFWSuppliersStatusMandatoryCB;
        
        private HtmlCheckBox mFWSuppliersNumberEmployeesFieldCB;
        
        private HtmlCheckBox mFWSuppliersFinancialStatusCB;
        
        private HtmlCheckBox mFWSuppliersFinancialYearEndCB;
        
        private HtmlEdit mUISupplierTitleEdit;
        
        private HtmlEdit mUISupplierRegionTitleEdit;
        
        private HtmlEdit mUISupplierCategoryTitlEdit;
        
        private HtmlEdit mUISupplierVariationTitEdit;
        
        private HtmlComboBox mUIMainAdministratorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument2 : HtmlDocument
    {
        
        public UIGeneralOptionsDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://testing.sel-expenses.com/shared/admin/accountOptions.aspx";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailServerEdit
        {
            get
            {
                if ((this.mUIEmailServerEdit == null))
                {
                    this.mUIEmailServerEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailServerEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtEmailServer";
                    this.mUIEmailServerEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtEmailServer";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email Server";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtEmailServer clas";
                    this.mUIEmailServerEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "93";
                    this.mUIEmailServerEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailServerEdit;
            }
        }
        
        public HtmlEdit UIEmailAdministratorAdEdit
        {
            get
            {
                if ((this.mUIEmailAdministratorAdEdit == null))
                {
                    this.mUIEmailAdministratorAdEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailAdministratorAdEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtEmailAdministrator";
                    this.mUIEmailAdministratorAdEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtEmailAdministrator";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email Administrator Address";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtEmailAdministrat";
                    this.mUIEmailAdministratorAdEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "100";
                    this.mUIEmailAdministratorAdEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEmailAdministratorAdEdit;
            }
        }
        
        public HtmlRadioButton UIExpensesServerRadioButton
        {
            get
            {
                if ((this.mUIExpensesServerRadioButton == null))
                {
                    this.mUIExpensesServerRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIExpensesServerRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_optserver";
                    this.mUIExpensesServerRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$source";
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optserver";
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Expenses Server";
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_optserver value=opt";
                    this.mUIExpensesServerRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "94";
                    this.mUIExpensesServerRadioButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIExpensesServerRadioButton;
            }
        }
        
        public HtmlRadioButton UIClaimantsEmailAddresRadioButton
        {
            get
            {
                if ((this.mUIClaimantsEmailAddresRadioButton == null))
                {
                    this.mUIClaimantsEmailAddresRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIClaimantsEmailAddresRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_optclaimant";
                    this.mUIClaimantsEmailAddresRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$source";
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optclaimant";
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Claimant\'s E-mail Address";
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_optclaimant value=o";
                    this.mUIClaimantsEmailAddresRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "95";
                    this.mUIClaimantsEmailAddresRadioButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIClaimantsEmailAddresRadioButton;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsHotelReviews
        {
            get
            {
                if ((this.mEXGeneralDetailsHotelReviews == null))
                {
                    this.mEXGeneralDetailsHotelReviews = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsHotelReviews.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkshowreviews";
                    this.mEXGeneralDetailsHotelReviews.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkshowreviews";
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Hotel Reviews";
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "7";
                    this.mEXGeneralDetailsHotelReviews.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsHotelReviews;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsEmployeeDirectory
        {
            get
            {
                if ((this.mEXGeneralDetailsEmployeeDirectory == null))
                {
                    this.mEXGeneralDetailsEmployeeDirectory = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsEmployeeDirectory.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chksearchemployees";
                    this.mEXGeneralDetailsEmployeeDirectory.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chksearchemployees";
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employee Directory";
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsEmployeeDirectory.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "9";
                    this.mEXGeneralDetailsEmployeeDirectory.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsEmployeeDirectory;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsDisplayBankDetails
        {
            get
            {
                if ((this.mEXGeneralDetailsDisplayBankDetails == null))
                {
                    this.mEXGeneralDetailsDisplayBankDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsDisplayBankDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkshowbankdetails";
                    this.mEXGeneralDetailsDisplayBankDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkshowbankdetails";
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display claimant\'s bank details in \"My Details\"";
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsDisplayBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mEXGeneralDetailsDisplayBankDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsDisplayBankDetails;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsApproveOwnClaims
        {
            get
            {
                if ((this.mEXGeneralDetailsApproveOwnClaims == null))
                {
                    this.mEXGeneralDetailsApproveOwnClaims = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsApproveOwnClaims.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkTeamMemberApproveOwnClaims";
                    this.mEXGeneralDetailsApproveOwnClaims.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkTeamMemberApproveOwnClaims";
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow team members to allocate and approve own claims";
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsApproveOwnClaims.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "13";
                    this.mEXGeneralDetailsApproveOwnClaims.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsApproveOwnClaims;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsEmailHotelReviews
        {
            get
            {
                if ((this.mEXGeneralDetailsEmailHotelReviews == null))
                {
                    this.mEXGeneralDetailsEmailHotelReviews = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsEmailHotelReviews.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chksendreviewrequest";
                    this.mEXGeneralDetailsEmailHotelReviews.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chksendreviewrequest";
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Email claimants for hotel reviews";
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsEmailHotelReviews.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "8";
                    this.mEXGeneralDetailsEmailHotelReviews.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsEmailHotelReviews;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsEnterPreApprovedClaims
        {
            get
            {
                if ((this.mEXGeneralDetailsEnterPreApprovedClaims == null))
                {
                    this.mEXGeneralDetailsEnterPreApprovedClaims = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsEnterPreApprovedClaims.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkpreapproval";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkpreapproval";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants can enter pre approval claims";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "10";
                    this.mEXGeneralDetailsEnterPreApprovedClaims.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsEnterPreApprovedClaims;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsEditOwnDetails
        {
            get
            {
                if ((this.mEXGeneralDetailsEditOwnDetails == null))
                {
                    this.mEXGeneralDetailsEditOwnDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsEditOwnDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkeditmydetails";
                    this.mEXGeneralDetailsEditOwnDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkeditmydetails";
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants may edit their own personal details";
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsEditOwnDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "12";
                    this.mEXGeneralDetailsEditOwnDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsEditOwnDetails;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsClaimantsRequiredOdoReadings
        {
            get
            {
                if ((this.mEXGeneralDetailsClaimantsRequiredOdoReadings == null))
                {
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkrecordodometer";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkrecordodometer";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Relevant claimants required to record odometer readings";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "14";
                    this.mEXGeneralDetailsClaimantsRequiredOdoReadings.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsClaimantsRequiredOdoReadings;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsClaimsPartSubmitted
        {
            get
            {
                if ((this.mEXGeneralDetailsClaimsPartSubmitted == null))
                {
                    this.mEXGeneralDetailsClaimsPartSubmitted = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsClaimsPartSubmitted.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkpartsubmittal";
                    this.mEXGeneralDetailsClaimsPartSubmitted.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkpartsubmittal";
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claims can be part submitted";
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsClaimsPartSubmitted.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "18";
                    this.mEXGeneralDetailsClaimsPartSubmitted.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsClaimsPartSubmitted;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsCashCreditCardItems
        {
            get
            {
                if ((this.mEXGeneralDetailsCashCreditCardItems == null))
                {
                    this.mEXGeneralDetailsCashCreditCardItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsCashCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkonlycashcredit";
                    this.mEXGeneralDetailsCashCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkonlycashcredit";
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Cash and Credit Card items cannot be on the same claim";
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsCashCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "19";
                    this.mEXGeneralDetailsCashCreditCardItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsCashCreditCardItems;
            }
        }
        
        public HtmlCheckBox EXSelfRegAllowSelfReg
        {
            get
            {
                if ((this.mEXSelfRegAllowSelfReg == null))
                {
                    this.mEXSelfRegAllowSelfReg = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegAllowSelfReg.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkallowselfreg";
                    this.mEXSelfRegAllowSelfReg.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkallowselfreg";
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow Self Registration";
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegAllowSelfReg.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "22";
                    this.mEXSelfRegAllowSelfReg.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegAllowSelfReg;
            }
        }
        
        public HtmlCheckBox EXSelfRegHomeAddressDetails
        {
            get
            {
                if ((this.mEXSelfRegHomeAddressDetails == null))
                {
                    this.mEXSelfRegHomeAddressDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegHomeAddressDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfreghomaddr";
                    this.mEXSelfRegHomeAddressDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfreghomaddr";
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Home Address/Contact Details";
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegHomeAddressDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "24";
                    this.mEXSelfRegHomeAddressDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegHomeAddressDetails;
            }
        }
        
        public HtmlCheckBox EXSelfRegRole
        {
            get
            {
                if ((this.mEXSelfRegRole == null))
                {
                    this.mEXSelfRegRole = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegRole.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregrole";
                    this.mEXSelfRegRole.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregrole";
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Role";
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegRole.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "26";
                    this.mEXSelfRegRole.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegRole;
            }
        }
        
        public HtmlCheckBox EXSelfRegSignoffGroup
        {
            get
            {
                if ((this.mEXSelfRegSignoffGroup == null))
                {
                    this.mEXSelfRegSignoffGroup = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegSignoffGroup.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregsignoff";
                    this.mEXSelfRegSignoffGroup.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregsignoff";
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Signoff Group";
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "28";
                    this.mEXSelfRegSignoffGroup.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegSignoffGroup;
            }
        }
        
        public HtmlCheckBox EXSelfRegDefaultDepartment
        {
            get
            {
                if ((this.mEXSelfRegDefaultDepartment == null))
                {
                    this.mEXSelfRegDefaultDepartment = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegDefaultDepartment.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregdepcostcode";
                    this.mEXSelfRegDefaultDepartment.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregdepcostcode";
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Default Department/Cost Code";
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegDefaultDepartment.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "30";
                    this.mEXSelfRegDefaultDepartment.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegDefaultDepartment;
            }
        }
        
        public HtmlCheckBox EXSelfRegCarDetails
        {
            get
            {
                if ((this.mEXSelfRegCarDetails == null))
                {
                    this.mEXSelfRegCarDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegCarDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregcardetails";
                    this.mEXSelfRegCarDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregcardetails";
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Car Details";
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegCarDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "32";
                    this.mEXSelfRegCarDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegCarDetails;
            }
        }
        
        public HtmlCheckBox EXSelfRegEmployeeContactDetails
        {
            get
            {
                if ((this.mEXSelfRegEmployeeContactDetails == null))
                {
                    this.mEXSelfRegEmployeeContactDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegEmployeeContactDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregempconact";
                    this.mEXSelfRegEmployeeContactDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregempconact";
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employment Contact Details";
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegEmployeeContactDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "23";
                    this.mEXSelfRegEmployeeContactDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegEmployeeContactDetails;
            }
        }
        
        public HtmlCheckBox EXSelfRegEmployeeInformation
        {
            get
            {
                if ((this.mEXSelfRegEmployeeInformation == null))
                {
                    this.mEXSelfRegEmployeeInformation = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegEmployeeInformation.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregempinfo";
                    this.mEXSelfRegEmployeeInformation.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregempinfo";
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employment Information";
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegEmployeeInformation.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "25";
                    this.mEXSelfRegEmployeeInformation.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegEmployeeInformation;
            }
        }
        
        public HtmlCheckBox EXSelfRegItemRole
        {
            get
            {
                if ((this.mEXSelfRegItemRole == null))
                {
                    this.mEXSelfRegItemRole = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegItemRole.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregitemrole";
                    this.mEXSelfRegItemRole.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregitemrole";
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Item Role";
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegItemRole.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "27";
                    this.mEXSelfRegItemRole.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegItemRole;
            }
        }
        
        public HtmlCheckBox EXSelfRegAdvancesSignoffGroup
        {
            get
            {
                if ((this.mEXSelfRegAdvancesSignoffGroup == null))
                {
                    this.mEXSelfRegAdvancesSignoffGroup = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegAdvancesSignoffGroup.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregadvancessignof" +
                        "f";
                    this.mEXSelfRegAdvancesSignoffGroup.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregadvancessignof" +
                        "f";
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Advances Signoff Group";
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegAdvancesSignoffGroup.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "29";
                    this.mEXSelfRegAdvancesSignoffGroup.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegAdvancesSignoffGroup;
            }
        }
        
        public HtmlCheckBox EXSelfRegBankDetails
        {
            get
            {
                if ((this.mEXSelfRegBankDetails == null))
                {
                    this.mEXSelfRegBankDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegBankDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregbankdetails";
                    this.mEXSelfRegBankDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregbankdetails";
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Bank Details";
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegBankDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "31";
                    this.mEXSelfRegBankDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegBankDetails;
            }
        }
        
        public HtmlCheckBox EXSelfRegAdditionalUDFs
        {
            get
            {
                if ((this.mEXSelfRegAdditionalUDFs == null))
                {
                    this.mEXSelfRegAdditionalUDFs = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXSelfRegAdditionalUDFs.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_chkselfregudf";
                    this.mEXSelfRegAdditionalUDFs.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$chkselfregudf";
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Additional User Defined Fields";
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXSelfRegAdditionalUDFs.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "33";
                    this.mEXSelfRegAdditionalUDFs.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXSelfRegAdditionalUDFs;
            }
        }
        
        public HtmlCheckBox EXDelegatesModifyCats
        {
            get
            {
                if ((this.mEXDelegatesModifyCats == null))
                {
                    this.mEXDelegatesModifyCats = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesModifyCats.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelsetup";
                    this.mEXDelegatesModifyCats.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelsetup";
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Modify categories and system options";
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesModifyCats.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "34";
                    this.mEXDelegatesModifyCats.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesModifyCats;
            }
        }
        
        public HtmlCheckBox EXDelegatesLogontoOthersAccounts
        {
            get
            {
                if ((this.mEXDelegatesLogontoOthersAccounts == null))
                {
                    this.mEXDelegatesLogontoOthersAccounts = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesLogontoOthersAccounts.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkemployeeaccounts";
                    this.mEXDelegatesLogontoOthersAccounts.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkemployeeaccounts";
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Logon to other employee accounts";
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesLogontoOthersAccounts.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "36";
                    this.mEXDelegatesLogontoOthersAccounts.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesLogontoOthersAccounts;
            }
        }
        
        public HtmlCheckBox EXDelegatesViewReadOnlyReports
        {
            get
            {
                if ((this.mEXDelegatesViewReadOnlyReports == null))
                {
                    this.mEXDelegatesViewReadOnlyReports = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesViewReadOnlyReports.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelreportsreadonly";
                    this.mEXDelegatesViewReadOnlyReports.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelreportsreadonly";
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "View read only reports";
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesViewReadOnlyReports.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "38";
                    this.mEXDelegatesViewReadOnlyReports.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesViewReadOnlyReports;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedQuickEditDesign
        {
            get
            {
                if ((this.mEXDelUpdatedQuickEditDesign == null))
                {
                    this.mEXDelUpdatedQuickEditDesign = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedQuickEditDesign.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelqedesign";
                    this.mEXDelUpdatedQuickEditDesign.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelqedesign";
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Quick Edit Design";
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedQuickEditDesign.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "40";
                    this.mEXDelUpdatedQuickEditDesign.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedQuickEditDesign;
            }
        }
        
        public HtmlCheckBox EXDelegatesImportPurchaseCardStatements
        {
            get
            {
                if ((this.mEXDelegatesImportPurchaseCardStatements == null))
                {
                    this.mEXDelegatesImportPurchaseCardStatements = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesImportPurchaseCardStatements.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelpurchasecards";
                    this.mEXDelegatesImportPurchaseCardStatements.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelpurchasecards";
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Import Purchase Card statements";
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesImportPurchaseCardStatements.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "42";
                    this.mEXDelegatesImportPurchaseCardStatements.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesImportPurchaseCardStatements;
            }
        }
        
        public HtmlCheckBox EXDelegatesExportDataViewHistory
        {
            get
            {
                if ((this.mEXDelegatesExportDataViewHistory == null))
                {
                    this.mEXDelegatesExportDataViewHistory = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesExportDataViewHistory.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelexports";
                    this.mEXDelegatesExportDataViewHistory.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelexports";
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Export data and view export history";
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesExportDataViewHistory.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "44";
                    this.mEXDelegatesExportDataViewHistory.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesExportDataViewHistory;
            }
        }
        
        public HtmlCheckBox EXDelegatesCanSubmitClaims
        {
            get
            {
                if ((this.mEXDelegatesCanSubmitClaims == null))
                {
                    this.mEXDelegatesCanSubmitClaims = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesCanSubmitClaims.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkDelsSubmitClaims";
                    this.mEXDelegatesCanSubmitClaims.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkDelsSubmitClaims";
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Can submit claims";
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesCanSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "46";
                    this.mEXDelegatesCanSubmitClaims.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesCanSubmitClaims;
            }
        }
        
        public HtmlCheckBox EXDelegatesModifyEmployees
        {
            get
            {
                if ((this.mEXDelegatesModifyEmployees == null))
                {
                    this.mEXDelegatesModifyEmployees = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesModifyEmployees.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelemployeeadmin";
                    this.mEXDelegatesModifyEmployees.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelemployeeadmin";
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Modify employees, sign-off groups and roles";
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "35";
                    this.mEXDelegatesModifyEmployees.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesModifyEmployees;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedViewAdminReports
        {
            get
            {
                if ((this.mEXDelUpdatedViewAdminReports == null))
                {
                    this.mEXDelUpdatedViewAdminReports = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedViewAdminReports.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelreports";
                    this.mEXDelUpdatedViewAdminReports.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelreports";
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "View administrator reports";
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedViewAdminReports.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "37";
                    this.mEXDelUpdatedViewAdminReports.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedViewAdminReports;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedCheckandpayexpenses
        {
            get
            {
                if ((this.mEXDelUpdatedCheckandpayexpenses == null))
                {
                    this.mEXDelUpdatedCheckandpayexpenses = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedCheckandpayexpenses.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelcheckandpay";
                    this.mEXDelUpdatedCheckandpayexpenses.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelcheckandpay";
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Check and pay expenses";
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedCheckandpayexpenses.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "39";
                    this.mEXDelUpdatedCheckandpayexpenses.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedCheckandpayexpenses;
            }
        }
        
        public HtmlCheckBox EXDelegatesImportCreditCardStatement
        {
            get
            {
                if ((this.mEXDelegatesImportCreditCardStatement == null))
                {
                    this.mEXDelegatesImportCreditCardStatement = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesImportCreditCardStatement.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelcreditcard";
                    this.mEXDelegatesImportCreditCardStatement.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelcreditcard";
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Import Credit Card statements";
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesImportCreditCardStatement.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "41";
                    this.mEXDelegatesImportCreditCardStatement.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesImportCreditCardStatement;
            }
        }
        
        public HtmlCheckBox EXDelegatesManageApproveAdvance
        {
            get
            {
                if ((this.mEXDelegatesManageApproveAdvance == null))
                {
                    this.mEXDelegatesManageApproveAdvance = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesManageApproveAdvance.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelapprovals";
                    this.mEXDelegatesManageApproveAdvance.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelapprovals";
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Manage and approve advance requests";
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesManageApproveAdvance.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "43";
                    this.mEXDelegatesManageApproveAdvance.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesManageApproveAdvance;
            }
        }
        
        public HtmlCheckBox EXDelegatesSearchViewAuditLog
        {
            get
            {
                if ((this.mEXDelegatesSearchViewAuditLog == null))
                {
                    this.mEXDelegatesSearchViewAuditLog = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelegatesSearchViewAuditLog.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelauditlog";
                    this.mEXDelegatesSearchViewAuditLog.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelauditlog";
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Search and View the Audit Log";
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelegatesSearchViewAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "45";
                    this.mEXDelegatesSearchViewAuditLog.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelegatesSearchViewAuditLog;
            }
        }
        
        public HtmlCheckBox EXDeclarationElectronicDecl
        {
            get
            {
                if ((this.mEXDeclarationElectronicDecl == null))
                {
                    this.mEXDeclarationElectronicDecl = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDeclarationElectronicDecl.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDeclarations_chkclaimantdeclaration";
                    this.mEXDeclarationElectronicDecl.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDeclarations$chkclaimantdeclaration";
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Electronic Declaration";
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDeclarationElectronicDecl.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "47";
                    this.mEXDeclarationElectronicDecl.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDeclarationElectronicDecl;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationItemsAssignedCostCodes
        {
            get
            {
                if ((this.mEXCodeAllocationItemsAssignedCostCodes == null))
                {
                    this.mEXCodeAllocationItemsAssignedCostCodes = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationItemsAssignedCostCodes.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkcostcodeson";
                    this.mEXCodeAllocationItemsAssignedCostCodes.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkcostcodeson";
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Items should be assigned to cost codes";
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationItemsAssignedCostCodes.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "179";
                    this.mEXCodeAllocationItemsAssignedCostCodes.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationItemsAssignedCostCodes;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationClaimantsshouldbeshoCheckBox
        {
            get
            {
                if ((this.mEXCodeAllocationClaimantsshouldbeshoCheckBox == null))
                {
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkcostcodedesc";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkcostcodedesc";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown the cost code\'s description";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "181";
                    this.mEXCodeAllocationClaimantsshouldbeshoCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationClaimantsshouldbeshoCheckBox;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationItemsshouldbeassigneCheckBox
        {
            get
            {
                if ((this.mEXCodeAllocationItemsshouldbeassigneCheckBox == null))
                {
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkdepartmentson";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkdepartmentson";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Items should be assigned to department codes";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "183";
                    this.mEXCodeAllocationItemsshouldbeassigneCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationItemsshouldbeassigneCheckBox;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationDepoDesc
        {
            get
            {
                if ((this.mEXCodeAllocationDepoDesc == null))
                {
                    this.mEXCodeAllocationDepoDesc = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationDepoDesc.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkdepartmentdesc";
                    this.mEXCodeAllocationDepoDesc.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkdepartmentdesc";
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown the department\'s description";
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationDepoDesc.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "185";
                    this.mEXCodeAllocationDepoDesc.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationDepoDesc;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationProjectcodes
        {
            get
            {
                if ((this.mEXCodeAllocationProjectcodes == null))
                {
                    this.mEXCodeAllocationProjectcodes = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationProjectcodes.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkprojectcodeson";
                    this.mEXCodeAllocationProjectcodes.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkprojectcodeson";
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Items should be assigned to project codes";
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationProjectcodes.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "187";
                    this.mEXCodeAllocationProjectcodes.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationProjectcodes;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationProjectCodesDesc
        {
            get
            {
                if ((this.mEXCodeAllocationProjectCodesDesc == null))
                {
                    this.mEXCodeAllocationProjectCodesDesc = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationProjectCodesDesc.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkprojectcodedesc";
                    this.mEXCodeAllocationProjectCodesDesc.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkprojectcodedesc";
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown the project code\'s description";
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationProjectCodesDesc.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "189";
                    this.mEXCodeAllocationProjectCodesDesc.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationProjectCodesDesc;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationUsedefaultallocationCheckBox
        {
            get
            {
                if ((this.mEXCodeAllocationUsedefaultallocationCheckBox == null))
                {
                    this.mEXCodeAllocationUsedefaultallocationCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkautoassignallocation";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkautoassignallocation";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Use default allocation if employee has none set";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "191";
                    this.mEXCodeAllocationUsedefaultallocationCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationUsedefaultallocationCheckBox;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationClaimantsCostCodeBreakdown
        {
            get
            {
                if ((this.mEXCodeAllocationClaimantsCostCodeBreakdown == null))
                {
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkcostcodes";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkcostcodes";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown their cost code breakdown";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "180";
                    this.mEXCodeAllocationClaimantsCostCodeBreakdown.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationClaimantsCostCodeBreakdown;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationCostCodesInGenDetails
        {
            get
            {
                if ((this.mEXCodeAllocationCostCodesInGenDetails == null))
                {
                    this.mEXCodeAllocationCostCodesInGenDetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationCostCodesInGenDetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkcostcodeongendet";
                    this.mEXCodeAllocationCostCodesInGenDetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkcostcodeongendet";
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Costcodes are shown in general details";
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationCostCodesInGenDetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "182";
                    this.mEXCodeAllocationCostCodesInGenDetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationCostCodesInGenDetails;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationClaimantsshowndeppobreakdown
        {
            get
            {
                if ((this.mEXCodeAllocationClaimantsshowndeppobreakdown == null))
                {
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkdepartment";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkdepartment";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown their department breakdown";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "184";
                    this.mEXCodeAllocationClaimantsshowndeppobreakdown.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationClaimantsshowndeppobreakdown;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationDepartmentsshowningendetails
        {
            get
            {
                if ((this.mEXCodeAllocationDepartmentsshowningendetails == null))
                {
                    this.mEXCodeAllocationDepartmentsshowningendetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationDepartmentsshowningendetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkdepartmentongendet";
                    this.mEXCodeAllocationDepartmentsshowningendetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkdepartmentongendet";
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Departments are shown in general details";
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationDepartmentsshowningendetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "186";
                    this.mEXCodeAllocationDepartmentsshowningendetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationDepartmentsshowningendetails;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationClaimantsshownprojectcode
        {
            get
            {
                if ((this.mEXCodeAllocationClaimantsshownprojectcode == null))
                {
                    this.mEXCodeAllocationClaimantsshownprojectcode = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationClaimantsshownprojectcode.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkprojectcodes";
                    this.mEXCodeAllocationClaimantsshownprojectcode.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkprojectcodes";
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants should be shown their project code breakdown";
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationClaimantsshownprojectcode.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "188";
                    this.mEXCodeAllocationClaimantsshownprojectcode.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationClaimantsshownprojectcode;
            }
        }
        
        public HtmlCheckBox EXCodeAllocationProjectcodesingendetails
        {
            get
            {
                if ((this.mEXCodeAllocationProjectcodesingendetails == null))
                {
                    this.mEXCodeAllocationProjectcodesingendetails = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXCodeAllocationProjectcodesingendetails.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabcodeallocation_chkprojectcodeongendet";
                    this.mEXCodeAllocationProjectcodesingendetails.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabcodeallocation$chkprojectcodeongendet";
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Project codes are shown in general details";
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXCodeAllocationProjectcodesingendetails.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "190";
                    this.mEXCodeAllocationProjectcodesingendetails.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXCodeAllocationProjectcodesingendetails;
            }
        }
        
        public HtmlCheckBox EXDutyofCareDrivingLicenceExpiryDate
        {
            get
            {
                if ((this.mEXDutyofCareDrivingLicenceExpiryDate == null))
                {
                    this.mEXDutyofCareDrivingLicenceExpiryDate = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDutyofCareDrivingLicenceExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabdutyofcare_chkblocklicenceexpiry";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabdutyofcare$chkblocklicenceexpiry";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Driving Licence Expiry Date";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "192";
                    this.mEXDutyofCareDrivingLicenceExpiryDate.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDutyofCareDrivingLicenceExpiryDate;
            }
        }
        
        public HtmlCheckBox EXDutyofCareMOTExpiry
        {
            get
            {
                if ((this.mEXDutyofCareMOTExpiry == null))
                {
                    this.mEXDutyofCareMOTExpiry = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDutyofCareMOTExpiry.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabdutyofcare_chkblockmotexpiry";
                    this.mEXDutyofCareMOTExpiry.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabdutyofcare$chkblockmotexpiry";
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "MOT Expiry Date";
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXDutyofCareMOTExpiry.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "194";
                    this.mEXDutyofCareMOTExpiry.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDutyofCareMOTExpiry;
            }
        }
        
        public HtmlCheckBox EXDutyofCareTaxExpiryDate
        {
            get
            {
                if ((this.mEXDutyofCareTaxExpiryDate == null))
                {
                    this.mEXDutyofCareTaxExpiryDate = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDutyofCareTaxExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabdutyofcare_chkblocktaxexpiry";
                    this.mEXDutyofCareTaxExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabdutyofcare$chkblocktaxexpiry";
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Tax Expiry Date";
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXDutyofCareTaxExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "193";
                    this.mEXDutyofCareTaxExpiryDate.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDutyofCareTaxExpiryDate;
            }
        }
        
        public HtmlCheckBox EXDutyofCareInsuranceExpiryDate
        {
            get
            {
                if ((this.mEXDutyofCareInsuranceExpiryDate == null))
                {
                    this.mEXDutyofCareInsuranceExpiryDate = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDutyofCareInsuranceExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabdutyofcare_chkblockinsuranceexpiry";
                    this.mEXDutyofCareInsuranceExpiryDate.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabdutyofcare$chkblockinsuranceexpiry";
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Insurance Expiry Date";
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXDutyofCareInsuranceExpiryDate.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "195";
                    this.mEXDutyofCareInsuranceExpiryDate.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDutyofCareInsuranceExpiryDate;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsClaimantsCanAddAddress
        {
            get
            {
                if ((this.mEXMileageandCarsClaimantsCanAddAddress == null))
                {
                    this.mEXMileageandCarsClaimantsCanAddAddress = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsClaimantsCanAddAddress.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkaddlocations";
                    this.mEXMileageandCarsClaimantsCanAddAddress.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkaddlocations";
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants can add new addresses as to/from addresses";
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsClaimantsCanAddAddress.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "196";
                    this.mEXMileageandCarsClaimantsCanAddAddress.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsClaimantsCanAddAddress;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsAllowMultipleDestinations
        {
            get
            {
                if ((this.mEXMileageandCarsAllowMultipleDestinations == null))
                {
                    this.mEXMileageandCarsAllowMultipleDestinations = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsAllowMultipleDestinations.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkAllowMultipleDestinations";
                    this.mEXMileageandCarsAllowMultipleDestinations.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkAllowMultipleDestinations";
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow multiple destinations";
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsAllowMultipleDestinations.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "198";
                    this.mEXMileageandCarsAllowMultipleDestinations.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsAllowMultipleDestinations;
            }
        }
        
        public HtmlCheckBox EXMileageandCarspostcodeanywhere
        {
            get
            {
                if ((this.mEXMileageandCarspostcodeanywhere == null))
                {
                    this.mEXMileageandCarspostcodeanywhere = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarspostcodeanywhere.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkUseMapPoint";
                    this.mEXMileageandCarspostcodeanywhere.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkUseMapPoint";
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Postcode Anywhere";
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarspostcodeanywhere.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "199";
                    this.mEXMileageandCarspostcodeanywhere.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarspostcodeanywhere;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsallowemployeestoaddnewcars
        {
            get
            {
                if ((this.mEXMileageandCarsallowemployeestoaddnewcars == null))
                {
                    this.mEXMileageandCarsallowemployeestoaddnewcars = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsallowemployeestoaddnewcars.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkAllowUsersToAddCars";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkAllowUsersToAddCars";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow employees to add new cars";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "200";
                    this.mEXMileageandCarsallowemployeestoaddnewcars.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsallowemployeestoaddnewcars;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsallowemployeestoselectmileagecat
        {
            get
            {
                if ((this.mEXMileageandCarsallowemployeestoselectmileagecat == null))
                {
                    this.mEXMileageandCarsallowemployeestoselectmileagecat = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkAllowMilage";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkAllowMilage";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow employees to select mileage categories";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "202";
                    this.mEXMileageandCarsallowemployeestoselectmileagecat.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsallowemployeestoselectmileagecat;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsaddnewaddressascompany
        {
            get
            {
                if ((this.mEXMileageandCarsaddnewaddressascompany == null))
                {
                    this.mEXMileageandCarsaddnewaddressascompany = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsaddnewaddressascompany.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkClaimantsCanSaveCompanyAddresses";
                    this.mEXMileageandCarsaddnewaddressascompany.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkClaimantsCanSaveCompanyAddresses";
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants can add new addresses as company addresses";
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsaddnewaddressascompany.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "197";
                    this.mEXMileageandCarsaddnewaddressascompany.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsaddnewaddressascompany;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsactivatecarwhenaddsown
        {
            get
            {
                if ((this.mEXMileageandCarsactivatecarwhenaddsown == null))
                {
                    this.mEXMileageandCarsactivatecarwhenaddsown = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsactivatecarwhenaddsown.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkActivateCarOnUserAdd";
                    this.mEXMileageandCarsactivatecarwhenaddsown.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkActivateCarOnUserAdd";
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Activate car when employee adds own";
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsactivatecarwhenaddsown.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "201";
                    this.mEXMileageandCarsactivatecarwhenaddsown.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsactivatecarwhenaddsown;
            }
        }
        
        public HtmlCheckBox EXMileageandCarsenableautolog
        {
            get
            {
                if ((this.mEXMileageandCarsenableautolog == null))
                {
                    this.mEXMileageandCarsenableautolog = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXMileageandCarsenableautolog.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_chkEnableAutoLog";
                    this.mEXMileageandCarsenableautolog.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$chkEnableAutoLog";
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Enable autolog";
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXMileageandCarsenableautolog.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "203";
                    this.mEXMileageandCarsenableautolog.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXMileageandCarsenableautolog;
            }
        }
        
        public HtmlCheckBox EXOtherPreferencessingleclaimattime
        {
            get
            {
                if ((this.mEXOtherPreferencessingleclaimattime == null))
                {
                    this.mEXOtherPreferencessingleclaimattime = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXOtherPreferencessingleclaimattime.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chksingleclaim";
                    this.mEXOtherPreferencessingleclaimattime.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chksingleclaim";
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Employees can only enter a single claim at a time";
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXOtherPreferencessingleclaimattime.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "205";
                    this.mEXOtherPreferencessingleclaimattime.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXOtherPreferencessingleclaimattime;
            }
        }
        
        public HtmlCheckBox EXOtherPreferencescannotoverrideexchangerates
        {
            get
            {
                if ((this.mEXOtherPreferencescannotoverrideexchangerates == null))
                {
                    this.mEXOtherPreferencescannotoverrideexchangerates = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXOtherPreferencescannotoverrideexchangerates.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chkexchangereadonly";
                    this.mEXOtherPreferencescannotoverrideexchangerates.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chkexchangereadonly";
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claimants can not override the exchange rates";
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXOtherPreferencescannotoverrideexchangerates.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "207";
                    this.mEXOtherPreferencescannotoverrideexchangerates.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXOtherPreferencescannotoverrideexchangerates;
            }
        }
        
        public HtmlCheckBox EXOtherPreferencesselecthomeaddress
        {
            get
            {
                if ((this.mEXOtherPreferencesselecthomeaddress == null))
                {
                    this.mEXOtherPreferencesselecthomeaddress = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXOtherPreferencesselecthomeaddress.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chkAllowClaimantSelectHomeAddress";
                    this.mEXOtherPreferencesselecthomeaddress.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chkAllowClaimantSelectHomeAddress";
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow claimant to select home address";
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXOtherPreferencesselecthomeaddress.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "208";
                    this.mEXOtherPreferencesselecthomeaddress.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXOtherPreferencesselecthomeaddress;
            }
        }
        
        public HtmlCheckBox EXOtherPreferencesreceiptscanbeuploaded
        {
            get
            {
                if ((this.mEXOtherPreferencesreceiptscanbeuploaded == null))
                {
                    this.mEXOtherPreferencesreceiptscanbeuploaded = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXOtherPreferencesreceiptscanbeuploaded.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chkattach";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chkattach";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Receipts can be uploaded to expense items";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "206";
                    this.mEXOtherPreferencesreceiptscanbeuploaded.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXOtherPreferencesreceiptscanbeuploaded;
            }
        }
        
        public HtmlCheckBox EXOtherPreferencespostcodesmandatorywhenadding
        {
            get
            {
                if ((this.mEXOtherPreferencespostcodesmandatorywhenadding == null))
                {
                    this.mEXOtherPreferencespostcodesmandatorywhenadding = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chkMandatoryPostcodeForAddresses";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chkMandatoryPostcodeForAddresses";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Postcodes are mandatory when adding addresses";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "209";
                    this.mEXOtherPreferencespostcodesmandatorywhenadding.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXOtherPreferencespostcodesmandatorywhenadding;
            }
        }
        
        public HtmlCheckBox EXNHSOptionsESRnumbermandatory
        {
            get
            {
                if ((this.mEXNHSOptionsESRnumbermandatory == null))
                {
                    this.mEXNHSOptionsESRnumbermandatory = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXNHSOptionsESRnumbermandatory.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkESRAssignmentsOnEmployeeAdd";
                    this.mEXNHSOptionsESRnumbermandatory.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkESRAssignmentsOnEmployeeAdd";
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "ESR Assignment Numbers mandatory on employee add";
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkESRAssignmentsOn";
                    this.mEXNHSOptionsESRnumbermandatory.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "210";
                    this.mEXNHSOptionsESRnumbermandatory.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXNHSOptionsESRnumbermandatory;
            }
        }
        
        public UICtl00_contentmain_taPane UICtl00_contentmain_taPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_taPane == null))
                {
                    this.mUICtl00_contentmain_taPane = new UICtl00_contentmain_taPane(this);
                }
                return this.mUICtl00_contentmain_taPane;
            }
        }
        
        public HtmlComboBox UIPostcodeAnywhereCalcComboBox
        {
            get
            {
                if ((this.mUIPostcodeAnywhereCalcComboBox == null))
                {
                    this.mUIPostcodeAnywhereCalcComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIPostcodeAnywhereCalcComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage_cmbmileagecalculationtype";
                    this.mUIPostcodeAnywhereCalcComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabmileage$cmbmileagecalculationtype";
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Postcode Anywhere Calculation Type";
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mUIPostcodeAnywhereCalcComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "13";
                    this.mUIPostcodeAnywhereCalcComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIPostcodeAnywhereCalcComboBox;
            }
        }
        
        public HtmlComboBox UIDefaultRoleComboBox
        {
            get
            {
                if ((this.mUIDefaultRoleComboBox == null))
                {
                    this.mUIDefaultRoleComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultRoleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_cmbdefaultrole";
                    this.mUIDefaultRoleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$cmbdefaultrole";
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Role";
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "8";
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIDefaultRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUIDefaultRoleComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultRoleComboBox;
            }
        }
        
        public HtmlComboBox UIDefaultItemRoleComboBox
        {
            get
            {
                if ((this.mUIDefaultItemRoleComboBox == null))
                {
                    this.mUIDefaultItemRoleComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultItemRoleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration_cmbdefaultitemrole";
                    this.mUIDefaultItemRoleComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabSelfRegistration$cmbdefaultitemrole";
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Item Role";
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "23";
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIDefaultItemRoleComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUIDefaultItemRoleComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultItemRoleComboBox;
            }
        }
        
        public HtmlTextArea UIClaimantDeclarationMEdit
        {
            get
            {
                if ((this.mUIClaimantDeclarationMEdit == null))
                {
                    this.mUIClaimantDeclarationMEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIClaimantDeclarationMEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDeclarations_txtdeclarationmsg";
                    this.mUIClaimantDeclarationMEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDeclarations$txtdeclarationmsg";
                    this.mUIClaimantDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Claimant Declaration Message";
                    this.mUIClaimantDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIClaimantDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIClaimantDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 300px\" id=ctl00_contentmai";
                    this.mUIClaimantDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIClaimantDeclarationMEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIClaimantDeclarationMEdit;
            }
        }
        
        public HtmlTextArea UIApproverDeclarationMEdit
        {
            get
            {
                if ((this.mUIApproverDeclarationMEdit == null))
                {
                    this.mUIApproverDeclarationMEdit = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mUIApproverDeclarationMEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDeclarations_txtapproverdeclarationmsg";
                    this.mUIApproverDeclarationMEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDeclarations$txtapproverdeclarationmsg";
                    this.mUIApproverDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Approver Declaration Message";
                    this.mUIApproverDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIApproverDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIApproverDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"WIDTH: 300px\" id=ctl00_contentmai";
                    this.mUIApproverDeclarationMEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIApproverDeclarationMEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIApproverDeclarationMEdit;
            }
        }
        
        public HtmlRadioButton UIOdometerreadingsrecoRadioButton
        {
            get
            {
                if ((this.mUIOdometerreadingsrecoRadioButton == null))
                {
                    this.mUIOdometerreadingsrecoRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIOdometerreadingsrecoRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_optodologin";
                    this.mUIOdometerreadingsrecoRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$odometerentry";
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optodologin";
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Odometer readings recorded when the claimant logs on";
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIOdometerreadingsrecoRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "16";
                    this.mUIOdometerreadingsrecoRadioButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOdometerreadingsrecoRadioButton;
            }
        }
        
        public HtmlRadioButton UIShowtheFromandToaddrRadioButton
        {
            get
            {
                if ((this.mUIShowtheFromandToaddrRadioButton == null))
                {
                    this.mUIShowtheFromandToaddrRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIShowtheFromandToaddrRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_optlocationdd";
                    this.mUIShowtheFromandToaddrRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$locations";
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optlocationdd";
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Show the From and To addresses in drop down boxes";
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIShowtheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "20";
                    this.mUIShowtheFromandToaddrRadioButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIShowtheFromandToaddrRadioButton;
            }
        }
        
        public HtmlRadioButton UIOdometerreadingsrecoRadioButton1
        {
            get
            {
                if ((this.mUIOdometerreadingsrecoRadioButton1 == null))
                {
                    this.mUIOdometerreadingsrecoRadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIOdometerreadingsrecoRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_optodosubmit";
                    this.mUIOdometerreadingsrecoRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$odometerentry";
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optodosubmit";
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Odometer readings recorded when claim submitted";
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIOdometerreadingsrecoRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "17";
                    this.mUIOdometerreadingsrecoRadioButton1.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOdometerreadingsrecoRadioButton1;
            }
        }
        
        public HtmlRadioButton UIMaketheFromandToaddrRadioButton
        {
            get
            {
                if ((this.mUIMaketheFromandToaddrRadioButton == null))
                {
                    this.mUIMaketheFromandToaddrRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIMaketheFromandToaddrRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_optlocationsearch";
                    this.mUIMaketheFromandToaddrRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$locations";
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "optlocationsearch";
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Make the From and To addresses searchable";
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIMaketheFromandToaddrRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "21";
                    this.mUIMaketheFromandToaddrRadioButton.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMaketheFromandToaddrRadioButton;
            }
        }
        
        public HtmlComboBox UIDefaultDrilldownRepoComboBox
        {
            get
            {
                if ((this.mUIDefaultDrilldownRepoComboBox == null))
                {
                    this.mUIDefaultDrilldownRepoComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDefaultDrilldownRepoComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_cmbdrilldown";
                    this.mUIDefaultDrilldownRepoComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$cmbdrilldown";
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Default Drilldown Report";
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "13";
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIDefaultDrilldownRepoComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIDefaultDrilldownRepoComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDefaultDrilldownRepoComboBox;
            }
        }
        
        public HtmlEdit UIOdometerreadingsrecoEdit
        {
            get
            {
                if ((this.mUIOdometerreadingsrecoEdit == null))
                {
                    this.mUIOdometerreadingsrecoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIOdometerreadingsrecoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_txtodometerday";
                    this.mUIOdometerreadingsrecoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$txtodometerday";
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Odometer readings recorded every month on";
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIOdometerreadingsrecoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUIOdometerreadingsrecoEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOdometerreadingsrecoEdit;
            }
        }
        
        public HtmlSpan UISelfRegistrationPane
        {
            get
            {
                if ((this.mUISelfRegistrationPane == null))
                {
                    this.mUISelfRegistrationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISelfRegistrationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration";
                    this.mUISelfRegistrationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISelfRegistrationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Self Registration";
                    this.mUISelfRegistrationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISelfRegistrationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISelfRegistrationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUISelfRegistrationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISelfRegistrationPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISelfRegistrationPane;
            }
        }
        
        public HtmlSpan UIDelegatesPane
        {
            get
            {
                if ((this.mUIDelegatesPane == null))
                {
                    this.mUIDelegatesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIDelegatesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabDelegates";
                    this.mUIDelegatesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDelegatesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Delegates";
                    this.mUIDelegatesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDelegatesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDelegatesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIDelegatesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
                    this.mUIDelegatesPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDelegatesPane;
            }
        }
        
        public HtmlSpan UIDeclarationPane
        {
            get
            {
                if ((this.mUIDeclarationPane == null))
                {
                    this.mUIDeclarationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIDeclarationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabDeclarations";
                    this.mUIDeclarationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDeclarationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Declaration";
                    this.mUIDeclarationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDeclarationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDeclarationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIDeclarationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
                    this.mUIDeclarationPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDeclarationPane;
            }
        }
        
        public HtmlSpan UICodeAllocationPane
        {
            get
            {
                if ((this.mUICodeAllocationPane == null))
                {
                    this.mUICodeAllocationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICodeAllocationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabcodeallocation";
                    this.mUICodeAllocationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICodeAllocationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Code Allocation";
                    this.mUICodeAllocationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICodeAllocationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUICodeAllocationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUICodeAllocationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "577";
                    this.mUICodeAllocationPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICodeAllocationPane;
            }
        }
        
        public HtmlSpan UIDutyofCarePane
        {
            get
            {
                if ((this.mUIDutyofCarePane == null))
                {
                    this.mUIDutyofCarePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIDutyofCarePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabdutyofcare";
                    this.mUIDutyofCarePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDutyofCarePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Duty of Care";
                    this.mUIDutyofCarePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDutyofCarePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDutyofCarePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIDutyofCarePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "581";
                    this.mUIDutyofCarePane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDutyofCarePane;
            }
        }
        
        public HtmlSpan UIMileageCarsPane
        {
            get
            {
                if ((this.mUIMileageCarsPane == null))
                {
                    this.mUIMileageCarsPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMileageCarsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabmileage";
                    this.mUIMileageCarsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMileageCarsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mileage & Cars";
                    this.mUIMileageCarsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMileageCarsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIMileageCarsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIMileageCarsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "585";
                    this.mUIMileageCarsPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMileageCarsPane;
            }
        }
        
        public HtmlSpan UIOtherPreferencesPane
        {
            get
            {
                if ((this.mUIOtherPreferencesPane == null))
                {
                    this.mUIOtherPreferencesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIOtherPreferencesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabother";
                    this.mUIOtherPreferencesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOtherPreferencesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Other Preferences";
                    this.mUIOtherPreferencesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOtherPreferencesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIOtherPreferencesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIOtherPreferencesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "589";
                    this.mUIOtherPreferencesPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOtherPreferencesPane;
            }
        }
        
        public HtmlHyperlink UINewExpensesHyperlink
        {
            get
            {
                if ((this.mUINewExpensesHyperlink == null))
                {
                    this.mUINewExpensesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewExpensesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkNewExpenses";
                    this.mUINewExpensesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewExpensesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewExpensesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Expenses";
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'NewExpenses\');";
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'NewExpenses\');";
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkNewExpenses tabIndex=0 href=\"javas";
                    this.mUINewExpensesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUINewExpensesHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUINewExpensesHyperlink;
            }
        }
        
        public HtmlHyperlink UINHSOptionsHyperlink
        {
            get
            {
                if ((this.mUINHSOptionsHyperlink == null))
                {
                    this.mUINHSOptionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINHSOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkESROptions";
                    this.mUINHSOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINHSOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINHSOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "NHS Options";
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'ESROptions\');";
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'ESROptions\');";
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkESROptions tabIndex=0 href=\"javasc";
                    this.mUINHSOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUINHSOptionsHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUINHSOptionsHyperlink;
            }
        }
        
        public HtmlComboBox UIESROutboundEmployeeAComboBox
        {
            get
            {
                if ((this.mUIESROutboundEmployeeAComboBox == null))
                {
                    this.mUIESROutboundEmployeeAComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIESROutboundEmployeeAComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlESRActivateType";
                    this.mUIESROutboundEmployeeAComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlESRActivateType";
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "ESR Outbound Employee Activation Type";
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlESRActivateType ";
                    this.mUIESROutboundEmployeeAComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "14";
                    this.mUIESROutboundEmployeeAComboBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIESROutboundEmployeeAComboBox;
            }
        }
        
        public HtmlComboBox UIESROutboundEmployeeAComboBox1
        {
            get
            {
                if ((this.mUIESROutboundEmployeeAComboBox1 == null))
                {
                    this.mUIESROutboundEmployeeAComboBox1 = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIESROutboundEmployeeAComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ctl00_contentmain_ddlESRArchiveType";
                    this.mUIESROutboundEmployeeAComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ctl00$contentmain$ddlESRArchiveType";
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "ESR Outbound Employee Archive Type";
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_ddlESRArchiveType t";
                    this.mUIESROutboundEmployeeAComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "15";
                    this.mUIESROutboundEmployeeAComboBox1.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIESROutboundEmployeeAComboBox1;
            }
        }
        
        public HtmlEdit UIESROutboundArchiveGrEdit
        {
            get
            {
                if ((this.mUIESROutboundArchiveGrEdit == null))
                {
                    this.mUIESROutboundArchiveGrEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIESROutboundArchiveGrEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtESRGracePeriod";
                    this.mUIESROutboundArchiveGrEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtESRGracePeriod";
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "ESR Outbound Archive Grace Period";
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtESRGracePeriod t";
                    this.mUIESROutboundArchiveGrEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "211";
                    this.mUIESROutboundArchiveGrEdit.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIESROutboundArchiveGrEdit;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsDisplayForCash
        {
            get
            {
                if ((this.mEXFieldSettingsDisplayForCash == null))
                {
                    this.mEXFieldSettingsDisplayForCash = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsDisplayForCash.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayFieldOnCash";
                    this.mEXFieldSettingsDisplayForCash.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayFieldOnCash";
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display for cash";
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayFieldOnCa";
                    this.mEXFieldSettingsDisplayForCash.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "216";
                    this.mEXFieldSettingsDisplayForCash.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsDisplayForCash;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsDisplayOnCreditCardItems
        {
            get
            {
                if ((this.mEXFieldSettingsDisplayOnCreditCardItems == null))
                {
                    this.mEXFieldSettingsDisplayOnCreditCardItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsDisplayOnCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayOnCC";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayOnCC";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display on credit card items";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayOnCC type";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "218";
                    this.mEXFieldSettingsDisplayOnCreditCardItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsDisplayOnCreditCardItems;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsDisplayOnPurchaseCardItems
        {
            get
            {
                if ((this.mEXFieldSettingsDisplayOnPurchaseCardItems == null))
                {
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayOnPC";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayOnPC";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display on purchase card items";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayOnPC type";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "220";
                    this.mEXFieldSettingsDisplayOnPurchaseCardItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsDisplayOnPurchaseCardItems;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsDisplayOnIndividualItem
        {
            get
            {
                if ((this.mEXFieldSettingsDisplayOnIndividualItem == null))
                {
                    this.mEXFieldSettingsDisplayOnIndividualItem = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsDisplayOnIndividualItem.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayOnItem";
                    this.mEXFieldSettingsDisplayOnIndividualItem.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayOnItem";
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display on individual item";
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayOnItem ty";
                    this.mEXFieldSettingsDisplayOnIndividualItem.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "215";
                    this.mEXFieldSettingsDisplayOnIndividualItem.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsDisplayOnIndividualItem;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsMandatoryOnCashItems
        {
            get
            {
                if ((this.mEXFieldSettingsMandatoryOnCashItems == null))
                {
                    this.mEXFieldSettingsMandatoryOnCashItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsMandatoryOnCashItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkMandatoryOnCash";
                    this.mEXFieldSettingsMandatoryOnCashItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkMandatoryOnCash";
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory on cash items";
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkMandatoryOnCash ";
                    this.mEXFieldSettingsMandatoryOnCashItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "217";
                    this.mEXFieldSettingsMandatoryOnCashItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsMandatoryOnCashItems;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsMandatoryOnCreditCardItems
        {
            get
            {
                if ((this.mEXFieldSettingsMandatoryOnCreditCardItems == null))
                {
                    this.mEXFieldSettingsMandatoryOnCreditCardItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkMandatoryOnCC";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkMandatoryOnCC";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory on credit card items";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkMandatoryOnCC ty";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "219";
                    this.mEXFieldSettingsMandatoryOnCreditCardItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsMandatoryOnCreditCardItems;
            }
        }
        
        public HtmlCheckBox EXFieldSettingsMandatoryOnPurchaseCardItems
        {
            get
            {
                if ((this.mEXFieldSettingsMandatoryOnPurchaseCardItems == null))
                {
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkMandatoryOnPC";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkMandatoryOnPC";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Mandatory on purchase card items";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkMandatoryOnPC ty";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "221";
                    this.mEXFieldSettingsMandatoryOnPurchaseCardItems.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsMandatoryOnPurchaseCardItems;
            }
        }
        
        public UITbl_addScreen_CompanRow UITbl_addScreen_CompanRow
        {
            get
            {
                if ((this.mUITbl_addScreen_CompanRow == null))
                {
                    this.mUITbl_addScreen_CompanRow = new UITbl_addScreen_CompanRow(this);
                }
                return this.mUITbl_addScreen_CompanRow;
            }
        }
        
        public UITbl_addScreen_CostCoRow UITbl_addScreen_CostCoRow
        {
            get
            {
                if ((this.mUITbl_addScreen_CostCoRow == null))
                {
                    this.mUITbl_addScreen_CostCoRow = new UITbl_addScreen_CostCoRow(this);
                }
                return this.mUITbl_addScreen_CostCoRow;
            }
        }
        
        public UITbl_addScreen_CountrRow UITbl_addScreen_CountrRow
        {
            get
            {
                if ((this.mUITbl_addScreen_CountrRow == null))
                {
                    this.mUITbl_addScreen_CountrRow = new UITbl_addScreen_CountrRow(this);
                }
                return this.mUITbl_addScreen_CountrRow;
            }
        }
        
        public UITbl_addScreen_CurrenRow UITbl_addScreen_CurrenRow
        {
            get
            {
                if ((this.mUITbl_addScreen_CurrenRow == null))
                {
                    this.mUITbl_addScreen_CurrenRow = new UITbl_addScreen_CurrenRow(this);
                }
                return this.mUITbl_addScreen_CurrenRow;
            }
        }
        
        public UITbl_addScreen_DepartRow UITbl_addScreen_DepartRow
        {
            get
            {
                if ((this.mUITbl_addScreen_DepartRow == null))
                {
                    this.mUITbl_addScreen_DepartRow = new UITbl_addScreen_DepartRow(this);
                }
                return this.mUITbl_addScreen_DepartRow;
            }
        }
        
        public UITbl_addScreen_FromRow UITbl_addScreen_FromRow
        {
            get
            {
                if ((this.mUITbl_addScreen_FromRow == null))
                {
                    this.mUITbl_addScreen_FromRow = new UITbl_addScreen_FromRow(this);
                }
                return this.mUITbl_addScreen_FromRow;
            }
        }
        
        public UITbl_addScreen_OtherDRow UITbl_addScreen_OtherDRow
        {
            get
            {
                if ((this.mUITbl_addScreen_OtherDRow == null))
                {
                    this.mUITbl_addScreen_OtherDRow = new UITbl_addScreen_OtherDRow(this);
                }
                return this.mUITbl_addScreen_OtherDRow;
            }
        }
        
        public HtmlImage UISharedimagesbuttonscImage
        {
            get
            {
                if ((this.mUISharedimagesbuttonscImage == null))
                {
                    this.mUISharedimagesbuttonscImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_imgCloseAddScreen";
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesbuttonscImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/cancel_up.gif";
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/cancel_up.gif";
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesbuttonscImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "53";
                    this.mUISharedimagesbuttonscImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISharedimagesbuttonscImage;
            }
        }
        
        public HtmlImage UISharedimagesbuttonsbImage
        {
            get
            {
                if ((this.mUISharedimagesbuttonsbImage == null))
                {
                    this.mUISharedimagesbuttonsbImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesbuttonsbImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_imgSaveAddScreen";
                    this.mUISharedimagesbuttonsbImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesbuttonsbImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesbuttonsbImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_save.png";
                    this.mUISharedimagesbuttonsbImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/buttons/btn_save.png";
                    this.mUISharedimagesbuttonsbImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesbuttonsbImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesbuttonsbImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "52";
                    this.mUISharedimagesbuttonsbImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUISharedimagesbuttonsbImage;
            }
        }
        
        public UITbl_addScreen_ProjecRow UITbl_addScreen_ProjecRow
        {
            get
            {
                if ((this.mUITbl_addScreen_ProjecRow == null))
                {
                    this.mUITbl_addScreen_ProjecRow = new UITbl_addScreen_ProjecRow(this);
                }
                return this.mUITbl_addScreen_ProjecRow;
            }
        }
        
        public UITbl_addScreen_ReasonRow UITbl_addScreen_ReasonRow
        {
            get
            {
                if ((this.mUITbl_addScreen_ReasonRow == null))
                {
                    this.mUITbl_addScreen_ReasonRow = new UITbl_addScreen_ReasonRow(this);
                }
                return this.mUITbl_addScreen_ReasonRow;
            }
        }
        
        public UITbl_addScreen_ToRow UITbl_addScreen_ToRow
        {
            get
            {
                if ((this.mUITbl_addScreen_ToRow == null))
                {
                    this.mUITbl_addScreen_ToRow = new UITbl_addScreen_ToRow(this);
                }
                return this.mUITbl_addScreen_ToRow;
            }
        }
        
        public HtmlEdit EXFieldSettingsDisplayAsTxtBox
        {
            get
            {
                if ((this.mEXFieldSettingsDisplayAsTxtBox == null))
                {
                    this.mEXFieldSettingsDisplayAsTxtBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mEXFieldSettingsDisplayAsTxtBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDisplayAs";
                    this.mEXFieldSettingsDisplayAsTxtBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDisplayAs";
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Display as";
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtDisplayAs value=";
                    this.mEXFieldSettingsDisplayAsTxtBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "214";
                    this.mEXFieldSettingsDisplayAsTxtBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXFieldSettingsDisplayAsTxtBox;
            }
        }
        
        public HtmlCheckBox EXGeneralDetailsApproveOwnClaim
        {
            get
            {
                if ((this.mEXGeneralDetailsApproveOwnClaim == null))
                {
                    this.mEXGeneralDetailsApproveOwnClaim = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXGeneralDetailsApproveOwnClaim.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkEmployeeApproveOwnClaims";
                    this.mEXGeneralDetailsApproveOwnClaim.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkEmployeeApproveOwnClaims";
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Allow employees and delegates to approve own claims";
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXGeneralDetailsApproveOwnClaim.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "14";
                    this.mEXGeneralDetailsApproveOwnClaim.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXGeneralDetailsApproveOwnClaim;
            }
        }
        
        public HtmlCheckBox UIRelevantclaimantsreqCheckBox
        {
            get
            {
                if ((this.mUIRelevantclaimantsreqCheckBox == null))
                {
                    this.mUIRelevantclaimantsreqCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIRelevantclaimantsreqCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkrecordodometer";
                    this.mUIRelevantclaimantsreqCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkrecordodometer";
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Relevant claimants required to record odometer readings";
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIRelevantclaimantsreqCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "15";
                    this.mUIRelevantclaimantsreqCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIRelevantclaimantsreqCheckBox;
            }
        }
        
        public HtmlCheckBox UIClaimscanbepartsubmiCheckBox
        {
            get
            {
                if ((this.mUIClaimscanbepartsubmiCheckBox == null))
                {
                    this.mUIClaimscanbepartsubmiCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIClaimscanbepartsubmiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkpartsubmittal";
                    this.mUIClaimscanbepartsubmiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkpartsubmittal";
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Claims can be part submitted";
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIClaimscanbepartsubmiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "19";
                    this.mUIClaimscanbepartsubmiCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIClaimscanbepartsubmiCheckBox;
            }
        }
        
        public HtmlCheckBox UICashandCreditCarditeCheckBox
        {
            get
            {
                if ((this.mUICashandCreditCarditeCheckBox == null))
                {
                    this.mUICashandCreditCarditeCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICashandCreditCarditeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabGeneral_chkonlycashcredit";
                    this.mUICashandCreditCarditeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabGeneral$chkonlycashcredit";
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Cash and Credit Card items cannot be on the same claim";
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUICashandCreditCarditeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "20";
                    this.mUICashandCreditCarditeCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICashandCreditCarditeCheckBox;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedModifyCatsSystemOpts
        {
            get
            {
                if ((this.mEXDelUpdatedModifyCatsSystemOpts == null))
                {
                    this.mEXDelUpdatedModifyCatsSystemOpts = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedModifyCatsSystemOpts.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelsetup";
                    this.mEXDelUpdatedModifyCatsSystemOpts.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelsetup";
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Modify categories and system options";
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedModifyCatsSystemOpts.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "35";
                    this.mEXDelUpdatedModifyCatsSystemOpts.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedModifyCatsSystemOpts;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedApproveAdvanceRequests
        {
            get
            {
                if ((this.mEXDelUpdatedApproveAdvanceRequests == null))
                {
                    this.mEXDelUpdatedApproveAdvanceRequests = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedApproveAdvanceRequests.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelapprovals";
                    this.mEXDelUpdatedApproveAdvanceRequests.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelapprovals";
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Manage and approve advance requests";
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedApproveAdvanceRequests.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "41";
                    this.mEXDelUpdatedApproveAdvanceRequests.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedApproveAdvanceRequests;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedAuditLog
        {
            get
            {
                if ((this.mEXDelUpdatedAuditLog == null))
                {
                    this.mEXDelUpdatedAuditLog = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedAuditLog.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelauditlog";
                    this.mEXDelUpdatedAuditLog.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelauditlog";
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Search and View the Audit Log";
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedAuditLog.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "43";
                    this.mEXDelUpdatedAuditLog.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedAuditLog;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedImportCorpStatement
        {
            get
            {
                if ((this.mEXDelUpdatedImportCorpStatement == null))
                {
                    this.mEXDelUpdatedImportCorpStatement = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedImportCorpStatement.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelcorporatecard";
                    this.mEXDelUpdatedImportCorpStatement.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelcorporatecard";
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Import Corporate Card Statements";
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedImportCorpStatement.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "45";
                    this.mEXDelUpdatedImportCorpStatement.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedImportCorpStatement;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedModifyEmployees
        {
            get
            {
                if ((this.mEXDelUpdatedModifyEmployees == null))
                {
                    this.mEXDelUpdatedModifyEmployees = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedModifyEmployees.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelemployeeadmin";
                    this.mEXDelUpdatedModifyEmployees.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelemployeeadmin";
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Modify employees, sign-off groups and roles";
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedModifyEmployees.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "36";
                    this.mEXDelUpdatedModifyEmployees.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedModifyEmployees;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedViewClaimantReports
        {
            get
            {
                if ((this.mEXDelUpdatedViewClaimantReports == null))
                {
                    this.mEXDelUpdatedViewClaimantReports = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedViewClaimantReports.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelclaimantreports";
                    this.mEXDelUpdatedViewClaimantReports.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelclaimantreports";
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "View claimant reports";
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedViewClaimantReports.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "38";
                    this.mEXDelUpdatedViewClaimantReports.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedViewClaimantReports;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedExportData
        {
            get
            {
                if ((this.mEXDelUpdatedExportData == null))
                {
                    this.mEXDelUpdatedExportData = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedExportData.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkdelexports";
                    this.mEXDelUpdatedExportData.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkdelexports";
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Export data and view export history";
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedExportData.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "42";
                    this.mEXDelUpdatedExportData.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedExportData;
            }
        }
        
        public HtmlCheckBox EXDelUpdatedSubmitClaims
        {
            get
            {
                if ((this.mEXDelUpdatedSubmitClaims == null))
                {
                    this.mEXDelUpdatedSubmitClaims = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mEXDelUpdatedSubmitClaims.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabDelegates_chkDelsSubmitClaims";
                    this.mEXDelUpdatedSubmitClaims.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabDelegates$chkDelsSubmitClaims";
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Can submit claims";
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mEXDelUpdatedSubmitClaims.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "44";
                    this.mEXDelUpdatedSubmitClaims.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mEXDelUpdatedSubmitClaims;
            }
        }
        
        public UITbl_addScreen_CompanRow1 UITbl_addScreen_CompanRow1
        {
            get
            {
                if ((this.mUITbl_addScreen_CompanRow1 == null))
                {
                    this.mUITbl_addScreen_CompanRow1 = new UITbl_addScreen_CompanRow1(this);
                }
                return this.mUITbl_addScreen_CompanRow1;
            }
        }
        
        public HtmlCheckBox UIDisplayoncreditcardiCheckBox
        {
            get
            {
                if ((this.mUIDisplayoncreditcardiCheckBox == null))
                {
                    this.mUIDisplayoncreditcardiCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIDisplayoncreditcardiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayOnCC";
                    this.mUIDisplayoncreditcardiCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayOnCC";
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display on credit card items";
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayOnCC CHEC";
                    this.mUIDisplayoncreditcardiCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "218";
                    this.mUIDisplayoncreditcardiCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDisplayoncreditcardiCheckBox;
            }
        }
        
        public HtmlCheckBox UIDisplayonpurchasecarCheckBox
        {
            get
            {
                if ((this.mUIDisplayonpurchasecarCheckBox == null))
                {
                    this.mUIDisplayonpurchasecarCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIDisplayonpurchasecarCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_chkDisplayOnPC";
                    this.mUIDisplayonpurchasecarCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$chkDisplayOnPC";
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Display on purchase card items";
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_chkDisplayOnPC CHEC";
                    this.mUIDisplayonpurchasecarCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "220";
                    this.mUIDisplayonpurchasecarCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDisplayonpurchasecarCheckBox;
            }
        }
        
        public UICtl00_contentmain_pnPane UICtl00_contentmain_pnPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_pnPane == null))
                {
                    this.mUICtl00_contentmain_pnPane = new UICtl00_contentmain_pnPane(this);
                }
                return this.mUICtl00_contentmain_pnPane;
            }
        }
        
        public UITbl_addScreen_FromRow1 UITbl_addScreen_FromRow1
        {
            get
            {
                if ((this.mUITbl_addScreen_FromRow1 == null))
                {
                    this.mUITbl_addScreen_FromRow1 = new UITbl_addScreen_FromRow1(this);
                }
                return this.mUITbl_addScreen_FromRow1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailServerEdit;
        
        private HtmlEdit mUIEmailAdministratorAdEdit;
        
        private HtmlRadioButton mUIExpensesServerRadioButton;
        
        private HtmlRadioButton mUIClaimantsEmailAddresRadioButton;
        
        private HtmlCheckBox mEXGeneralDetailsHotelReviews;
        
        private HtmlCheckBox mEXGeneralDetailsEmployeeDirectory;
        
        private HtmlCheckBox mEXGeneralDetailsDisplayBankDetails;
        
        private HtmlCheckBox mEXGeneralDetailsApproveOwnClaims;
        
        private HtmlCheckBox mEXGeneralDetailsEmailHotelReviews;
        
        private HtmlCheckBox mEXGeneralDetailsEnterPreApprovedClaims;
        
        private HtmlCheckBox mEXGeneralDetailsEditOwnDetails;
        
        private HtmlCheckBox mEXGeneralDetailsClaimantsRequiredOdoReadings;
        
        private HtmlCheckBox mEXGeneralDetailsClaimsPartSubmitted;
        
        private HtmlCheckBox mEXGeneralDetailsCashCreditCardItems;
        
        private HtmlCheckBox mEXSelfRegAllowSelfReg;
        
        private HtmlCheckBox mEXSelfRegHomeAddressDetails;
        
        private HtmlCheckBox mEXSelfRegRole;
        
        private HtmlCheckBox mEXSelfRegSignoffGroup;
        
        private HtmlCheckBox mEXSelfRegDefaultDepartment;
        
        private HtmlCheckBox mEXSelfRegCarDetails;
        
        private HtmlCheckBox mEXSelfRegEmployeeContactDetails;
        
        private HtmlCheckBox mEXSelfRegEmployeeInformation;
        
        private HtmlCheckBox mEXSelfRegItemRole;
        
        private HtmlCheckBox mEXSelfRegAdvancesSignoffGroup;
        
        private HtmlCheckBox mEXSelfRegBankDetails;
        
        private HtmlCheckBox mEXSelfRegAdditionalUDFs;
        
        private HtmlCheckBox mEXDelegatesModifyCats;
        
        private HtmlCheckBox mEXDelegatesLogontoOthersAccounts;
        
        private HtmlCheckBox mEXDelegatesViewReadOnlyReports;
        
        private HtmlCheckBox mEXDelUpdatedQuickEditDesign;
        
        private HtmlCheckBox mEXDelegatesImportPurchaseCardStatements;
        
        private HtmlCheckBox mEXDelegatesExportDataViewHistory;
        
        private HtmlCheckBox mEXDelegatesCanSubmitClaims;
        
        private HtmlCheckBox mEXDelegatesModifyEmployees;
        
        private HtmlCheckBox mEXDelUpdatedViewAdminReports;
        
        private HtmlCheckBox mEXDelUpdatedCheckandpayexpenses;
        
        private HtmlCheckBox mEXDelegatesImportCreditCardStatement;
        
        private HtmlCheckBox mEXDelegatesManageApproveAdvance;
        
        private HtmlCheckBox mEXDelegatesSearchViewAuditLog;
        
        private HtmlCheckBox mEXDeclarationElectronicDecl;
        
        private HtmlCheckBox mEXCodeAllocationItemsAssignedCostCodes;
        
        private HtmlCheckBox mEXCodeAllocationClaimantsshouldbeshoCheckBox;
        
        private HtmlCheckBox mEXCodeAllocationItemsshouldbeassigneCheckBox;
        
        private HtmlCheckBox mEXCodeAllocationDepoDesc;
        
        private HtmlCheckBox mEXCodeAllocationProjectcodes;
        
        private HtmlCheckBox mEXCodeAllocationProjectCodesDesc;
        
        private HtmlCheckBox mEXCodeAllocationUsedefaultallocationCheckBox;
        
        private HtmlCheckBox mEXCodeAllocationClaimantsCostCodeBreakdown;
        
        private HtmlCheckBox mEXCodeAllocationCostCodesInGenDetails;
        
        private HtmlCheckBox mEXCodeAllocationClaimantsshowndeppobreakdown;
        
        private HtmlCheckBox mEXCodeAllocationDepartmentsshowningendetails;
        
        private HtmlCheckBox mEXCodeAllocationClaimantsshownprojectcode;
        
        private HtmlCheckBox mEXCodeAllocationProjectcodesingendetails;
        
        private HtmlCheckBox mEXDutyofCareDrivingLicenceExpiryDate;
        
        private HtmlCheckBox mEXDutyofCareMOTExpiry;
        
        private HtmlCheckBox mEXDutyofCareTaxExpiryDate;
        
        private HtmlCheckBox mEXDutyofCareInsuranceExpiryDate;
        
        private HtmlCheckBox mEXMileageandCarsClaimantsCanAddAddress;
        
        private HtmlCheckBox mEXMileageandCarsAllowMultipleDestinations;
        
        private HtmlCheckBox mEXMileageandCarspostcodeanywhere;
        
        private HtmlCheckBox mEXMileageandCarsallowemployeestoaddnewcars;
        
        private HtmlCheckBox mEXMileageandCarsallowemployeestoselectmileagecat;
        
        private HtmlCheckBox mEXMileageandCarsaddnewaddressascompany;
        
        private HtmlCheckBox mEXMileageandCarsactivatecarwhenaddsown;
        
        private HtmlCheckBox mEXMileageandCarsenableautolog;
        
        private HtmlCheckBox mEXOtherPreferencessingleclaimattime;
        
        private HtmlCheckBox mEXOtherPreferencescannotoverrideexchangerates;
        
        private HtmlCheckBox mEXOtherPreferencesselecthomeaddress;
        
        private HtmlCheckBox mEXOtherPreferencesreceiptscanbeuploaded;
        
        private HtmlCheckBox mEXOtherPreferencespostcodesmandatorywhenadding;
        
        private HtmlCheckBox mEXNHSOptionsESRnumbermandatory;
        
        private UICtl00_contentmain_taPane mUICtl00_contentmain_taPane;
        
        private HtmlComboBox mUIPostcodeAnywhereCalcComboBox;
        
        private HtmlComboBox mUIDefaultRoleComboBox;
        
        private HtmlComboBox mUIDefaultItemRoleComboBox;
        
        private HtmlTextArea mUIClaimantDeclarationMEdit;
        
        private HtmlTextArea mUIApproverDeclarationMEdit;
        
        private HtmlRadioButton mUIOdometerreadingsrecoRadioButton;
        
        private HtmlRadioButton mUIShowtheFromandToaddrRadioButton;
        
        private HtmlRadioButton mUIOdometerreadingsrecoRadioButton1;
        
        private HtmlRadioButton mUIMaketheFromandToaddrRadioButton;
        
        private HtmlComboBox mUIDefaultDrilldownRepoComboBox;
        
        private HtmlEdit mUIOdometerreadingsrecoEdit;
        
        private HtmlSpan mUISelfRegistrationPane;
        
        private HtmlSpan mUIDelegatesPane;
        
        private HtmlSpan mUIDeclarationPane;
        
        private HtmlSpan mUICodeAllocationPane;
        
        private HtmlSpan mUIDutyofCarePane;
        
        private HtmlSpan mUIMileageCarsPane;
        
        private HtmlSpan mUIOtherPreferencesPane;
        
        private HtmlHyperlink mUINewExpensesHyperlink;
        
        private HtmlHyperlink mUINHSOptionsHyperlink;
        
        private HtmlComboBox mUIESROutboundEmployeeAComboBox;
        
        private HtmlComboBox mUIESROutboundEmployeeAComboBox1;
        
        private HtmlEdit mUIESROutboundArchiveGrEdit;
        
        private HtmlCheckBox mEXFieldSettingsDisplayForCash;
        
        private HtmlCheckBox mEXFieldSettingsDisplayOnCreditCardItems;
        
        private HtmlCheckBox mEXFieldSettingsDisplayOnPurchaseCardItems;
        
        private HtmlCheckBox mEXFieldSettingsDisplayOnIndividualItem;
        
        private HtmlCheckBox mEXFieldSettingsMandatoryOnCashItems;
        
        private HtmlCheckBox mEXFieldSettingsMandatoryOnCreditCardItems;
        
        private HtmlCheckBox mEXFieldSettingsMandatoryOnPurchaseCardItems;
        
        private UITbl_addScreen_CompanRow mUITbl_addScreen_CompanRow;
        
        private UITbl_addScreen_CostCoRow mUITbl_addScreen_CostCoRow;
        
        private UITbl_addScreen_CountrRow mUITbl_addScreen_CountrRow;
        
        private UITbl_addScreen_CurrenRow mUITbl_addScreen_CurrenRow;
        
        private UITbl_addScreen_DepartRow mUITbl_addScreen_DepartRow;
        
        private UITbl_addScreen_FromRow mUITbl_addScreen_FromRow;
        
        private UITbl_addScreen_OtherDRow mUITbl_addScreen_OtherDRow;
        
        private HtmlImage mUISharedimagesbuttonscImage;
        
        private HtmlImage mUISharedimagesbuttonsbImage;
        
        private UITbl_addScreen_ProjecRow mUITbl_addScreen_ProjecRow;
        
        private UITbl_addScreen_ReasonRow mUITbl_addScreen_ReasonRow;
        
        private UITbl_addScreen_ToRow mUITbl_addScreen_ToRow;
        
        private HtmlEdit mEXFieldSettingsDisplayAsTxtBox;
        
        private HtmlCheckBox mEXGeneralDetailsApproveOwnClaim;
        
        private HtmlCheckBox mUIRelevantclaimantsreqCheckBox;
        
        private HtmlCheckBox mUIClaimscanbepartsubmiCheckBox;
        
        private HtmlCheckBox mUICashandCreditCarditeCheckBox;
        
        private HtmlCheckBox mEXDelUpdatedModifyCatsSystemOpts;
        
        private HtmlCheckBox mEXDelUpdatedApproveAdvanceRequests;
        
        private HtmlCheckBox mEXDelUpdatedAuditLog;
        
        private HtmlCheckBox mEXDelUpdatedImportCorpStatement;
        
        private HtmlCheckBox mEXDelUpdatedModifyEmployees;
        
        private HtmlCheckBox mEXDelUpdatedViewClaimantReports;
        
        private HtmlCheckBox mEXDelUpdatedExportData;
        
        private HtmlCheckBox mEXDelUpdatedSubmitClaims;
        
        private UITbl_addScreen_CompanRow1 mUITbl_addScreen_CompanRow1;
        
        private HtmlCheckBox mUIDisplayoncreditcardiCheckBox;
        
        private HtmlCheckBox mUIDisplayonpurchasecarCheckBox;
        
        private UICtl00_contentmain_pnPane mUICtl00_contentmain_pnPane;
        
        private UITbl_addScreen_FromRow1 mUITbl_addScreen_FromRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_taPane : HtmlDiv
    {
        
        public UICtl00_contentmain_taPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabmileage";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Addresses\r\nClaimants can add new address";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_panel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible\" id=ctl00_con";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "159";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIClaimantscanaddnewadPane
        {
            get
            {
                if ((this.mUIClaimantscanaddnewadPane == null))
                {
                    this.mUIClaimantscanaddnewadPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIClaimantscanaddnewadPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIClaimantscanaddnewadPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIClaimantscanaddnewadPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Claimants can add new addresses as to/fr";
                    this.mUIClaimantscanaddnewadPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIClaimantscanaddnewadPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "twocolumn";
                    this.mUIClaimantscanaddnewadPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=twocolumn";
                    this.mUIClaimantscanaddnewadPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIClaimantscanaddnewadPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIClaimantscanaddnewadPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIClaimantscanaddnewadPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_CompanRow : HtmlRow
    {
        
        public UITbl_addScreen_CompanRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Company Visited";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "companyCompany Visited";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_addScreen_Company Visited\"";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled tabIndex=0 type=checkbox";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "7";
                    this.mUIItemCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlImage mUIEditcodeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_CostCoRow : HtmlRow
    {
        
        public UITbl_addScreen_CostCoRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Cost Code";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "costcodeCost Code";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_addScreen_Cost Code\"";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "2";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditcostcodeImage
        {
            get
            {
                if ((this.mUIEditcostcodeImage == null))
                {
                    this.mUIEditcostcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcostcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcostcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcostcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit costcode";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'costcode\');";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'costcode\');";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit costcode\" src=\"/shared/images/";
                    this.mUIEditcostcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcostcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcostcodeImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditcostcodeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_CountrRow : HtmlRow
    {
        
        public UITbl_addScreen_CountrRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Country";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "countryCountry";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_Country";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "3";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditcountryImage
        {
            get
            {
                if ((this.mUIEditcountryImage == null))
                {
                    this.mUIEditcountryImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcountryImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcountryImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcountryImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit country";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'country\');";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'country\');";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit country\" src=\"/shared/images/i";
                    this.mUIEditcountryImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcountryImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcountryImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditcountryImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_CurrenRow : HtmlRow
    {
        
        public UITbl_addScreen_CurrenRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Currency";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "currencyCurrency";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_Currency";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "4";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "5";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditcurrencyImage
        {
            get
            {
                if ((this.mUIEditcurrencyImage == null))
                {
                    this.mUIEditcurrencyImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcurrencyImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcurrencyImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcurrencyImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit currency";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'currency\');";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'currency\');";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit currency\" src=\"/shared/images/";
                    this.mUIEditcurrencyImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcurrencyImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcurrencyImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditcurrencyImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_DepartRow : HtmlRow
    {
        
        public UITbl_addScreen_DepartRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Department";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "departmentDepartment";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_Department";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "5";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "6";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditdepartmentImage
        {
            get
            {
                if ((this.mUIEditdepartmentImage == null))
                {
                    this.mUIEditdepartmentImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditdepartmentImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditdepartmentImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditdepartmentImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit department";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'department\');";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'department\');";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit department\" src=\"/shared/image";
                    this.mUIEditdepartmentImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditdepartmentImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditdepartmentImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditdepartmentImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_FromRow : HtmlRow
    {
        
        public UITbl_addScreen_FromRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_From!!";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "fromFrom!!";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_From!!";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "6";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_OtherDRow : HtmlRow
    {
        
        public UITbl_addScreen_OtherDRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Other Details";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "otherdetailsOther Details";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_addScreen_Other Details\"";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "7";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditotherdetailsImage
        {
            get
            {
                if ((this.mUIEditotherdetailsImage == null))
                {
                    this.mUIEditotherdetailsImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditotherdetailsImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditotherdetailsImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditotherdetailsImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit otherdetails";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'otherdetails\');";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'otherdetails\');";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit otherdetails\" src=\"/shared/ima";
                    this.mUIEditotherdetailsImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditotherdetailsImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditotherdetailsImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditotherdetailsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_ProjecRow : HtmlRow
    {
        
        public UITbl_addScreen_ProjecRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Project Code";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "projectcodeProject Code";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=\"tbl_addScreen_Project Code\"";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "8";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "9";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditprojectcodeImage
        {
            get
            {
                if ((this.mUIEditprojectcodeImage == null))
                {
                    this.mUIEditprojectcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditprojectcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditprojectcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditprojectcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit projectcode";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'projectcode\');";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'projectcode\');";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit projectcode\" src=\"/shared/imag";
                    this.mUIEditprojectcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditprojectcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditprojectcodeImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditprojectcodeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_ReasonRow : HtmlRow
    {
        
        public UITbl_addScreen_ReasonRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Reason";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "reasonReason";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_Reason";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "9";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "10";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEditreasonImage
        {
            get
            {
                if ((this.mUIEditreasonImage == null))
                {
                    this.mUIEditreasonImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditreasonImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditreasonImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditreasonImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit reason";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'reason\');";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'reason\');";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit reason\" src=\"/shared/images/ic";
                    this.mUIEditreasonImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditreasonImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditreasonImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEditreasonImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_ToRow : HtmlRow
    {
        
        public UITbl_addScreen_ToRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_To";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "toTo";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_To";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "10";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcodeImage
        {
            get
            {
                if ((this.mUIEditcodeImage == null))
                {
                    this.mUIEditcodeImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcodeImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit {code}";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit {code}\" src=\"/shared/images/ic";
                    this.mUIEditcodeImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcodeImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcodeImage;
            }
        }
        
        public HtmlImage UIEdittoImage
        {
            get
            {
                if ((this.mUIEdittoImage == null))
                {
                    this.mUIEdittoImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEdittoImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEdittoImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEdittoImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit to";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'to\');";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'to\');";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit to\" src=\"/shared/images/icons/";
                    this.mUIEdittoImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEdittoImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEdittoImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcodeImage;
        
        private HtmlImage mUIEdittoImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_CompanRow1 : HtmlRow
    {
        
        public UITbl_addScreen_CompanRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_Company";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "companyCompany";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_Company";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "1";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditcompanyImage
        {
            get
            {
                if ((this.mUIEditcompanyImage == null))
                {
                    this.mUIEditcompanyImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditcompanyImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditcompanyImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditcompanyImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit company";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'company\');";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'company\');";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit company\" src=\"/shared/images/i";
                    this.mUIEditcompanyImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditcompanyImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditcompanyImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditcompanyImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UICtl00_contentmain_pnPane : HtmlDiv
    {
        
        public UICtl00_contentmain_pnPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_pnlAddScreen";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DisplayAs Test 1\r\nDisplay as   Display o";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10001; BORDER-BOTTOM: #0";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "185";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIDisplayAsTest1DisplaPane
        {
            get
            {
                if ((this.mUIDisplayAsTest1DisplaPane == null))
                {
                    this.mUIDisplayAsTest1DisplaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDisplayAsTest1DisplaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIDisplayAsTest1DisplaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDisplayAsTest1DisplaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DisplayAs Test 1\r\nDisplay as   Display o";
                    this.mUIDisplayAsTest1DisplaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDisplayAsTest1DisplaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "formpanel";
                    this.mUIDisplayAsTest1DisplaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=formpanel";
                    this.mUIDisplayAsTest1DisplaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIDisplayAsTest1DisplaPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIDisplayAsTest1DisplaPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIDisplayAsTest1DisplaPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITbl_addScreen_FromRow1 : HtmlRow
    {
        
        public UITbl_addScreen_FromRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlRow.PropertyNames.Id] = "tbl_addScreen_From";
            this.SearchProperties[HtmlRow.PropertyNames.Name] = null;
            this.FilterProperties[HtmlRow.PropertyNames.InnerText] = "fromFrom";
            this.FilterProperties[HtmlRow.PropertyNames.ControlDefinition] = "id=tbl_addScreen_From";
            this.FilterProperties[HtmlRow.PropertyNames.RowIndex] = "6";
            this.FilterProperties[HtmlRow.PropertyNames.Class] = null;
            this.FilterProperties[HtmlRow.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIEditfromImage
        {
            get
            {
                if ((this.mUIEditfromImage == null))
                {
                    this.mUIEditfromImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIEditfromImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIEditfromImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIEditfromImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Edit from";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/icons/edit.png";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://testing.sel-expenses.com/shared/images/icons/edit.png";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "showAddScreen(\'from\');";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.Href] = "javascript:showAddScreen(\'from\');";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"Edit from\" src=\"/shared/images/icon";
                    this.mUIEditfromImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIEditfromImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEditfromImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIEditfromImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument3 : HtmlDocument
    {
        
        public UIGeneralOptionsDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/admin/accountOptions.aspx";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIMobileDevicesPane
        {
            get
            {
                if ((this.mUIMobileDevicesPane == null))
                {
                    this.mUIMobileDevicesPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabMobileDevices";
                    this.mUIMobileDevicesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Devices";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIMobileDevicesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "22";
                    this.mUIMobileDevicesPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIMobileDevicesPane;
            }
        }
        
        public HtmlCheckBox UIEnableMobileDevicesCheckBox
        {
            get
            {
                if ((this.mUIEnableMobileDevicesCheckBox == null))
                {
                    this.mUIEnableMobileDevicesCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIEnableMobileDevicesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsGeneralOptions_tabMobileDevices_chkEnableMobileDevices";
                    this.mUIEnableMobileDevicesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsGeneralOptions$tabMobileDevices$chkEnableMobileDevices";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Enable Mobile Devices";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsGeneralOptions_";
                    this.mUIEnableMobileDevicesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "47";
                    this.mUIEnableMobileDevicesCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIEnableMobileDevicesCheckBox;
            }
        }
        
        public HtmlCheckBox UIReceiptscanbeuploadeCheckBox
        {
            get
            {
                if ((this.mUIReceiptscanbeuploadeCheckBox == null))
                {
                    this.mUIReceiptscanbeuploadeCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIReceiptscanbeuploadeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "ctl00_contentmain_tabsNewExpenses_tabother_chkattach";
                    this.mUIReceiptscanbeuploadeCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$contentmain$tabsNewExpenses$tabother$chkattach";
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "Receipts can be uploaded to expense items";
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_tabsNewExpenses_tab";
                    this.mUIReceiptscanbeuploadeCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "207";
                    this.mUIReceiptscanbeuploadeCheckBox.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIReceiptscanbeuploadeCheckBox;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nEnabling this";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "199";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos1.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "57";
                    this.mUIOKImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlHyperlink UIGeneralOptionsHyperlink
        {
            get
            {
                if ((this.mUIGeneralOptionsHyperlink == null))
                {
                    this.mUIGeneralOptionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralOptionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Options";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "selectedPage";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkGeneral class=selectedPage href=\"j";
                    this.mUIGeneralOptionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIGeneralOptionsHyperlink.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIGeneralOptionsHyperlink;
            }
        }
        
        public HtmlHyperlink UIGeneralOptionsHyperlink1
        {
            get
            {
                if ((this.mUIGeneralOptionsHyperlink1 == null))
                {
                    this.mUIGeneralOptionsHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralOptionsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Options";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkGeneral href=\"javascript:changePag";
                    this.mUIGeneralOptionsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIGeneralOptionsHyperlink1.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIGeneralOptionsHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIMobileDevicesPane;
        
        private HtmlCheckBox mUIEnableMobileDevicesCheckBox;
        
        private HtmlCheckBox mUIReceiptscanbeuploadeCheckBox;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlHyperlink mUIGeneralOptionsHyperlink;
        
        private HtmlHyperlink mUIGeneralOptionsHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument4 : HtmlDocument
    {
        
        public UIGeneralOptionsDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGeneralDetailsHyperlink
        {
            get
            {
                if ((this.mUIGeneralDetailsHyperlink == null))
                {
                    this.mUIGeneralDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGeneralDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabGeneral";
                    this.mUIGeneralDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGeneralDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGeneralDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "General Details ";
                    this.mUIGeneralDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIGeneralDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIGeneralDetailsHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIGeneralDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIGeneralDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIGeneralDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "12";
                    #endregion
                }
                return this.mUIGeneralDetailsHyperlink;
            }
        }
        
        public HtmlHyperlink UIEmployeesHyperlink
        {
            get
            {
                if ((this.mUIEmployeesHyperlink == null))
                {
                    this.mUIEmployeesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabEmployees";
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Employees ";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIEmployeesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    #endregion
                }
                return this.mUIEmployeesHyperlink;
            }
        }
        
        public HtmlHyperlink UISelfRegistrationHyperlink
        {
            get
            {
                if ((this.mUISelfRegistrationHyperlink == null))
                {
                    this.mUISelfRegistrationHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISelfRegistrationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabSelfRegistration";
                    this.mUISelfRegistrationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISelfRegistrationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISelfRegistrationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Self Registration";
                    this.mUISelfRegistrationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUISelfRegistrationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUISelfRegistrationHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUISelfRegistrationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISelfRegistrationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUISelfRegistrationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "15";
                    #endregion
                }
                return this.mUISelfRegistrationHyperlink;
            }
        }
        
        public HtmlHyperlink UIDelegatesHyperlink
        {
            get
            {
                if ((this.mUIDelegatesHyperlink == null))
                {
                    this.mUIDelegatesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDelegatesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabDelegates";
                    this.mUIDelegatesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDelegatesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDelegatesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delegates";
                    this.mUIDelegatesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIDelegatesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIDelegatesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIDelegatesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDelegatesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIDelegatesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "16";
                    #endregion
                }
                return this.mUIDelegatesHyperlink;
            }
        }
        
        public HtmlHyperlink UIDeclarationHyperlink
        {
            get
            {
                if ((this.mUIDeclarationHyperlink == null))
                {
                    this.mUIDeclarationHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeclarationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabDeclarations";
                    this.mUIDeclarationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeclarationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeclarationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Declaration";
                    this.mUIDeclarationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIDeclarationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIDeclarationHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIDeclarationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDeclarationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIDeclarationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "17";
                    #endregion
                }
                return this.mUIDeclarationHyperlink;
            }
        }
        
        public HtmlHyperlink UIMobileDevicesHyperlink
        {
            get
            {
                if ((this.mUIMobileDevicesHyperlink == null))
                {
                    this.mUIMobileDevicesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabMobileDevices";
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMobileDevicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Mobile Devices";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIMobileDevicesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIMobileDevicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "18";
                    #endregion
                }
                return this.mUIMobileDevicesHyperlink;
            }
        }
        
        public HtmlHyperlink UISessionTimeoutHyperlink
        {
            get
            {
                if ((this.mUISessionTimeoutHyperlink == null))
                {
                    this.mUISessionTimeoutHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISessionTimeoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabTimeOut";
                    this.mUISessionTimeoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISessionTimeoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISessionTimeoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Session Timeout";
                    this.mUISessionTimeoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUISessionTimeoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUISessionTimeoutHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUISessionTimeoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISessionTimeoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUISessionTimeoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "22";
                    #endregion
                }
                return this.mUISessionTimeoutHyperlink;
            }
        }
        
        public HtmlHyperlink UIFieldSettingsHyperlink
        {
            get
            {
                if ((this.mUIFieldSettingsHyperlink == null))
                {
                    this.mUIFieldSettingsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFieldSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabAddScreen";
                    this.mUIFieldSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFieldSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFieldSettingsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Field Settings";
                    this.mUIFieldSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIFieldSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIFieldSettingsHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIFieldSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIFieldSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIFieldSettingsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "23";
                    #endregion
                }
                return this.mUIFieldSettingsHyperlink;
            }
        }
        
        public HtmlHyperlink UICodeAllocationHyperlink
        {
            get
            {
                if ((this.mUICodeAllocationHyperlink == null))
                {
                    this.mUICodeAllocationHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICodeAllocationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabcodeallocation";
                    this.mUICodeAllocationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICodeAllocationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICodeAllocationHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Code Allocation";
                    this.mUICodeAllocationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUICodeAllocationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUICodeAllocationHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUICodeAllocationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUICodeAllocationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUICodeAllocationHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "24";
                    #endregion
                }
                return this.mUICodeAllocationHyperlink;
            }
        }
        
        public HtmlHyperlink UIDutyofCareHyperlink
        {
            get
            {
                if ((this.mUIDutyofCareHyperlink == null))
                {
                    this.mUIDutyofCareHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDutyofCareHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabdutyofcare";
                    this.mUIDutyofCareHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDutyofCareHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDutyofCareHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Duty of Care";
                    this.mUIDutyofCareHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIDutyofCareHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIDutyofCareHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIDutyofCareHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIDutyofCareHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIDutyofCareHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "25";
                    #endregion
                }
                return this.mUIDutyofCareHyperlink;
            }
        }
        
        public HtmlHyperlink UIAddressesDistancesHyperlink
        {
            get
            {
                if ((this.mUIAddressesDistancesHyperlink == null))
                {
                    this.mUIAddressesDistancesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddressesDistancesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabmileage";
                    this.mUIAddressesDistancesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddressesDistancesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddressesDistancesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Addresses & Distances";
                    this.mUIAddressesDistancesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIAddressesDistancesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIAddressesDistancesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIAddressesDistancesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIAddressesDistancesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIAddressesDistancesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "26";
                    #endregion
                }
                return this.mUIAddressesDistancesHyperlink;
            }
        }
        
        public HtmlHyperlink UIOtherPreferencesHyperlink
        {
            get
            {
                if ((this.mUIOtherPreferencesHyperlink == null))
                {
                    this.mUIOtherPreferencesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOtherPreferencesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsNewExpenses_tabother";
                    this.mUIOtherPreferencesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOtherPreferencesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOtherPreferencesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Other Preferences";
                    this.mUIOtherPreferencesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIOtherPreferencesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIOtherPreferencesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx#", PropertyExpressionOperator.Contains));
                    this.mUIOtherPreferencesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIOtherPreferencesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsNewExpens";
                    this.mUIOtherPreferencesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "27";
                    #endregion
                }
                return this.mUIOtherPreferencesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGeneralDetailsHyperlink;
        
        private HtmlHyperlink mUIEmployeesHyperlink;
        
        private HtmlHyperlink mUISelfRegistrationHyperlink;
        
        private HtmlHyperlink mUIDelegatesHyperlink;
        
        private HtmlHyperlink mUIDeclarationHyperlink;
        
        private HtmlHyperlink mUIMobileDevicesHyperlink;
        
        private HtmlHyperlink mUISessionTimeoutHyperlink;
        
        private HtmlHyperlink mUIFieldSettingsHyperlink;
        
        private HtmlHyperlink mUICodeAllocationHyperlink;
        
        private HtmlHyperlink mUIDutyofCareHyperlink;
        
        private HtmlHyperlink mUIAddressesDistancesHyperlink;
        
        private HtmlHyperlink mUIOtherPreferencesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIGeneralOptionsDocument5 : HtmlDocument
    {
        
        public UIGeneralOptionsDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContractsHyperlink
        {
            get
            {
                if ((this.mUIContractsHyperlink == null))
                {
                    this.mUIContractsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIContractsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabContracts";
                    this.mUIContractsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIContractsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContractsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Contracts";
                    this.mUIContractsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIContractsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIContractsHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIContractsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIContractsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIContractsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "18";
                    #endregion
                }
                return this.mUIContractsHyperlink;
            }
        }
        
        public HtmlHyperlink UIInvoicesHyperlink
        {
            get
            {
                if ((this.mUIInvoicesHyperlink == null))
                {
                    this.mUIInvoicesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIInvoicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabInvoices";
                    this.mUIInvoicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInvoicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInvoicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Invoices";
                    this.mUIInvoicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUIInvoicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUIInvoicesHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUIInvoicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUIInvoicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUIInvoicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "19";
                    #endregion
                }
                return this.mUIInvoicesHyperlink;
            }
        }
        
        public HtmlHyperlink UISuppliersHyperlink
        {
            get
            {
                if ((this.mUISuppliersHyperlink == null))
                {
                    this.mUISuppliersHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISuppliersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "__tab_ctl00_contentmain_tabsGeneralOptions_tabSupplier";
                    this.mUISuppliersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISuppliersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISuppliersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Suppliers";
                    this.mUISuppliersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
                    this.mUISuppliersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "";
                    this.mUISuppliersHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".sel-expenses.com/shared/admin/accountOptions.aspx", PropertyExpressionOperator.Contains));
                    this.mUISuppliersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ajax__tab_tab";
                    this.mUISuppliersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=__tab_ctl00_contentmain_tabsGeneralOp";
                    this.mUISuppliersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "20";
                    #endregion
                }
                return this.mUISuppliersHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContractsHyperlink;
        
        private HtmlHyperlink mUIInvoicesHyperlink;
        
        private HtmlHyperlink mUISuppliersHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
