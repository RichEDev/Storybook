// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.MyMobileDevicesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class MyMobileDevicesUIMap
    {
        
        /// <summary>
        /// ClickNewMobileDevice
        /// </summary>
        public void ClickNewMobileDevice()
        {
            #region Variable Declarations
            HtmlHyperlink uINewMobileDeviceHyperlink = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIPageOptionsNewMobilePane.UINewMobileDeviceHyperlink;
            #endregion

            // Click 'New Mobile Device' link
            Mouse.Click(uINewMobileDeviceHyperlink, new Point(35, 5));
        }
        
        /// <summary>
        /// PressCancelDeleteMobileDevice - Use 'PressCancelDeleteMobileDeviceParams' to pass parameters into this method.
        /// </summary>
        public void PressCancelDeleteMobileDevice()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            WinButton uICancelButton = this.UIMessagefromwebpageWindow.UICancelWindow.UICancelButton;
            #endregion

            // Type '{Tab}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.PressCancelDeleteMobileDeviceParams.UIOKButtonSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'Cancel' button
            Keyboard.SendKeys(uICancelButton, this.PressCancelDeleteMobileDeviceParams.UICancelButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// PressCloseDuplicateMobileDeviceModal
        /// </summary>
        public void PressCloseDuplicateMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(50, 11));
        }
        
        /// <summary>
        /// PressCloseMandatoryFieldsModal
        /// </summary>
        public void PressCloseMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(10, 14));
        }
        
        /// <summary>
        /// PressOkDeleteMobileDevice - Use 'PressOkDeleteMobileDeviceParams' to pass parameters into this method.
        /// </summary>
        public void PressOkDeleteMobileDevice()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIMessagefromwebpageWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type '{Enter}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.PressOkDeleteMobileDeviceParams.UIOKButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ValidateCommentOnMobileDeviceModal - Use 'ValidateCommentOnMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMobileDeviceInfoPane = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIDivMobileDeviceInfoPane;
            #endregion

            // Verify that the 'InnerText' property of 'divMobileDeviceInfo' pane equals 'This mobile device has been linked to this account.
            //
            //The mobile device was activated using the activation code: 00236-64579-021333. '
            Assert.AreEqual(this.ValidateCommentOnMobileDeviceModalExpectedValues.UIDivMobileDeviceInfoPaneInnerText, uIDivMobileDeviceInfoPane.InnerText);
        }
        
        /// <summary>
        /// ValidateCommentOnUnpairedMobileDeviceModal - Use 'ValidateCommentOnUnpairedMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnUnpairedMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlDiv uIDivMobileDeviceInfoPane1 = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIDivMobileDeviceInfoPane1;
            #endregion

            // Verify that the 'InnerText' property of 'divMobileDeviceInfo' pane equals 'The mobile device has not yet been activated.
            //
            //Use this activation code to link the app to this account: 00236-77484-021333. '
            Assert.AreEqual(this.ValidateCommentOnUnpairedMobileDeviceModalExpectedValues.UIDivMobileDeviceInfoPane1InnerText, uIDivMobileDeviceInfoPane1.InnerText);
        }
        
        /// <summary>
        /// ValidateDuplicateMobileDeviceModal - Use 'ValidateDuplicateMobileDeviceModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDuplicateMobileDeviceModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //This mobile device has already been added to the system.'
            Assert.AreEqual(this.ValidateDuplicateMobileDeviceModalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ValidateGridDoesNotHaveAnyData - Use 'ValidateGridDoesNotHaveAnyDataExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateGridDoesNotHaveAnyData()
        {
            #region Variable Declarations
            HtmlCell uITherearecurrentlynomCell = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UITbl_myMobileDevicesTable1.UITherearecurrentlynomCell;
            #endregion

            // Verify that the 'InnerText' property of 'There are currently no mobile devices as' cell equals 'There are currently no mobile devices associated to this account.'
            Assert.AreEqual(this.ValidateGridDoesNotHaveAnyDataExpectedValues.UITherearecurrentlynomCellInnerText, uITherearecurrentlynomCell.InnerText);
        }
        
        /// <summary>
        /// ValidateMandatoryFieldsModal - Use 'ValidateMandatoryFieldsModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMandatoryFieldsModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane1 = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UICtl00_pnlMasterPopupPane1;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter a Name for the mobile device.
            //Please select a Type for the mobile device.'
            Assert.AreEqual(this.ValidateMandatoryFieldsModalExpectedValues.UICtl00_pnlMasterPopupPane1InnerText, uICtl00_pnlMasterPopupPane1.InnerText);
        }
        
        /// <summary>
        /// ValidateMobileDeviceActivationKeyModal - Use 'ValidateMobileDeviceActivationKeyModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMobileDeviceActivationKeyModal()
        {
            #region Variable Declarations
            HtmlDiv uIMobileDeviceActivatiPane1 = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UICtl00_contentmain_usPane1.UIMobileDeviceActivatiPane1;
            #endregion

            // Verify that the 'InnerText' property of 'Mobile Device Activation Key The mobile' pane contains 'Mobile Device Activation Key'
            StringAssert.Contains(uIMobileDeviceActivatiPane1.InnerText, this.ValidateMobileDeviceActivationKeyModalExpectedValues.UIMobileDeviceActivatiPane1InnerText);
        }
        
        /// <summary>
        /// ValidateMobileDeviceModalTitle - Use 'ValidateMobileDeviceModalTitleExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMobileDeviceModalTitle()
        {
            #region Variable Declarations
            HtmlDiv uIMobileDevicesadaPane = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UIMobileDevicesadaPane;
            #endregion

            // Verify that the 'InnerText' property of 'Mobile Device: sada' pane equals 'New Mobile Device'
            Assert.AreEqual(this.ValidateMobileDeviceModalTitleExpectedValues.UIMobileDevicesadaPaneInnerText, uIMobileDevicesadaPane.InnerText);
        }
        
        /// <summary>
        /// ValidatePairedDeviceDeleteMessage - Use 'ValidatePairedDeviceDeleteMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidatePairedDeviceDeleteMessage()
        {
            #region Variable Declarations
            WinText uIAreyousureyouwanttodText1 = this.UIMessagefromwebpageWindow.UIAreyousureyouwanttodWindow.UIAreyousureyouwanttodText1;
            #endregion

            // Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?
            //Deletion of this device will deactivate the mobile device's application.'
            Assert.AreEqual(this.ValidatePairedDeviceDeleteMessageExpectedValues.UIAreyousureyouwanttodText1DisplayText, uIAreyousureyouwanttodText1.DisplayText);
        }
        
        /// <summary>
        /// ValidateUnpairedDeviceDeleteMessage - Use 'ValidateUnpairedDeviceDeleteMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateUnpairedDeviceDeleteMessage()
        {
            #region Variable Declarations
            WinText uIAreyousureyouwanttodText = this.UIMessagefromwebpageWindow.UIAreyousureyouwanttodWindow.UIAreyousureyouwanttodText;
            #endregion

            // Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?'
            Assert.AreEqual(this.ValidateUnpairedDeviceDeleteMessageExpectedValues.UIAreyousureyouwanttodTextDisplayText, uIAreyousureyouwanttodText.DisplayText);
        }
        
        /// <summary>
        /// ValidateReceiptsWillBeDisabledForMobileModal - Use 'ValidateReceiptsWillBeDisabledForMobileModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateReceiptsWillBeDisabledForMobileModal()
        {
            #region Variable Declarations
            HtmlDiv uICtl00_pnlMasterPopupPane = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UICtl00_pnlMasterPopupPane;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Disabling this option will prevent mobile device users from being able to upload receipts from their device.'
            Assert.AreEqual(this.ValidateReceiptsWillBeDisabledForMobileModalExpectedValues.UICtl00_pnlMasterPopupPaneInnerText, uICtl00_pnlMasterPopupPane.InnerText);
        }
        
        /// <summary>
        /// ClickOKOnReceiptsWillBeDisabledForMobileModal
        /// </summary>
        public void ClickOKOnReceiptsWillBeDisabledForMobileModal()
        {
            #region Variable Declarations
            HtmlImage uIOKImage = this.UIGeneralOptionsWindowWindow.UIGeneralOptionsDocument.UIOKImage;
            #endregion

            // Click 'OK' image
            Mouse.Click(uIOKImage, new Point(5, 2));
        }
        
        /// <summary>
        /// ValidateCommentOnMobileDeviceActivationKeyModal - Use 'ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateCommentOnMobileDeviceActivationKeyModal()
        {
            #region Variable Declarations
            HtmlSpan uISpanPairingKeyInfoPane = this.UIMyMobileDevicesWindoWindow.UIMyMobileDevicesDocument.UISpanPairingKeyInfoPane;
            #endregion

            // Verify that the 'InnerText' property of 'spanPairingKeyInfo' pane equals 'The device has been registered successfully.
            //
            //
            //The Activation Key is: 00431-42249-021333
            //
            //You now need to activate your device.
            //
            //To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.
            //
            //
            //Don't have the app?
            //
            //To download, open a browser and enter the website address: get.expenses360.mobi
            //
            //Or visit the App Store and search for Expenses360'
            Assert.AreEqual(this.ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues.UISpanPairingKeyInfoPaneInnerText, uISpanPairingKeyInfoPane.InnerText);
        }
        
        #region Properties
        public virtual PressCancelDeleteMobileDeviceParams PressCancelDeleteMobileDeviceParams
        {
            get
            {
                if ((this.mPressCancelDeleteMobileDeviceParams == null))
                {
                    this.mPressCancelDeleteMobileDeviceParams = new PressCancelDeleteMobileDeviceParams();
                }
                return this.mPressCancelDeleteMobileDeviceParams;
            }
        }
        
        public virtual PressOkDeleteMobileDeviceParams PressOkDeleteMobileDeviceParams
        {
            get
            {
                if ((this.mPressOkDeleteMobileDeviceParams == null))
                {
                    this.mPressOkDeleteMobileDeviceParams = new PressOkDeleteMobileDeviceParams();
                }
                return this.mPressOkDeleteMobileDeviceParams;
            }
        }
        
        public virtual ValidateCommentOnMobileDeviceModalExpectedValues ValidateCommentOnMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateCommentOnMobileDeviceModalExpectedValues = new ValidateCommentOnMobileDeviceModalExpectedValues();
                }
                return this.mValidateCommentOnMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateCommentOnUnpairedMobileDeviceModalExpectedValues ValidateCommentOnUnpairedMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues = new ValidateCommentOnUnpairedMobileDeviceModalExpectedValues();
                }
                return this.mValidateCommentOnUnpairedMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateDuplicateMobileDeviceModalExpectedValues ValidateDuplicateMobileDeviceModalExpectedValues
        {
            get
            {
                if ((this.mValidateDuplicateMobileDeviceModalExpectedValues == null))
                {
                    this.mValidateDuplicateMobileDeviceModalExpectedValues = new ValidateDuplicateMobileDeviceModalExpectedValues();
                }
                return this.mValidateDuplicateMobileDeviceModalExpectedValues;
            }
        }
        
        public virtual ValidateGridDoesNotHaveAnyDataExpectedValues ValidateGridDoesNotHaveAnyDataExpectedValues
        {
            get
            {
                if ((this.mValidateGridDoesNotHaveAnyDataExpectedValues == null))
                {
                    this.mValidateGridDoesNotHaveAnyDataExpectedValues = new ValidateGridDoesNotHaveAnyDataExpectedValues();
                }
                return this.mValidateGridDoesNotHaveAnyDataExpectedValues;
            }
        }
        
        public virtual ValidateMandatoryFieldsModalExpectedValues ValidateMandatoryFieldsModalExpectedValues
        {
            get
            {
                if ((this.mValidateMandatoryFieldsModalExpectedValues == null))
                {
                    this.mValidateMandatoryFieldsModalExpectedValues = new ValidateMandatoryFieldsModalExpectedValues();
                }
                return this.mValidateMandatoryFieldsModalExpectedValues;
            }
        }
        
        public virtual ValidateMobileDeviceActivationKeyModalExpectedValues ValidateMobileDeviceActivationKeyModalExpectedValues
        {
            get
            {
                if ((this.mValidateMobileDeviceActivationKeyModalExpectedValues == null))
                {
                    this.mValidateMobileDeviceActivationKeyModalExpectedValues = new ValidateMobileDeviceActivationKeyModalExpectedValues();
                }
                return this.mValidateMobileDeviceActivationKeyModalExpectedValues;
            }
        }
        
        public virtual ValidateMobileDeviceModalTitleExpectedValues ValidateMobileDeviceModalTitleExpectedValues
        {
            get
            {
                if ((this.mValidateMobileDeviceModalTitleExpectedValues == null))
                {
                    this.mValidateMobileDeviceModalTitleExpectedValues = new ValidateMobileDeviceModalTitleExpectedValues();
                }
                return this.mValidateMobileDeviceModalTitleExpectedValues;
            }
        }
        
        public virtual ValidatePairedDeviceDeleteMessageExpectedValues ValidatePairedDeviceDeleteMessageExpectedValues
        {
            get
            {
                if ((this.mValidatePairedDeviceDeleteMessageExpectedValues == null))
                {
                    this.mValidatePairedDeviceDeleteMessageExpectedValues = new ValidatePairedDeviceDeleteMessageExpectedValues();
                }
                return this.mValidatePairedDeviceDeleteMessageExpectedValues;
            }
        }
        
        public virtual ValidateUnpairedDeviceDeleteMessageExpectedValues ValidateUnpairedDeviceDeleteMessageExpectedValues
        {
            get
            {
                if ((this.mValidateUnpairedDeviceDeleteMessageExpectedValues == null))
                {
                    this.mValidateUnpairedDeviceDeleteMessageExpectedValues = new ValidateUnpairedDeviceDeleteMessageExpectedValues();
                }
                return this.mValidateUnpairedDeviceDeleteMessageExpectedValues;
            }
        }
        
        public virtual ValidateReceiptsWillBeDisabledForMobileModalExpectedValues ValidateReceiptsWillBeDisabledForMobileModalExpectedValues
        {
            get
            {
                if ((this.mValidateReceiptsWillBeDisabledForMobileModalExpectedValues == null))
                {
                    this.mValidateReceiptsWillBeDisabledForMobileModalExpectedValues = new ValidateReceiptsWillBeDisabledForMobileModalExpectedValues();
                }
                return this.mValidateReceiptsWillBeDisabledForMobileModalExpectedValues;
            }
        }
        
        public virtual ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues
        {
            get
            {
                if ((this.mValidateCommentOnMobileDeviceActivationKeyModalExpectedValues == null))
                {
                    this.mValidateCommentOnMobileDeviceActivationKeyModalExpectedValues = new ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues();
                }
                return this.mValidateCommentOnMobileDeviceActivationKeyModalExpectedValues;
            }
        }
        
        public UIMyMobileDevicesWindoWindow UIMyMobileDevicesWindoWindow
        {
            get
            {
                if ((this.mUIMyMobileDevicesWindoWindow == null))
                {
                    this.mUIMyMobileDevicesWindoWindow = new UIMyMobileDevicesWindoWindow();
                }
                return this.mUIMyMobileDevicesWindoWindow;
            }
        }
        
        public UIMessagefromwebpageWindow UIMessagefromwebpageWindow
        {
            get
            {
                if ((this.mUIMessagefromwebpageWindow == null))
                {
                    this.mUIMessagefromwebpageWindow = new UIMessagefromwebpageWindow();
                }
                return this.mUIMessagefromwebpageWindow;
            }
        }
        
        public UIGeneralOptionsWindowWindow UIGeneralOptionsWindowWindow
        {
            get
            {
                if ((this.mUIGeneralOptionsWindowWindow == null))
                {
                    this.mUIGeneralOptionsWindowWindow = new UIGeneralOptionsWindowWindow();
                }
                return this.mUIGeneralOptionsWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private PressCancelDeleteMobileDeviceParams mPressCancelDeleteMobileDeviceParams;
        
        private PressOkDeleteMobileDeviceParams mPressOkDeleteMobileDeviceParams;
        
        private ValidateCommentOnMobileDeviceModalExpectedValues mValidateCommentOnMobileDeviceModalExpectedValues;
        
        private ValidateCommentOnUnpairedMobileDeviceModalExpectedValues mValidateCommentOnUnpairedMobileDeviceModalExpectedValues;
        
        private ValidateDuplicateMobileDeviceModalExpectedValues mValidateDuplicateMobileDeviceModalExpectedValues;
        
        private ValidateGridDoesNotHaveAnyDataExpectedValues mValidateGridDoesNotHaveAnyDataExpectedValues;
        
        private ValidateMandatoryFieldsModalExpectedValues mValidateMandatoryFieldsModalExpectedValues;
        
        private ValidateMobileDeviceActivationKeyModalExpectedValues mValidateMobileDeviceActivationKeyModalExpectedValues;
        
        private ValidateMobileDeviceModalTitleExpectedValues mValidateMobileDeviceModalTitleExpectedValues;
        
        private ValidatePairedDeviceDeleteMessageExpectedValues mValidatePairedDeviceDeleteMessageExpectedValues;
        
        private ValidateUnpairedDeviceDeleteMessageExpectedValues mValidateUnpairedDeviceDeleteMessageExpectedValues;
        
        private ValidateReceiptsWillBeDisabledForMobileModalExpectedValues mValidateReceiptsWillBeDisabledForMobileModalExpectedValues;
        
        private ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues mValidateCommentOnMobileDeviceActivationKeyModalExpectedValues;
        
        private UIMyMobileDevicesWindoWindow mUIMyMobileDevicesWindoWindow;
        
        private UIMessagefromwebpageWindow mUIMessagefromwebpageWindow;
        
        private UIGeneralOptionsWindowWindow mUIGeneralOptionsWindowWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PressCancelDeleteMobileDevice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class PressCancelDeleteMobileDeviceParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Tab}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Enter}' in 'Cancel' button
        /// </summary>
        public string UICancelButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PressOkDeleteMobileDevice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class PressOkDeleteMobileDeviceParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Enter}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateCommentOnMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMobileDeviceInfo' pane equals 'This mobile device has been linked to this account.
        ///
        ///The mobile device was activated using the activation code: 00236-64579-021333. '
        /// </summary>
        public string UIDivMobileDeviceInfoPaneInnerText = "This mobile device has been linked to this account.\r\n\r\nThe mobile device was acti" +
            "vated using the activation code: 00236-64579-021333. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnUnpairedMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateCommentOnUnpairedMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'divMobileDeviceInfo' pane equals 'The mobile device has not yet been activated.
        ///
        ///Use this activation code to link the app to this account: 00236-77484-021333. '
        /// </summary>
        public string UIDivMobileDeviceInfoPane1InnerText = "The mobile device has not yet been activated.\r\n\r\nUse this activation code to link" +
            " the app to this account: 00236-77484-021333. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDuplicateMobileDeviceModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateDuplicateMobileDeviceModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///This mobile device has already been added to the system.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nThis mobile device has already been added to the syste" +
            "m.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateGridDoesNotHaveAnyData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateGridDoesNotHaveAnyDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'There are currently no mobile devices as' cell equals 'There are currently no mobile devices associated to this account.'
        /// </summary>
        public string UITherearecurrentlynomCellInnerText = "There are currently no mobile devices associated to this account.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMandatoryFieldsModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateMandatoryFieldsModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter a Name for the mobile device.
        ///Please select a Type for the mobile device.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPane1InnerText = "Message from Expenses\r\n\r\n\r\nPlease enter a Name for the mobile device.\r\nPlease sel" +
            "ect a Type for the mobile device.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMobileDeviceActivationKeyModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateMobileDeviceActivationKeyModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Mobile Device Activation Key The mobile' pane contains 'Mobile Device Activation Key'
        /// </summary>
        public string UIMobileDeviceActivatiPane1InnerText = "Mobile Device Activation Key";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMobileDeviceModalTitle'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateMobileDeviceModalTitleExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Mobile Device: sada' pane equals 'New Mobile Device'
        /// </summary>
        public string UIMobileDevicesadaPaneInnerText = "New Mobile Device";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidatePairedDeviceDeleteMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidatePairedDeviceDeleteMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?
        ///Deletion of this device will deactivate the mobile device's application.'
        /// </summary>
        public string UIAreyousureyouwanttodText1DisplayText = "Are you sure you want to delete this mobile device?\nDeletion of this device will " +
            "deactivate the mobile device\'s application.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateUnpairedDeviceDeleteMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateUnpairedDeviceDeleteMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Are you sure you want to delete this mobile device...' label equals 'Are you sure you want to delete this mobile device?'
        /// </summary>
        public string UIAreyousureyouwanttodTextDisplayText = "Are you sure you want to delete this mobile device?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateReceiptsWillBeDisabledForMobileModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateReceiptsWillBeDisabledForMobileModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Disabling this option will prevent mobile device users from being able to upload receipts from their device.'
        /// </summary>
        public string UICtl00_pnlMasterPopupPaneInnerText = "Message from Expenses\r\n\r\n\r\nDisabling this option will prevent mobile device users" +
            " from being able to upload receipts from their device.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateCommentOnMobileDeviceActivationKeyModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateCommentOnMobileDeviceActivationKeyModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'spanPairingKeyInfo' pane equals 'The device has been registered successfully.
        ///
        ///
        ///The Activation Key is: 00431-42249-021333
        ///
        ///You now need to activate your device.
        ///
        ///To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.
        ///
        ///
        ///Don't have the app?
        ///
        ///To download, open a browser and enter the website address: get.expenses360.mobi
        ///
        ///Or visit the App Store and search for Expenses360'
        /// </summary>
        public string UISpanPairingKeyInfoPaneInnerText = @"The device has been registered successfully.


The Activation Key is: 00431-42249-021333

You now need to activate your device.

To do this, launch the app, enter the 16-digit key into the Activation screen and tap the Activate button.


Don't have the app?

To download, open a browser and enter the website address: get.expenses360.mobi

Or visit the App Store and search for Expenses360";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMyMobileDevicesWindoWindow : BrowserWindow
    {
        
        public UIMyMobileDevicesWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "My Mobile Devices";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyMobileDevicesDocument UIMyMobileDevicesDocument
        {
            get
            {
                if ((this.mUIMyMobileDevicesDocument == null))
                {
                    this.mUIMyMobileDevicesDocument = new UIMyMobileDevicesDocument(this);
                }
                return this.mUIMyMobileDevicesDocument;
            }
        }
        
        public UIMyMobileDevicesDocument1 UIMyMobileDevicesDocument1
        {
            get
            {
                if ((this.mUIMyMobileDevicesDocument1 == null))
                {
                    this.mUIMyMobileDevicesDocument1 = new UIMyMobileDevicesDocument1(this);
                }
                return this.mUIMyMobileDevicesDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIMyMobileDevicesDocument mUIMyMobileDevicesDocument;
        
        private UIMyMobileDevicesDocument1 mUIMyMobileDevicesDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMyMobileDevicesDocument : HtmlDocument
    {
        
        public UIMyMobileDevicesDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Mobile Devices";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/information/MyMobileDevices.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/information/MyMobileDevices.aspx";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_contentmain_usPane
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane == null))
                {
                    this.mUICtl00_contentmain_usPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_contentmain_usPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_AddEditDevice";
                    this.mUICtl00_contentmain_usPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New Mobile Device\r\nName*  * Type* [None]";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
                    this.mUICtl00_contentmain_usPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
                    this.mUICtl00_contentmain_usPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUICtl00_contentmain_usPane;
            }
        }
        
        public UIPageOptionsNewMobilePane UIPageOptionsNewMobilePane
        {
            get
            {
                if ((this.mUIPageOptionsNewMobilePane == null))
                {
                    this.mUIPageOptionsNewMobilePane = new UIPageOptionsNewMobilePane(this);
                }
                return this.mUIPageOptionsNewMobilePane;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_ctl00";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl00";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_ct";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUISaveButton.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlInputButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl01";
                    this.mUICancelButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=buttonInner onclick=\"SEL.MobileDev";
                    this.mUICancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUICancelButton.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        
        public HtmlTable UITbl_myMobileDevicesTable
        {
            get
            {
                if ((this.mUITbl_myMobileDevicesTable == null))
                {
                    this.mUITbl_myMobileDevicesTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUITbl_myMobileDevicesTable.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_myMobileDevices";
                    this.mUITbl_myMobileDevicesTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name TypeActivation KeyActivated\r\nRitsaI";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_myMobileDevices class=cGrid";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
                    this.mUITbl_myMobileDevicesTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mUITbl_myMobileDevicesTable.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUITbl_myMobileDevicesTable;
            }
        }
        
        public UICtl00_contentmain_usPane1 UICtl00_contentmain_usPane1
        {
            get
            {
                if ((this.mUICtl00_contentmain_usPane1 == null))
                {
                    this.mUICtl00_contentmain_usPane1 = new UICtl00_contentmain_usPane1(this);
                }
                return this.mUICtl00_contentmain_usPane1;
            }
        }
        
        public HtmlInputButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICloseButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$usrMobileDevices$ctl02";
                    this.mUICloseButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "close";
                    this.mUICloseButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICloseButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICloseButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUICloseButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=buttonInner tabIndex=0 onclick=\"SE";
                    this.mUICloseButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "10";
                    this.mUICloseButton.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public HtmlDiv UIMobileDevicesadaPane
        {
            get
            {
                if ((this.mUIMobileDevicesadaPane == null))
                {
                    this.mUIMobileDevicesadaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMobileDevicesadaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMobileDeviceHeader";
                    this.mUIMobileDevicesadaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDevicesadaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device: sada";
                    this.mUIMobileDevicesadaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDevicesadaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIMobileDevicesadaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMobileDeviceHeader class=sectionti";
                    this.mUIMobileDevicesadaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "31";
                    this.mUIMobileDevicesadaPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIMobileDevicesadaPane;
            }
        }
        
        public HtmlDiv UIDivMobileDeviceInfoPane
        {
            get
            {
                if ((this.mUIDivMobileDeviceInfoPane == null))
                {
                    this.mUIDivMobileDeviceInfoPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMobileDeviceInfo";
                    this.mUIDivMobileDeviceInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "This mobile device has been linked to th";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "comment";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMobileDeviceInfo class=comment";
                    this.mUIDivMobileDeviceInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "33";
                    this.mUIDivMobileDeviceInfoPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIDivMobileDeviceInfoPane;
            }
        }
        
        public HtmlDiv UIDivMobileDeviceInfoPane1
        {
            get
            {
                if ((this.mUIDivMobileDeviceInfoPane1 == null))
                {
                    this.mUIDivMobileDeviceInfoPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDivMobileDeviceInfoPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "divMobileDeviceInfo";
                    this.mUIDivMobileDeviceInfoPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDivMobileDeviceInfoPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The mobile device has not yet been activ";
                    this.mUIDivMobileDeviceInfoPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDivMobileDeviceInfoPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "comment";
                    this.mUIDivMobileDeviceInfoPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=divMobileDeviceInfo class=comment";
                    this.mUIDivMobileDeviceInfoPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "33";
                    this.mUIDivMobileDeviceInfoPane1.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIDivMobileDeviceInfoPane1;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nThis mobile d";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos1.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUIOKImage.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        
        public HtmlSpan UINameAsterisk
        {
            get
            {
                if ((this.mUINameAsterisk == null))
                {
                    this.mUINameAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_rfDeviceName";
                    this.mUINameAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible; COLOR: red\" ";
                    this.mUINameAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUINameAsterisk.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUINameAsterisk;
            }
        }
        
        public HtmlSpan UITypeAsterisk
        {
            get
            {
                if ((this.mUITypeAsterisk == null))
                {
                    this.mUITypeAsterisk = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITypeAsterisk.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_rfDeviceType";
                    this.mUITypeAsterisk.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "*";
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"VISIBILITY: visible; COLOR: red\" ";
                    this.mUITypeAsterisk.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "18";
                    this.mUITypeAsterisk.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUITypeAsterisk;
            }
        }
        
        public HtmlDiv UICtl00_pnlMasterPopupPane1
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane1 == null))
                {
                    this.mUICtl00_pnlMasterPopupPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 11004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUICtl00_pnlMasterPopupPane1.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane1;
            }
        }
        
        public UITbl_myMobileDevicesTable1 UITbl_myMobileDevicesTable1
        {
            get
            {
                if ((this.mUITbl_myMobileDevicesTable1 == null))
                {
                    this.mUITbl_myMobileDevicesTable1 = new UITbl_myMobileDevicesTable1(this);
                }
                return this.mUITbl_myMobileDevicesTable1;
            }
        }
        
        public HtmlInputButton UIMyMobileDevicesCloseButton
        {
            get
            {
                if ((this.mUIMyMobileDevicesCloseButton == null))
                {
                    this.mUIMyMobileDevicesCloseButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIMyMobileDevicesCloseButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnClose";
                    this.mUIMyMobileDevicesCloseButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnClose";
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "close";
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_btnClose class=butt";
                    this.mUIMyMobileDevicesCloseButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "12";
                    this.mUIMyMobileDevicesCloseButton.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIMyMobileDevicesCloseButton;
            }
        }
        
        public HtmlLabel UITypeLabel
        {
            get
            {
                if ((this.mUITypeLabel == null))
                {
                    this.mUITypeLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_lblDeviceType";
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUITypeLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_usrMobileDevices_ddlDeviceType";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Type*";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_lb";
                    this.mUITypeLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "2";
                    this.mUITypeLabel.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUITypeLabel;
            }
        }
        
        public HtmlLabel UINameLabel
        {
            get
            {
                if ((this.mUINameLabel == null))
                {
                    this.mUINameLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_lblDeviceName";
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINameLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "ctl00_contentmain_usrMobileDevices_txtDeviceName";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.InnerText] = "Name*";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "mandatory";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_usrMobileDevices_lb";
                    this.mUINameLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "1";
                    this.mUINameLabel.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUINameLabel;
            }
        }
        
        public HtmlSpan UISpanPairingKeyInfoPane
        {
            get
            {
                if ((this.mUISpanPairingKeyInfoPane == null))
                {
                    this.mUISpanPairingKeyInfoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISpanPairingKeyInfoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "spanPairingKeyInfo";
                    this.mUISpanPairingKeyInfoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The device has been registered successfu";
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"MARGIN-TOP: 25px; PADDING-LEFT: 1";
                    this.mUISpanPairingKeyInfoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
                    this.mUISpanPairingKeyInfoPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUISpanPairingKeyInfoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_contentmain_usPane;
        
        private UIPageOptionsNewMobilePane mUIPageOptionsNewMobilePane;
        
        private HtmlInputButton mUISaveButton;
        
        private HtmlInputButton mUICancelButton;
        
        private HtmlTable mUITbl_myMobileDevicesTable;
        
        private UICtl00_contentmain_usPane1 mUICtl00_contentmain_usPane1;
        
        private HtmlInputButton mUICloseButton;
        
        private HtmlDiv mUIMobileDevicesadaPane;
        
        private HtmlDiv mUIDivMobileDeviceInfoPane;
        
        private HtmlDiv mUIDivMobileDeviceInfoPane1;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        
        private HtmlSpan mUINameAsterisk;
        
        private HtmlSpan mUITypeAsterisk;
        
        private HtmlDiv mUICtl00_pnlMasterPopupPane1;
        
        private UITbl_myMobileDevicesTable1 mUITbl_myMobileDevicesTable1;
        
        private HtmlInputButton mUIMyMobileDevicesCloseButton;
        
        private HtmlLabel mUITypeLabel;
        
        private HtmlLabel mUINameLabel;
        
        private HtmlSpan mUISpanPairingKeyInfoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIPageOptionsNewMobilePane : HtmlDiv
    {
        
        public UIPageOptionsNewMobilePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "submenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Page Options\r\nNew Mobile Device ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=submenu";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewMobileDeviceHyperlink
        {
            get
            {
                if ((this.mUINewMobileDeviceHyperlink == null))
                {
                    this.mUINewMobileDeviceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewMobileDeviceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Mobile Device";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.MobileDevices.LoadMobileDeviceModal(SEL.MobileDevices.LoadType.New,%20null);";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.MobileDevices.LoadMobileDeviceModal(SEL.MobileDevices.LoadType.New" +
                        ", null);";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=submenuitem tabIndex=0 href=\"javas";
                    this.mUINewMobileDeviceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINewMobileDeviceHyperlink.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUINewMobileDeviceHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewMobileDeviceHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UICtl00_contentmain_usPane1 : HtmlDiv
    {
        
        public UICtl00_contentmain_usPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_PairingNoticeModal";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key\r\nThe mobile";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "modalpanel";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "37";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMobileDeviceActivatiPane
        {
            get
            {
                if ((this.mUIMobileDeviceActivatiPane == null))
                {
                    this.mUIMobileDeviceActivatiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMobileDeviceActivatiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMobileDeviceActivatiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sectiontitle";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=sectiontitle";
                    this.mUIMobileDeviceActivatiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIMobileDeviceActivatiPane.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIMobileDeviceActivatiPane;
            }
        }
        
        public HtmlDiv UIMobileDeviceActivatiPane1
        {
            get
            {
                if ((this.mUIMobileDeviceActivatiPane1 == null))
                {
                    this.mUIMobileDeviceActivatiPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMobileDeviceActivatiPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMobileDeviceActivatiPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMobileDeviceActivatiPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Mobile Device Activation Key\r\nThe mobile";
                    this.mUIMobileDeviceActivatiPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMobileDeviceActivatiPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "formpanel";
                    this.mUIMobileDeviceActivatiPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=formpanel";
                    this.mUIMobileDeviceActivatiPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIMobileDeviceActivatiPane1.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIMobileDeviceActivatiPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMobileDeviceActivatiPane;
        
        private HtmlDiv mUIMobileDeviceActivatiPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UITbl_myMobileDevicesTable1 : HtmlTable
    {
        
        public UITbl_myMobileDevicesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_myMobileDevices";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name TypeActivation KeyActivated\r\nThere ";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_myMobileDevices class=cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "cGrid";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlCell UITherearecurrentlynomCell
        {
            get
            {
                if ((this.mUITherearecurrentlynomCell == null))
                {
                    this.mUITherearecurrentlynomCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITherearecurrentlynomCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "There are currently no mobile devices as";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=row1 colSpan=6 align=middle";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.Class] = "row1";
                    this.mUITherearecurrentlynomCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUITherearecurrentlynomCell.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUITherearecurrentlynomCell;
            }
        }
        
        public HtmlHyperlink UINameHyperlink
        {
            get
            {
                if ((this.mUINameHyperlink == null))
                {
                    this.mUINameHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINameHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINameHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Name", PropertyExpressionOperator.Contains));
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'a08ebda1-250c-4497-b791-d02d9e937a8a\',0);";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'a08ebda1-250c-4497-b791-d02d9e937" +
                        "a8a\',0);";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUINameHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINameHyperlink.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUINameHyperlink;
            }
        }
        
        public HtmlHyperlink UITypeHyperlink
        {
            get
            {
                if ((this.mUITypeHyperlink == null))
                {
                    this.mUITypeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITypeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITypeHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Type", PropertyExpressionOperator.Contains));
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'4323cabe-c3a9-4c47-843d-a3efaf5cc9c0\',0);";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'4323cabe-c3a9-4c47-843d-a3efaf5cc" +
                        "9c0\',0);";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUITypeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUITypeHyperlink.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUITypeHyperlink;
            }
        }
        
        public HtmlHyperlink UIActivationKeyHyperlink
        {
            get
            {
                if ((this.mUIActivationKeyHyperlink == null))
                {
                    this.mUIActivationKeyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIActivationKeyHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Activation Key", PropertyExpressionOperator.Contains));
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'269ef5fc-0b2f-4e8c-8dd1-fa2644173495\',0);";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'269ef5fc-0b2f-4e8c-8dd1-fa2644173" +
                        "495\',0);";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUIActivationKeyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIActivationKeyHyperlink.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIActivationKeyHyperlink;
            }
        }
        
        public HtmlHyperlink UIActivatedHyperlink
        {
            get
            {
                if ((this.mUIActivatedHyperlink == null))
                {
                    this.mUIActivatedHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIActivatedHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIActivatedHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIActivatedHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIActivatedHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Activated", PropertyExpressionOperator.Contains));
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.Grid.sortGrid(\'myMobileDevices\',\'7e88651d-b6d1-45c6-a9b8-f87c65d0636f\',0);";
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.Grid.sortGrid(\'myMobileDevices\',\'7e88651d-b6d1-45c6-a9b8-f87c65d06" +
                        "36f\',0);";
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:SEL.Grid.sortGrid(\'myMo";
                    this.mUIActivatedHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIActivatedHyperlink.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUIActivatedHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUITherearecurrentlynomCell;
        
        private HtmlHyperlink mUINameHyperlink;
        
        private HtmlHyperlink mUITypeHyperlink;
        
        private HtmlHyperlink mUIActivationKeyHyperlink;
        
        private HtmlHyperlink mUIActivatedHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMyMobileDevicesDocument1 : HtmlDocument
    {
        
        public UIMyMobileDevicesDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Mobile Devices";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/information/MyMobileDevices.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos6.sel-expenses.com/shared/information/MyMobileDevices.aspx";
            this.WindowTitles.Add("My Mobile Devices");
            #endregion
        }
        
        #region Properties
        public HtmlImage UISharedimagesandroidpImage
        {
            get
            {
                if ((this.mUISharedimagesandroidpImage == null))
                {
                    this.mUISharedimagesandroidpImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesandroidpImage.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_imgIPhoneNew";
                    this.mUISharedimagesandroidpImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesandroidpImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesandroidpImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/android.png";
                    this.mUISharedimagesandroidpImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos6.sel-expenses.com/shared/images/android.png";
                    this.mUISharedimagesandroidpImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesandroidpImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesandroidpImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "13";
                    this.mUISharedimagesandroidpImage.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUISharedimagesandroidpImage;
            }
        }
        
        public HtmlImage UISharedimagesandroidpImage1
        {
            get
            {
                if ((this.mUISharedimagesandroidpImage1 == null))
                {
                    this.mUISharedimagesandroidpImage1 = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISharedimagesandroidpImage1.SearchProperties[HtmlImage.PropertyNames.Id] = "ctl00_contentmain_usrMobileDevices_imgIPhoneEdit";
                    this.mUISharedimagesandroidpImage1.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISharedimagesandroidpImage1.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUISharedimagesandroidpImage1.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/android.png";
                    this.mUISharedimagesandroidpImage1.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos6.sel-expenses.com/shared/images/android.png";
                    this.mUISharedimagesandroidpImage1.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISharedimagesandroidpImage1.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"BORDER-RIGHT-WIDTH: 0px; BORDER-T";
                    this.mUISharedimagesandroidpImage1.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "13";
                    this.mUISharedimagesandroidpImage1.WindowTitles.Add("My Mobile Devices");
                    #endregion
                }
                return this.mUISharedimagesandroidpImage1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUISharedimagesandroidpImage;
        
        private HtmlImage mUISharedimagesandroidpImage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIMessagefromwebpageWindow : WinWindow
    {
        
        public UIMessagefromwebpageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Message from webpage";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public UIAreyousureyouwanttodWindow UIAreyousureyouwanttodWindow
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodWindow == null))
                {
                    this.mUIAreyousureyouwanttodWindow = new UIAreyousureyouwanttodWindow(this);
                }
                return this.mUIAreyousureyouwanttodWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAreyousureyouwanttodWindow mUIAreyousureyouwanttodWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UICancelWindow mUICancelWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIAreyousureyouwanttodWindow : WinWindow
    {
        
        public UIAreyousureyouwanttodWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinText UIAreyousureyouwanttodText
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodText == null))
                {
                    this.mUIAreyousureyouwanttodText = new WinText(this);
                    #region Search Criteria
                    this.mUIAreyousureyouwanttodText.SearchProperties[WinText.PropertyNames.Name] = "Are you sure you want to delete this mobile device?";
                    this.mUIAreyousureyouwanttodText.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIAreyousureyouwanttodText;
            }
        }
        
        public WinText UIAreyousureyouwanttodText1
        {
            get
            {
                if ((this.mUIAreyousureyouwanttodText1 == null))
                {
                    this.mUIAreyousureyouwanttodText1 = new WinText(this);
                    #region Search Criteria
                    this.mUIAreyousureyouwanttodText1.SearchProperties[WinText.PropertyNames.Name] = "Are you sure you want to delete this mobile device?Deletion of this device will d" +
                        "eactivate the mobile device\'s application.";
                    this.mUIAreyousureyouwanttodText1.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIAreyousureyouwanttodText1;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAreyousureyouwanttodText;
        
        private WinText mUIAreyousureyouwanttodText1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Message from webpage");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Message from webpage");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIGeneralOptionsWindowWindow : BrowserWindow
    {
        
        public UIGeneralOptionsWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "General Options";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGeneralOptionsDocument UIGeneralOptionsDocument
        {
            get
            {
                if ((this.mUIGeneralOptionsDocument == null))
                {
                    this.mUIGeneralOptionsDocument = new UIGeneralOptionsDocument(this);
                }
                return this.mUIGeneralOptionsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGeneralOptionsDocument mUIGeneralOptionsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIGeneralOptionsDocument : HtmlDocument
    {
        
        public UIGeneralOptionsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "General Options";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/accountOptions.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://chronos1.sel-expenses.com/shared/admin/accountOptions.aspx";
            this.WindowTitles.Add("General Options");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICtl00_pnlMasterPopupPane
        {
            get
            {
                if ((this.mUICtl00_pnlMasterPopupPane == null))
                {
                    this.mUICtl00_pnlMasterPopupPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mUICtl00_pnlMasterPopupPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nDisabling thi";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"Z-INDEX: 10004; POSITION: fixed; ";
                    this.mUICtl00_pnlMasterPopupPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "199";
                    this.mUICtl00_pnlMasterPopupPane.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUICtl00_pnlMasterPopupPane;
            }
        }
        
        public HtmlImage UIOKImage
        {
            get
            {
                if ((this.mUIOKImage == null))
                {
                    this.mUIOKImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIOKImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://chronos1.sel-expenses.com/shared/images/buttons/btn_close.png";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "style=\"CURSOR: pointer\" id=btnMasterPopu";
                    this.mUIOKImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "57";
                    this.mUIOKImage.WindowTitles.Add("General Options");
                    #endregion
                }
                return this.mUIOKImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICtl00_pnlMasterPopupPane;
        
        private HtmlImage mUIOKImage;
        #endregion
    }
}
