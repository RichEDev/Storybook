// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Auto_Tests.UIMaps.ApprovalMatricesUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class ApprovalMatricesUIMap
    {
        
        /// <summary>
        /// ClickApprovalMatrixDetailsLink
        /// </summary>
        public void ClickApprovalMatrixDetailsLink()
        {
            #region Variable Declarations
            HtmlHyperlink approvalMatrixDetailHyperlink = this.ApprovalMatricesControlsWindow.ApprovalMatrixLevelsControlsDocument.ApprovalMatrixDetailHyperlink;
            #endregion

            // Click 'Approval Matrix Details' link
            Mouse.Click(approvalMatrixDetailHyperlink, new Point(53, 9));
        }
        
        /// <summary>
        /// ClickLevelsLink
        /// </summary>
        public void ClickLevelsLink()
        {
            #region Variable Declarations
            HtmlHyperlink levelsHyperlink = this.ApprovalMatricesControlsWindow.ApprovalMaricesControlsDocument.LevelsHyperlink;
            #endregion

            // Click 'Levels' link
            Mouse.Click(levelsHyperlink, new Point(35, 7));
        }
        
        /// <summary>
        /// ClickNewApprovalMatrixLink
        /// </summary>
        public void ClickNewApprovalMatrixLink()
        {
            #region Variable Declarations
            HtmlHyperlink newApprovalMatrixHyperlink = this.ApprovalMatricesControlsWindow.ApprovalMatricesLinkGridDocument.NewApprovalMatrixHyperlink;
            #endregion

            // Click 'New Approval Matrix' link
            Mouse.Click(newApprovalMatrixHyperlink, new Point(30, 11));
        }
        
        /// <summary>
        /// ClickNewLevelsLink
        /// </summary>
        public void ClickNewLevelsLink()
        {
            #region Variable Declarations
            HtmlHyperlink newLevelHyperlink = this.ApprovalMatricesControlsWindow.ApprovalMatrixLevelsControlsDocument.NewLevelHyperlink;
            #endregion

            // Click 'New Level' link
            Mouse.Click(newLevelHyperlink, new Point(41, 10));
        }
        
        /// <summary>
        /// PressCancelOnBorwserValidation
        /// </summary>
        public void PressCancelOnBorwserValidation()
        {
            #region Variable Declarations
            WinButton cancelButton = this.BrowserValidationWindow.CancelWindow.CancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(cancelButton, new Point(51, 11));
        }
        
        /// <summary>
        /// PressCancelSaveApprovalMatrix
        /// </summary>
        public void PressCancelSaveApprovalMatrix()
        {
            #region Variable Declarations
            HtmlInputButton cancelButton = this.ApprovalMatricesControlsWindow.ApprovalMaricesControlsDocument.CancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(cancelButton, new Point(41, 15));
        }
        
        /// <summary>
        /// PressCancelSaveLevelButton
        /// </summary>
        public void PressCancelSaveLevelButton()
        {
            #region Variable Declarations
            HtmlInputButton cancelButton = this.ApprovalMatricesControlsWindow.ApprovalMatrixLevelsControlsDocument.CancelButton;
            #endregion

            // Click 'cancel' button
            Mouse.Click(cancelButton, new Point(40, 18));
        }
        
        /// <summary>
        /// PressCloseOnModalMessage
        /// </summary>
        public void PressCloseOnModalMessage()
        {
            #region Variable Declarations
            HtmlImage closeButon = this.ApprovalMatricesControlsWindow.ApprovalMaricesControlsDocument.CloseButon;
            #endregion

            // Click 'OK' image
            Mouse.Click(closeButon, new Point(23, 16));
        }
        
        /// <summary>
        /// PressOKOnBrowserValidation
        /// </summary>
        public void PressOKOnBrowserValidation()
        {
            #region Variable Declarations
            WinButton oKButton = this.BrowserValidationWindow.OKWindow.OKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(oKButton, new Point(25, 6));
        }
        
        /// <summary>
        /// PressSaveApprovalMatrix
        /// </summary>
        public void PressSaveApprovalMatrix()
        {
            #region Variable Declarations
            HtmlInputButton saveButton = this.ApprovalMatricesControlsWindow.ApprovalMaricesControlsDocument.SaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(saveButton, new Point(27, 18));
        }
        
        /// <summary>
        /// PressSaveLevelButton
        /// </summary>
        public void PressSaveLevelButton()
        {
            #region Variable Declarations
            HtmlInputButton saveButton = this.ApprovalMatricesControlsWindow.ApprovalMatrixLevelsControlsDocument.SaveButton;
            #endregion

            // Click 'save' button
            Mouse.Click(saveButton, new Point(21, 23));
        }
        
        /// <summary>
        /// ValidateModalMessage - Use 'ValidateModalMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateModalMessage()
        {
            #region Variable Declarations
            HtmlDiv modalMessage = this.ApprovalMatricesControlsWindow.ApprovalMaricesControlsDocument.ModalMessage;
            #endregion

            // Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
            //
            //
            //Please enter an Approval matrix name.
            //Please enter a Default approver.'
            Assert.AreEqual(this.ValidateModalMessageExpectedValues.ModalMessageInnerText, modalMessage.InnerText);
        }
        
        #region Properties
        public virtual ValidateModalMessageExpectedValues ValidateModalMessageExpectedValues
        {
            get
            {
                if ((this.mValidateModalMessageExpectedValues == null))
                {
                    this.mValidateModalMessageExpectedValues = new ValidateModalMessageExpectedValues();
                }
                return this.mValidateModalMessageExpectedValues;
            }
        }
        
        public ApprovalMatricesControlsWindow ApprovalMatricesControlsWindow
        {
            get
            {
                if ((this.mApprovalMatricesControlsWindow == null))
                {
                    this.mApprovalMatricesControlsWindow = new ApprovalMatricesControlsWindow();
                }
                return this.mApprovalMatricesControlsWindow;
            }
        }
        
        public BrowserValidationWindow BrowserValidationWindow
        {
            get
            {
                if ((this.mBrowserValidationWindow == null))
                {
                    this.mBrowserValidationWindow = new BrowserValidationWindow();
                }
                return this.mBrowserValidationWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateModalMessageExpectedValues mValidateModalMessageExpectedValues;
        
        private ApprovalMatricesControlsWindow mApprovalMatricesControlsWindow;
        
        private BrowserValidationWindow mBrowserValidationWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateModalMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ValidateModalMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ctl00_pnlMasterPopup' pane equals 'Message from Expenses
        ///
        ///
        ///Please enter an Approval matrix name.
        ///Please enter a Default approver.'
        /// </summary>
        public string ModalMessageInnerText = "Message from Expenses\r\n\r\n\r\nPlease enter an Approval matrix name.\r\nPlease enter a " +
            "Default approver.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ApprovalMatricesControlsWindow : BrowserWindow
    {
        
        public ApprovalMatricesControlsWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public ApprovalMaricesControlsDocument ApprovalMaricesControlsDocument
        {
            get
            {
                if ((this.mApprovalMaricesControlsDocument == null))
                {
                    this.mApprovalMaricesControlsDocument = new ApprovalMaricesControlsDocument(this);
                }
                return this.mApprovalMaricesControlsDocument;
            }
        }
        
        public ApprovalMatrixLevelsControlsDocument ApprovalMatrixLevelsControlsDocument
        {
            get
            {
                if ((this.mApprovalMatrixLevelsControlsDocument == null))
                {
                    this.mApprovalMatrixLevelsControlsDocument = new ApprovalMatrixLevelsControlsDocument(this);
                }
                return this.mApprovalMatrixLevelsControlsDocument;
            }
        }
        
        public ApprovalMatricesLinkGridDocument ApprovalMatricesLinkGridDocument
        {
            get
            {
                if ((this.mApprovalMatricesLinkGridDocument == null))
                {
                    this.mApprovalMatricesLinkGridDocument = new ApprovalMatricesLinkGridDocument(this);
                }
                return this.mApprovalMatricesLinkGridDocument;
            }
        }
        #endregion
        
        #region Fields
        private ApprovalMaricesControlsDocument mApprovalMaricesControlsDocument;
        
        private ApprovalMatrixLevelsControlsDocument mApprovalMatrixLevelsControlsDocument;
        
        private ApprovalMatricesLinkGridDocument mApprovalMatricesLinkGridDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ApprovalMaricesControlsDocument : HtmlDocument
    {
        
        public ApprovalMaricesControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeApprovalMatrix.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeApprovalMatrix.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit ApprovalmatrixnameTextBox
        {
            get
            {
                if ((this.mApprovalmatrixnameTextBox == null))
                {
                    this.mApprovalmatrixnameTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mApprovalmatrixnameTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtmatrixname";
                    this.mApprovalmatrixnameTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtmatrixname";
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Approval matrix name*";
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtmatrixname class";
                    this.mApprovalmatrixnameTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    #endregion
                }
                return this.mApprovalmatrixnameTextBox;
            }
        }
        
        public HtmlTextArea DescriptionTextBox
        {
            get
            {
                if ((this.mDescriptionTextBox == null))
                {
                    this.mDescriptionTextBox = new HtmlTextArea(this);
                    #region Search Criteria
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtdescription";
                    this.mDescriptionTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtdescription";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtdescription name";
                    this.mDescriptionTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mDescriptionTextBox;
            }
        }
        
        public HtmlEdit DefaultapproverTextBox
        {
            get
            {
                if ((this.mDefaultapproverTextBox == null))
                {
                    this.mDefaultapproverTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mDefaultapproverTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtDefaultApprover";
                    this.mDefaultapproverTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtDefaultApprover";
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Default approver*";
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "ui-autocomplete-input";
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtDefaultApprover ";
                    this.mDefaultapproverTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    #endregion
                }
                return this.mDefaultapproverTextBox;
            }
        }
        
        public HtmlHyperlink LevelsHyperlink
        {
            get
            {
                if ((this.mLevelsHyperlink == null))
                {
                    this.mLevelsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mLevelsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkLevels";
                    this.mLevelsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mLevelsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mLevelsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Levels";
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.ApprovalMatrices.Level.Focus();";
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.ApprovalMatrices.Level.Focus();";
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=lnkLevels href=\"javascript:SEL.Approv";
                    this.mLevelsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mLevelsHyperlink;
            }
        }
        
        public HtmlDiv ModalMessage
        {
            get
            {
                if ((this.mModalMessage == null))
                {
                    this.mModalMessage = new HtmlDiv(this);
                    #region Search Criteria
                    this.mModalMessage.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_pnlMasterPopup";
                    this.mModalMessage.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Message from Expenses\r\n\r\n\r\nPlease enter ";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.Class] = "errorModal";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=ctl00_pnlMasterPopup class=errorModal style=\"POSITION: fixed; LEFT: 838px; Z-I" +
                        "NDEX: 10004; TOP: 424px\"";
                    this.mModalMessage.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "49";
                    #endregion
                }
                return this.mModalMessage;
            }
        }
        
        public HtmlImage CloseButon
        {
            get
            {
                if ((this.mCloseButon == null))
                {
                    this.mCloseButon = new HtmlImage(this);
                    #region Search Criteria
                    this.mCloseButon.SearchProperties[HtmlImage.PropertyNames.Id] = "btnMasterPopup";
                    this.mCloseButon.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mCloseButon.SearchProperties[HtmlImage.PropertyNames.Alt] = "OK";
                    this.mCloseButon.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/shared/images/buttons/btn_close.png";
                    this.mCloseButon.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "sel-expenses.com/shared/images/buttons/btn_close.png", PropertyExpressionOperator.Contains));
                    this.mCloseButon.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mCloseButon.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "onclick=SEL.MasterPopup.HideMasterPopup(";
                    this.mCloseButon.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mCloseButon;
            }
        }
        
        public HtmlInputButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveEntity";
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveEntity";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.ApprovalMatrices.Matrix.Sav";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        
        public HtmlInputButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelEntity";
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelEntity";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.ApprovalMatrices.Matrix.Can";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mApprovalmatrixnameTextBox;
        
        private HtmlTextArea mDescriptionTextBox;
        
        private HtmlEdit mDefaultapproverTextBox;
        
        private HtmlHyperlink mLevelsHyperlink;
        
        private HtmlDiv mModalMessage;
        
        private HtmlImage mCloseButon;
        
        private HtmlInputButton mSaveButton;
        
        private HtmlInputButton mCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ApprovalMatrixLevelsControlsDocument : HtmlDocument
    {
        
        public ApprovalMatrixLevelsControlsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/aeapprovalMatrix.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/aeapprovalMatrix.aspx?matrixid=22", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlEdit ApprovallimitTextBox
        {
            get
            {
                if ((this.mApprovallimitTextBox == null))
                {
                    this.mApprovallimitTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mApprovallimitTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtApprovalLimit";
                    this.mApprovallimitTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtApprovalLimit";
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Approval limit*";
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "fillspan";
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtApprovalLimit cl";
                    this.mApprovallimitTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    #endregion
                }
                return this.mApprovallimitTextBox;
            }
        }
        
        public HtmlEdit ApproverTextBox
        {
            get
            {
                if ((this.mApproverTextBox == null))
                {
                    this.mApproverTextBox = new HtmlEdit(this);
                    #region Search Criteria
                    this.mApproverTextBox.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_contentmain_txtLevelApprover";
                    this.mApproverTextBox.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$contentmain$txtLevelApprover";
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Approver*";
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.Class] = "ui-autocomplete-input";
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ctl00_contentmain_txtLevelApprover cl";
                    this.mApproverTextBox.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    #endregion
                }
                return this.mApproverTextBox;
            }
        }
        
        public HtmlTable MatrixLevelsGrid
        {
            get
            {
                if ((this.mMatrixLevelsGrid == null))
                {
                    this.mMatrixLevelsGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mMatrixLevelsGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridMatrixLevels";
                    this.mMatrixLevelsGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Approval Limit Approver TypeApprover\r\n£2";
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridMatrixLevels class=datatbl";
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mMatrixLevelsGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mMatrixLevelsGrid;
            }
        }
        
        public HtmlHyperlink NewLevelHyperlink
        {
            get
            {
                if ((this.mNewLevelHyperlink == null))
                {
                    this.mNewLevelHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mNewLevelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentoptions_lnkNewLevel";
                    this.mNewLevelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mNewLevelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mNewLevelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Level";
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "SEL.ApprovalMatrices.Level.New();";
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:SEL.ApprovalMatrices.Level.New();";
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentoptions_lnkNewLevel clas";
                    this.mNewLevelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    #endregion
                }
                return this.mNewLevelHyperlink;
            }
        }
        
        public HtmlInputButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnSaveLevel";
                    this.mSaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnSaveLevel";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "save";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.ApprovalMatrices.Level.Save";
                    this.mSaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "13";
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        
        public HtmlInputButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_contentmain_btnCancelLevel";
                    this.mCancelButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$contentmain$btnCancelLevel";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "cancel";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.Class] = "buttonInner";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"SEL.ApprovalMatrices.Level.Canc";
                    this.mCancelButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "14";
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public HtmlHyperlink ApprovalMatrixDetailHyperlink
        {
            get
            {
                if ((this.mApprovalMatrixDetailHyperlink == null))
                {
                    this.mApprovalMatrixDetailHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mApprovalMatrixDetailHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkGeneral";
                    this.mApprovalMatrixDetailHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mApprovalMatrixDetailHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mApprovalMatrixDetailHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Approval Matrix Details";
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "changePage(\'General\');$g(SEL.ApprovalMatrices.DomIDs.General.MatrixName).focus();" +
                        "";
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:changePage(\'General\');$g(SEL.ApprovalMatrices.DomIDs.General.MatrixNam" +
                        "e).focus();";
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabIndex=0 id=lnkGeneral href=\"javascrip";
                    this.mApprovalMatrixDetailHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mApprovalMatrixDetailHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mApprovallimitTextBox;
        
        private HtmlEdit mApproverTextBox;
        
        private HtmlTable mMatrixLevelsGrid;
        
        private HtmlHyperlink mNewLevelHyperlink;
        
        private HtmlInputButton mSaveButton;
        
        private HtmlInputButton mCancelButton;
        
        private HtmlHyperlink mApprovalMatrixDetailHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ApprovalMatricesLinkGridDocument : HtmlDocument
    {
        
        public ApprovalMatricesLinkGridDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "ctl00_body";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/shared/admin/ApprovalMatrices.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sel-expenses.com/shared/admin/ApprovalMatrices.aspx", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlTable ApprovalMatricesGrid
        {
            get
            {
                if ((this.mApprovalMatricesGrid == null))
                {
                    this.mApprovalMatricesGrid = new HtmlTable(this);
                    #region Search Criteria
                    this.mApprovalMatricesGrid.SearchProperties[HtmlTable.PropertyNames.Id] = "tbl_gridMatrices";
                    this.mApprovalMatricesGrid.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Approval Matrix Name Description\r\n231422";
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=tbl_gridMatrices class=datatbl";
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.Class] = "datatbl";
                    this.mApprovalMatricesGrid.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mApprovalMatricesGrid;
            }
        }
        
        public HtmlHyperlink NewApprovalMatrixHyperlink
        {
            get
            {
                if ((this.mNewApprovalMatrixHyperlink == null))
                {
                    this.mNewApprovalMatrixHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mNewApprovalMatrixHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_contentmenu_lnkNewMatrix";
                    this.mNewApprovalMatrixHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mNewApprovalMatrixHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mNewApprovalMatrixHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Approval Matrix";
                    this.mNewApprovalMatrixHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/shared/admin/aeApprovalMatrix.aspx";
                    this.mNewApprovalMatrixHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mNewApprovalMatrixHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "sel-expenses.com/shared/admin/aeApprovalMatrix.aspx", PropertyExpressionOperator.Contains));
                    this.mNewApprovalMatrixHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "submenuitem";
                    this.mNewApprovalMatrixHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_contentmenu_lnkNewMatrix class=";
                    this.mNewApprovalMatrixHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    #endregion
                }
                return this.mNewApprovalMatrixHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mApprovalMatricesGrid;
        
        private HtmlHyperlink mNewApprovalMatrixHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class BrowserValidationWindow : WinWindow
    {
        
        public BrowserValidationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            #endregion
        }
        
        #region Properties
        public CancelWindow CancelWindow
        {
            get
            {
                if ((this.mCancelWindow == null))
                {
                    this.mCancelWindow = new CancelWindow(this);
                }
                return this.mCancelWindow;
            }
        }
        
        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private CancelWindow mCancelWindow;
        
        private OKWindow mOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class CancelWindow : WinWindow
    {
        
        public CancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            #endregion
        }
        
        #region Properties
        public WinButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class OKWindow : WinWindow
    {
        
        public OKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            #endregion
        }
        
        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mOKButton;
        #endregion
    }
}
