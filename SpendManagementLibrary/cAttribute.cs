namespace SpendManagementLibrary
{
    using System;

    /// <summary>
    /// cAttribute base class
    /// </summary>
    public abstract class cAttribute
    {
        protected int nAttributeid;
        protected string sAttributeName;
        protected string sDisplayName;
        protected string sDescription;
        protected string sTooltip;
        protected bool bMandatory;
        protected FieldType ftFieldType;
        protected DateTime dtCreatedOn;
        protected int nCreatedBy;
        protected DateTime? dtModifiedOn;
        protected int? nModifiedBy;
        protected Guid gFieldid;
        protected bool bIsKeyField;
        protected bool bIsAuditIdentity;
        protected bool bIsUnique;
        protected bool bAllowEdit;
        protected bool bAllowDelete;
        protected bool bSystemAttribute;
        private readonly bool _boolAttribute;

        /// <summary>
        /// cAttribute constructor
        /// </summary>
        /// <param name="attributeid">Attribute ID</param>
        /// <param name="attributename">Attribute name</param>
        /// <param name="displayname">Friendly attribute name to display</param>
        /// <param name="description">Attribute description</param>
        /// <param name="tooltip">Tooltip associated with attribute</param>
        /// <param name="mandatory">Is attribute mandatory</param>
        /// <param name="fieldtype">Field type  of attribute</param>
        /// <param name="createdon">Date attribute created</param>
        /// <param name="createdby">User ID of attribute creator</param>
        /// <param name="modifiedon">Date attribute last modified</param>
        /// <param name="modifiedby">User ID of last user to modify attribute</param>
        /// <param name="fieldid">Field ID for reporting</param>
        /// <param name="iskeyfield">Is attribute a key field</param>
        /// <param name="isauditidentity">Is attribute used as field identifier in the audit log</param>
        /// <param name="isunique">Is value to be unique</param>
        /// <param name="allowEdit"></param>
        /// <param name="allowDelete"></param>
        /// <param name="displayInMobile">Whether the attribute should be displayed on mobile.</param>
        /// <param name="builtIn">Whether the attribute is a system attribute</param>
        /// <param name="boolAttribute">A generic boolean attribute used for different attributes.</param>
        /// <param name="system_attribute">Indicates whether the attribute is generated by the application and not a user</param>
        /// <param name="encrypted">Indicates that the data for this attribute is encrypted.</param>
        protected cAttribute(int attributeid, string attributename, string displayname, string description, string tooltip, bool mandatory, FieldType fieldtype, DateTime createdon, int createdby, DateTime? modifiedon, int? modifiedby, Guid fieldid, bool iskeyfield, bool isauditidentity, bool isunique, bool allowEdit, bool allowDelete, bool displayInMobile, bool builtIn, bool boolAttribute, bool system_attribute, bool encrypted)
        {
            this.nAttributeid = attributeid;
            this.sAttributeName = attributename;
            this.sDisplayName = displayname;
            this.sDescription = description;
            this.sTooltip = tooltip;
            this.bMandatory = mandatory;
            this.DisplayInMobile = displayInMobile;
            this.ftFieldType = fieldtype;
            this.dtCreatedOn = createdon;
            this.nCreatedBy = createdby;
            this.dtModifiedOn = modifiedon;
            this.nModifiedBy = modifiedby;
            this.gFieldid = fieldid;
            this.bIsKeyField = iskeyfield;
            this.bIsAuditIdentity = isauditidentity;
            this.bIsUnique = isunique;
            this.bAllowEdit = allowEdit;
            this.bAllowDelete = allowDelete;
            this.bSystemAttribute = system_attribute;
            this._boolAttribute = boolAttribute;
            this.BuiltIn = builtIn;
            this.Encrypted = encrypted;
        }
        #region properties
        /// <summary>
        /// Get or sets the attribute Id
        /// </summary>
        public int attributeid
        {
            get { return this.nAttributeid; }
            set => this.nAttributeid = value;
        }

        /// <summary>
        /// Get attribute name
        /// </summary>
        public string attributename
        {
            get { return this.sAttributeName; }
        }
        /// <summary>
        /// Get friendly display name of attribute
        /// </summary>
        public string displayname
        {
            get { return this.sDisplayName; }
        }
        /// <summary>
        /// Get attribute description
        /// </summary>
        public string description
        {
            get { return this.sDescription; }
        }
        /// <summary>
        /// Get associated tool tip
        /// </summary>
        public string tooltip
        {
            get { return this.sTooltip; }
        }
        /// <summary>
        /// Get mandatory indication
        /// </summary>
        public bool mandatory
        {
            get { return this.bMandatory; }
        }

        /// <summary>
        ///  Gets a value indicating whether the attribute should be displayed to mobile users.
        /// </summary>
        public bool DisplayInMobile { get; private set; }

        /// <summary>
        /// Get field type
        /// </summary>
        public FieldType fieldtype
        {
            get { return this.ftFieldType; }
        }
        /// <summary>
        /// Get attribute creation date
        /// </summary>
        public DateTime createdon
        {
            get { return this.dtCreatedOn; }
        }
        /// <summary>
        /// Get User ID of attribute creator
        /// </summary>
        public int createdby
        {
            get { return this.nCreatedBy; }
        }
        /// <summary>
        /// Get attribute last modification date
        /// </summary>
        public DateTime? modifiedon
        {
            get { return this.dtModifiedOn; }
        }
        /// <summary>
        /// Get User ID of attributes modifer
        /// </summary>
        public int? modifiedby
        {
            get { return this.nModifiedBy; }
        }
        /// <summary>
        /// Get field id for reporting of attribute
        /// </summary>
        public Guid fieldid
        {
            get { return this.gFieldid; }
        }
        /// <summary>
        /// Get whether the attribute is a key field
        /// </summary>
        public bool iskeyfield
        {
            get { return this.bIsKeyField; }
        }
        /// <summary>
        /// Get whether attribute is used as audit log field identifier
        /// </summary>
        public bool isauditidentifer
        {
            get { return this.bIsAuditIdentity; }
        }
        /// <summary>
        /// Gets whether the attribute value is to be unique
        /// </summary>
        public bool isunique
        {
            get { return this.bIsUnique; }
        }
        /// <summary>
        /// Gets whether the attribute can be edited
        /// </summary>
        public bool AllowEdit
        {
            get { return this.bAllowEdit; }
        }
        /// <summary>
        /// Gets whether the attribute can be deleted
        /// </summary>
        public bool AllowDelete
        {
            get { return this.bAllowDelete; }
        }
        /// <summary>
        /// Gets whether the attribute was generated by the application and not a user
        /// </summary>
        public bool IsSystemAttribute
        {
            get { return this.bSystemAttribute; }
        }

        /// <summary>
        /// A generic boolean attribute for the attribute.
        /// Attachment attribute - include image library
        /// Formatted text box - strip font tags from html before save.
        /// </summary>
        public bool BoolAttribute
        {
            get { return this._boolAttribute; }
        }

        /// <summary>
        /// Gets or sets whether the attribute is a system attribute
        /// </summary>
        public bool BuiltIn { get; set; }

        public bool Encrypted { get; }

        #endregion


        #region GenerateField Fields
        protected string sFieldIDPrefix = "txt";
        protected int nMaxLabelTextLength = 20;
        protected string sCssClass = "twocolumn";

        #endregion GenerateField Fields

        #region GenerateField Properties
        public string ControlID { get { return this.sFieldIDPrefix + this.nAttributeid; } }
        public int MaxLabelTextLength { get { return this.nMaxLabelTextLength; } }
        public string DivCssClass { get { return this.sCssClass; } }
        #endregion GenerateField Properties

    }
}