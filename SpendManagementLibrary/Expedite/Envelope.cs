namespace SpendManagementLibrary.Expedite
{
    using System;
    using System.Collections.Generic;
    using Enumerators.Expedite;

    /// <summary>
    /// Represents a physical envelope that may be sent 
    /// to a claimant and returned with receipts inside.
    /// </summary>
    public class Envelope
    {
        /// <summary>
        /// The unqiue primary key of this envelope.
        /// </summary>
        public int EnvelopeId { get; set; }

        /// <summary>
        /// The AccountId of the account that 
        /// this envelope has been assigned to.
        /// </summary>
        public int? AccountId { get; set; }

        /// <summary>
        /// The ClaimId of the claim that this 
        /// envelope contains receipts for.
        /// </summary>
        public int? ClaimId { get; set; }

        /// <summary>
        /// The custom envelope number that is used by the claimant
        /// to generate a claim reference number (CRN).
        /// </summary>
        public string EnvelopeNumber { get; set; }

        /// <summary>
        /// The claim reference number generated by the software 
        /// for the return of receipts in a single envelope.
        /// </summary>
        public string ClaimReferenceNumber { get; set; }

        /// <summary>
        /// The status of the envelope (from the EnvelopeStatus table).
        /// </summary>
        public EnvelopeStatus Status { get; set; }

        /// <summary>
        /// The type of envelope (from the EnvelopeTypes table).
        /// </summary>
        public EnvelopeType Type { get; set; }

        /// <summary>
        /// The date the envelope has been sent to the client.
        /// </summary>
        public DateTime? DateIssuedToClaimant { get; set; }

        /// <summary>
        /// The date the envelope has been attached to a claim.
        /// </summary>
        public DateTime? DateAssignedToClaim { get; set; }

        /// <summary>
        /// The date the envelope has been 
        /// returned to SEL by the client.
        /// </summary>
        public DateTime? DateReceived { get; set; }

        /// <summary>
        /// The date SEL have completed attaching the 
        /// contents to claims.
        /// </summary>
        public DateTime? DateAttachCompleted { get; set; }

        /// <summary>
        /// The date the envelope has or will be destroyed.
        /// </summary>
        public DateTime? DateDestroyed { get; set; }

        /// <summary>
        /// Whether the claimant has declared that the envelope is lost in the post,
        /// in case we later receive it and scan it and the client wonders why any validation fails.
        /// </summary>
        public bool DeclaredLostInPost { get; set; }
        
        /// <summary>
        /// Any overpayment charge applied to the envelope.
        /// </summary>
        public decimal? OverpaymentCharge { get; set; }

        /// <summary>
        /// The physical state of the envelope. 
        /// </summary>
        public List<EnvelopePhysicalState> PhysicalState { get; set; }

        /// <summary>
        /// A url for an image showing the physical state of the envelope.
        /// </summary>
        public string PhysicalStateProofUrl { get; set; }

        /// <summary>
        /// The UserId of user making the current call.
        /// </summary>
        public int LastModifiedBy { get; set; }
    }
}
