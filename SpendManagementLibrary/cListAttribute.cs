namespace SpendManagementLibrary
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// cListAttribute class which inherits cAttribute
    /// </summary>
    public class cListAttribute : cAttribute
    {
        [NonSerialized()]
        private SortedList<int, cListAttributeElement> lstItems;

        /// <summary>
        /// Create a new instance of <see cref="cListAttribute"/>
        /// </summary>
        /// <param name="attributeid">Attribute ID</param>
        /// <param name="attributename">Attribute name</param>
        /// <param name="displayname">Friendly attribute name to display</param>
        /// <param name="description">Attribute description</param>
        /// <param name="tooltip">Tooltip associated with attribute</param>
        /// <param name="mandatory">Is attribute mandatory</param>
        /// <param name="fieldtype">Field type of attribute</param>
        /// <param name="createdon">Date attribute created</param>
        /// <param name="createdby">User ID of attribute creator</param>
        /// <param name="modifiedon">Date attribute last modified</param>
        /// <param name="modifiedby">User ID of last user to modify attribute</param>
        /// <param name="fieldid">Field ID for reporting</param>
        /// <param name="isauditidentity">Is attribute used as field identifier in the audit log</param>
        /// <param name="isunique">Is value to be unique</param>
        /// <param name="displayInMobile">Whether the attribute should be displayed on mobile.</param>
        /// <param name="builtIn">Whether the attribute is a system attribute</param>
        /// <param name="system_attribute">Indicates whether the attribute is generated by the application and not a user</param>
        public cListAttribute(int attributeid, string attributename, string displayname, string description, string tooltip, bool mandatory, FieldType fieldtype, DateTime createdon, int createdby, DateTime? modifiedon, int? modifiedby, SortedList<int, cListAttributeElement> items, Guid fieldid, bool isauditidentity, bool isunique, AttributeFormat listformat, bool allowedit, bool allowdelete, bool displayInMobile, bool builtIn, bool system_attribute)
            : base(attributeid, attributename, displayname, description, tooltip, mandatory, fieldtype, createdon, createdby, modifiedon, modifiedby, fieldid, false, isauditidentity, isunique, allowedit, allowdelete, displayInMobile, builtIn, false, system_attribute, false)
        {
            this.format = listformat;
            this.lstItems = items;
            this.sFieldIDPrefix = "cmb";
            if (this.format == AttributeFormat.ListWide)
            {
                this.sCssClass = "onecolumnsmall";
            }
            else
            {
                this.sCssClass = "twocolumn";
            }
        }

        #region properties
        /// <summary>
        /// Get the list of items for the attribute
        /// </summary>
        public SortedList<int, cListAttributeElement> items
        {
            get { return this.lstItems; }
        }
        public AttributeFormat format { get; set; }
        #endregion
    }
}